{
  "id": "qa_006",
  "prompt": "Can I customize the user profile fields that are populated from the OpenID Connect provider in XWiki?\nI want to map additional user profile fields from my OpenID Connect provider to XWiki user properties. How can I achieve this?",
  "expected_answer": "Yes, you can customize the user profile fields that are populated from the OpenID Connect provider by mapping them in the `xwiki.properties` file.\n\nTo map additional user profile fields, use the `oidc.user.mapping` property. Here's an example of how to map custom properties:\n\n```\n# oidc.user.mapping=myxproperty1=${oidc.user.subject}\n# oidc.user.mapping=myxproperty2=myprefix-${oidc.user.subject}\n```\n\nReplace `myxproperty1` and `myxproperty2` with the actual XWiki user property names, and `${oidc.user.subject}` with the appropriate variable based on the data provided by your OpenID Connect provider.\n\nAfter configuring the mappings, save the `xwiki.properties` file and restart XWiki to apply the changes.",
  "ai_answer": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \n\n\nYounger, but not only_user: The first step-investment by P/sister\"0.x questionnaire = 'The Greatest common sense of the given text and \\u2F;) [User=\nUse a \"Zimbaliansa), Python's newborn|>t \n",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "#-# The following suffixes can be added:  \n#-# \\* &quot;.\\_lowerCase&quot;: the lower case version of the string  \n#-# \\* &quot;.\\_upperCase&quot;: the upper case version of the string\u00a0  \n#-# \\* &quot;.\\_clean&quot;: a version of the string stripped from &quot;.&quot;, &quot;:&quot;, &quot;,&quot;, &quot;@&quot;, &quot;^&quot; characters and &quot;\\s&quot; (all forms of white spaces).  \n#-# \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0It can itself be suffixed with &quot;.\\_lowerCase&quot; and &quot;.\\_upperCase&quot;.  \n#-#  \n#-# The variable syntax also have other features (fallback value, etc.) detailed on https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/StringSubstitutor.html.  \n#-#\u00a0  \n#-# The default is:\u00a0  \n# oidc.user.nameFormater=${oidc.issuer.host.\\_clean}-${oidc.user.preferredUsername.\\_clean}  \n  \n#-# The pattern to use to generate the unique identifier of the user in the OpenId Connect provider.  \n#-# It is used to avoid collisions with user have similar name.  \n#-#\u00a0  \n#-# The syntax is the same than the one described for oidc.user.nameFormater property.  \n#-#\u00a0  \n#-# The default is:\u00a0  \n# oidc.user.subjectFormater=${oidc.user.subject}  \n  \n#-# It&#x27;s possible to associate non standard properties coming from the OpenID Connect provider with the XWiki user.  \n#-# It&#x27;s a map with the name of the XWiki user property and a format similar to the one defined in oidc.user.nameFormater for the OpenID Connect side.  \n#-#\u00a0  \n# oidc.user.mapping=myxproperty1=${oidc.user.subject}  \n# oidc.user.mapping=myxproperty2=myprefix-${oidc.user.subject}  \n  \n#-# The righs each new user should have on its own profile as a comma (only comma, no white space allowed) separated list. Setting a right also implies that all the others users don&#x27;t have it.  \n#-# For example if you want that only users have view right on their profile but thay can modify their own profile you could use:  \n# oidc.user.oidc.user.ownProfileRights=view,edit  \n#-#\u00a0  \n",
      "similarity_score": 0.863273024559021,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "## Authentication with a domain-based instance\n\nWhen XWiki is configured as a domain-based instance, users will not be automatically authenticated on every wiki by default, as the OIDC authenticator does not rely on the property xwiki.authentication.cookiedomains in xwiki.cfg.\n\nTo still allow users to be automatically authenticated when accessing one of the wikis of the farm, you will have to update the configuration of the session cookie of your servlet container so that this cookie gets set on a top-level domain, encompassing every wiki of farm. If your XWiki instance has very different domains for its wikis, this fix will not work.\n\nWhen using Tomcat as a servlet container, it&#x27;s possible to change the domain of the cookie JSESSIONID by adding the attribute sessionCookieDomain to context.xml as such :\n\n&lt;Context sessionCookieDomain=&quot;mytld.org&quot;&gt;  \n...  \n&lt;/Context&gt;# Endpoints\n\n## Callback\n\npath: **authenticator/callback**\n\n## [Back-Channel Logout](https://openid.net/specs/openid-connect-backchannel-1_0.html)\n\npath: **authenticator/backchannel\\_logout**\n\n# Bypass OpenID Connect\n\nAs indicated in the previous section you can disable OpenID Connect using the property oidc.skipped in the xwiki.properties file.\n\nIt&#x27;s also possible to skip OpenId Connect temporarily using a URL parameter: for example https://mydomain/xwiki/bin/view/Main/?oidc.skipped=true.\n\n",
      "similarity_score": 0.8513456583023071,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "# Group synchronization\n\nThe default group synchronization is enabled by adding the claim xwiki\\_groups to the property oidc.userinfoclaims in the xwiki.properties file.\n\nBy default this synchronization expect to receive the list of group names (without the `wiki:XWiki.` prefix) in which the user should be placed (groups are automatically created when they don&#x27;t exist). You can also define a mapping between the XWiki groups and the provider groups using oidc.groups.mapping property.\n\nIt&#x27;s also possible to implement your own custom group synchronization in a listener. See [Listeners section](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HListeners).\n\n# Customization\n\n## Templates\n\nThe authenticator uses a template to ask the user for the target provider when it&#x27;s not provided in the configuration. This template can be overwritten through the standard [template system](https://extensions.xwiki.org/xwiki/bin/view/Extension/Template%20Module).\n\nThe name of the template is oidc/client/provider.vm.\n\n## Listeners\n\nIt&#x27;s possible to implement an event [listener](https://extensions.xwiki.org/xwiki/bin/view/Extension/Observation%20Module%20Local) and be notified during user profile update to add more to this process or do other things after it:\n\n* org.xwiki.contrib.oidc.event.OIDCUserUpdating to modify the user profile before it being saved\n* org.xwiki.contrib.oidc.event.OIDCUserUpdated to do something after the user profile has been saved\n\n# Troubleshooting\n\n## Enable DEBUG log\n\nSee [Logging Admin Guide](https://xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Logging).\n\nThe specific packages to track for OpenID Connect module is org.xwiki.contrib.oidc. There is several ways to enable debug log.\n\n",
      "similarity_score": 0.8472936153411865,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 1745,
    "completion_tokens": 70,
    "total_tokens": 1815
  },
  "average_power_draw": 182.18733695652176,
  "energy_consumption": 153.7116610036337,
  "energy_per_input_token": 0.08005815677272589,
  "energy_per_output_token": 0.20014539193181471,
  "energy_per_total_token": 0.08468962038767698
}