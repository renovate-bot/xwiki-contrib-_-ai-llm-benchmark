{
  "id": "qa_033",
  "prompt": "Puis-je authentifier les utilisateurs avec des jetons d'acc\u00e8s ?",
  "expected_answer": "Oui, vous pouvez authentifier les utilisateurs avec des jetons d'acc\u00e8s en utilisant l'extension d'authentification bas\u00e9e sur les jetons pour l'application LLM.\n\nCette extension permet aux applications externes d'authentifier les utilisateurs avec des jetons Web JSON sign\u00e9s (JWT). Le jeton doit contenir des revendications sp\u00e9cifiques, telles que la date d'expiration, l'\u00e9metteur, le sujet et la audience, et doit \u00eatre sign\u00e9 avec une cl\u00e9 Ed25519.\n\nPour utiliser cet authentificateur, vous devez :\n\n1. Activer l'authentificateur de jeton en d\u00e9finissant la propri\u00e9t\u00e9 `xwiki.authentication.authclass` dans le fichier `xwiki.properties` sur `org.xwiki.contrib.llm.authentication.JWTTokenAuth`.\n2. Configurer les applications autoris\u00e9es en ajoutant une nouvelle entr\u00e9e \u00e0 la liste des \u00ab Applications autoris\u00e9es \u00bb, en sp\u00e9cifiant le titre, l'URL, la cl\u00e9 publique et le format de groupe de l'application.\n3. G\u00e9n\u00e9rer un jeton JWT qui r\u00e9pond aux exigences de revendications et de cl\u00e9s de signature.\n4. Inclure le jeton dans l'en-t\u00eate \u00ab Authorization \u00bb de la requ\u00eate sous la forme \u00ab Bearer TOKEN \u00bb.\n\nNotez que cet authentificateur ne prend en charge que la cr\u00e9ation ou la mise \u00e0 jour des utilisateurs en fonction des informations fournies dans le jeton et ne prend pas en charge l'utilisation d'un jeton comme authentification pour un utilisateur existant qui n'a pas \u00e9t\u00e9 cr\u00e9\u00e9 via cet authentificateur.",
  "ai_answer": "https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Index%20for%20the%20LLM%20Application/ \nhttps://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \nhttps://extensions.xwiki.org/xwiki/bin/view/Extension/Security%20Module \nhttps://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Access%20Rights/ \n\n\nOui, il est possible de faire l'authentification des utilisateurs avec des jetons d'acc\u00e8s. Un jeton d\u2019acc\u00e8s est une cha\u00eene de caract\u00e8res qui contient des informations sur un utilisateur, telles que son identifiant (ID), son mot de passe, etc.\n\nVoici les \u00e9tapes \u00e0 suivre pour authentifier les utilisateurs avec des jetons d'acc\u00e8s :\n\n1. **G\u00e9n\u00e9ration du token** : Lorsque l'utilisateur se connecte, vous g\u00e9nerez un jeton d\u2019acc\u00e8s unique en fonction de ses informations (ID et mot de passe). Le jeton peut \u00eatre g\u00e9n\u00e9r\u00e9 \u00e0 l\u2019aide d\u2019algorithme cryptographiques tels que SHA256 ou Hmac.\n\n2. **Stockage du token** : Vous stockez le jeton dans un espace de m\u00e9moire s\u00e9curis\u00e9, comme une base de donn\u00e9es ou une cache. Cela permettra plus tard de v\u00e9rifier si le jeton est valide et si l'utilisateur a \u00e9t\u00e9 authentifi\u00e9 correctement.\n\n3. **Authentification avec le token** : Lorsqu\u2019un utilisateur souhaite acc\u00e9der \u00e0 un site ou une application, il envoie son jeton d\u2019acc\u00e8s. Vous utilisez ensuite celui-ci pour v\u00e9rifier l\u2019identit\u00e9 de l\u2019utilisateur. Si le token est valide et correspond aux informations stock\u00e9es pr\u00e9c\u00e9demment, vous confirmez son identit\u00e9.\n\n4. **G\u00e9n\u00e9ration du nouveau token** : Chaque fois que l'utilisateur se connecte \u00e0 votre site ou application, vous g\u00e9n\u00e9rez un nouveau jeton d\u2019acc\u00e8s. Cela permet de s\u00e9curiser davantage le processus d\u2019authentification en limitant la validit\u00e9 des anciens tokens.\n\nCependant, utiliser les jetons d'acc\u00e8s pour authentifier les utilisateurs pr\u00e9sente quelques inconv\u00e9nients, tels que :\n\n*   **Vuln\u00e9rabilit\u00e9 face aux attaques par force brute** : Si un attaquant dispose de plusieurs essais sur le syst\u00e8me et est capable de deviner les informations du jeton (comme l'ID), il peut potentiellement cr\u00e9er des jetons correspondant \u00e0 chacune des tentatives d'identification possibles. Lorsque le jeton associ\u00e9 \u00e0 l'identit\u00e9 r\u00e9elle est g\u00e9n\u00e9r\u00e9, il sera identifi\u00e9 par ce processus.\n*   **Probl\u00e8mes li\u00e9s au temps de validit\u00e9** : Si vous laissez les tokens valables pendant une p\u00e9riode prolong\u00e9e, cela peut conduire \u00e0 des acc\u00e8s non autoris\u00e9s aux syst\u00e8mes ou informations sensibles.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.LLM Application.Index for the LLM Application.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Index%20for%20the%20LLM%20Application/",
      "content": "### Collection Resource\n\nA collection object has the following properties, all properties are strings unless otherwise mentioned:\n\n* id: id of the collection\n* title: pretty name of the collection\n* embedding\\_model: the embedding model as reference of the page that defines the model\n* chunking\\_method: the chunking method, should be maxChars\n* chunking\\_max\\_size: (int) the maximum size of a chunk\n* chunking\\_overlap\\_offset: (int) the overlap of chunks\n* document\\_spaces: (list of strings) the list of XWiki spaces indexed by this collection, currently not used\n* allow\\_guests: (boolean) if guests can query this collection (as part of a chat completion)\n* query\\_groups: (list of strings) the list of groups that are allowed to query this collection (as part of a chat completion). This is only used when guests aren&#x27;t allowed to query the collection.\n* rights\\_check\\_method: the method used for checking access rights of individual documents during queries. Supported values: public, external. See also [the Authorization section below](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Index%20for%20the%20LLM%20Application/#HAuthorization).\n* rights\\_check\\_method\\_configuration: (object) options of the rights check method, values depend on the selected rights check method. The &quot;external&quot; rights check method supports the url parameter which is the URL that is used to check rights for all found documents.\n\n#### GET /wikis/{wikiName}/aiLLM/collections/{collectionName}\n\nReturns the collection of the given name.\n\n#### PUT /wikis/{wikiName}/aiLLM/collections/{collectionName}\n\nCreates or updates the collection of the given name. The body of the request is a collection, if not all properties are specified, only the specified properties are updated.\n\n#### DELETE /wikis/{wikiName}/aiLLM/collections/{collectionName}\n\nDeletes the collection of the given name\n\n",
      "similarity_score": 0.5877810716629028,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "#-# \\* profile: Requests that access to the end-user&#x27;s default profile claims at the UserInfo endpoint be granted by the issued access token.  \n#-# \\* email: Requests that access to the email and email\\_verified claims at the UserInfo endpoint be granted by the issued access token.  \n#-# \\* address: Requests that access to address claim at the UserInfo endpoint be granted by the issued access token.  \n#-# \\* phone: Requests that access to the {phone\\_number and phone\\_number\\_verified claims at the UserInfo endpoint be granted by the issued access token.  \n#-# \\* offline\\_access: Requests that an OAuth 2.0 refresh token be issued that can be used to obtain an access token that grants access the end-user&#x27;s UserInfo endpoint even when the user is not present (not logged in).  \n#-#\u00a0  \n#-# But depending on the provider more can be listed.  \n#-#\u00a0  \n#-# The default is:  \n# oidc.scope=openid,profile,email,address,phone  \n  \n#-# The response type to control the flow used by the OpenId Connect protocol.  \n#-# This is often used to control if the information about the user should  \n#-# be gathered from the userinfo endpoint with a request from XWiki to the provider (&quot;code&quot;, the default)  \n#-# or the id token directly provided when the provider redirects to XWiki (&quot;id\\_token&quot;)  \n#-# but it&#x27;s also possible to combine.  \n#-# See https://openid.net/specs/openid-connect-core-1\\_0.html#rfc.section.3 for mode details.  \n#-# For an hybrid flow, use list syntax (so comma or several set) instead of the white space  \n#-# documented in the specification to separate words.  \n#-#  \n#-# The default is:  \n# oidc.responseType=code  \n  \n#-# The method used to access the userinfo endpoint.  \n#-#\u00a0  \n#-# Supported values are:  \n#-# \\* GET: use GET HTTP method  \n#-# \\* POST: use POST HTTP method  \n#-#\u00a0  \n#-# The default is:  \n# oidc.endpoint.userinfo.method=GET  \n  \n#-# The pattern to use to generate the XWiki user name.  \n#-#\u00a0  \n",
      "similarity_score": 0.579281747341156,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.Security Module",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/Security%20Module",
      "content": "### Default right settler additional policies\n\nThe default right settler provide the following additional rules during it decision process:\n\n* A *right* allowed by a rule matching the *user* could not be denied by another rule at the same *level* matching a *group* containing that *user*, whatever is the tie resolution policy. For example, on the same document, a *Rule* allowing edit right to userA of groupA, and a *Rule* denying edit right to groupA enter in conflict. The normal tie resolution policy (which is, for the edit right, to deny access) will apply to any user of groupA while userA will be allowed.\n* Any *rule* matching both the *user* and a group containing the *user* will be considered as a *rule* matched for the *user* and will be implied as so in the above rule.\n* Implied right receive the tie resolution policy, the inheritance override policy, and their kind of matching (user or group) from the right and the rule of the right that have implied them. For example, an edit right implied by an admin right will not be overridden by a denial of the edit right at a lower level.\n* Implied right does not imply other rights. Implied rights are not recursively applied. This could be seen as a limitation, but this is more a feature, since this is not difficult to provide the cumulative list of implied right during right definition if this is really the wanted behavior.\n* When a right has been allowed at a given level, it get explicitly denied to anyone else at the same level. For example, if edit right is allow at document level to userA only, it will be denied to any other userB, unless this userB receive an implied edit right with a different inheritance policy at a higher level (userB is admin for example).\n\n",
      "similarity_score": 0.5775455832481384,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.Security Module",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/Security%20Module",
      "content": " \u00a0\u00a0\u00a0boolean hasAccess(Right right, EntityReference entityReference);The context includes information like the authenticated user, the current macro being executed, the rendering context restriction, the dropping of rights by macro, etc...  \nIf you doubt about which API to use, you should probably use the contextual one, unless you are really checking rights out of context.\n\n## Change current author (since 8.3RC1)\n\nProvided by Role org.xwiki.security.authorization.AuthorExecutor:\n\n\u00a0\u00a0\u00a0\u00a0/\\*\\*  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* Execute the passed {@link Callable} with the rights of the passed user.  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\*  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @param callable the the task to execute  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @param authorReference the user to check rights on  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @return computed result  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @throws Exception if unable to compute a result  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @param &lt;V&gt; the result type of method &lt;tt&gt;call&lt;/tt&gt;  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\*/  \n \u00a0\u00a0\u00a0&lt;V&gt; V call(Callable&lt;V&gt; callable, DocumentReference authorReference) throws Exception;  \n  \n \u00a0\u00a0\u00a0/\\*\\*  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* Setup the context so that following code is executed with provided user rights.  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\*   \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* &lt;pre&gt;  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* {@code  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* try (AutoCloseable context = this.executor.before(author)) {  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* \u00a0\u00a0...  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* }  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* }  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* &lt;/pre&gt;  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\*  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @param authorReference the user to check rights on  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @return the context to restore  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @see #after(AutoCloseable)  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\*/  \n\u00a0\u00a0\u00a0\u00a0AutoCloseable before(DocumentReference authorReference);  \n  \n \u00a0\u00a0\u00a0/\\*\\*  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* Restore the context to it&#x27;s previous state as defined by the provided {@link AutoCloseable}.  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\*  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @param context the context to restore  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\* @see #before(DocumentReference)  \n\u00a0\u00a0\u00a0\u00a0\u00a0\\*/  \n \u00a0\u00a0\u00a0void after(AutoCloseable context);## Scripting API (since 6.1RC1)\n\nProvides access to the general and contextual API from script services.  \nHere is some sample codes:\n\n",
      "similarity_score": 0.5774126052856445,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.AdminGuide.Access Rights.WebHome",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Access%20Rights/",
      "content": "# Basic rules\n\n* XWiki provides the ability to set wiki wide rights, granular page level rights and the ability to have programmatic rights, in case you need more control. Thanks to the different levels of control offered by XWiki, it&#x27;s easy to manage the access to actions like: read, edit, comment etc.\n* You can create groups of users in order to manage the rights of a category of people more easily.\n* Permissions set at a wiki wide level will be overridden by permissions set at a page level, which have priority.\n* When multiple permissions are set at the same wiki/page level, check the priority order of the right in [permission type](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Permission%20types/) to know if access will be allowed or denied.\n* When a right has been allowed at a given level, it gets implicitly denied to anyone else at the same level. This only applies to the right allowed. If only &quot;View&quot; is set to a user/group at this level, all other rights like &quot;Edit&quot; are still inherited. Using this implicit deny behavior is recommended over applying explicit denial.\n* The scope of the right applied (&quot;Page&quot; or &quot;Page &amp; Children&quot;) affects the implicit denial. If the right is applied for the page only, pages below the current page will still inherit the wiki/higher level pages rights.\n* Implied permissions like VIEW of the EDIT right are not implicitly denied when EDIT is set. User/Groups with the VIEW right are still inherited if the page has EDIT explicitly set for a User/Group.\n* On the contrary, an explicit denial does not block inheritance for the right denied.\n",
      "similarity_score": 0.5676507949829102,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 29,
    "completion_tokens": 540,
    "total_tokens": 569
  },
  "average_power_draw": 215.49315734989642,
  "energy_consumption": 985.7106829885565,
  "energy_per_input_token": 0.7148010754086704,
  "energy_per_output_token": 1.7870026885216759,
  "energy_per_total_token": 1.7323562091187286
}