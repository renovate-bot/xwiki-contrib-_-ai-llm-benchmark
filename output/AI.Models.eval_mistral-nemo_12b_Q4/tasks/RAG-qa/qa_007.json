{
  "id": "qa_007",
  "prompt": "How do I configure group synchronization between XWiki and my OpenID Connect provider?\nI'm using an OpenID Connect provider that supports group claims, and I want to synchronize these groups with XWiki groups. What's the process for setting this up?",
  "expected_answer": "To configure group synchronization between XWiki and your OpenID Connect provider 1. Locate the `xwiki.properties` file in your XWiki installation directory.\n2. Open the file with a text editor.\n3. Configure the group synchronization by setting the `oidc.groups.claim` property to the name of the claim used by your OpenID Connect provider to send group information. For example:\n```java\n#-# The name of the claim used to get the list of groups the user belong to.\n# oidc.groups.claim=groups\n```\nReplace `groups` with the actual claim name provided by your OpenID Connect provider.\n1. If your OpenID Connect provider sends group memberships as a single value attribute delimited by a specific character (e.g., a comma), configure the `oidc.groups.separator` property with the appropriate character:\n```java\n#-# If the identity provider returns group memberships as a single value attribute delimited with a char, for example:\n# oidc.groups.separator=,\n```\nReplace the comma with the actual separator used by your provider.\n1. If you want to map the synchronized groups to specific XWiki groups, configure the `oidc.groups.mapping` property with the appropriate mappings:\n```java\n# oidc.groups.mapping=XWiki.\"MyXWikiGroup\"=group1\n# oidc.groups.mapping=XWiki.\"MyXWikiGroup2\"=group2\n```\nReplace `MyXWikiGroup` and `MyXWikiGroup2` with the names of the XWiki groups you want to map, and `group1` and `group2` with the actual group names provided by your OpenID Connect provider.\n1. Save the `xwiki.properties` file and restart your XWiki instance for the changes to take effect.",
  "ai_answer": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \n\n\nTo configure group synchronization between XWiki and your OpenID Connect provider, follow these steps:\n\n1. **Enable group synchronization**: Add `xwiki_groups` to the `oidc.userinfoclaims` property in your `xwiki.properties` file. This tells XWiki to expect a list of groups in the user info JSON response.\n\n   ```\n   oidc.userinfoclaims=xwiki_instance_id, xwiki_groups\n   ```\n\n2. **Specify the claim containing group names**: By default, XWiki expects the `xwiki_groups` claim to contain the list of groups. If your provider uses a different claim for group names, specify it using the `oidc.groups.claim` property.\n\n   For example, if your provider sends groups in the `customgroups` claim under `customobject`, set:\n\n   ```\n   oidc.groups.claim=customobject.customgroups\n   ```\n\n3. **Map provider groups to XWiki groups** (optional): If the names of your provider's groups don't match those you want to use in XWiki, you can map them using the `oidc.groups.mapping` property.\n\n   ```\n   oidc.groups.mapping=my-oidc-group=MyXWikiGroup\n   ```\n\n4. **Restart XWiki** for the changes to take effect.\n\nAfter completing these steps, group synchronization should be enabled. When a user logs in via OpenID Connect, their groups will be synchronized with XWiki's groups based on the claims received from your provider.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "#-# The default is (user profiles are viewable by all users by default and it&#x27;s possible to edit one own&#x27;s profile):  \n# oidc.user.oidc.user.ownProfileRights=edit  \n  \n#-# The custom claims to request to the provider for id token.  \n#-#  \n#-# The default is:  \n# oidc.idtokenclaims=xwiki\\_instance\\_id  \n  \n#-# The name of the claim used to get the list of groups the user belong to.  \n#-# This claim also need to be listed in oidc.userinfoclaims which control if group membership synchronization is enabled or not.  \n#-#\u00a0  \n#-# It&#x27;s also possible to use a custom property from the userinfo JSON.  \n#-# For example if the provider send the following JSON for the user info:  \n#-# {  \n#-# \u00a0\u00a0&quot;sub&quot; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: &quot;248289761001&quot;,  \n#-# \u00a0\u00a0&quot;name&quot; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: &quot;Jane Doe&quot;,  \n#-# \u00a0\u00a0&quot;given\\_name&quot; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: &quot;Jane&quot;,  \n#-# \u00a0\u00a0&quot;family\\_name&quot; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: &quot;Doe&quot;,  \n#-# \u00a0\u00a0&quot;preferred\\_username&quot; : &quot;j.doe&quot;,  \n#-# \u00a0\u00a0&quot;email&quot; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: &quot;[[email\u00a0protected]](https://extensions.xwiki.org/cdn-cgi/l/email-protection)&quot;,  \n#-# \u00a0\u00a0&quot;picture&quot; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: &quot;http://example.com/janedoe/me.jpg&quot;  \n#-# \u00a0\u00a0&quot;customobject&quot; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:  \n#-# \u00a0\u00a0{  \n#-# \u00a0\u00a0\u00a0\u00a0&quot;customgroups&quot; \u00a0\u00a0: \u00a0[&quot;group1&quot;, &quot;group2&quot;]  \n#-# \u00a0\u00a0}  \n#-# }  \n#-# you can use:  \n# oidc.groups.claim=customobject.customgroups  \n#-#\u00a0  \n#-# The default is:  \n# oidc.groups.claim=xwiki\\_groups  \n  \n#-# Receiving a groups list is enough to enable group synchronization but you might need to configure XWiki groups names different from the remote groups names.  \n#-# It&#x27;s also required to indicate what&#x27;s the field containing the list of groups (that&#x27;s not an OpenID Connect standard) using oidc.groups.claim property.  \n#-#\u00a0  \n# oidc.groups.mapping=MyXWikiGroup=my-oidc-group  \n# oidc.groups.mapping=MyXWikiGroup2=my-oidc-group2  \n",
      "similarity_score": 0.8724074959754944,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "## Authentication with a domain-based instance\n\nWhen XWiki is configured as a domain-based instance, users will not be automatically authenticated on every wiki by default, as the OIDC authenticator does not rely on the property xwiki.authentication.cookiedomains in xwiki.cfg.\n\nTo still allow users to be automatically authenticated when accessing one of the wikis of the farm, you will have to update the configuration of the session cookie of your servlet container so that this cookie gets set on a top-level domain, encompassing every wiki of farm. If your XWiki instance has very different domains for its wikis, this fix will not work.\n\nWhen using Tomcat as a servlet container, it&#x27;s possible to change the domain of the cookie JSESSIONID by adding the attribute sessionCookieDomain to context.xml as such :\n\n&lt;Context sessionCookieDomain=&quot;mytld.org&quot;&gt;  \n...  \n&lt;/Context&gt;# Endpoints\n\n## Callback\n\npath: **authenticator/callback**\n\n## [Back-Channel Logout](https://openid.net/specs/openid-connect-backchannel-1_0.html)\n\npath: **authenticator/backchannel\\_logout**\n\n# Bypass OpenID Connect\n\nAs indicated in the previous section you can disable OpenID Connect using the property oidc.skipped in the xwiki.properties file.\n\nIt&#x27;s also possible to skip OpenId Connect temporarily using a URL parameter: for example https://mydomain/xwiki/bin/view/Main/?oidc.skipped=true.\n\n",
      "similarity_score": 0.8555490374565125,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "# Group synchronization\n\nThe default group synchronization is enabled by adding the claim xwiki\\_groups to the property oidc.userinfoclaims in the xwiki.properties file.\n\nBy default this synchronization expect to receive the list of group names (without the `wiki:XWiki.` prefix) in which the user should be placed (groups are automatically created when they don&#x27;t exist). You can also define a mapping between the XWiki groups and the provider groups using oidc.groups.mapping property.\n\nIt&#x27;s also possible to implement your own custom group synchronization in a listener. See [Listeners section](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HListeners).\n\n# Customization\n\n## Templates\n\nThe authenticator uses a template to ask the user for the target provider when it&#x27;s not provided in the configuration. This template can be overwritten through the standard [template system](https://extensions.xwiki.org/xwiki/bin/view/Extension/Template%20Module).\n\nThe name of the template is oidc/client/provider.vm.\n\n## Listeners\n\nIt&#x27;s possible to implement an event [listener](https://extensions.xwiki.org/xwiki/bin/view/Extension/Observation%20Module%20Local) and be notified during user profile update to add more to this process or do other things after it:\n\n* org.xwiki.contrib.oidc.event.OIDCUserUpdating to modify the user profile before it being saved\n* org.xwiki.contrib.oidc.event.OIDCUserUpdated to do something after the user profile has been saved\n\n# Troubleshooting\n\n## Enable DEBUG log\n\nSee [Logging Admin Guide](https://xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Logging).\n\nThe specific packages to track for OpenID Connect module is org.xwiki.contrib.oidc. There is several ways to enable debug log.\n\n",
      "similarity_score": 0.8524655103683472,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 1659,
    "completion_tokens": 326,
    "total_tokens": 1985
  },
  "average_power_draw": 235.3526723223755,
  "energy_consumption": 1058.8163389932267,
  "energy_per_input_token": 0.4279775016140771,
  "energy_per_output_token": 1.0699437540351926,
  "energy_per_total_token": 0.5334087350091823
}