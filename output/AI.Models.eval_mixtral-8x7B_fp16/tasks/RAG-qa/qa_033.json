{
  "id": "qa_033",
  "prompt": "Puis-je authentifier les utilisateurs avec des jetons d'acc\u00e8s ?",
  "expected_answer": "Oui, vous pouvez authentifier les utilisateurs avec des jetons d'acc\u00e8s en utilisant l'extension d'authentification bas\u00e9e sur les jetons pour l'application LLM.\n\nCette extension permet aux applications externes d'authentifier les utilisateurs avec des jetons Web JSON sign\u00e9s (JWT). Le jeton doit contenir des revendications sp\u00e9cifiques, telles que la date d'expiration, l'\u00e9metteur, le sujet et la audience, et doit \u00eatre sign\u00e9 avec une cl\u00e9 Ed25519.\n\nPour utiliser cet authentificateur, vous devez :\n\n1. Activer l'authentificateur de jeton en d\u00e9finissant la propri\u00e9t\u00e9 `xwiki.authentication.authclass` dans le fichier `xwiki.properties` sur `org.xwiki.contrib.llm.authentication.JWTTokenAuth`.\n2. Configurer les applications autoris\u00e9es en ajoutant une nouvelle entr\u00e9e \u00e0 la liste des \u00ab Applications autoris\u00e9es \u00bb, en sp\u00e9cifiant le titre, l'URL, la cl\u00e9 publique et le format de groupe de l'application.\n3. G\u00e9n\u00e9rer un jeton JWT qui r\u00e9pond aux exigences de revendications et de cl\u00e9s de signature.\n4. Inclure le jeton dans l'en-t\u00eate \u00ab Authorization \u00bb de la requ\u00eate sous la forme \u00ab Bearer TOKEN \u00bb.\n\nNotez que cet authentificateur ne prend en charge que la cr\u00e9ation ou la mise \u00e0 jour des utilisateurs en fonction des informations fournies dans le jeton et ne prend pas en charge l'utilisation d'un jeton comme authentification pour un utilisateur existant qui n'a pas \u00e9t\u00e9 cr\u00e9\u00e9 via cet authentificateur.",
  "ai_answer": "https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \nhttps://extensions.xwiki.org/xwiki/bin/view/Extension/Administration%20Application \nhttps://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/ \n\n\nYes, you can authenticate users with access tokens. Here's a general guide on how you can do this, based on the information you provided:\n\n1. **Generate a signing key**: You can generate an Ed25519 key pair using OpenSSL with the following commands:\n   ```\n   openssl genpkey -algorithm ed25519 -outform PEM -out private.pem  \n   openssl pkey -in private.pem -pubout -outform PEM -out public.pem\n   ```\n   This will generate two files, `private.pem` and `public.pem`, which contain the private and public key in PEM format, respectively.\n\n2. **Create a JWT token**: The JWT token needs to contain several claims, including the expiration time (`exp`), the issuer (`iss`), the subject (`sub`), and the audience (`aud`). The `aud` claim must contain the URL of the XWiki installation in the form `https://www.example.com/` without path. You can also include optional claims such as `given_name`, `family_name`, `email`, `groups`, `iat`, and `nbf`.\n\n3. **Sign the JWT token**: Sign the JWT token using the private key you generated in step 1.\n\n4. **Send the JWT token**: Send the JWT token to the server by including it in the `Authorization` header in the form `Bearer TOKEN`, where `TOKEN` is the signed JWT token.\n\nRemember that the JWT token needs to be signed with an Ed25519 key and must contain the required claims. The token is rejected if the `nbf` claim is in the future, or if the `exp` claim is more than 24 hours in the future or in the past. The `iat` claim must not be in the future.\n\nI hope this helps! Let me know if you have any other questions.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.LLM Application.Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/",
      "content": "## Token Generation\n\nThis authenticator expects a JWT token that is signed with an Ed25519 key. A suitable signing key can, e.g., be generated using the [OpenSSL](https://www.openssl.org/) command line utility and the following two commands:\n\nopenssl genpkey -algorithm ed25519 -outform PEM -out private.pem  \nopenssl pkey -in private.pem -pubout -outform PEM -out public.pemThe files &quot;private.pem&quot; and &quot;public.pem&quot; then contain the private and public key in PEM format, respectively.\n\nThe JWT token needs to contain the following claims:\n\n* &quot;exp&quot;: the expiration time, must be in the future but not more than 24 hours in the future\n* &quot;iss&quot;: the issuer, corresponding to the URL property configured in the authorized applications\n* &quot;sub&quot;: the subject, used for deriving the username\n* &quot;aud&quot;: the audience, must contain the URL of the XWiki installation in the form https://www.example.com/ without path. Both a single string and an array of strings are supported. If the expected URL isn&#x27;t passed, an error is logged with the expected URL.\n\nOptional:\n\n* &quot;given\\_name&quot;: used to set the first name field of the user profile\n* &quot;family\\_name&quot;: used to set the last name field of the user profile\n* &quot;email&quot;: used to set the email field of the user profile\n* &quot;groups&quot;: a list of groups (as list of strings). Used to set the groups of the user.\n* &quot;iat&quot;: issued at, the time when the token was issued. Tokens older than 24 hours and tokens issued in the future aren&#x27;t accepted.\n* &quot;nbf&quot;: not before, the token is rejected if this time is in the future.\n\nThe token needs to be present in the &quot;Authorization&quot; header in the form &quot;Bearer TOKEN&quot; where TOKEN is the signed JWT token as described above.\n\n\n",
      "similarity_score": 0.7818219661712646,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.Administration Application",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/Administration%20Application",
      "content": "Here you see the result of a single application with two ConfigurableClass objects. Each object is set to display in the same section (the section you see) and they both are set to use the same custom configuration class. Each object only displays two of the custom configuration class&#x27;s four properties because they have **propertiesToShow** set. The values of the **heading** property for the two objects are set to &quot;Section 1&quot; and &quot;Section 2&quot;. Also where it says &quot;Test section&quot; is customizable by adding a language pack.\n\n### Fields you can define\n\n* **displayInSection** (String) - Specifies the *administration section* that is used to configure your application. Administration sections are listed in the administration menu, grouped in *categories* (e.g. Rights, Localization, Themes). You can use this field to define a new administration section or you can specify an existing one (defined by some other ConfigurableClass object), in which case your configuration properties will be &quot;appended&quot; to the existing administration section under the specified heading (see below). If you need the section title translated, the value you add in this field will be used as a translation key, prefixed by admin..\n* **heading** (String) - You can add multiple ConfigurableClass objects to your document with different headings and the properties of each will be displayed under the heading. If you&#x27;re only using a single ConfigurableClass object for your application then you should leave this blank, unless you want to reuse an existing administration section (see above). Also note that this field is evaluated, so if you need to translate a heading you can directly use $services.localization.render(&#x27;someKey&#x27;) as value.\n* **configurationClass** (String) - This is the name of the custom configuration class which you defined to hold the configuration parameters. If you leave this blank then no form will be created.\n",
      "similarity_score": 0.7743958234786987,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.UserGuide.Features.WebHome",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/",
      "content": "![text_list_bullets](https://www.xwiki.org/xwiki/resources/icons/silk/text_list_bullets.png?cache-version=1711538036000)\n\n[Menu](https://extensions.xwiki.org/xwiki/bin/view/Extension/Menu%20Application)  \nMenu application\n\n![bell](https://www.xwiki.org/xwiki/resources/icons/silk/bell.png?cache-version=1711538036000)\n\n[Notifications](https://extensions.xwiki.org/xwiki/bin/view/Extension/Notifications%20Application/)  \nDisplay notifications about events happening in the wiki.\n\n![invitation.png](https://extensions.xwiki.org/xwiki/bin/download/Extension/Invitation%20Application/invitation.png?rev=1.3)\n\n[Invitation](https://extensions.xwiki.org/xwiki/bin/view/Extension/Invitation%20Application)  \nAllows users to send emails, inviting friends and colleagues to join a wiki\n\n# Other Features\n\nOther features can be added to your wiki by [installing](https://extensions.xwiki.org/xwiki/bin/view/Extension/Extension%20Manager%20Application) extensions not listed above. Check the [Extensions wiki](https://extensions.xwiki.org/xwiki/bin/view/Main/) for a full list of available extensions.\n\n\n",
      "similarity_score": 0.7720595598220825,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 1544,
    "completion_tokens": 447,
    "total_tokens": 1991
  },
  "average_power_draw": null,
  "energy_consumption": null,
  "energy_per_input_token": null,
  "energy_per_output_token": null,
  "energy_per_total_token": null
}