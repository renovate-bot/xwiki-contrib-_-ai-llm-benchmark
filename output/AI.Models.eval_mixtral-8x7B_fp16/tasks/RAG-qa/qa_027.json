{
  "id": "qa_027",
  "prompt": "Comment configurer la synchronisation de groupe entre XWiki et mon fournisseur OpenID Connect?\nJ'utilise un fournisseur OpenID Connect qui prend en charge les revendications de groupe, et je souhaite synchroniser ces groupes avec les groupes XWiki. Quel est le processus pour le configurer?",
  "expected_answer": "Pour configurer la synchronisation de groupe entre XWiki et votre fournisseur OpenID Connect:\n1. Localisez le fichier `xwiki.properties` dans le r\u00e9pertoire d'installation de XWiki.\n2. Ouvrez le fichier avec un \u00e9diteur de texte.\n3. Configurez la synchronisation de groupe en d\u00e9finissant la propri\u00e9t\u00e9 `oidc.groups.claim` sur le nom de la revendication utilis\u00e9e par votre fournisseur OpenID Connect pour envoyer des informations de groupe. Par exemple:\n```java\n#-# Le nom de la revendication utilis\u00e9e pour obtenir la liste des groupes auxquels appartient l'utilisateur.\n# oidc.groups.claim=groupes\n```\nRemplacez `groupes` par le nom de revendication r\u00e9el fourni par votre fournisseur OpenID Connect.\n1. Si votre fournisseur OpenID Connect envoie des adh\u00e9sions de groupe en tant qu'attribut de valeur unique d\u00e9limit\u00e9 par un caract\u00e8re sp\u00e9cifique (par exemple, une virgule), configurez la propri\u00e9t\u00e9 `oidc.groups.separator` avec le caract\u00e8re appropri\u00e9:\n```java\n#-# Si le fournisseur d'identit\u00e9 renvoie des adh\u00e9sions de groupe en tant qu'attribut de valeur unique d\u00e9limit\u00e9 avec un caract\u00e8re, par exemple:\n# oidc.groups.separator=,\n```\nRemplacez la virgule par le s\u00e9parateur r\u00e9el utilis\u00e9 par votre fournisseur.\n1. Si vous souhaitez mapper les groupes synchronis\u00e9s \u00e0 des groupes XWiki sp\u00e9cifiques, configurez la propri\u00e9t\u00e9 `oidc.groups.mapping` avec les mappages appropri\u00e9s:\n```java\n# oidc.groups.mapping=XWiki.\"MyXWikiGroup\"=group1\n# oidc.groups.mapping=XWiki.\"MyXWikiGroup2\"=group2\n```\nRemplacez `MyXWikiGroup` et `MyXWikiGroup2` par les noms des groupes XWiki que vous souhaitez mapper, et `group1` et `group2` par les noms de groupe r\u00e9els fournis par votre fournisseur OpenID Connect.\n1. Enregistrez le fichier `xwiki.properties` et red\u00e9marrez votre instance XWiki pour que les modifications prennent effet.",
  "ai_answer": "https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/ScalabilityPerformance \nhttps://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/OfficeImporter \nhttps://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/DatabaseSupport \n\n\nTo configure group synchronization between XWiki and your OpenID Connect provider, you need to use the OpenID Connect authentication module and configure it to map the group claims from your OpenID Connect provider to XWiki groups.\n\nHere is a general process to follow:\n\n1. **Install the OpenID Connect authentication module**: You can find the installation instructions in the XWiki documentation [here](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/OpenIDConnect/).\n\n2. **Configure the OpenID Connect authentication module**: You need to configure the module with the details of your OpenID Connect provider, such as the authorization and token endpoints, client ID and secret, and scope. You can find more information on how to do this in the XWiki documentation [here](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/OpenIDConnect/#HConfiguration).\n\n3. **Map the group claims**: Once you have configured the OpenID Connect authentication module, you need to map the group claims from your OpenID Connect provider to XWiki groups. You can do this by adding a custom mapping in the `xwiki.properties` file. The mapping should look something like this:\n\n   ```\n   openidconnect.claims.groups = group\n   xwiki.authentication.openidconnect.group.mapping = ${openidconnect.claims.groups}\n   ```\n\n   This tells XWiki to use the `groups` claim from the OpenID Connect provider and map it to XWiki groups.\n\n4. **Create the XWiki groups**: You need to create the XWiki groups that correspond to the groups in your OpenID Connect provider. You can do this manually in the XWiki administration interface or programmatically using the XWiki APIs.\n\n5. **Test the synchronization**: Once you have configured the group synchronization, you should test it to make sure it is working correctly. You can do this by creating a user in your OpenID Connect provider, adding them to a group, and then logging in to XWiki with that user. The user should be automatically added to the corresponding XWiki group.\n\nNote that the exact details of the configuration may vary depending on your OpenID Connect provider and the specifics of your XWiki installation. You should consult the documentation for your OpenID Connect provider and the XWiki OpenID Connect authentication module for more information.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.UserGuide.Features.ScalabilityPerformance",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/ScalabilityPerformance",
      "content": "\nXWiki is written in Java/Java EE. As such it scales as well as Java scales.\n\n# Multi Tenancy\n\nXWiki supports the ability to run hundreds and even thousands of wikis on the same JVM (i.e. same webapp).\n\nSome examples:\n\n* [MyXWiki](http://myxwiki.org/xwiki/bin/view/Main/WebHome) currently hosts over 170 wikis on a single JVM\n* [XWiki SAS Cloud](http://network.xwiki.com) currently hosts 1000+ wikis (but on several JVMs)\n\nSee the tutorial on [how to configure multi-tenancy](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Virtualization) to learn more.\n\n# Clustering\n\nXWiki provides an easy way to setup clustered instances of XWiki based on network events distribution. Clustering allows for 2 use cases:\n\n* Load distribution on several JVMs\n* Failover since if a machine is down the other ones are still available\n\nSee [Clustering](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Clustering) for more details.\n\n\n",
      "similarity_score": 0.8141542673110962,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.Office Importer Application",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/OfficeImporter",
      "content": "#-# Port number used for connecting to the openoffice server instance.   \n# openoffice.serverPort=8100  \n  \n#-# If the openoffice server should be started / connected upon XE start.  \n# openoffice.autoStart=falseFor the profilePath configuration option, you need to have an OpenOffice profile directory created somewhere on the system. This can be a problem in server environments where launching OpenOffice is not an option. In such situations you can create an OpenOffice profile on a local computer and upload it to the server running XE.\n\nOnce XWiki is configured in this manner, an OpenOffice server must be manually started as a separate process. You can issue the following command to accomplish this:\n\nsoffice -headless -accept=&quot;socket,host=127.0.0.1,port=8100;urp;&quot; -nofirststartwizardDon&#x27;t forget to replace &lt;soffice&gt; with the path to your OpenOffice executable. More information regarding OpenOffice server deployment is provided [here](http://www.artofsolving.com/node/10). Also note that the Office Importer admin UI will change reflecting the new configuration as shown below:\n\n![admin2.png](https://www.xwiki.org/xwiki/bin/download/Extension/Office%20Importer%20Application/admin2.png?rev=1.1)\n\nLinux users may refer to additional installation notes [here](https://www.xwiki.org/xwiki/bin/view/Extension/Office%20Importer%20Application%20Linux).\n\n## Auto start / Auto connect (feature)\n\nThis feature was introduced beginning with the XWiki 1.8.4 version. With this option enabled, you don&#x27;t need to worry about starting / connecting the OpenOffice server from the Office Importer admin UI every time you restart XE. This option can be configured from **xwiki.properties** file as shown below:\n\n",
      "similarity_score": 0.7959887981414795,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.UserGuide.Features.DatabaseSupport",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/DatabaseSupport",
      "content": "\nAll XWiki pages are saved in a relational database for better efficiency. This allows XWiki to be fast and scalable. It also allows you to use the [Programming](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/Programming) features to perform queries in your pages on any data contained in other pages.\n\nTheoretically XWiki supports the [same databases Hibernate supports](https://community.jboss.org/wiki/SupportedDatabases2). This means that if you provide the correct Hibernate mapping file all those databases should work fine with XWiki.\n\nMore specifically the [XWiki Development Team officially supports a subset of all those databases](https://dev.xwiki.org/xwiki/bin/view/Community/DatabaseSupportStrategy).\n\n\n",
      "similarity_score": 0.7920476198196411,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 1249,
    "completion_tokens": 545,
    "total_tokens": 1794
  },
  "average_power_draw": null,
  "energy_consumption": null,
  "energy_per_input_token": null,
  "energy_per_output_token": null,
  "energy_per_total_token": null
}