{
  "id": "qa_026",
  "prompt": "Puis-je personnaliser les champs de profil utilisateur qui sont remplis \u00e0 partir du fournisseur OpenID Connect dans XWiki?\nJe souhaite mapper des champs de profil utilisateur suppl\u00e9mentaires de mon fournisseur OpenID Connect aux propri\u00e9t\u00e9s de l'utilisateur XWiki. Comment puis-je y parvenir?",
  "expected_answer": "Oui, vous pouvez personnaliser les champs de profil utilisateur qui sont remplis \u00e0 partir du fournisseur OpenID Connect en les mappant dans le fichier `xwiki.properties`.\n\nPour mapper des champs de profil utilisateur suppl\u00e9mentaires, utilisez la propri\u00e9t\u00e9 `oidc.user.mapping`. Voici un exemple de la fa\u00e7on de mapper des propri\u00e9t\u00e9s personnalis\u00e9es:\n\n```\n# oidc.user.mapping=myxproperty1=${oidc.user.subject}\n# oidc.user.mapping=myxproperty2=myprefix-${oidc.user.subject}\n```\n\nRemplacez `myxproperty1` et `myxproperty2` par les noms de propri\u00e9t\u00e9 d'utilisateur XWiki r\u00e9els, et `${oidc.user.subject}` par la variable appropri\u00e9e en fonction des donn\u00e9es fournies par votre fournisseur OpenID Connect.\n\nApr\u00e8s avoir configur\u00e9 les mappages, enregistrez le fichier `xwiki.properties` et red\u00e9marrez XWiki pour appliquer les modifications.",
  "ai_answer": "Sources: https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \nhttps://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/ \n\n\nOui, il est possible d'afficher et de personnaliser les informations du profil utilisateur dans un syst\u00e8me bas\u00e9 sur le protocole OAuth2/OpenID Connect comme XWiki en mappant des champs suppl\u00e9mentaires aux propri\u00e9t\u00e9s de l'utilisateur. Voici comment vous pouvez y parvenir :\n\n1. Cr\u00e9ez une classe d'extension personnalis\u00e9e pour les utilisateurs qui \u00e9tend la classe `XwikiUser` fournie dans XWiki et impl\u00e9mente le protocole OpenID Connect en ajoutant des champs suppl\u00e9mentaires aux informations de l'utilisateur :\n\n```python\nfrom xwiki.user import User as BaseUser, get_current_user\n\nclass CustomUser(BaseUser):\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n        \n        # Charger les informations suppl\u00e9mentaires du profil utilisateur \u00e0 partir de l'API OpenID Connect\n        self.custom_field1 = None  # Remplacer par le champ r\u00e9el que vous souhaitez charger\n        self.custom_field2 = None  endpoints, etc.)\n        \n    def get_openid_info(self):\n        openid_info = super().get_openid_info()\n        \n        # Charger les informations suppl\u00e9mentaires du profil utilisateur \u00e0 partir de l'API OpenID Connect et ajouter-les au dictionnaire d'informations OAuth2/OpenID Connect\n        self.custom_field1 = openid_api.get('customField1')  # Remplacer par le champ r\u00e9el que vous souhaitiez charger\n        self.custom_field2 = openid_api.get('customField2') endpoints, etc.)\n        \n    def get_user(self):\n        return super().get_user() + (self.custom_field1, self.custom_field2)  # Ajouter les champs suppl\u00e9mentaires \u00e0 la liste des informations utilisateur\n```\n\n2. Configurez XWiki pour utiliser votre classe d'extension personnalis\u00e9e comme le type de profil utilisateur par d\u00e9faut :\n\n- Dans `xwiki/conf/extensions`, ajoutez une ligne avec l'adresse URL du fichier JAR contenant la classe d'extension personnalis\u00e9e. Par exemple, si vous avez votre code dans un r\u00e9pertoire nomm\u00e9 \"custom_user\", le chemin pourrait ressembler \u00e0 ceci :\n```python\nextensions = [\n    'com.example.CustomUser',  # Remplacer par l'adresse URL du fichier JAR contenant la classe d'extension personnalis\u00e9e, e.g., \"file:///home/user/custom_user-1.0.jar\"\n]\n```\n\n3. Dans `xwiki/conf/security`, configurez XWiki pour utiliser OpenID Connect comme m\u00e9thode de connexion :\n\n- Remplacez la valeur par `\"openid\"` dans le champ \"Default authentication method\", ou ajoutez une nouvelle ligne avec cette valeur et un lien vers votre fichier JAR personnalis\u00e9. Par exemple, si vous avez configur\u00e9 XWiki pour utiliser OAuth2/OpenID Connect via l'API de Google comme m\u00e9thode d'authentification par d\u00e9faut, ajoutez une nouvelle ligne avec la valeur `\"openid\"` et le chemin vers votre fichier JAR personnalis\u00e9.\n```python\nsecurity = {\n    'default authentication method': [  # Remplacez \"google\" par \"openid\", ou ajoutez cette option si elle n'existe pas d\u00e9j\u00e0 :\n        ('openid', '/extensions/custom_user-1.0'),  # Ajouter une nouvelle ligne avec la valeur `\"openid\"` et le chemin vers votre fichier JAR personnalis\u00e9, e.g., \"file:///home/user/custom_user-1.0\"\n    ],\n}\n```\n\n4. Cr\u00e9ez un lien pour afficher les informations suppl\u00e9mentaires du profil utilisateur dans XWiki :\n\n- Dans le fichier `xwiki/conf/links`, ajoutez une nouvelle ligne avec la valeur `\"custom_user\"` et l'URL vers votre classe d'extension personnalis\u00e9e. Par exemple, si vous avez configur\u00e9 un lien pour afficher les informations de profil utilisateur par d\u00e9faut dans le fichier `xwiki/conf/links`, ajoutez une nouvelle ligne avec la valeur `\"custom_user\"` et l'URL vers votre classe d'extension personnalis\u00e9e.\n```python\nlinks = [  # Ajouter cette option si elle n'existe pas d\u00e9j\u00e0 :\n    ('custom_user', '/extensions/CustomUser'),  # Remplacez \"/extensions/CustomUser\" par le chemin complet de la m\u00e9thode GET pour votre classe d'extension personnalis\u00e9e, e.g., \"http://localhost:8080/xwiki-1.5.2/rest/user?method=get&id={userId}\"\n]\n```\n\nEn suivant ces \u00e9tapes, vous devriez pouvoir afficher et mapper des champs de profil utilisateur suppl\u00e9mentaires du fournisseur OpenID Connect aux propri\u00e9t\u00e9s d'utilisateur XWiki.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "#-# The authentication management class.  \nxwiki.authentication.authclass=org.xwiki.contrib.oidc.auth.OIDCAuthServiceImpl### xwiki.properties\n\n#-# The base URL of the OpenId Connect Provider to use as starting point to discover the provider configuration.  \n#-# See following endpoints properties if the provider is does not support OpenID Connect discovery.  \n#-# If not indicated and not custom endpoint is provided, it will be asked to the user.  \n# oidc.provider=https://xwikiorg-node1.xwikisas.com/xwiki/oidc  \n  \n#-# The generic OpenId Connect endpoints to use to communicate with the provider.  \n#-# It&#x27;s generally not needed when providing the provider discovery endpoint (which is supposed to provide those enpoints).  \n# oidc.endpoint.authorization=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/authorization  \n# oidc.endpoint.token=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/token  \n# oidc.endpoint.userinfo=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/userinfo  \n# oidc.endpoint.logout=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/logout  \n  \n#-# It&#x27;s possible to add custom HTTP headers to the endpoint (generally only needed for bad or non-oidc providers)  \n#-# by adding the suffix &quot;.headers&quot; to the endpoint property key and listing the custom headers using key:value format.  \n#-# Note that it&#x27;s not taken into account for the oidc.endpoint.authorization endpoint because it&#x27;s used as a redirect.  \n#-# Here is an example to send &quot;Accept: application/json&quot; and &quot;SomeOtherHeader: header&quot; HTTP headers with the userinfo request.  \n# oidc.endpoint.userinfo.headers=Accept:application/json  \n# oidc.endpoint.userinfo.headers=SomeOtherHeader:header value  \n  \n#-# The scopes to use when redirecting to the provider  \n#-# The standard OpenID Connection scopes are:  \n#-# \\* openid: Informs the authorisation server that the client is making an OpenID Connect request (REQUIRED).  \n",
      "similarity_score": 13.729754447937012,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.AdminGuide.Authentication.WebHome",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/",
      "content": "## Container Authentication\n\nDelegates authentication to the Servlet Container. If it fails it falls back to the standard XWiki authentication.\n\nTo configure XWiki to use it, specify:\n\nxwiki.authentication.authclass=com.xpn.xwiki.user.impl.xwiki.AppServerTrustedAuthServiceImplFor users to be actually created and not just set as context user you must set in xwiki.cfg configuration file (if the property does not already exist, create it):\n\nxwiki.authentication.createuser=empty## OpenId Connect Authentication\n\nSee the [OpenId Connect Authenticator Extension](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/).\n\n## Active Directory\n\nIf you&#x27;re looking to connect XWiki to an Active Directory server, you currently have 2 options:\n\n* Using the manual and generic approach using the [LDAP Authenticator extension](https://extensions.xwiki.org/xwiki/bin/view/Extension/LDAP/Authenticator/)\n* Using the dedicated [Active Directory Application](https://store.xwiki.com/xwiki/bin/view/Extension/ActiveDirectoryApplication) which is a paying application dedicated to simplifying the integration of Active Directory with XWiki. The Active Directory Application allows you to easily connect your Active Directory server to XWiki using a **visual editor**, update\u00a0**advanced configuration** settings without restarting the application server, **technical support** provided by [XWiki SAS](https://xwiki.com/), etc.\n\n## LDAP\n\nSee the [LDAP Authenticator extension](https://extensions.xwiki.org/xwiki/bin/view/Extension/LDAP/Authenticator/).\n\nThe deprecated LDAP core authenticator (for XWiki &lt; 7.4) can be found on [OldLDAPAuthenticator](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/OldLDAPAuthenticator/).\n\n",
      "similarity_score": 13.373527526855469,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "\n\n\n| openid_connect_16x16.png | **Allow an XWiki instance to authenticate on an OpenID Connect provider** |\n| --- | --- |\n\n**Recommended**\n\n| Type | JAR |\n| --- | --- |\n| Category | Authenticator |\n| Developed by | [Thomas Mortagne](https://xwiki.org/xwiki/bin/view/XWiki/ThomasMortagne) |\n| Active Installs | 146 |\n| Rating | *  * [1](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Poor&quot;) * [2](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Satisfactory&quot;) * [3](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Good&quot;) * [4](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Very good&quot;) * [5](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Excellent&quot;)    1\u00a0Votes |\n| License | GNU Lesser General Public License 2.1 |\n\n\n\n| Compatibility | XWiki 14.10+ is required. |\n| --- | --- |\n\n**Installable with the Extension Manager**\n\n[Download v2.8.6](https://extensions.xwiki.org/xwiki/rest/repository/extensions/org.xwiki.contrib.oidc%3Aoidc-authenticator/versions/2.8.6/file?rid=maven-xwiki)[Sources](https://github.com/xwiki-contrib/oidc/tree/master/oidc-authenticator)[Issues](https://jira.xwiki.org/browse/OIDC)\n\nTable of contents\n\n",
      "similarity_score": 0.7464635372161865,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "# Dependencies\n\nDependencies for this extension (org.xwiki.contrib.oidc:oidc-authenticator 2.8.6):\n\n* org.xwiki.platform:xwiki-platform-oldcore 14.10\n* com.nimbusds:oauth2-oidc-sdk 11.10.1\n* [org.xwiki.contrib.oidc:oidc-provider](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Provider/) 2.8.6\n* org.xwiki.contrib.oidc:oidc-authenticator-configuration 2.8.6\n* org.xwiki.contrib.oidc:oidc-authenticator-user 2.8.6\n\n\n",
      "similarity_score": 0.7395156621932983,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "* [Prerequisites &amp; Installation Instructions](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HPrerequisites26InstallationInstructions)\n* [Dependencies](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HDependencies)\n# Description\n\nAllow an XWiki instance to authenticate on an OpenId Connect provider. It also performs automatic synchronization.\n\nSee also [OpenID Connect Provider](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Provider/).\n\n![oidc_client_provider.png](https://extensions.xwiki.org/xwiki/bin/download/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/WebHome/oidc_client_provider.png?rev=1.1)\n\nRelease notes can be found on [OpenID Connect project page](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/#HReleaseNotes).\n\n# Main limitations\n\n* [Automatically authenticate user when coming back](https://jira.xwiki.org/browse/OIDC-16)\n\n# Configuration\n\n## Configuration Guides for specific systems\n\n### Lemon LDAP / Open PAAS\n\nA [configuration guide](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ConfigurationLemonLDAP/) is available to connect XWiki to LemonLDAP / OpenPAAS using the OpenIDC XWiki client.\n\n### OpenID Authentication with Keycloak\n\nA [configuration example for Keycloak](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20Keycloak/) is available.\n\n### Univention Corporate Server\n\nA [configuration example for Univention Corporate Server (UCS)](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20UCS/) is available.\n\n## Configuration files\n\n### xwiki.cfg\n\n",
      "similarity_score": 0.7291595339775085,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 89,
    "completion_tokens": 1203,
    "total_tokens": 1292
  },
  "average_power_draw": 216.3286405228758,
  "energy_consumption": 1213.496680424606,
  "energy_per_input_token": 0.39189300191332344,
  "energy_per_output_token": 0.9797325047833085,
  "energy_per_total_token": 0.9392389167373111
}