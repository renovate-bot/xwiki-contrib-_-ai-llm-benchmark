{
  "id": "qa_008",
  "prompt": "How can I ensure that only images or PDF files of at maximum 10MB can be uploaded as attachments on the whole wiki?",
  "expected_answer": "To ensure that only images or PDF files of at maximum 10MB can be uploaded as attachments on the whole wiki, follow these steps:\n\n**Step 1: Configure allowed mimetypes**\n\nEdit the `xwiki.properties` configuration file in your installation and add or update the following line to configure the default mimetype restrictions at farm level:\n```\nattachment.upload.allowList=image/*,application/pdf\n```\nThis will allow only image files (with any subtype, e.g., `image/jpeg`, `image/png`, etc.) and PDF files to be uploaded, and block all other mimetypes.\n\n**Step 2: Configure maximum attachment size**\n\nTo set the maximum attachment size to 10MB, follow these steps:\n\n1. Go to `http://<yourwiki>/xwiki/bin/edit/XWiki/XWikiPreferences?editor=object`\n2. Click on the line that says XWikiPreferences 0 (right below the line that says Objects of type XWiki.XWikiPreferences (1))\n3. Scroll down to the field that says Maximum Upload Size and change the number to `10485760` (10MB in bytes)\n4. Scroll to the bottom and click \"Save\"\n5. Repeat for each (sub)wiki for which you need to set this configuration!",
  "ai_answer": "https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments \nhttps://extensions.xwiki.org/xwiki/bin/view/Extension/Attachment/Validation/UI/ \nhttps://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/Attachments \n\n\n To restrict file uploads to only images and PDF files with a maximum size of 10MB on the entire wiki, you would need to implement a custom validator for file attachments. This is not directly supported by XWiki's Attachment feature, so some programming effort will be required.\n\nHere's an outline of how you can achieve this:\n\n1. Create a new XWiki extension that contains your custom validator. You can create the extension using the [XWiki Extension Manager](https://extensions.xwiki.org/xwiki/bin/view/Extension/Extension%20Manager%20Application) or manually by following the instructions in the [XWiki Development Guide](https://extensions.xwiki.org/xwiki/bin/view/Extension/).\n2. In your custom extension, create a new XObject to store the upload settings (maximum file size and allowed file types). You can do this using the `hierarchy` API. For example:\n```java\nimport org.xwiki.model.reference.DocumentReference;\nimport org.xwiki.model.reference.LocalDocumentReference;\nimport com.xpn.xwiki.XWikiContext;\nimport com.xpn.xwiki.doc.XWikiDocument;\nimport org.xwiki.objects.BaseObject;\n\npublic class AttachmentSettings {\n    public static final String ATTACHMENT_SETTINGS_CLASSNAME = \"AttachmentSettings\";\n    public static final String ALLOWED_FILE_TYPES_FIELD = \"allowedFileTypes\";\n    public static final String MAX_FILE_SIZE_FIELD = \"maxFileSizeInBytes\";\n\n    public static void setAllowedFileTypes(XWikiContext context, DocumentReference docRef, String fileTypes) throws Exception {\n        XWikiDocument doc = context.getWiki().getDocument(docRef, context);\n        BaseObject obj = doc.getXObject(AttachmentSettings.ATTACHMENT_SETTINGS_CLASSNAME);\n        if (obj == null) {\n            obj = doc.newXObject(AttachmentSettings.ATTACHMENT_SETTINGS_CLASSNAME);\n        }\n        obj.set(AttachmentSettings.ALLOWED_FILE_TYPES_FIELD, fileTypes);\n        doc.save(context);\n    }\n\n    public static void setMaxFileSizeBytes(XWikiContext context, DocumentReference docRef, long maxFileSize) throws Exception {\n        XWikiDocument doc = context.getWiki().getDocument(docRef, context);\n        BaseObject obj = doc.getXObject(AttachmentSettings.ATTACHMENT_SETTINGS_CLASSNAME);\n        if (obj == null) {\n            obj = doc.newXObject(AttachmentSettings.ATTACHMENT_SETTINGS_CLASSNAME);\n        }\n        obj.set(AttachmentSettings.MAX_FILE_SIZE_FIELD, maxFileSize);\n        doc.save(context);\n    }\n\n    public static String getAllowedFileTypes(XWikiContext context, DocumentReference docRef) throws Exception {\n        XWikiDocument doc = context.getWiki().getDocument(docRef, context);\n        BaseObject obj = doc.getXObject(AttachmentSettings.ATTACHMENT_SETTINGS_CLASSNAME);\n        return (obj != null) ? obj.getStringValue(AttachmentSettings.ALLOWED_FILE_TYPES_FIELD) : \"\";\n    }\n\n    public static long getMaxFileSizeBytes(XWikiContext context, DocumentReference docRef) throws Exception {\n        XWikiDocument doc = context.getWiki().getDocument(docRef, context);\n        BaseObject obj = doc.getXObject(AttachmentSettings.ATTACHMENT_SETTINGS_CLASSNAME);\n        return (obj != null) ? obj.getLongValue(AttachmentSettings.MAX_FILE_SIZE_FIELD) : Long.MIN_VALUE;\n    }\n}\n```\n1. Implement a custom attachment validator that checks the uploaded file against the allowed file types and maximum size limits stored in the XObject created in step 2. Here's an example using a ServletFilter:\n```java\nimport org.xwiki.component.annotation.Component;\nimport com.xpn.xwiki.XWikiContext;\nimport com.xpn.xwiki.user.api.XWikiUser;\nimport com.xpn.xwiki.web.Utils;\nimport com.xpn.xwiki.XWikiException;\nimport org.xwiki.model.reference.DocumentReference;\nimport org.xwiki.context.ContextGetterInterface;\nimport org.xwiki.rendering.syntax.Syntax;\nimport org.xwiki.rendering.internal.renderer.util.RenderingUtils;\nimport com.xpn.xwiki.doc.XWikiAttachment;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport javax.servlet.*;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\n@Component(\"attachmentValidator\")\npublic class AttachmentValidatorFilter implements Filter {\n\n    private static final String ALLOWED_FILE_TYPES = \"allowedFileTypes\";\n    private static final String MAX_FILE_SIZE = \"maxFileSizeBytes\";\n    private static final int MB = 1024 * 1024;\n\n    @Override\n    public void init(FilterConfig filterConfig) {\n        // Not used.\n    }\n\n    @Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        XWikiContext context = Utils.getXWikiContext((HttpServletRequest) request);\n        if (context == null || context.getUser() == null) {\n            throw new IOException(\"Invalid context or user.\");\n        }\n\n        boolean isValidFile = true;\n\n        DocumentReference spaceRef = ((XWikiUser) context.getUser()).getSpace();\n        String allowedTypes = AttachmentSettings.getAllowedFileTypes(context, spaceRef);\n        long maxSizeBytes = AttachmentSettings.getMaxFileSizeBytes(context, spaceRef);\n\n        // Only check the uploaded file if it is not a thumbnail image.\n        String requestURI = ((HttpServletRequest) request).getRequestURI();\n        if (!requestURI.endsWith(\".png\") && !requestURI.endsWith(\".jpg\")) {\n            ServletInputStream inputStream = request.getInputStream();\n            byte[] fileData = inputStream.readAllBytes();\n            String fileName = ((HttpServletRequest) request).getHeader(\"X-File-Name\");\n\n            if (maxSizeBytes >= 0 && maxSizeBytes < fileData.length) {\n                context.getResponse().sendError(HttpServletResponse.SC_BAD_REQUEST, \"File size is too large.\");\n                isValidFile = false;\n            }\n\n            String[] allowedTypesArray = allowedTypes.split(\"\\\\|\");\n            boolean isAllowedFileType = false;\n            for (String type : allowedTypesArray) {\n                if (fileName.endsWith(type)) {\n                    isAllowedFileType = true;\n                    break;\n                }\n            }\n\n            if (!isAllowedFileType) {\n                context.getResponse().sendError(HttpServletResponse.SC_BAD_REQUEST, \"File type is not allowed.\");\n                isValidFile = false;\n            }\n        }\n\n        if (isValidFile) {\n            chain.doFilter(request, response);\n        }\n    }\n\n    @Override\n    public void destroy() {\n        // Not used.\n    }\n}\n```\n1. Register the custom attachment validator filter as a component in your XWiki extension's `META-INF/xwiki/core.xml` file:\n```xml\n<component type=\"javax.servlet.Filter\">\n  <interface>javax.servlet.Filter</interface>\n  <role>attachmentValidator</role>\n  <implementation>com.example.AttachmentValidatorFilter</implementation>\n  <parameters>\n    <parameter name=\"name\" value=\"AttachmentValidator\"/>\n    <parameter name=\"servlet-names\">\n      <!-- Specify the servlet names to filter, for example: -->\n      <array>\n        <value>xwiki.attachment.upload</value>\n      </array>\n    </parameter>\n  </parameters>\n</component>\n```\n1. Once your custom attachment validator is in place, you can configure the allowed file types and maximum file size by setting the `AttachmentSettings` XObject for a specific wiki space or globally. Here's an example:\n```java\nimport com.xpn.xwiki.XWikiContext;\nimport org.xwiki.context.ContextManager;\nimport org.xwiki.model.reference.DocumentReference;\nimport java.util.List;\nimport org.xwiki.rendering.syntax.SyntaxFactory;\n\npublic void setAllowedFileTypes(String spaceName, List<String> fileExtensions) throws Exception {\n    ContextManager contextManager = getContextManager();\n    try (XWikiContext xContext = contextManager.cloneContext()) {\n        xContext.setWikiId(\"xwiki\");\n        Syntax syntax = new SyntaxFactory().createSyntax(Syntax.XWIKI_2_0);\n        RenderingUtils.getXDoc(xContext, \"Main\", syntax).newObject(spaceName, \"AttachmentSettingsClass\").addValue(\"allowedFileTypes\", String.join(\"|\", fileExtensions));\n    }\n}\n```\n1. After your custom attachment validator filter is in place, any attempts to upload a file with an invalid type or exceeding the maximum file size will result in a `400 Bad Request` error response.\n\nPlease note that this example implementation assumes some familiarity with Java and XWiki development. If you are not familiar with these topics, it may be helpful to review the [XWiki Development Guide](https://extensions.xwiki.org/xwiki/bin/view/ExtensionDev/WebHome) before attempting to implement a custom attachment validator filter. Additionally, this example is provided \"as-is\" and should not be considered production-ready code without proper testing and validation in your specific environment.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.AdminGuide.Attachments",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments",
      "content": "Attachments can be uploaded either through the regular [upload action](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/Attachments), [WebDAV](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/WebDAV), [XML-RPC](https://extensions.xwiki.org/xwiki/bin/view/Extension/XML-RPC%20Integration) or [Rest](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/XWikiRESTfulAPI).  \nAs an administrator you can set limits on the maximum size of an attachment and where the attachments will be stored.\n\n# Size Limit\n\nThe maximum size of an attachment is limited by a configuration parameter in the *XWikiPreferences* document. It is set to 100GB by default (32MB for XWiki &lt; 10.9RC1).  \nTo change it follow these steps:\n\n1. Go to *http://&lt;yourwiki&gt;/xwiki/bin/edit/XWiki/XWikiPreferences?editor=object*\n2. Click on the line that says XWikiPreferences 0 (right below the line that says Objects of type XWiki.XWikiPreferences (1))\n3. Scroll down to the field that says Maximum Upload Size and change the number to whatever size you want (it is expressed in bytes)\n4. Scroll to the bottom and click &quot;Save&quot;\n5. Repeat for each (sub)wiki for which you need to increase the size, since currrently this configuration has to be set per wiki\n\nNote that if you&#x27;ve already tried to attach a file and it failed, in order for the new size setting to be taken into account you might need to clear your browser&#x27;s cache.\n\n# Mimetype Restriction\n\nSee [Attachent Validation Application](https://extensions.xwiki.org/xwiki/bin/view/Extension/Attachment/Validation/UI/).\n\n",
      "similarity_score": 0.8780444860458374,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.AdminGuide.Attachments",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments",
      "content": "# Attachment display or download\n\nWhen possible (see [Security section](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HSecurity) below) attachments are displayed directly in the browser when accessed.  \nIt is possible for developers to force-downloading an attachment by adding the parameter ?force-download=1 in the attachment URL.\u00a0\n\nXWiki 12.10+\u00a0it&#x27;s possible to use a dedicated property in xwiki.properties to always force some attachment mime-types to be downloaded:\n\n#-# [Since 12.10]  \n#-# Define the kind of attachment that you always want to be downloaded and never displayed inline.  \n#-# By default this list is empty, but you can specify a list of mime-types (coma separated list of values) which  \n#-# should be always downloaded no matter who attached them or what is the whitelist/blacklist configuration.  \n#-#  \n#-# The distinction with the blacklist configuration above is that the blacklist won&#x27;t affect file attached by a user  \n#-# with programming rights, while this configuration affect any attachment.  \n# attachment.download.forceDownload=\n\n# Upload summary\n\nXWiki 16.3.0+\u00a0You can enable upload summaries in xwiki.properties to let users add descriptions during attachment uploads.\n\n#-# [Since 16.3.0RC1]  \n#-# Indicate whether or not comments for attachment uploads should be settable from UI, and displayed whenever the  \n#-# attachment revisions are listed. The default is false.  \n# attachment.upload.enableComments=false\n\n# Security\n\nIn order to prevent attacks by using attachments, it&#x27;s possible to control which attachments&#x27; can be directly opened on the browser based on their mimetypes.  \nTwo properties in xwiki.properties allow to control that independently:\n\n#-# [Since 5.2M2]  \n#-# Define the kind of attachment that can be displayed inline. You can either choose to do it through a whitelist  \n",
      "similarity_score": 0.8054109215736389,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.AdminGuide.Attachments",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments",
      "content": "# Versions\n\nWhen a user uploads an attachment and then uploads another attachment with the exact same name, you can decide whether or not to keep a version history of the attachments like you do with documents.  \nXWiki stores all document attachment versions by default which costs more storage space. If you need only latest versions of attachments, you can disable attachment version control by editing your [xwiki.cfg](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Configuration/) and adding:\n\nxwiki.store.attachment.versioning=0# Deletion\n\nDeleted attachments are stored in a recycle bin so that they can be restored along with the document when rolling back or previewing an earlier version where the attachment should be visible. To disable this feature, edit [xwiki.cfg](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Configuration/) and add:\n\nstorage.attachment.recyclebin=0You can view the list of deleted attachments in your wiki and delete them permanently by going to XWiki.DeletedAttachments in your wiki.\n\n# Attachment Storage\n\nXWiki offers plugin attachment storage mechanisms so you can store your attachments in the database or directly in the filesystem.\n\nGenerally metadata for attachment and deleted attachments stay in the database whatever store is used for the content. The metadata contains the type of store used for the content allowing each attachment to choose a different store. The consequence is that what you configure is the **default** store for a new attachment and not the store used for all attachments.\n\n",
      "similarity_score": 0.7865777611732483,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.Attachment.Validation.UI.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/Attachment/Validation/UI/",
      "content": "# Javascript\n\nAn new event is triggered when an attachment is uploaded: xwiki:actions:beforeUpload. An object with a single file key is passed along the event, giving access to the file that must be validated.  \nA listener can mark the attachment as invalid by calling event.preventDefault().\n\nThe example below is a validator that always block the upload of any attachment, and display an error message after each upload.\n\n$(document).on(&#x27;xwiki:actions:beforeUpload&#x27;, function (event, data) {  \n \u00a0new XWiki.widgets.Notification(&quot;Upload nothing&quot;, &quot;error&quot;);  \n\u00a0\u00a0event.preventDefault();  \n})# Prerequisites &amp; Installation Instructions\n\nWe recommend using the [Extension Manager](http://extensions.xwiki.org/xwiki/bin/view/Extension/Extension+Manager+Application) to install this extension (Make sure that the text &quot;Installable with the Extension Manager&quot; is displayed at the top right location on this page to know if this extension can be installed with the Extension Manager). Note that installing Extensions when being offline is currently not supported and you&#x27;d need to use some [complex manual method](https://xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Installation/#HOthermethods).\n\nYou can also use the following manual method, which is useful if this extension cannot be installed with the Extension Manager or if you&#x27;re using an old version of XWiki that doesn&#x27;t have the Extension Manager:\n\n1. Log in the wiki with a user having Administration rights\n2. Go to the Administration page and select the Import category\n3. Follow the on-screen instructions to upload the downloaded XAR\n4. Click on the uploaded XAR and follow the instructions\n5. You&#x27;ll also need to install all [dependent Extensions](https://extensions.xwiki.org/xwiki/bin/view/Extension/Attachment/Validation/UI/#HDependencies) that are not already installed in your wiki\n\n",
      "similarity_score": 0.7796778678894043,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.UserGuide.Features.Attachments",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/Attachments",
      "content": "## Using the top level menu\n\nYou can add an attachment using the &quot;More actions&quot; menu:\n\n![AddAttachmentsFlamingo.png](https://www.xwiki.org/xwiki/bin/download/Documentation/UserGuide/Features/Attachments/AddAttachmentsFlamingo.png?rev=1.6)\n\nWhen clicked, it&#x27;ll direct you to the Attachments tab located at the bottom of the page:\n\n![view-attachments.png](https://www.xwiki.org/xwiki/bin/download/Documentation/UserGuide/Features/Attachments/view-attachments.png?rev=1.10)\n\n## Using the attachment tab at the bottom of the page\n\nView the page on which you wish to attach a file and then click on the &quot;Attachments&quot; tab at the bottom of the page.\n\n![attachments.png](https://www.xwiki.org/xwiki/bin/download/Documentation/UserGuide/Features/Attachments/attachments.png?rev=1.7)\n\nNote that the file selector that appears allows you to select as many files as you wish to upload. Thus you don&#x27;t need to add attachments one by one.\n\nUse the arrows in the upper right corner to navigate to uploaded files.\n\n## Using the WYSIWYG editor\n\nEdit the page on which you wish to attach a file using the WYSIWYG editor. To link a specific text with an attachment click on &quot;Link&quot; in the toolbar. From the arrow change Page to Attachment or click on Upload to add a new file directly.\n\nTo add an image directly in the page click on &quot;Image&quot; and select an existing one from the wiki or click on Upload and add a new image from your computer.\n\n![AttachmentWysiwygToucan.png](https://www.xwiki.org/xwiki/bin/download/Documentation/UserGuide/Features/Attachments/AttachmentWysiwygToucan.png?rev=1.1)\n\n",
      "similarity_score": 0.7760909795761108,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 1022,
    "completion_tokens": 2340,
    "total_tokens": 3362
  },
  "average_power_draw": 68.86449948021784,
  "energy_consumption": 11250.592314600535,
  "energy_per_input_token": 1.6371641901339544,
  "energy_per_output_token": 4.092910475334886,
  "energy_per_total_token": 3.3463986658538176
}