{
  "id": "qa_016",
  "prompt": "Kann ich die Benutzerprofilfelder, die aus dem OpenID Connect-Anbieter in XWiki gef\u00fcllt werden, anpassen?\nIch m\u00f6chte zus\u00e4tzliche Benutzerprofilfelder von meinem OpenID Connect-Anbieter an XWiki-Benutzereigenschaften abbilden. Wie kann ich das erreichen?",
  "expected_answer": "Ja, Sie k\u00f6nnen die Benutzerprofilfelder, die aus dem OpenID Connect-Anbieter gef\u00fcllt werden, anpassen, indem Sie sie in der Datei `xwiki.properties` abbilden.\n\nUm zus\u00e4tzliche Benutzerprofilfelder abzubilden, verwenden Sie die Eigenschaft `oidc.user.mapping`. Hier ist ein Beispiel, wie Sie benutzerdefinierte Eigenschaften abbilden k\u00f6nnen:\n\n```\n# oidc.user.mapping=myxproperty1=${oidc.user.subject}\n# oidc.user.mapping=myxproperty2=myprefix-${oidc.user.subject}\n```\n\nErsetzen Sie `myxproperty1` und `myxproperty2` durch die tats\u00e4chlichen XWiki-Benutzereigenschaftennamen und `${oidc.user.subject}` durch die entsprechende Variable basierend auf den Daten, die von Ihrem OpenID Connect-Anbieter bereitgestellt werden.\n\nNachdem Sie die Zuordnungen konfiguriert haben, speichern Sie die Datei `xwiki.properties` und starten Sie XWiki neu, um die \u00c4nderungen anzuwenden.",
  "ai_answer": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \nhttps://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/ScalabilityPerformance \n\n\nLeider nein, die Benutzerprofilfelder, die aus dem OpenID Connect-Anbieter in Xwiki gef\u00fcllt werden, k\u00f6nnen nicht direkt angepasst werden.\n\nDie Benutzerinformationen, die von einem OpenID Connect-Anbieter an XWiki \u00fcbertragen werden, sind durch den Anbieter festgelegt und k\u00f6nnen nicht bearbeitet werden. Wenn du jedoch zus\u00e4tzliche Benutzerprofilfelder ben\u00f6tigst, kannst du diese in deiner Xwiki-Instanz separat pflegen.\n\nDu kannst die folgende Methode verwenden:\n\n1.  Erstelle ein neues Feld in der Benutzereigenschaften-Konfiguration von XWiki.\n2.  F\u00fcge diesem Feld den Wert aus dem OpenID Connect-Anbieter hinzu, indem du eine Funktion schreibst, die den entsprechenden Wert aus dem OpenID Connect-Provider liest.\n\nHier ist ein Beispiel:\n\n*   Erstelle ein neues Feld namens `openidconnect\\_extended\\_profile` in der Benutzereigenschaften-Konfiguration.\n*   Schreibe eine Funktion in Java, die den Wert aus dem OpenID Connect-Anbieter liest und diesem neuen Feld zuweist.\n\nHier ist ein Beispiel f\u00fcr einen solchen Funktionsaufruf:\n\n```java\nimport org.xwiki.component.manager.ComponentManager;\nimport org.xwiki.component.phase.InitializationException;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class OpenidConnectExtendedProfileJob implements Job {\n\n    @Override\n    public void execute(ComponentManager componentManager) throws InitializationException {\n        // Hier wird der Wert aus dem OpenID Connect-Anbieter gelesen und in das Feld 'openidconnect_extended_profile' eingetragen\n\n        Map<String, String> profile = new HashMap<>();\n        // hier wird der Wert aus dem OpenID Connect-Anbieter gelesen\n        profile.put(\"extendedprofile\", \"wertausopenidconnectanbieter\");\n\n        UserProfile userProfile = componentManager.getInstance(UserProfile.class);\n        userProfile.setProperty(\"openidconnect_extended_profile\", profile.get(\"extendedprofile\"));\n    }\n}\n```\n\nDies ist nur ein Beispiel, um Ihnen eine Idee zu geben, wie Sie dies erreichen k\u00f6nnen. Sie m\u00fcssen die Funktion anpassen, um sie Ihren Bed\u00fcrfnissen anzupassen.\n\nEs gibt auch andere M\u00f6glichkeiten, dies zu erreichen, z.B. indem Sie eine eigene Implementierung der Benutzereigenschaften-Klasse erstellen und diese in Ihrer Xwiki-Instanz einsetzen.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "## Authentication with a domain-based instance\n\nWhen XWiki is configured as a domain-based instance, users will not be automatically authenticated on every wiki by default, as the OIDC authenticator does not rely on the property xwiki.authentication.cookiedomains in xwiki.cfg.\n\nTo still allow users to be automatically authenticated when accessing one of the wikis of the farm, you will have to update the configuration of the session cookie of your servlet container so that this cookie gets set on a top-level domain, encompassing every wiki of farm. If your XWiki instance has very different domains for its wikis, this fix will not work.\n\nWhen using Tomcat as a servlet container, it&#x27;s possible to change the domain of the cookie JSESSIONID by adding the attribute sessionCookieDomain to context.xml as such :\n\n&lt;Context sessionCookieDomain=&quot;mytld.org&quot;&gt;  \n...  \n&lt;/Context&gt;# Endpoints\n\n## Callback\n\npath: **authenticator/callback**\n\n## [Back-Channel Logout](https://openid.net/specs/openid-connect-backchannel-1_0.html)\n\npath: **authenticator/backchannel\\_logout**\n\n# Bypass OpenID Connect\n\nAs indicated in the previous section you can disable OpenID Connect using the property oidc.skipped in the xwiki.properties file.\n\nIt&#x27;s also possible to skip OpenId Connect temporarily using a URL parameter: for example https://mydomain/xwiki/bin/view/Main/?oidc.skipped=true.\n\n",
      "similarity_score": 0.825881838798523,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "* [Prerequisites &amp; Installation Instructions](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HPrerequisites26InstallationInstructions)\n* [Dependencies](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HDependencies)\n# Description\n\nAllow an XWiki instance to authenticate on an OpenId Connect provider. It also performs automatic synchronization.\n\nSee also [OpenID Connect Provider](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Provider/).\n\n![oidc_client_provider.png](https://extensions.xwiki.org/xwiki/bin/download/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/WebHome/oidc_client_provider.png?rev=1.1)\n\nRelease notes can be found on [OpenID Connect project page](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/#HReleaseNotes).\n\n# Main limitations\n\n* [Automatically authenticate user when coming back](https://jira.xwiki.org/browse/OIDC-16)\n\n# Configuration\n\n## Configuration Guides for specific systems\n\n### Lemon LDAP / Open PAAS\n\nA [configuration guide](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ConfigurationLemonLDAP/) is available to connect XWiki to LemonLDAP / OpenPAAS using the OpenIDC XWiki client.\n\n### OpenID Authentication with Keycloak\n\nA [configuration example for Keycloak](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20Keycloak/) is available.\n\n### Univention Corporate Server\n\nA [configuration example for Univention Corporate Server (UCS)](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20UCS/) is available.\n\n## Configuration files\n\n### xwiki.cfg\n\n",
      "similarity_score": 0.8160647749900818,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.UserGuide.Features.ScalabilityPerformance",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/ScalabilityPerformance",
      "content": "\nXWiki is written in Java/Java EE. As such it scales as well as Java scales.\n\n# Multi Tenancy\n\nXWiki supports the ability to run hundreds and even thousands of wikis on the same JVM (i.e. same webapp).\n\nSome examples:\n\n* [MyXWiki](http://myxwiki.org/xwiki/bin/view/Main/WebHome) currently hosts over 170 wikis on a single JVM\n* [XWiki SAS Cloud](http://network.xwiki.com) currently hosts 1000+ wikis (but on several JVMs)\n\nSee the tutorial on [how to configure multi-tenancy](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Virtualization) to learn more.\n\n# Clustering\n\nXWiki provides an easy way to setup clustered instances of XWiki based on network events distribution. Clustering allows for 2 use cases:\n\n* Load distribution on several JVMs\n* Failover since if a machine is down the other ones are still available\n\nSee [Clustering](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Clustering) for more details.\n\n\n",
      "similarity_score": 0.8064402341842651,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 1210,
    "completion_tokens": 524,
    "total_tokens": 1734
  },
  "average_power_draw": 130.282231534835,
  "energy_consumption": 1197.4722268758464,
  "energy_per_input_token": 0.4751873916173994,
  "energy_per_output_token": 1.1879684790434986,
  "energy_per_total_token": 0.6905837525235562
}