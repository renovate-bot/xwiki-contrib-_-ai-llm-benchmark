{
  "id": "qa_015",
  "prompt": "Wie kann ich XWiki so konfigurieren, dass Benutzerkonten bei der ersten Anmeldung mit OpenID Connect automatisch aktiviert werden?\nIch habe OpenID Connect-Authentifizierung in meiner XWiki-Instanz eingerichtet, aber Benutzer werden nach der ersten Anmeldung nicht automatisch aktiviert. Welche Konfiguration muss ich anpassen?",
  "expected_answer": "Um Benutzerkonten bei der ersten Anmeldung mit OpenID Connect in XWiki automatisch zu aktivieren, m\u00fcssen Sie die Datei `xwiki.properties` anpassen.\n\nF\u00fcgen Sie oder aktualisieren Sie die folgende Eigenschaft:\n\n```\n#-# Definiere, ob Benutzerkonten bei der ersten Anmeldung aktiviert (als aktiv markiert) werden sollen\n# oidc.enableUser=true\n```\n\nStellen Sie sicher, dass Sie die Eigenschaft `oidc.enableUser` entkommentieren und auf `true` setzen. Nach dieser \u00c4nderung speichern Sie die Datei und starten Sie Ihre XWiki-Instanz neu, damit die \u00c4nderungen wirksam werden.\n\nDadurch wird sichergestellt, dass neue Benutzerkonten automatisch aktiviert werden, wenn sie sich zum ersten Mal \u00fcber OpenID Connect anmelden.",
  "ai_answer": "Sources: https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \n\n\nUm eine automatische Meldung von Benutzern durch OpenID Connect auf Ihrer XWiki-Instanz zu erm\u00f6glichen, m\u00fcssen Sie die Einstellungen in der Datei xwiki.cfg wie folgt konfigurieren:\n\n1. Wenn Sie XWiki als einen domainbasierten Instanziierungskonfigurierst, wird nicht automatisch Benutzer auf jedem Wiki authentifiziert, da der OpenID Connect-Authentizit\u00e4tsagent die Eigenschaft xwiki.authentication.cookiedomains in xwiki.cfg anh\u00e4ngt. \n2. Um dennoch eine automatische Aktivierung beim ersten Login zu erm\u00f6glichen, m\u00fcssen Sie das Cookie-Verzeichnis Ihres Servlet-Containers so bearbeiten, dass dieses Cookie auf dem h\u00f6chstm\u00f6glichen Niveau gesetzt wird, um alle Wikis des Farms abzudecken. Bei unterschiedlichen Dom\u00e4nen f\u00fcr die einzelnen Wikis funktioniert diese L\u00f6sung nicht.\n3. Wenn Sie Tomcat als Servlet-Container verwenden, k\u00f6nnen Sie die Domain der Cookie JSESSIONID \u00e4ndern, indem Sie das Attribut sessionCookieDomain zu context.xml hinzuf\u00fcgen:\n\n'''XML\n<Context>\n    <sessionCookieDomain>mytld.org</sessionCookieDomain>  \n    ...\n</Context> # Endepunkte\n'''\n4. Um OpenID Connect vor\u00fcbergehend zu umgehen, k\u00f6nnen Sie die Eigenschaft oidc.skipped in der Datei xwiki.properties auf true setzen oder eine URL-Parameter wie https://mydomain/xwiki/bin/view/Main/?oidc.skipped=true verwenden.\n\nInsgesamt ist es wichtig zu beachten, dass Sie dies tun m\u00fcssen, wenn Ihr XWiki-Farm sehr unterschiedliche Dom\u00e4nen f\u00fcr seine Wikis verwendet und die Methode \"OpenID Connect\" nicht von Natur aus funktioniert, um Benutzer beim ersten Aufruf automatisch aufzul\u00f6sen.\n\nZus\u00e4tzlich k\u00f6nnen Sie den [Pr\u00e4missen & Installationsanweisungen](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HPrerequisites26InstallationInstructions) befolgen, die von Thomas Mortagne erstellt wurden und sich auf das [Lemon LDAP / Open PAAS](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ConfigurationLemonLDAP/), die Konfiguration mit Keycloak ([Installationshinweise f\u00fcr OpenID-Authentifizierung mit Keycloak](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20Keycloak/) und die Konfiguration mit Univention Corporate Server ([Installationshinweise f\u00fcr OpenID-Authentifizierung mit UCS](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20UCS/) auf der XWiki-Seite verf\u00fcgbar sind.\n\nDenken Sie daran, dass diese L\u00f6sung f\u00fcr eine xwiki 14.10+ erforderlich ist und mit dem Extensions Manager installiert werden kann (siehe [Download v2.8.6](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/Sources) und dass der Authentifizierungsagent unter dem Namen \"Thomas Mortagne\" mit einer *hervorragenden* Bewertung verf\u00fcgbar ist. Weitere Informationen finden Sie auf [JIRA](https://jira.xwiki.org/browse/OIDC).\n\nHinweis: Die Anzahl der aktiven Installationen betr\u00e4gt 146, und die Lizenz lautet auf GNU Lesser General Public License 2.1.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "## Authentication with a domain-based instance\n\nWhen XWiki is configured as a domain-based instance, users will not be automatically authenticated on every wiki by default, as the OIDC authenticator does not rely on the property xwiki.authentication.cookiedomains in xwiki.cfg.\n\nTo still allow users to be automatically authenticated when accessing one of the wikis of the farm, you will have to update the configuration of the session cookie of your servlet container so that this cookie gets set on a top-level domain, encompassing every wiki of farm. If your XWiki instance has very different domains for its wikis, this fix will not work.\n\nWhen using Tomcat as a servlet container, it&#x27;s possible to change the domain of the cookie JSESSIONID by adding the attribute sessionCookieDomain to context.xml as such :\n\n&lt;Context sessionCookieDomain=&quot;mytld.org&quot;&gt;  \n...  \n&lt;/Context&gt;# Endpoints\n\n## Callback\n\npath: **authenticator/callback**\n\n## [Back-Channel Logout](https://openid.net/specs/openid-connect-backchannel-1_0.html)\n\npath: **authenticator/backchannel\\_logout**\n\n# Bypass OpenID Connect\n\nAs indicated in the previous section you can disable OpenID Connect using the property oidc.skipped in the xwiki.properties file.\n\nIt&#x27;s also possible to skip OpenId Connect temporarily using a URL parameter: for example https://mydomain/xwiki/bin/view/Main/?oidc.skipped=true.\n\n",
      "similarity_score": 14.473694801330566,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "* [Prerequisites &amp; Installation Instructions](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HPrerequisites26InstallationInstructions)\n* [Dependencies](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HDependencies)\n# Description\n\nAllow an XWiki instance to authenticate on an OpenId Connect provider. It also performs automatic synchronization.\n\nSee also [OpenID Connect Provider](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Provider/).\n\n![oidc_client_provider.png](https://extensions.xwiki.org/xwiki/bin/download/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/WebHome/oidc_client_provider.png?rev=1.1)\n\nRelease notes can be found on [OpenID Connect project page](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/#HReleaseNotes).\n\n# Main limitations\n\n* [Automatically authenticate user when coming back](https://jira.xwiki.org/browse/OIDC-16)\n\n# Configuration\n\n## Configuration Guides for specific systems\n\n### Lemon LDAP / Open PAAS\n\nA [configuration guide](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ConfigurationLemonLDAP/) is available to connect XWiki to LemonLDAP / OpenPAAS using the OpenIDC XWiki client.\n\n### OpenID Authentication with Keycloak\n\nA [configuration example for Keycloak](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20Keycloak/) is available.\n\n### Univention Corporate Server\n\nA [configuration example for Univention Corporate Server (UCS)](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20UCS/) is available.\n\n## Configuration files\n\n### xwiki.cfg\n\n",
      "similarity_score": 0.7872090339660645,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "\n\n\n| openid_connect_16x16.png | **Allow an XWiki instance to authenticate on an OpenID Connect provider** |\n| --- | --- |\n\n**Recommended**\n\n| Type | JAR |\n| --- | --- |\n| Category | Authenticator |\n| Developed by | [Thomas Mortagne](https://xwiki.org/xwiki/bin/view/XWiki/ThomasMortagne) |\n| Active Installs | 146 |\n| Rating | *  * [1](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Poor&quot;) * [2](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Satisfactory&quot;) * [3](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Good&quot;) * [4](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Very good&quot;) * [5](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Excellent&quot;)    1\u00a0Votes |\n| License | GNU Lesser General Public License 2.1 |\n\n\n\n| Compatibility | XWiki 14.10+ is required. |\n| --- | --- |\n\n**Installable with the Extension Manager**\n\n[Download v2.8.6](https://extensions.xwiki.org/xwiki/rest/repository/extensions/org.xwiki.contrib.oidc%3Aoidc-authenticator/versions/2.8.6/file?rid=maven-xwiki)[Sources](https://github.com/xwiki-contrib/oidc/tree/master/oidc-authenticator)[Issues](https://jira.xwiki.org/browse/OIDC)\n\nTable of contents\n\n",
      "similarity_score": 0.7726105451583862,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "#-# The authentication management class.  \nxwiki.authentication.authclass=org.xwiki.contrib.oidc.auth.OIDCAuthServiceImpl### xwiki.properties\n\n#-# The base URL of the OpenId Connect Provider to use as starting point to discover the provider configuration.  \n#-# See following endpoints properties if the provider is does not support OpenID Connect discovery.  \n#-# If not indicated and not custom endpoint is provided, it will be asked to the user.  \n# oidc.provider=https://xwikiorg-node1.xwikisas.com/xwiki/oidc  \n  \n#-# The generic OpenId Connect endpoints to use to communicate with the provider.  \n#-# It&#x27;s generally not needed when providing the provider discovery endpoint (which is supposed to provide those enpoints).  \n# oidc.endpoint.authorization=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/authorization  \n# oidc.endpoint.token=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/token  \n# oidc.endpoint.userinfo=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/userinfo  \n# oidc.endpoint.logout=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/logout  \n  \n#-# It&#x27;s possible to add custom HTTP headers to the endpoint (generally only needed for bad or non-oidc providers)  \n#-# by adding the suffix &quot;.headers&quot; to the endpoint property key and listing the custom headers using key:value format.  \n#-# Note that it&#x27;s not taken into account for the oidc.endpoint.authorization endpoint because it&#x27;s used as a redirect.  \n#-# Here is an example to send &quot;Accept: application/json&quot; and &quot;SomeOtherHeader: header&quot; HTTP headers with the userinfo request.  \n# oidc.endpoint.userinfo.headers=Accept:application/json  \n# oidc.endpoint.userinfo.headers=SomeOtherHeader:header value  \n  \n#-# The scopes to use when redirecting to the provider  \n#-# The standard OpenID Connection scopes are:  \n#-# \\* openid: Informs the authorisation server that the client is making an OpenID Connect request (REQUIRED).  \n",
      "similarity_score": 0.765285849571228,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 2616,
    "completion_tokens": 980,
    "total_tokens": 3596
  },
  "average_power_draw": 255.82088383838362,
  "energy_consumption": 3768.3981304496674,
  "energy_per_input_token": 0.7438606653078695,
  "energy_per_output_token": 1.859651663269674,
  "energy_per_total_token": 1.047941638056081
}