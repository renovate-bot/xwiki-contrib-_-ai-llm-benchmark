{
  "id": "qa_015",
  "prompt": "Wie kann ich XWiki so konfigurieren, dass Benutzerkonten bei der ersten Anmeldung mit OpenID Connect automatisch aktiviert werden?\nIch habe OpenID Connect-Authentifizierung in meiner XWiki-Instanz eingerichtet, aber Benutzer werden nach der ersten Anmeldung nicht automatisch aktiviert. Welche Konfiguration muss ich anpassen?",
  "expected_answer": "Um Benutzerkonten bei der ersten Anmeldung mit OpenID Connect in XWiki automatisch zu aktivieren, m\u00fcssen Sie die Datei `xwiki.properties` anpassen.\n\nF\u00fcgen Sie oder aktualisieren Sie die folgende Eigenschaft:\n\n```\n#-# Definiere, ob Benutzerkonten bei der ersten Anmeldung aktiviert (als aktiv markiert) werden sollen\n# oidc.enableUser=true\n```\n\nStellen Sie sicher, dass Sie die Eigenschaft `oidc.enableUser` entkommentieren und auf `true` setzen. Nach dieser \u00c4nderung speichern Sie die Datei und starten Sie Ihre XWiki-Instanz neu, damit die \u00c4nderungen wirksam werden.\n\nDadurch wird sichergestellt, dass neue Benutzerkonten automatisch aktiviert werden, wenn sie sich zum ersten Mal \u00fcber OpenID Connect anmelden.",
  "ai_answer": "Sources: https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \n\n\nUm die automatische Aktivierung von Benutzerkonten bei OpenID Connect in der XWiki zu erreichen, m\u00fcssen Sie sicherstellen, dass Ihre XWiki-Instanz mit den erforderlichen Authentifizierungs- und Autorisierungsfunktionen konfiguriert ist. Im Folgenden finden Sie eine Schritt-f\u00fcr-Schritt-Anleitung zum Konfigurieren von XWiki f\u00fcr OpenID Connect:\n\n1. Installieren Sie die ben\u00f6tigten Komponenten f\u00fcr die OpenID Connect Authentifizierung in Ihrer XWiki-Instanz, falls diese noch nicht installiert sind. Dazu geh\u00f6ren unter anderem das Paket \"org.wso2.xwiki\" und ggfs. der spezifische Anbieterpaketname des von Ihnen verwendeten OpenID Connect Providers (z.B. Google oder Facebook).\n\n2. Lassen Sie sich die Konfigurationsdateien, z. B. \"auth-config.xml\" und \"security-config.xml\", in Ihrer XWiki-Instanz ansehen, um zu \u00fcberpr\u00fcfen, ob sie mit den Funktionen des OpenID Connect integrer werden k\u00f6nnen.\n\n3. Legen Sie die Einstellungen f\u00fcr die Authentifizierungsfunktion von OpenID Connect fest. In der Datei \"auth-config.xml\" m\u00fcssen Sie nach dem Abschnitt \"Provider\" <Connector> Ihren Anbieter hinzuf\u00fcgen und seine Konfiguration definieren (z.B. den OAuth2-Endpunkt, die erforderlichen Berechtigungen usw.).\n\n4. Legen Sie f\u00fcr jeden OpenID Connect Provider eine Zuordnung von Benutzernamen fest, indem Sie im Abschnitt \"openid2user\" des Anbieterkonfigurationsabschnitts <Connector> einen Eintrag mit dem Attribut 'name' hinzuf\u00fcgen und die entsprechenden Attribute wie \"<entry id=\"google-username\">\", \"<property name=\"username_key\" value=\"sub\"/>\" und \"<property name=\"email_keys\" value=\"eml\"></property>\" verwenden.\n\n5. Konfigurieren Sie den OpenID Connect Provider als standardm\u00e4\u00dfigen Authentifizierungskanal f\u00fcr die XWiki-Instanz, indem Sie im Abschnitt \"AuthorizationProvider\" des Anbieterkonfigurationsabschnitts <Connector> das Attribut 'defaultChannel' auf '<channel default=\"true\"/>' setzen.\n\n6. Lassen Sie sich die Dateien \"security-config.xml\" und \"accessControlConfiguration.xml\" in Ihrer XWiki-Instanz ansehen, um zu \u00fcberpr\u00fcfen, ob sie mit den Funktionen des OpenID Connect integrer werden k\u00f6nnen. Wenn dies nicht der Fall ist, m\u00fcssen Sie diese Konfigurationsdateien aktualisieren oder die ben\u00f6tigten Berechtigungen definieren.\n\n7. Um sicherzustellen, dass Benutzer automatisch bei ihrer ersten Anmeldung aktiviert werden (d. h., sie erhalten ein \"admin\"-Konto), m\u00fcssen Sie eine Skriptregel erstellen und an einem Aktivierungsereignis f\u00fcr Ihren OpenID Connect Provider platzieren. Dazu geh\u00f6ren unter anderem die Schritte:\n   - Erstellen eines benutzerdefinierten Skripteknotens im Abschnitt \"ScriptRules\" der Datei \"accessControlConfiguration.xml\".\n   - Definieren Sie einen Aktivierungsereignisablauf, bei dem ein neues Benutzerkonto mit den Funktionen von Admin erstellt und die entsprechenden Permissionsebenen zugewiesen werden.\n\n8. \u00dcberpr\u00fcfen Sie Ihre Konfiguration, indem Sie sie testen. Authentifizieren Sie sich als Testuser mit OpenID Connect auf der XWiki-Instanz und pr\u00fcfen Sie, ob das Benutzerkonto automatisch erstellt wurde und die entsprechenden Funktionen von Admin erhalten hat.\n\n9. Wenn alles wie gew\u00fcnscht funktioniert, k\u00f6nnen Sie diese Konfigurationen an Ihre Produktionsumgebung angepasst werden. Denken Sie daran, dass es sich bei dieser Anleitung um einen allgemeinen \u00dcberblick handelt und die genaue Syntax je nach dem von Ihnen verwendeten OpenID Connect Provider leicht variieren kann.\nBitte wenden Sie diese Anweisungen auf Ihre spezifische Umgebung an oder konsultieren Sie einen XWiki-Experten f\u00fcr eine ma\u00dfgeschneiderte L\u00f6sung.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "## Authentication with a domain-based instance\n\nWhen XWiki is configured as a domain-based instance, users will not be automatically authenticated on every wiki by default, as the OIDC authenticator does not rely on the property xwiki.authentication.cookiedomains in xwiki.cfg.\n\nTo still allow users to be automatically authenticated when accessing one of the wikis of the farm, you will have to update the configuration of the session cookie of your servlet container so that this cookie gets set on a top-level domain, encompassing every wiki of farm. If your XWiki instance has very different domains for its wikis, this fix will not work.\n\nWhen using Tomcat as a servlet container, it&#x27;s possible to change the domain of the cookie JSESSIONID by adding the attribute sessionCookieDomain to context.xml as such :\n\n&lt;Context sessionCookieDomain=&quot;mytld.org&quot;&gt;  \n...  \n&lt;/Context&gt;# Endpoints\n\n## Callback\n\npath: **authenticator/callback**\n\n## [Back-Channel Logout](https://openid.net/specs/openid-connect-backchannel-1_0.html)\n\npath: **authenticator/backchannel\\_logout**\n\n# Bypass OpenID Connect\n\nAs indicated in the previous section you can disable OpenID Connect using the property oidc.skipped in the xwiki.properties file.\n\nIt&#x27;s also possible to skip OpenId Connect temporarily using a URL parameter: for example https://mydomain/xwiki/bin/view/Main/?oidc.skipped=true.\n\n",
      "similarity_score": 14.473694801330566,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "* [Prerequisites &amp; Installation Instructions](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HPrerequisites26InstallationInstructions)\n* [Dependencies](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HDependencies)\n# Description\n\nAllow an XWiki instance to authenticate on an OpenId Connect provider. It also performs automatic synchronization.\n\nSee also [OpenID Connect Provider](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Provider/).\n\n![oidc_client_provider.png](https://extensions.xwiki.org/xwiki/bin/download/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/WebHome/oidc_client_provider.png?rev=1.1)\n\nRelease notes can be found on [OpenID Connect project page](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/#HReleaseNotes).\n\n# Main limitations\n\n* [Automatically authenticate user when coming back](https://jira.xwiki.org/browse/OIDC-16)\n\n# Configuration\n\n## Configuration Guides for specific systems\n\n### Lemon LDAP / Open PAAS\n\nA [configuration guide](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ConfigurationLemonLDAP/) is available to connect XWiki to LemonLDAP / OpenPAAS using the OpenIDC XWiki client.\n\n### OpenID Authentication with Keycloak\n\nA [configuration example for Keycloak](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20Keycloak/) is available.\n\n### Univention Corporate Server\n\nA [configuration example for Univention Corporate Server (UCS)](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20UCS/) is available.\n\n## Configuration files\n\n### xwiki.cfg\n\n",
      "similarity_score": 0.7872090339660645,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "\n\n\n| openid_connect_16x16.png | **Allow an XWiki instance to authenticate on an OpenID Connect provider** |\n| --- | --- |\n\n**Recommended**\n\n| Type | JAR |\n| --- | --- |\n| Category | Authenticator |\n| Developed by | [Thomas Mortagne](https://xwiki.org/xwiki/bin/view/XWiki/ThomasMortagne) |\n| Active Installs | 146 |\n| Rating | *  * [1](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Poor&quot;) * [2](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Satisfactory&quot;) * [3](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Good&quot;) * [4](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Very good&quot;) * [5](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ &quot;Excellent&quot;)    1\u00a0Votes |\n| License | GNU Lesser General Public License 2.1 |\n\n\n\n| Compatibility | XWiki 14.10+ is required. |\n| --- | --- |\n\n**Installable with the Extension Manager**\n\n[Download v2.8.6](https://extensions.xwiki.org/xwiki/rest/repository/extensions/org.xwiki.contrib.oidc%3Aoidc-authenticator/versions/2.8.6/file?rid=maven-xwiki)[Sources](https://github.com/xwiki-contrib/oidc/tree/master/oidc-authenticator)[Issues](https://jira.xwiki.org/browse/OIDC)\n\nTable of contents\n\n",
      "similarity_score": 0.7726105451583862,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "#-# The authentication management class.  \nxwiki.authentication.authclass=org.xwiki.contrib.oidc.auth.OIDCAuthServiceImpl### xwiki.properties\n\n#-# The base URL of the OpenId Connect Provider to use as starting point to discover the provider configuration.  \n#-# See following endpoints properties if the provider is does not support OpenID Connect discovery.  \n#-# If not indicated and not custom endpoint is provided, it will be asked to the user.  \n# oidc.provider=https://xwikiorg-node1.xwikisas.com/xwiki/oidc  \n  \n#-# The generic OpenId Connect endpoints to use to communicate with the provider.  \n#-# It&#x27;s generally not needed when providing the provider discovery endpoint (which is supposed to provide those enpoints).  \n# oidc.endpoint.authorization=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/authorization  \n# oidc.endpoint.token=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/token  \n# oidc.endpoint.userinfo=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/userinfo  \n# oidc.endpoint.logout=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/logout  \n  \n#-# It&#x27;s possible to add custom HTTP headers to the endpoint (generally only needed for bad or non-oidc providers)  \n#-# by adding the suffix &quot;.headers&quot; to the endpoint property key and listing the custom headers using key:value format.  \n#-# Note that it&#x27;s not taken into account for the oidc.endpoint.authorization endpoint because it&#x27;s used as a redirect.  \n#-# Here is an example to send &quot;Accept: application/json&quot; and &quot;SomeOtherHeader: header&quot; HTTP headers with the userinfo request.  \n# oidc.endpoint.userinfo.headers=Accept:application/json  \n# oidc.endpoint.userinfo.headers=SomeOtherHeader:header value  \n  \n#-# The scopes to use when redirecting to the provider  \n#-# The standard OpenID Connection scopes are:  \n#-# \\* openid: Informs the authorisation server that the client is making an OpenID Connect request (REQUIRED).  \n",
      "similarity_score": 0.765285849571228,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 98,
    "completion_tokens": 1019,
    "total_tokens": 1117
  },
  "average_power_draw": 261.22212045690554,
  "energy_consumption": 3089.205503262029,
  "energy_per_input_token": 1.167720847953895,
  "energy_per_output_token": 2.9193021198847378,
  "energy_per_total_token": 2.765627129151324
}