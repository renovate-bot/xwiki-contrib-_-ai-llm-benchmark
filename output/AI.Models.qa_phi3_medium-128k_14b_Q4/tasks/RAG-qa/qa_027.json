{
  "id": "qa_027",
  "prompt": "Comment configurer la synchronisation de groupe entre XWiki et mon fournisseur OpenID Connect?\nJ'utilise un fournisseur OpenID Connect qui prend en charge les revendications de groupe, et je souhaite synchroniser ces groupes avec les groupes XWiki. Quel est le processus pour le configurer?",
  "expected_answer": "Pour configurer la synchronisation de groupe entre XWiki et votre fournisseur OpenID Connect:\n1. Localisez le fichier `xwiki.properties` dans le r\u00e9pertoire d'installation de XWiki.\n2. Ouvrez le fichier avec un \u00e9diteur de texte.\n3. Configurez la synchronisation de groupe en d\u00e9finissant la propri\u00e9t\u00e9 `oidc.groups.claim` sur le nom de la revendication utilis\u00e9e par votre fournisseur OpenID Connect pour envoyer des informations de groupe. Par exemple:\n```java\n#-# Le nom de la revendication utilis\u00e9e pour obtenir la liste des groupes auxquels appartient l'utilisateur.\n# oidc.groups.claim=groupes\n```\nRemplacez `groupes` par le nom de revendication r\u00e9el fourni par votre fournisseur OpenID Connect.\n1. Si votre fournisseur OpenID Connect envoie des adh\u00e9sions de groupe en tant qu'attribut de valeur unique d\u00e9limit\u00e9 par un caract\u00e8re sp\u00e9cifique (par exemple, une virgule), configurez la propri\u00e9t\u00e9 `oidc.groups.separator` avec le caract\u00e8re appropri\u00e9:\n```java\n#-# Si le fournisseur d'identit\u00e9 renvoie des adh\u00e9sions de groupe en tant qu'attribut de valeur unique d\u00e9limit\u00e9 avec un caract\u00e8re, par exemple:\n# oidc.groups.separator=,\n```\nRemplacez la virgule par le s\u00e9parateur r\u00e9el utilis\u00e9 par votre fournisseur.\n1. Si vous souhaitez mapper les groupes synchronis\u00e9s \u00e0 des groupes XWiki sp\u00e9cifiques, configurez la propri\u00e9t\u00e9 `oidc.groups.mapping` avec les mappages appropri\u00e9s:\n```java\n# oidc.groups.mapping=XWiki.\"MyXWikiGroup\"=group1\n# oidc.groups.mapping=XWiki.\"MyXWikiGroup2\"=group2\n```\nRemplacez `MyXWikiGroup` et `MyXWikiGroup2` par les noms des groupes XWiki que vous souhaitez mapper, et `group1` et `group2` par les noms de groupe r\u00e9els fournis par votre fournisseur OpenID Connect.\n1. Enregistrez le fichier `xwiki.properties` et red\u00e9marrez votre instance XWiki pour que les modifications prennent effet.",
  "ai_answer": "Sources: https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \nhttps://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/ \n\n\nPour configurer la synchronisation des revendications OpenID avec les groupes d'un serveur XWiki utilisant un fournisseur OpenID Connect qui prend en charge les revendications de groupe, vous pouvez suivre les \u00e9tapes suivantes :\n\n1. Assurez-vous que votre serveur XWiki est install\u00e9 et configur\u00e9 avec le module XAuth2GroupPlugin activ\u00e9.\n\n'''xml\n<plugin name=\"XAuth2Group\" type=\"xwiki.wizard.plugins.authentication.XAuth2Group\">\n    <config>\n        <param key=\"groupSyncEnabled\" value=\"true\"/>\n    </param>\n</plugin>\n'''\n2. Configurez votre fournisseur OpenID Connect pour renvoyer des revendications de groupe en tant que parties du JSON Web Token (JWT) lors de la r\u00e9ponse d'authentification. Cela peut \u00eatre fait dans les param\u00e8tres ou le code source de votre fournisseur.\n\n3. Configurez l'application client XWiki pour utiliser OpenID Connect comme plugin d'autorisation, et configurez-la \u00e0 inclure des revendications de groupe. Voici un exemple de configuration utilisant une application LDAP :\n\n'''xml\n<plugin name=\"LDAP\" type=\"xwiki.wizard.plugins.authentication.Ldap\">\n    <config>\n        <param key=\"groupSyncEnabled\" value=\"true\"/>\n        <param key=\"ldapUrl\" value=\"ldaps://my-openid-provider.com:636/DC=example,DC=com\"/>\n        <param key=\"serviceNameAttribute\" value=\"uid\"/>\n        <param key=\"userSearchBase\" value=\"oui ou nom de l'utilisateur du groupe\"/>\n        <config>\n            <param key=\"idKey\" value=\"uid\"/>\n            <param key=\"groupRevendicationsEnabled\" value=\"true\"/>\n            <param key=\"includeGroupForUnauthenticatedUsers\" value=\"false\"/>\n        </config>\n    </config>\n</plugin>\n'''\n4. Configurez l'application client XWiki pour utiliser OpenID Connect comme plugin d'autorisation et configurez-la \u00e0 inclure des revendications de groupe :\n\n'''xml\n<plugin name=\"OpenId\" type=\"xwiki.wizard.plugins.authentication.Openid\">\n    <config>\n        <param key=\"groupSyncEnabled\" value=\"true\"/>\n        <param key=\"openIDConnectUrl\" value=\"https://my-openid-provider.com/auth/?response_type=token&client_id=myclient&redirect_uri=${host}:${port}/home?redirect_uri=&scope=openid%20profile%20email%20groups\"/>\n        <param key=\"serviceNameAttribute\" value=\"uid\"/>\n    </config>\n</plugin>\n'''\n5. Ajoutez le groupe 'XAuth2Group' au fournisseur d'utilisateurs XWiki :\n\n'''xml\n<userProvider name=\"xwiki\">\n    <param key=\"groupName\" value=\"admin\"/>\n    ...\n</userProvider>\n'''\n6. Testez l'authentification avec groupes en vous connectant \u00e0 votre application client XWiki et en acc\u00e9dant aux pages prot\u00e9g\u00e9es par groupe. Si tout fonctionne correctement, les revendications de groupe devraient \u00eatre synchronis\u00e9es entre OpenID Connect et XWiki.\n\n7. En cas d'\u00e9chec ou si vous rencontrez des probl\u00e8mes, v\u00e9rifiez le code source du fournisseur OpenID Connect pour vous assurer que les revendications de groupe sont incluses dans la r\u00e9ponse JWT lors de l'authentification, et qu'elles correspondent aux attentes XWiki. Vous pouvez utiliser des outils tels que Jwt.io pour visualiser le contenu du jeton.\n\nEn suivant ces \u00e9tapes, vous devriez \u00eatre en mesure d'effectuer une synchronisation groupes entre votre fournisseur OpenID Connect et les groupes XWiki \u00e0 l'aide de la prise en charge des revendications de groupe dans le cadre d'OpenID Connect.",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "#-# The authentication management class.  \nxwiki.authentication.authclass=org.xwiki.contrib.oidc.auth.OIDCAuthServiceImpl### xwiki.properties\n\n#-# The base URL of the OpenId Connect Provider to use as starting point to discover the provider configuration.  \n#-# See following endpoints properties if the provider is does not support OpenID Connect discovery.  \n#-# If not indicated and not custom endpoint is provided, it will be asked to the user.  \n# oidc.provider=https://xwikiorg-node1.xwikisas.com/xwiki/oidc  \n  \n#-# The generic OpenId Connect endpoints to use to communicate with the provider.  \n#-# It&#x27;s generally not needed when providing the provider discovery endpoint (which is supposed to provide those enpoints).  \n# oidc.endpoint.authorization=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/authorization  \n# oidc.endpoint.token=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/token  \n# oidc.endpoint.userinfo=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/userinfo  \n# oidc.endpoint.logout=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/logout  \n  \n#-# It&#x27;s possible to add custom HTTP headers to the endpoint (generally only needed for bad or non-oidc providers)  \n#-# by adding the suffix &quot;.headers&quot; to the endpoint property key and listing the custom headers using key:value format.  \n#-# Note that it&#x27;s not taken into account for the oidc.endpoint.authorization endpoint because it&#x27;s used as a redirect.  \n#-# Here is an example to send &quot;Accept: application/json&quot; and &quot;SomeOtherHeader: header&quot; HTTP headers with the userinfo request.  \n# oidc.endpoint.userinfo.headers=Accept:application/json  \n# oidc.endpoint.userinfo.headers=SomeOtherHeader:header value  \n  \n#-# The scopes to use when redirecting to the provider  \n#-# The standard OpenID Connection scopes are:  \n#-# \\* openid: Informs the authorisation server that the client is making an OpenID Connect request (REQUIRED).  \n",
      "similarity_score": 13.729754447937012,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "xwiki:Documentation.AdminGuide.Authentication.WebHome",
      "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/",
      "content": "## Container Authentication\n\nDelegates authentication to the Servlet Container. If it fails it falls back to the standard XWiki authentication.\n\nTo configure XWiki to use it, specify:\n\nxwiki.authentication.authclass=com.xpn.xwiki.user.impl.xwiki.AppServerTrustedAuthServiceImplFor users to be actually created and not just set as context user you must set in xwiki.cfg configuration file (if the property does not already exist, create it):\n\nxwiki.authentication.createuser=empty## OpenId Connect Authentication\n\nSee the [OpenId Connect Authenticator Extension](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/).\n\n## Active Directory\n\nIf you&#x27;re looking to connect XWiki to an Active Directory server, you currently have 2 options:\n\n* Using the manual and generic approach using the [LDAP Authenticator extension](https://extensions.xwiki.org/xwiki/bin/view/Extension/LDAP/Authenticator/)\n* Using the dedicated [Active Directory Application](https://store.xwiki.com/xwiki/bin/view/Extension/ActiveDirectoryApplication) which is a paying application dedicated to simplifying the integration of Active Directory with XWiki. The Active Directory Application allows you to easily connect your Active Directory server to XWiki using a **visual editor**, update\u00a0**advanced configuration** settings without restarting the application server, **technical support** provided by [XWiki SAS](https://xwiki.com/), etc.\n\n## LDAP\n\nSee the [LDAP Authenticator extension](https://extensions.xwiki.org/xwiki/bin/view/Extension/LDAP/Authenticator/).\n\nThe deprecated LDAP core authenticator (for XWiki &lt; 7.4) can be found on [OldLDAPAuthenticator](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/OldLDAPAuthenticator/).\n\n",
      "similarity_score": 13.373527526855469,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "# Group synchronization\n\nThe default group synchronization is enabled by adding the claim xwiki\\_groups to the property oidc.userinfoclaims in the xwiki.properties file.\n\nBy default this synchronization expect to receive the list of group names (without the `wiki:XWiki.` prefix) in which the user should be placed (groups are automatically created when they don&#x27;t exist). You can also define a mapping between the XWiki groups and the provider groups using oidc.groups.mapping property.\n\nIt&#x27;s also possible to implement your own custom group synchronization in a listener. See [Listeners section](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HListeners).\n\n# Customization\n\n## Templates\n\nThe authenticator uses a template to ask the user for the target provider when it&#x27;s not provided in the configuration. This template can be overwritten through the standard [template system](https://extensions.xwiki.org/xwiki/bin/view/Extension/Template%20Module).\n\nThe name of the template is oidc/client/provider.vm.\n\n## Listeners\n\nIt&#x27;s possible to implement an event [listener](https://extensions.xwiki.org/xwiki/bin/view/Extension/Observation%20Module%20Local) and be notified during user profile update to add more to this process or do other things after it:\n\n* org.xwiki.contrib.oidc.event.OIDCUserUpdating to modify the user profile before it being saved\n* org.xwiki.contrib.oidc.event.OIDCUserUpdated to do something after the user profile has been saved\n\n# Troubleshooting\n\n## Enable DEBUG log\n\nSee [Logging Admin Guide](https://xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Logging).\n\nThe specific packages to track for OpenID Connect module is org.xwiki.contrib.oidc. There is several ways to enable debug log.\n\n",
      "similarity_score": 0.820569634437561,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "* [Prerequisites &amp; Installation Instructions](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HPrerequisites26InstallationInstructions)\n* [Dependencies](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HDependencies)\n# Description\n\nAllow an XWiki instance to authenticate on an OpenId Connect provider. It also performs automatic synchronization.\n\nSee also [OpenID Connect Provider](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Provider/).\n\n![oidc_client_provider.png](https://extensions.xwiki.org/xwiki/bin/download/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/WebHome/oidc_client_provider.png?rev=1.1)\n\nRelease notes can be found on [OpenID Connect project page](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/#HReleaseNotes).\n\n# Main limitations\n\n* [Automatically authenticate user when coming back](https://jira.xwiki.org/browse/OIDC-16)\n\n# Configuration\n\n## Configuration Guides for specific systems\n\n### Lemon LDAP / Open PAAS\n\nA [configuration guide](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ConfigurationLemonLDAP/) is available to connect XWiki to LemonLDAP / OpenPAAS using the OpenIDC XWiki client.\n\n### OpenID Authentication with Keycloak\n\nA [configuration example for Keycloak](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20Keycloak/) is available.\n\n### Univention Corporate Server\n\nA [configuration example for Univention Corporate Server (UCS)](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20UCS/) is available.\n\n## Configuration files\n\n### xwiki.cfg\n\n",
      "similarity_score": 0.8118218183517456,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "# Dependencies\n\nDependencies for this extension (org.xwiki.contrib.oidc:oidc-authenticator 2.8.6):\n\n* org.xwiki.platform:xwiki-platform-oldcore 14.10\n* com.nimbusds:oauth2-oidc-sdk 11.10.1\n* [org.xwiki.contrib.oidc:oidc-provider](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Provider/) 2.8.6\n* org.xwiki.contrib.oidc:oidc-authenticator-configuration 2.8.6\n* org.xwiki.contrib.oidc:oidc-authenticator-user 2.8.6\n\n\n",
      "similarity_score": 0.7638007402420044,
      "vector": null
    }
  ],
  "usage": {
    "prompt_tokens": 83,
    "completion_tokens": 954,
    "total_tokens": 1037
  },
  "average_power_draw": 238.35752182539676,
  "energy_consumption": 2983.4838682368477,
  "energy_per_input_token": 1.2088670454768426,
  "energy_per_output_token": 3.0221676136921065,
  "energy_per_total_token": 2.877033624143537
}