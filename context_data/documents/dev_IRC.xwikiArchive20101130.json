{"id": "dev:IRC.xwikiArchive20101130", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20101130", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nsdumitriu - (16:55): It would be more safe to do the rename after the file was successfully written  \nsdumitriu - (16:56): As in:  \nsdumitriu - (16:56): - write in tmp  \nsdumitriu - (16:56): - copy file over bk  \nsdumitriu - (16:56): - rename tmp over file  \ncjdelisle` - (16:56): indeed safer but quite a bit more overhead too.  \ncjdelisle` - (16:57): Are you in favor of moving in general toward using TransactionRunnables instead of boolean bTransaction?  \nsdumitriu - (16:58): Yes  \nsdumitriu - (16:58): bTransaction is crap  \ncjdelisle` - (16:59): Great. I have seen so many mistakes in the try { } catch { try { catch {... hirearchies I decided we would have to make them generic.  \nsdumitriu - (16:59): Are you sure loadAttachmentContent is OK?  \nsdumitriu - (17:00): Isn't a return missing in the first if?  \nsabageru joined #xwiki at 17:00  \nsdumitriu - (17:00): Hi sabageru  \ncjdelisle` - (17:00): looking  \nsdumitriu - (17:00): sabageru: Check XPAS-32  \nsabageru - (17:00): hi sdumitriu. i was offline until now. finishing the refactor for xpas-32  \ncjdelisle` - (17:01): oops b0rk'd that one, thanks for catching.  \nsdumitriu - (17:01): sabageru: OK, thanks  \nsabageru - (17:01): I did as you suggested. Added a class named DocumentRollbackEvent (in the same way as DocumentSaveEvent)..Almost done :)  \nsdumitriu - (17:05): cjdelisle`: Here  \nsdumitriu - (17:05): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} catch (Exception ee) {  \nsdumitriu - (17:05): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Not much we can do here, failed to rollback. Throw the original exception anyway.  \nsdumitriu - (17:05): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \nsdumitriu - (17:05): Where is the throw?  \ncjdelisle` - (17:06): line number?  \nsdumitriu - (17:06): In TransactionRunnable#start  \nsdumitriu - (17:07): Still there, onComplete won't execute unless it was a success, is that your intention?  \nsdumitriu - (17:07): IMO onComplete should always execute, regardless of success of failure  \ncjdelisle` - (17:07): onComplete should run nomatter what.  \nsdumitriu - (17:07): It should be inside a finally then  \ncjdelisle` - (17:08): throw e; is 7 lines down from the paste you gave.  \nsdumitriu - (17:08): Yes  \nsdumitriu - (17:08): So that's what you mean by \"original exception\", e not ee  \ncjdelisle` - (17:09): Yes, maybe we should log an error because we really can't guarentee that the db is any good at that point.  \nsdumitriu - (17:10): Funny wording: The runnable does things in the transaction and also does something after the transaction is complete.  \nsdumitriu - (17:10): I'd say something about \"and provides hooks to execute custom code when the transaction succeeded, failed, or completed in any way.\"  \ncjdelisle` - (17:11): The runnable contains a method which will run inside of the transaction and ...  \ncjdelisle` - (17:11): ?  \nsdumitriu - (17:13): Yes  \ncjdelisle` - (17:14): Just moved onComplete into the catch clause. Trying to avoid finally since it's hard to guarentee the order that things will run.  \nsdumitriu - (17:15): Why?  \nsdumitriu - (17:15): No  \nsdumitriu - (17:15): Inside catch is wrong  \nsdumitriu - (17:15): It will only execute when an exception occurs  \ncjdelisle` - (17:15): s/moved/copied/  \nsdumitriu - (17:15): Copy/paste is wrong  \nsdumitriu - (17:16): Seriously, why not in a final?  \ncjdelisle` - (17:18): I suppose it's safe. I was reluctant because finally makes the path of execution unpredictable.  \ncjdelisle` - (17:22): ok now what did you not like about \"final class SaveTransaction extends TransactionRunnable\"?  \nsdumitriu - (17:24): cjdelisle`: Why do you say that?  \nsdumitriu - (17:24): The execution is known  \nsdumitriu - (17:24): finally is always the last  \ncjdelisle` - (17:24): hang on, I'll get the document about it.  \nLukemon - (17:25): how would you guys perform join on string array in velocity?  \ncjdelisle` - (17:27): $array.addAll()  \narkub left at 17:27 (Ping timeout: 265 seconds  \ncjdelisle` - (17:27): it's actually an arrayList  \ncjdelisle` - (17:27): This is where I got the bad feeling about finally, it looke like I was mistaken http://www.cs.berkeley.edu/~amettler/joe-e-ndss10.pdf  \nLukemon - (17:28): Caleb I mean I want to make single string from all elements :)  \ncjdelisle` - (17:29): Oh, I'd loop over all of the elements and use + concatination.  \ncjdelisle` - (17:31): <sdumitriu> cjdelisle`: I don't like where final class SaveTransaction is defined  \ncjdelisle` - (17:31): Can you explain further?  \nsdumitriu - (17:36): Lukemon: Did you get an answer for your question from last night, about creating documents in 1.0 syntax only?  \nsdumitriu - (17:37): cjdelisle`: As you said, it should be an anonyous class  \nsdumitriu - (17:37): But if it must be named, then why not define it at the bottom, like the others, and pass the needed variables to the constructor  \ncjdelisle` - (17:38): Ok. Anon classes are currently limited to 20 lines and vmassol seems to be pretty well set on keeping that checkstyle rule.  \nsdumitriu - (17:38): \"like the others\" actually not, since the others should be moved as top level classes somewhere else, since they're generic  \nrrodriguez left at 17:38 (Quit: rrodriguez  \nsdumitriu - (17:38): Yes, I agree about the rule  \ncjdelisle` - (17:38): Yup. The others are (IMO) in a staging phase.  \nsdumitriu - (17:38): It's too big to be annonymous  \ncjdelisle` - (17:39): Did you ever read google's syntax highlighter js?  \nsdumitriu - (17:39): No  \ncjdelisle` - (17:39): it starts with function(){ and 1000 lines later... }();  \nLukemon - (17:39): Sergiu I think I didn't get an answer but I suppose it was because of overwriting DocumentInformation panel :)  \nLukemon - (17:40): with some version from XWiki 2.4  \nsdumitriu - (17:42): Lukemon: Indeed, that's the problem, DocumentInformation needs to be updated  \narkub joined #xwiki at 17:42  \nsdumitriu - (17:44): cjdelisle`: OK, I've read the full code  \nsdumitriu - (17:44): +1  \ncjdelisle` - (17:45): Great.  \ncjdelisle` - (17:45): I'll tinker with it, move that class down and then make the official proposal.  \nflorinciu left at 17:55 (Read error: Connection reset by peer  \nrrodriguez joined #xwiki at 18:03  \narkub left at 18:06 (Ping timeout: 240 seconds  \ncamaritei left #xwiki at 18:18  \narkub joined #xwiki at 18:23  \narkub left at 18:32 (Ping timeout: 240 seconds  \njvdrean left at 18:44 (Quit: Leaving.  \nnpm\\_ is now known as npm ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \njvelociter - (18:47): tmortagne: when you include in a new context, is there a trick for the included page to know from which page it is included ?  \njvelociter - (18:47): something in the context, or ?  \ntmortagne - (18:55): jvelociter: not sure, let me think, in theory it should not since it's supposed to be isolated  \ntmortagne - (18:56): so it would only be a hack i think  \njvelociter - (18:56): tmortagne: that's what I'm afraid of :)  \njvelociter - (18:56): I'd be fine with a hack  \njvelociter - (18:56): though I have a back up plan if there is none  \ntmortagne - (18:57): looking at something  \ntmortagne - (19:07): jvelociter: here is a very nasty one to start: include macro push a execution context in a stack, it does not modify the current context so you can find the previous context by casting Execution component to DefaultExecutionContext and looking at private field \"stack\"  \ntmortagne - (19:07): i said it was nasty ;)  \njvelociter - (19:08): haha  \ntmortagne - (19:08): digging a bit more  \njvelociter - (19:08): I will try to refrain from doing that  \njvelociter - (19:08): tmortagne: well leave it, I think it's not a good idea anyway  \njvelociter - (19:08): I'm approching differently  \ntmortagne - (19:13): jvelociter: for some reason $cdoc seems to be the includer document  \ntmortagne - (19:14): but anyway would be better to find another way ;)  \njvelociter - (19:17): yes I'm passing my document as POST variable now, my script is completly isolated from the including doc  \nsburjan` joined #xwiki at 19:17  \njvelociter - (19:17): better this than relying on cdoc  \ntmortagne - (19:17): jvelociter: why do you need to be an include doc=new ?  \njvelociter - (19:17): who knows how long it would work :)  \njvelociter - (19:18): because I want to isolate the need of PR right  \njvelociter - (19:18): I want to be able to include it from multiple places that does not need PR  \njvelociter - (19:18): especially since users are supposed to attach document to the including one  \ntmortagne - (19:18): why not making it a wiki macro ?  \nsburjan` - (19:19): hello xwikiers  \nsburjan` - (19:19): :)  \njvelociter - (19:19): yes I guess that would work too  \njvelociter - (19:19): anyway it's working just fine now  \njvelociter - (19:19): maybe I'll make it a groovy macro when I have some time  \njvelociter - (19:19): though it's not very handy either  \njvelociter - (19:20): ah sorry, it is handy  \njvelociter - (19:20): hum is it  \ntmortagne - (19:20): what is not handy ?  \njvelociter - (19:20): If I have a script macro in my wiki macro, can I call the macro from another script macro ?  \njvelociter - (19:20): won't it be considered nesting scripts ?  \ntmortagne - (19:20): it's as easy as include macro to use, it's just a bit more work create it  \njvelociter - (19:21): (and forbidden by default)  \ntmortagne - (19:21): jvelociter: yes that would works, if these was not working it would be impossible to have any macro in a script ;)  \ntmortagne - (19:21): \\*any wiki macro  \njvelociter - (19:22): \\*any wiki macro with a script macro  \njvelociter - (19:22): no ?  \njvelociter - (19:23): OK I still have one argument not to do it right away :), right now we can't hide macros from the WYWISWYG and this one would be very technical  \ntmortagne - (19:23): a wiki amcro which does not have a script macro in it is pretty rare  \ntmortagne - (19:24): s/amcro/macro/  \ntmortagne - (19:25): you can give it a pretty technical category name  \ntmortagne - (19:25): macro are not listed directly mixed in the WYSIWYG  \njvelociter - (19:25): DONTUSE :)  \njvelociter - (19:25): ok  \ntmortagne - (19:25): the laternative is you write an alternative include macro  \ntmortagne - (19:26): wich cover your use case  \ntmortagne - (19:26): and use it  \njvelociter - (19:26): well I managed to do without  \njvelociter - (19:26): with the context=\"new\"  \njvelociter - (19:26): it's working fine  \njvelociter - (19:26): I even have a UI to save the page when it's missing PR right and the current user has them  \njvelociter - (19:27): (that UI could be used for the wiki macro page as well if I do the move)  \ntmortagne - (19:27): ok  \njvelociter - (19:27): but my plan is to remove the need for PR :)  \njvelociter - (19:28): I had to use groovy to do something pretty hackish to be able to use an OPML parser with the feed plugin  \njvelociter - (19:28): but it should be standard in the feed plugin instead  \ntmortagne - (19:28): sure always better when PR is not needed  \njvelociter - (19:29): (expando meta class to the rescue : http://groovy.codehaus.org/ExpandoMetaClass :) )  \nmflorea left at 19:31 (Quit: Leaving.  \nrrodriguez left at 19:35 (Quit: rrodriguez  \nvmassol left at 19:47 (Quit: Leaving.  \nvmassol joined #xwiki at 19:55  \njvdrean joined #xwiki at 20:11  \nflorinciu joined #xwiki at 20:13  \njvelociter\\_ joined #xwiki at 20:24  \nsdumitriu left at 20:27 (Ping timeout: 272 seconds  \nevalica1 joined #xwiki at 20:27  \njvelociter left at 20:28 (Ping timeout: 265 seconds  \njvelociter\\_ is now known as jvelociter ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nevalica left at 20:31 (Ping timeout: 260 seconds  \njvdrean left at 20:34 (Quit: Leaving.  \ntmortagne left at 20:41 (Quit: Leaving.  \nsdumitriu joined #xwiki at 20:43  \nevalica1 left at 20:48 (Read error: Connection reset by peer  \nevalica joined #xwiki at 20:48  \njvdrean joined #xwiki at 20:49  \nlpereira joined #xwiki at 20:52  \njvdrean left at 20:54 (Quit: Leaving.  \nmflorea joined #xwiki at 21:14  \nevalica left at 21:20 (Quit: Leaving.  \njvdrean joined #xwiki at 21:22  \nsabageru - (21:33): sdumitriu: I added a patch for XPAS-32 with some refactoring. Maybe you can have a look over that :)  \nlucaa1 joined #xwiki at 21:34  \nlucaa left at 21:34 (Read error: Connection reset by peer  \nlucaa1 left at 21:39 (Ping timeout: 260 seconds  \njbrBridg1 - (21:44): [denever\\_12] Hello:)  \njvdrean left at 21:46 (Quit: Leaving.  \njvelociter - (21:52): sburjan`: are you there ?  \njbrBridg1 - (21:53): [denever\\_12] Yes  \nrrodriguez joined #xwiki at 21:55  \nlucaa joined #xwiki at 23:05  \nmflorea left at 23:05 (Quit: Leaving.  \nrrodriguez left at 23:15 (Quit: rrodriguez  \nrrodriguez joined #xwiki at 23:17  \nsdumitriu left at 23:19 (Quit: Leaving.  \njvelociter left at 23:39 (Quit: jvelociter  \nlucaa left at 23:42 (Ping timeout: 245 seconds  \nlpereira left at 23:45 (Quit: Leaving.  \n\n"}