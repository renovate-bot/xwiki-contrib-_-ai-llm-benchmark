{"id": "dev:IRC.xwikiArchive20100716", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100716", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\npenyaskito\\_\\_ joined #xwiki at 00:01  \npenyaskito\\_ left at 00:05 (Ping timeout: 276 seconds  \nlpereira left at 00:36 (Quit: Leaving.  \nSvenDowideit left at 00:41 (Ping timeout: 248 seconds  \nSvenDowideit joined #xwiki at 00:41  \narkub left at 00:59 (Quit: Leaving  \nnpm left at 01:11 (Remote host closed the connection  \nnpm joined #xwiki at 01:15  \nabusenius - (02:08): CalebJamesDeLisl: implemented password mangling  \nabusenius left at 02:31 (Ping timeout: 240 seconds  \nmflorea joined #xwiki at 06:20  \nflorinciu joined #xwiki at 06:43  \nflorinciu left at 07:23 (Quit: Leaving.  \nflorinciu joined #xwiki at 07:37  \nflorinciu left at 07:58 (Quit: Leaving.  \nflorinciu joined #xwiki at 07:59  \nflorinciu left at 08:35 (Read error: Connection reset by peer  \nasrfel joined #xwiki at 08:37  \nsilviar joined #xwiki at 08:59  \nlucaa left at 09:19 (Ping timeout: 245 seconds  \nlucaa joined #xwiki at 09:32  \nlpereira joined #xwiki at 09:36  \ntmortagne joined #xwiki at 09:44  \ntmortagne left #xwiki at 09:44  \nevalica joined #xwiki at 09:50  \nEnygma` joined #xwiki at 09:53  \nsburjan joined #xwiki at 09:55  \njvelo joined #xwiki at 09:56  \nboooomer joined #xwiki at 10:07  \nboooomer - (10:08): can i use $doc funtions in a macro to get acces to the current page im looking at?  \nboooomer - (10:08): erm not in a macro, in a panel  \nboooomer - (10:08): sry  \nfmancinelli joined #xwiki at 10:10  \ntmortagne joined #xwiki at 10:11  \nabusenius joined #xwiki at 10:13  \nCalebJamesDeLisl - (10:13): boooomer: Yes, as far as I know you can.  \nCalebJamesDeLisl - (10:14): abusenius: did you notice the flaw in your password mangler?  \nboooomer - (10:15): #set($pages = $xwiki.searchDocuments\"(where doc.space = $doc.getSpace()\")  \nboooomer - (10:15): should work, shouldnt it?  \nCalebJamesDeLisl - (10:16): no.  \nboooomer - (10:16): what did i do wrong?  \nCalebJamesDeLisl - (10:16): $xwiki.searchDocuments(\"where doc.space = ?\", [$doc.getSpace()])  \nCalebJamesDeLisl - (10:17): always parametrize :)  \nboooomer - (10:17): ah okay  \nabusenius - (10:18): CalebJamesDeLisl: hm, the only problem I can think about currently is that the conversion to char might fail  \nCalebJamesDeLisl - (10:18): Your mistake limits it to 32 bits of strength.  \nabusenius - (10:19): hm?  \nCalebJamesDeLisl - (10:19): The problem was you used a reader to interpret a byte array.  \nCalebJamesDeLisl - (10:20): (I think) the reader will assume UTF-8 which means it will sometimes fail as well because the byte array is not utf.  \nabusenius - (10:20): I don't read string, I read char[], they are utf-16 afaik  \nCalebJamesDeLisl - (10:21): After the hash.  \nCalebJamesDeLisl - (10:21): The problem I noticed is that casting a byte to a char wastes half of the char type.  \nsburjan - (10:21): could anybody enlighten me why when running XE 2.5 Snapshot, on the botton of the page I still get 2.4 snapshot ?  \nsburjan - (10:21): \\*bottom  \nabusenius - (10:22): ah, it uses the default charset  \nCalebJamesDeLisl - (10:22): Yes, here is the fix:  \nCalebJamesDeLisl - (10:22): out[outIndex++] = (char) ((buf[inIndex++] << 8) + buf[inIndex++]);  \nflorinciu joined #xwiki at 10:22  \nCalebJamesDeLisl - (10:22): It just makes a char out of 2 bytes.  \nabusenius - (10:23): I wonder if all byte combinations are valid utf-16  \nabusenius - (10:23): not that it fails later  \nCalebJamesDeLisl - (10:23): It will make invalid UTF-16 but AFAIK java doesn't care as long as you don't try to make it into a string or something.  \nCalebJamesDeLisl - (10:24): BTW: I found the source to snuffle, it's pretty cool.  \nabusenius - (10:24): yea, the problem is that the key store converts it once again afterwards  \nCalebJamesDeLisl - (10:24): it does? where is that?  \nabusenius - (10:26): well, in the source of a couple of implementations I looked at  \nCalebJamesDeLisl - (10:26): I'm having second thoughts about this whole pkcs12 thing.  \nCalebJamesDeLisl - (10:27): I'm beginning to think we would be wiser to use a different encryption and only keep pkcs12 as an optional export method.  \nabusenius - (10:28): there is not really an alternative imo  \nCalebJamesDeLisl - (10:28): No? can't we just wrap the private key with a BC password based encryption scheme and use password mangling to keep it short enough etc.  \nabusenius - (10:29): storing it differently gives more freedom, but we will need the password for \\*each\\* key on export  \nabusenius - (10:29): you mean pretend that the encryption of the key is the key and pass it to the store?  \narkub joined #xwiki at 10:29  \nabusenius - (10:30): (fixing conversion in the meantime)  \nCalebJamesDeLisl - (10:31): Well the api is wet up to take a password every time you want to use the private key so it's not a big deal to change encryption schemes.  \nCalebJamesDeLisl - (10:31): I have the fix here.  \nCalebJamesDeLisl - (10:31): should I commit?  \ntmortagne left #xwiki at 10:31  \nboooomer - (10:33): how can i use more than one parameter in seachDocuments? searchDocuments(\"where foo = ? and bar = ?\", [test1(), test2()]) \u00a0`?  \nCalebJamesDeLisl - (10:34): correct.  \nabusenius - (10:34): yes, but change + to |  \nCalebJamesDeLisl - (10:35): or?  \nCalebJamesDeLisl - (10:35): I don't see any difference.  \nabusenius - (10:35): well, technically. you are not adding, you are oring  \nCalebJamesDeLisl - (10:36): I suppose it might be quicker, and I guess you are technically right.  \nCalebJamesDeLisl - (10:36): Ok, I'll commit that. Then we have to decide what role PKCS#12 is going to play.  \nabusenius - (10:37): and having 2 x inIndex++ in the same line makes me think it is undefined behavior (C for the masses) :)  \nCalebJamesDeLisl - (10:38): Well one is inside of the parentheses but maybe I should check with the standard.  \nabusenius - (10:39): I think in java it's ok, but it is better to avoid such things imo  \nCalebJamesDeLisl - (10:43): http://java.sun.com/docs/books/jls/third\\_edition/html/expressions.html#15.7.3  \nCalebJamesDeLisl - (10:43): evaluation left to right seems to be pretty clear about it.  \nboooomer - (10:43): i want to list all direct \u00a0children of a page. ist this query correct: \"where doc.space = ? and doc.parent = ? \", [$doc.space, $doc.parent])  \nboooomer - (10:44): it only lists something like WebHome  \nabusenius - (10:44): well, even \u00a0if it is well-defined, it looks wrong and too confusing  \nCalebJamesDeLisl - (10:44): boooomer: you want the last entry to be $doc.getFullName()  \nCalebJamesDeLisl - (10:44): anyway there's $doc.getChildern() if I recall.  \nCalebJamesDeLisl - (10:45): abusenius: IMO that sort of thing is acceptable as long as it's well commented.  \nboooomer - (10:45): not listed in the documentation  \nboooomer - (10:45): http://maven.xwiki.org/site/xwiki-core-parent/xwiki-core/apidocs/com/xpn/xwiki/api/Document.html  \nboooomer - (10:45): the getchildren method  \nabusenius - (10:45): It is recommended that code not rely crucially on this specification. Code is usually clearer when each expression contains at most one side effect, as its outermost operation, and when code does not depend on exactly which exception arises as a consequence of the left-to-right evaluation of expressions.  \nCalebJamesDeLisl - (10:47): Then you'll no doubt love this: http://bouncycastle.sourcearchive.com/documentation/1.37/AESEngine\\_8java-source.html  \nCalebJamesDeLisl - (10:48): Here's one that hung me up for a while, what does this test? \u00a0\u00a0if (!(n & 31)) \u00a0\u00a0\u00a0\u00a0(c)  \nabusenius - (10:49): it tests if the lower 5 bit of n are not set :)  \nabusenius - (10:50): this is different btw the do \\*not\\* use expressions that modify a variable several times per line  \nCalebJamesDeLisl - (10:50): yea, it was a loop which stopped every 32. it held me up for a while.  \nabusenius - (10:51): it is just a lot of bitshiftin  \nCalebJamesDeLisl - (10:51): Ok, you can fix the password mangle however you want. apparently reading djb's code has had an effect on me ;)  \nabusenius - (10:52): ok :)  \nabusenius - (10:53): you should use C, it is so much more fun :) look:  \nCalebJamesDeLisl - (10:53): snuffle is the first program I have seen to purposely take advantage of type overflows.  \nabusenius - (10:53): \u00a0\u00a0\u00a0\u00a0for(ss=sd=s; (\\*sd=\\*ss); ss++)  \nabusenius - (10:53): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if( !(\\*ss==' ' || \\*ss=='\\t') )  \nabusenius - (10:53): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sd++;  \nCalebJamesDeLisl - (10:53): mmm \u00a0pointers.  \nCalebJamesDeLisl - (10:56): oh ok. it's a trim function.  \nabusenius - (10:56): it removes all spaces and tabs actually :)  \nabusenius - (10:57): inplace  \nCalebJamesDeLisl - (10:57): It looks like it stops once that if statement returns false once.  \nabusenius - (10:57): s = char array  \nabusenius - (10:57): it is null-terminated  \nabusenius - (10:58): \u00a0\u00a0\u00a0\u00a0char \\*ss, \\*sd;  \nabusenius - (10:58): \u00a0\u00a0\u00a0\u00a0char\\* s = (char\\*)malloc( sizeof(char) \\* SIZE );  \nabusenius - (10:58): \u00a0\u00a0\u00a0\u00a0scanf(\"%s\", s);  \nCalebJamesDeLisl - (10:59): casting a malloc to a char pointer? that's a new one on me.  \nboooomer - (11:00): CalebJamesDeLisl: \u00a0problem is, sometimes a documents parent is called: space.WebHome or only WebHome or xwiki:space.WebHome  \nboooomer - (11:01): it doesnt find all the children but only a few  \nabusenius - (11:01): malloc returns void\\*  \nCalebJamesDeLisl - (11:02): where (doc.space = {space} and doc.parent like {%name}) or doc.parent like {fullname}  \nCalebJamesDeLisl - (11:02): try that.  \nCalebJamesDeLisl - (11:03): Actually give getChildern a try, I think the api you were looking at is old.  \nCalebJamesDeLisl - (11:03): \\* still has me confused.  \nCalebJamesDeLisl - (11:04): it seems sometimes it's a pointer and other times it's talking about an array.  \nboooomer - (11:10): $doc.getChildren worked. perhaps the link to the api in the scripting guide should be renewed. its quite \u00a0confusing this way  \nCalebJamesDeLisl - (11:10): yes, I'll fix that.  \nEnygma` left at 11:16 (Ping timeout: 245 seconds  \nEnygma` joined #xwiki at 11:16  \nCalebJamesDeLisl - (11:20): maven seems to think the current version of xwiki is 1.7  \nCalebJamesDeLisl - (11:23): maybe we need to add mvn site as a project to hudson.  \nabusenius - (11:25): hubson doesn't seem to run flawlessly either  \nCalebJamesDeLisl - (11:25): what's wrong?  \nabusenius - (11:26): the trunk is allready 2.5, but it is showing 2.4  \nabusenius - (11:28): there is a wild mix on versions  \nCalebJamesDeLisl - (11:28): I'm not sure if the poms were changed, sburjan was saying the mark at the bottom of the page hadn't changed.  \nabusenius - (11:28): http://hudson.xwiki.org/job/xwiki-platform-core-2.4/ says it deploys to 2.2  \nabusenius - (11:28): and 2.5 doesn't exists  \nabusenius - (11:29): but most of the poms are on 2.5 :)  \nsburjan - (11:29): i downloaded the zip 2.5-SNAPSHOT  \nsburjan - (11:29): unzipped it.. and started server  \nsburjan - (11:29): i get 2.4 on the bottom  \nsburjan - (11:29): maybe it's normal  \nabusenius - (11:30): it looks wrong to me  \nCalebJamesDeLisl - (11:30): Yea versioning is not handled very well IMO. Evidence nobody wants to volunteer to release.  \nabusenius - (11:30): why does the pom for tools/xem-web-debug-eclipse has version 2.4?  \nabusenius - (11:31): while everything else 2.5?  \nCalebJamesDeLisl - (11:32): That deploying to 2.2 is just a description.  \nCalebJamesDeLisl - (11:33): I'm going to change that to: Deployed on http://maven.xwiki.org/snapshots/com/xpn/xwiki/platform/xwiki-core/  \nCalebJamesDeLisl - (11:39): enterprise-tests looks like it should work, I'm going to try starting it manually.  \nfmancinelli - (11:40): abusenius: maybe Thomas forgot to update the pom.xml  \nCalebJamesDeLisl - (11:42): xwiki-application-wiki-macro-bridge failed with a bad parse of the pom file, I'm convinced that was happenstance. restarting...  \nabusenius - (11:43): another one, web/pom.xml says <platform.core.version>2.4-SNAPSHOT</platform.core.version> in <properties>  \nabusenius - (11:44): I guess this is not correct either  \nCalebJamesDeLisl - (11:47): abusenius: You might find this interesting: http://ftp.nluug.nl/security/coast/crypto/snuffle/snuffle.shar \u00a0it's ridiculously simple.  \nCalebJamesDeLisl - (11:48): hmm. suddenly Hudson is slooooow.  \nasrfel left at 11:54 (Ping timeout: 260 seconds  \nCalebJamesDeLisl - (11:59): I'm thinking about refactoring crypto api so that it accepts generic public and private keys so that there can be implementations for password based encryption and PGP.  \nabusenius - (12:01): wrapping those keys into wrappers is not that hard  \nCalebJamesDeLisl - (12:03): Looks like I broke hudson. It's acting like the disk is full or something.  \nCalebJamesDeLisl - (12:04): It just decided to reboot, or somebody bailed me out.  \nabusenius - (12:05): are you ok with ignoring all KeyStore exceptions in cleanStore()?  \nabusenius - (12:06): the exception on deleteEntry is already ignored, store.aliases() throws if the store is not initialized  \nabusenius - (12:06): in which case we also can't do anything  \nCalebJamesDeLisl - (12:06): Yes  \nabusenius - (12:07): ok  \nCalebJamesDeLisl - (12:08): SymmetricKey implements PublicKey, PrivateKey  \nCalebJamesDeLisl - (12:09): verifyText(final String signedText, final PrivateKey)  \nCalebJamesDeLisl - (12:09): Hmm. mo it worud return a publicKey.  \nabusenius - (12:10): imo it is better to use a different method for symmetric encryption  \nCalebJamesDeLisl - (12:12): Yes. I'm thinking about the interface that each encryption technique would implement.  \nabusenius - (12:14): symmetric key is private key  \nCalebJamesDeLisl - (12:14): sure but it also works to encrypt so it has to implement PublicKey  \nabusenius - (12:15): I would not mix them  \nCalebJamesDeLisl - (12:16): or maybe the thing to do is have an x509Crypto interface, a pgp interface and a synnetric interface.  \nCalebJamesDeLisl - (12:17): hmm. it would seem that I completely killed hudson.  \nabusenius - (12:19): if you mix public and private key, symmetric key would have methods like getPublic() and getPrivate() that return the same key  \nabusenius - (12:19): hm, yea, hudson is down  \nabusenius - (12:20): did it run oom or something?  \nCalebJamesDeLisl - (12:21): So an interface for x509/pkcs another interface for password based and a third interface for pgp?  \nabusenius - (12:21): pgp is public/private  \nabusenius - (12:21): why another interface?  \nCalebJamesDeLisl - (12:21): oom? \u00a0All I did was try to start xwiki-application-wiki-macro-bridge.  \nabusenius - (12:22): strange  \nCalebJamesDeLisl - (12:22): Wild guess is the hard disk is full.  \nabusenius - (12:23): pinged infrastructure team  \nCalebJamesDeLisl - (12:24): thanks.  \nCalebJamesDeLisl - (12:24): I wasn't quite sure who to ask about it. Granted it's not an emergency today.  \nCalebJamesDeLisl - (12:27): so pgp and x509 would share encrypt, sign, decrypt, verify but they would differ in the key generating functions.  \nboooomer left at 12:27 (Quit: Page closed  \nabusenius - (12:28): and probably certificate/private key format  \nCalebJamesDeLisl - (12:28): So it seems like the easy thing to do is make different interfaces for each.  \nCalebJamesDeLisl - (12:30): maybe in script you would say $services.crypto.x509.newCertFromSpkac  \nCalebJamesDeLisl - (12:32): or services.crypto.passwd.encryptText(text, password)  \nabusenius - (12:34): something like that, same method names but different parameter types  \nCalebJamesDeLisl - (12:36): another thing is I want to allow more implementations to be added.  \nCalebJamesDeLisl - (12:37): but we can't allow them to be overridden.  \nCalebJamesDeLisl - (12:38): what do you imagine for parameter types?  \nabusenius - (12:40): it would be almost the same, String data, SomeKey key, etc.  \nCalebJamesDeLisl - (12:40): for password based?  \nabusenius - (12:40): the difference is when we cannot use XWikix509 for example, we would need to use something specific  \nabusenius - (12:40): and for symmetric enc we need symmetric key  \nCalebJamesDeLisl - (12:41): I see no use for symmetric key other than password based encryption.  \nabusenius - (12:42): well, thats what symmetric encryption is for  \nabusenius - (12:42): but in principle it can also be used for hmac  \nCalebJamesDeLisl - (12:44): speaking of which, $services.crypto.hash.sha512(String)  \nCalebJamesDeLisl - (12:45): i'm thinking in general, crypto.\\* should be the interface and crypto.abc.\\* should be the implementation.  \nabusenius - (12:46): hudson is back  \nabusenius - (12:47): agree  \nCalebJamesDeLisl - (12:47): I'm done playing with hudson.  \nCalebJamesDeLisl - (12:48): Do you imagine hmac seeing any kind of use?  \nabusenius - (12:49): not really  \nabusenius - (12:49): it is used in TLS  \nabusenius - (12:49): maybe if you want to implement something larger, but unlikely  \nabusenius - (12:50): anyway, afk for lunch  \nCalebJamesDeLisl - (12:50): Ok, we'll discount that for now. Although I have no intention of writing it now, PGP is the major email crypt so I want to be able to support it in the future.  \nCalebJamesDeLisl - (12:50): bon appetit  \nsdumitriu joined #xwiki at 13:00  \nshibbby joined #xwiki at 13:11  \nshibbby - (13:11): how can i write somehing like {{box}} klasld {{/box}} into my editor without it getting parsed  \nsdumitriu - (13:14): ~{~{box  \nsdumitriu - (13:15): ~ is the escape character in most places  \nshibbby - (13:16): danke  \nshibbby - (13:16): errr...thanks  \nshibbby - (13:16): \u00a0:)  \nshibbby left at 13:25 (Quit: Page closed  \nsdumitriu - (13:28): lucaa, mflorea: Any of you wants to do the 2.4 final release?  \nlucaa - (13:30): not really sdumitriu  \nsdumitriu - (13:30): mflorea?  \nmarta\\_\\_ joined #xwiki at 13:31  \nsdumitriu - (13:31): jvelo?  \nmflorea - (13:33): sdumitriu: me neither, I haven't done any release so far. I'd like to do it someday, but I want to start with a smaller project, not directly XE. Plus, I'm busy with something else right now..  \nsdumitriu - (13:33): K  \nsdumitriu - (13:33): Then I'll do it  \nsdumitriu - (13:34): I just thought that you guys might want a chance to try  \nasrfel joined #xwiki at 13:37  \nlucaa left at 13:43 (Ping timeout: 246 seconds  \nflorinciu1 joined #xwiki at 13:48  \njvelo - (13:48): I will not have time either, sorry sdumitriu  \nevalica1 joined #xwiki at 13:48  \nevalica left at 13:51 (Ping timeout: 245 seconds  \nflorinciu1 left at 13:51 (Client Quit  \nEnygma` left at 13:51 (Ping timeout: 264 seconds  \nflorinciu left at 13:51 (Ping timeout: 264 seconds  \nflorinciu joined #xwiki at 13:52  \nlucaa joined #xwiki at 13:53  \nlucaa - (13:53): I would try as well, but with a less final release and with help  \nEnygma` joined #xwiki at 13:54  \nDSpair joined #xwiki at 14:10  \nDSpair left at 14:18 (Quit: Leaving  \nlucaa - (14:19): sdumitriu, guys, shouldn  \nlucaa - (14:20): shouldn't we give it a little test to the final before releasing it  \nlucaa - (14:20): I guess it  \nlucaa - (14:20): is anyone still implementing things for it?  \nsdumitriu - (14:20): That's what the [VOTE] is for  \nsdumitriu - (14:20): People try it, then cast their vote  \nsilviar - (14:20): sburjan: can you please also download the latest 2.4 snapshot and test it?  \nlucaa - (14:20): ah, ok  \nlucaa - (14:21): I wanted to vote and I thought about this... so ok, I will vote after I play with it  \nsilviar - (14:22): sburjan: http://maven.xwiki.org/snapshots/com/xpn/xwiki/products/xwiki-enterprise-jetty-hsqldb/2.4-SNAPSHOT/  \nsburjan - (14:24): ok  \nsburjan - (14:26): guys.. I get some java errors in console when starting the build from today  \nsdumitriu - (14:31): tinypaste?  \nsdumitriu - (14:31): pastebin?  \nsburjan - (14:32): I was runnin the wrong version .. from 16 june, not from 16 july  \nsburjan - (14:37): sdumitriu, : remember the JIRA issue I created regarding the Search box(button) from Admin Panel ?  \nsburjan - (14:37): still presend on my resolution  \nsdumitriu - (14:42): sburjan: Yes, it wasn't fixed  \nsdumitriu - (14:43): But it's not critical, right?  \nsburjan - (14:43): nop  \nsburjan - (14:43): it's trivial or minor  \nsburjan - (14:43): not a blocker :)  \nlucaa - (14:44): guys it seems that annotations still don't work and the issue is the same as the one last fridat  \nlucaa - (14:45): XSKINX-39  \nsdumitriu - (14:45): Maybe a dependency version issue  \nsdumitriu - (14:45): I'll check  \nsdumitriu - (14:45): Yep, it's still 1.16  \nlucaa - (14:45): 1.16 no snapshot nothing?  \nsdumitriu - (14:46): Should be 1.17-SNAPSHOT  \nlucaa - (14:46): ok  \nlucaa - (14:46): pai wait  \nlucaa - (14:46): ah right sorry  \nlucaa - (14:46): version mess in my head as well  \nlucaa - (14:47): should have changed to 1.17-snap as soon as we fixed it last week  \nsdumitriu - (14:47): Fixed  \nlucaa - (14:47): cool  \nlucaa - (14:47): thanks sdumitriu  \nsdumitriu - (14:49): 65 minutes to run tests??!  \nsdumitriu - (14:49): [INFO] BUILD SUCCESSFUL [INFO] ------------------------------------------------------------------------ [INFO] Total time: 65 minutes 38 seconds  \nlucaa left at 14:59 (Ping timeout: 258 seconds  \nsdumitriu - (15:07): Ah, found a regression caused by the JFreeChart upgrade  \nsdumitriu - (15:07): java.lang.NoSuchMethodError: org.jfree.data.time.TimeSeries.(Ljava/lang/Comparable;Ljava/lang/Class;)V  \nsburjan - (15:58): CalebJamesDeLisl : do you remember what port were we using in order to send invitations within xwiki.com domain ?:  \nCalebJamesDeLisl - (15:58): It should work on 25. BTW: thanks a lot for testing again.  \nsburjan - (16:00): with pleasure  \nCalebJamesDeLisl - (16:01): is anyone noticing long page load times or is it just me?  \nlucaa joined #xwiki at 16:03  \nCalebJamesDeLisl - (16:04): never mind, it's not every time. Must be because I'm making java do stuff it shouldn't do.  \nCalebJamesDeLisl - (16:04): s/be//  \nsburjan - (16:20): question  \nsburjan - (16:20): how can the Reported as Spam invitations panel ?  \nsburjan - (16:20): be accessed  \nsburjan - (16:20): I can see it in the documentation  \nsburjan - (16:21): but only when you click Report as Spam from theemail  \nCalebJamesDeLisl - (16:24): You can get at it by viewing the email and clicking report in the preview.  \nsdumitriu left at 16:46 (Ping timeout: 260 seconds  \nasrfel left at 16:52 (Quit: Leaving.  \nEnygma` left at 16:54 (Ping timeout: 258 seconds  \nsdumitriu joined #xwiki at 16:59  \nCalebJamesDeLisl - (17:03): abusenius: I'm going to put together the beginnings of a password based crypto interface.  \nsilviar left at 17:04 (Quit: Leaving.  \nabusenius - (17:04): do so, I'm writing unit tests  \nlpereira left at 17:07 (Quit: Leaving.  \nsburjan left at 17:19 (Read error: Connection reset by peer  \nabusenius - (18:04): CalebJamesDeLisl: are you sure -----BEGIN BASE64 ENCODED PKCS12 CREDENTIAL----- is the correct header/footer for pkcs#12?  \nabusenius - (18:04): I've tried it with certtool, it only works with -----BEGIN PKCS12-----  \nCalebJamesDeLisl - (18:04): No it is not. PKCS12 has no defined way to represent it in base64  \nCalebJamesDeLisl - (18:05): Oh? I didn't know that.  \nCalebJamesDeLisl - (18:05): I thought PKCS12 was DER only.  \nCalebJamesDeLisl - (18:05): BTW: about to commit a bunch of renaming...  \nabusenius - (18:06): well, maybe it is not defined by standard, but a common use  \nabusenius - (18:06): I'll switch to BEGIN PKCS12, google can at least find this string  \nabusenius - (18:07): btw if I disable mangling, I can decrypt the key with certtool and openssl  \nCalebJamesDeLisl - (18:07): Ok. Do we want to use simple truncated password for export?  \nabusenius - (18:08): yes, probably, we need some way to interact with the rest of the world  \nCalebJamesDeLisl - (18:10): That leads me toward thinking we should move away from pkcs12 for internal use and just have it for export.  \nCalebJamesDeLisl - (18:10): As soon as I have password encryption up, we can seriously look at that possibility.  \nevalica1 left #xwiki at 18:12  \nCalebJamesDeLisl - (18:13): hmm, tests taking a long time, something must be wrong with the efficiency.  \nabusenius - (18:13): yea, we could do this  \nabusenius - (18:13): which tests?  \nCalebJamesDeLisl - (18:13): Incoming commit.  \nflorinciu left at 18:13 (Read error: Connection reset by peer  \nabusenius - (18:16): yea, merging  \nfmancinelli left at 18:17 (Ping timeout: 246 seconds  \nabusenius - (18:27): any other changes?  \nabusenius - (18:27): I'm committing new tests  \nCalebJamesDeLisl - (18:29): cool. The only thing I'm doing is trying to merge userDocumentUtils and DefaultUserDocumentUtils.  \nCalebJamesDeLisl - (18:33): What do you think of making csrf-token core a little more generic? I would like to generate some random data and expect it back signed. csrf-token seems to have the functionality to handle generic session cookies.  \nCalebJamesDeLisl - (18:34): and $services.cookie just sounds awesome...  \nabusenius - (18:36): where would you use something like that?  \njvelo left at 18:36 (Ping timeout: 240 seconds  \nabusenius - (18:36): for authentication using client cert?  \nCalebJamesDeLisl - (18:36): Yup.  \nCalebJamesDeLisl - (18:37): I'm sure there are other applications too.  \nabusenius - (18:37): hm, I can imagine having a more generic component for handling such things which is internally used by both csrf token and whytever you want  \nabusenius - (18:37): but the csrf token component should stay as simple as it is now  \nCalebJamesDeLisl - (18:38): I would use it for regular http cookies if I were rewriting the standardard auth code.  \nCalebJamesDeLisl - (18:38): s/ard//  \nabusenius - (18:38): i.e. there should be no need to know about certificates and such stuff if you don'T need it  \njvelo joined #xwiki at 18:39  \nabusenius - (18:39): but it is definitely something that we should leave for later  \nCalebJamesDeLisl - (18:40): No, all I would expect from xwiki-cookie is a place to store a little bit of data for the duration of the user session.  \nCalebJamesDeLisl - (18:40): Basically just what you already have.  \nabusenius - (18:40): ok, thats what it does, just the way what you store would be different  \nabusenius - (18:40): \\*the stuff what you generate  \nCalebJamesDeLisl - (18:41): Something like a HashMap<String, HashMap<String, String>>  \nCalebJamesDeLisl - (18:41): The first string is the username, the other hashmap is for named cookies.  \nabusenius - (18:41): so we would have 2 components, one for storing tokens, one for generating  \nabusenius - (18:42): with different implementations for generator  \nCalebJamesDeLisl - (18:42): crypto.random?  \nabusenius - (18:42): yes, something like that  \nCalebJamesDeLisl - (18:43): Anyway I don't see it as much different from xwiki-csrf and it seems really useful.  \nabusenius - (18:44): yea, but I'm not in the mood of fixing csrf patches onece again  \nCalebJamesDeLisl - (18:44): I see your point. Do you care if I work on it?  \nabusenius - (18:45): if the interface does not change its ok  \nabusenius - (18:46): but if you start implementing everything you want right now you'll have 20 subprojects running in parrallel :)  \nCalebJamesDeLisl - (18:46): Ok. looking at the interface it looks like it would be backed by xwiki-cookie.  \nCalebJamesDeLisl - (18:46): \"20 subprojects\" haha already do.  \nabusenius - (18:47): it's not cookie  \nabusenius - (18:47): cookies are in browser  \nabusenius - (18:48): its some ind of session data  \nabusenius - (18:48): kind  \nabusenius - (18:48): session-token?  \nCalebJamesDeLisl - (18:49): I think cookie is a generic term. I have heard it used that way.  \nabusenius - (18:50): it is too confusing imo  \nabusenius - (18:51): hm, we cannot import the pkcs12 that we export :)  \nCalebJamesDeLisl - (18:52): http://en.wikipedia.org/wiki/Magic\\_cookie  \nCalebJamesDeLisl - (18:52): ah, I probably broke the import function.  \nlpereira joined #xwiki at 19:00  \nCalebJamesDeLisl - (19:10): CipherOutputStream that makes it easy.  \nabusenius left at 19:18 (Ping timeout: 240 seconds  \nflorinciu joined #xwiki at 19:21  \nabusenius joined #xwiki at 19:29  \njvelo left at 19:39 (Quit: Ex-Chat  \nmflorea left at 19:53 (Quit: Leaving.  \nlucaa left at 20:54 (Quit: Leaving.  \nflorinciu left at 21:46 (Read error: Connection reset by peer  \nflorinciu joined #xwiki at 21:51  \nfmancinelli joined #xwiki at 22:27  \nfmancinelli left at 22:51 (Read error: Operation timed out  \nnpm left at 23:00 (Remote host closed the connection  \nlpereira left at 23:12 (Quit: Leaving.  \nsdumitriu left at 23:28 (Ping timeout: 240 seconds  \nflorinciu left at 23:43 (Read error: Connection reset by peer  \nsdumitriu joined #xwiki at 23:44  \nlucaa joined #xwiki at 23:48  \n\n"}