{"id": "dev:IRC.xwikiArchive20140911", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20140911", "title": "IRC Archive for channel #xwiki on 11 September 2014 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<momomomomo>\u00a0has joined #xwiki  \n00:29\u00a0<momomomomo>\u00a0has quit  \n01:04\u00a0<momomomomo>\u00a0has joined #xwiki  \n01:21\u00a0<abusenius>\u00a0has quit  \n02:30\u00a0<sburjan>\u00a0has quit  \n03:07\u00a0<OSIMasson>\u00a0has quit  \n03:27\u00a0<Emenems>\u00a0has quit  \n03:32\u00a0<Emenems>\u00a0has joined #xwiki  \n03:42\u00a0<momomomomo>\u00a0has quit  \n03:46\u00a0<OSIMasson>\u00a0has joined #xwiki  \n03:50\u00a0<Denis>\u00a0has joined #xwiki  \n03:53\u00a0<Emenems>\u00a0has quit  \n03:59\u00a0<Emenems>\u00a0has joined #xwiki  \n04:04\u00a0<Denis>\u00a0has quit  \n04:07\u00a0<OSIMasson>\u00a0has left #xwiki  \n04:30\u00a0<xwikibot>\u00a0has joined #xwiki  \n06:23\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n06:28\u00a0<DarkKnightCZ>\u00a0has quit  \n07:31\u00a0<andreeapopescu>\u00a0has joined #xwiki  \n07:48\u00a0<woshilapin>\u00a0has quit  \n08:05\u00a0<mflorea>\u00a0has joined #xwiki  \n08:17\u00a0<vmassol>\u00a0has joined #xwiki  \n08:22\u00a0<Denis>\u00a0has joined #xwiki  \n08:33\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n08:37\u00a0<woshilapin>\u00a0has joined #xwiki  \n08:47\u00a0<cjd>\u00a0has joined #xwiki  \n08:53\u00a0<tmortagne>\u00a0has joined #xwiki  \n08:56\u00a0<abusenius>\u00a0has joined #xwiki  \n09:02\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n09:02\u00a0<abusenius>\u00a0has quit  \n09:26\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:30\u00a0<evalica>\u00a0has joined #xwiki  \n09:30\u00a0<msmeria>\u00a0has joined #xwiki  \n09:41\u00a0<woshilapin>\u00a0has quit  \n09:41\u00a0<woshilapin>\u00a0has joined #xwiki  \n09:42\u00a0<ClemensR>\u00a0has joined #xwiki  \n09:57\u00a0<cjd>\u00a0Denis: how do you like my way of getting my code reviewed?  \n10:01\u00a0<Denis>\u00a0cjd: if you are talking about your checkstyle discussion, it is terribly efficient :)  \n10:01\u00a0<cjd>\u00a0;)  \n10:02\u00a0<Denis>\u00a0I would have much to say as well, but I lack time actually  \n10:02\u00a0<cjd>\u00a0yeah, vmassol does as well  \n10:02\u00a0<Denis>\u00a0but checkstyle is not all or nothing  \n10:02\u00a0<cjd>\u00a0+1 that  \n10:02\u00a0<Denis>\u00a0you can exclude rules line by lines  \n10:03\u00a0<Denis>\u00a0it just take time to maintain  \n10:03\u00a0<woshilapin>\u00a0And pollute code with lines that have nothing to do with code but with checkstyle?  \n10:03\u00a0<cjd>\u00a0I feel some checks are absolutely necessary, evidenced by the fact that I wrote my own codestyle verifier for cjdns (C)  \n10:03\u00a0<Denis>\u00a0no, you put that in a separate xml config  \n10:03\u00a0<woshilapin>\u00a0Ah, OK  \n10:04\u00a0<woshilapin>\u00a0Seems nicer, indeed  \n10:04\u00a0<cjd>\u00a0ok that's a bit worse  \n10:04\u00a0<woshilapin>\u00a0(I didn't know you can do it)  \n10:04\u00a0<cjd>\u00a0it's like Makefiles with per-file rules, very bad  \n10:05\u00a0<cjd>\u00a0you need to synchronize them with the state of the files  \n10:05\u00a0<Denis>\u00a0https://github.com/xwiki/xwiki-commons/blob/master/xwiki-commons-core/xwiki-commons-crypto/xwiki-commons-crypto-common/src/main/checkstyle/checkstyle-suppressions.xml  \n10:05\u00a0<tmortagne>\u00a0separate xml config has it's drawnback too, it makes it's a bit of a pain to maintain it  \n10:05\u00a0<Denis>\u00a0this is an example  \n10:05\u00a0<Denis>\u00a0yes, I fully agree with you Thomas  \n10:06\u00a0<cjd>\u00a0I use a comment notation in cjdns.. \u00a0\u00a0// CHECKFILES\\_IGNORE it expects a ; here but this is a macro  \n10:06\u00a0<tmortagne>\u00a0yes I perefer comments system too  \n10:06\u00a0<cjd>\u00a0that way all information about the code is contained  \n10:06\u00a0<tmortagne>\u00a0s/perefer/prefer/  \n10:06\u00a0<Denis>\u00a0this is why my filling, that is only worst it for useful checkstyle check, those that may really reveal poor code that is not obvious  \n10:06\u00a0<tmortagne>\u00a0when you remove of fix the failure you don't forget to update the excludes  \n10:07\u00a0<cjd>\u00a0+1  \n10:07\u00a0<Denis>\u00a0at the same time, comment link you checker with your code, which is not so nice  \n10:08\u00a0<cjd>\u00a0the code will still compile without the checker  \n10:08\u00a0<cjd>\u00a0it's not as if I created a magical annotation which needs to be preprocessed away  \n10:08\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n10:09\u00a0<tmortagne>\u00a0cjd: note that I think there is some support for things like //CHECKSTYLE:OFF/ON in checkstyle  \n10:09\u00a0<tmortagne>\u00a0need to get the documentation  \n10:09\u00a0<cjd>\u00a0it's disabled for us, we had a discussion ages ago about enabling it and sdumitriu1 was not favorable to it at the time  \n10:10\u00a0<cjd>\u00a0but that was like 2010  \n10:10\u00a0<tmortagne>\u00a0yep that's it, you need to add a filter for it  \n10:10\u00a0<tmortagne>\u00a0http://checkstyle.sourceforge.net/config.html  \n10:11\u00a0<tmortagne>\u00a0<module name=\"Checker\"> \u00a0\u00a0\u00a0\u00a0... \u00a0\u00a0\u00a0\u00a0<module name=\"SuppressionCommentFilter\"/> \u00a0\u00a0\u00a0\u00a0... </module>  \n10:11\u00a0<tmortagne>\u00a0<module name=\"Checker\">  \n10:11\u00a0<tmortagne>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0...  \n10:11\u00a0<tmortagne>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<module name=\"SuppressionCommentFilter\"/>  \n10:11\u00a0<cjd>\u00a0except //CHECKSTYLE:OFF \u00a0\u00a0begin big function ... \u00a0\u00a0\u00a0means that big function gets \\*none\\* of the checks  \n10:12\u00a0<tmortagne>\u00a0you don't have to put that around the whole method  \n10:12\u00a0<tmortagne>\u00a0it's around any code as far as I understand  \n10:12\u00a0<cjd>\u00a0if it's a statement count issue?  \n10:12\u00a0<tmortagne>\u00a0if it's a statement count issue of course  \n10:12\u00a0<cjd>\u00a0I suppose statement count would actually be reported at the first line of the function so you could do  \n10:12\u00a0<tmortagne>\u00a0maybe you can put that around the signature  \n10:12\u00a0<cjd>\u00a0//CHECKSTYLE:OFF // big function  \n10:13\u00a0<cjd>\u00a0function (arg, arg2) {  \n10:13\u00a0<cjd>\u00a0// yeah, that  \n10:13\u00a0<tmortagne>\u00a0yep  \n10:24\u00a0<mflorea>\u00a0has quit  \n10:29\u00a0<bouquetf\\_>\u00a0has quit  \n10:37\u00a0<bouquetf>\u00a0has joined #xwiki  \n10:58\u00a0<woshilapin>\u00a0Hi devs, I have a problem with a 'unknown macro'. \u00a0This macro is registered since I can access it with Admin user but not with a non-admin user  \n10:59\u00a0<woshilapin>\u00a0I checked that the macro is registered with a user with programming rights  \n10:59\u00a0<woshilapin>\u00a0(XWiki.Admin in this case)  \n11:00\u00a0<woshilapin>\u00a0Something that may be specific to my case, there is one macro A that is using other nested macro B  \n11:00\u00a0<woshilapin>\u00a0The macro A is well displayed, but the macro B show the 'unknown macro' problem  \n11:00\u00a0<woshilapin>\u00a0Any idea?  \n11:02\u00a0<woshilapin>\u00a0(s/I checked that the macro is registered with a user with programming rights/The macros are registered with XWiki.Admin which is in XWikiAdminGroup/)  \n11:02\u00a0<woshilapin>\u00a0(but I suppose that's equivalent)  \n11:03\u00a0<woshilapin>\u00a0at least, I'm looking for an idea on how to investigate (where can I find useful log for example)  \n11:12\u00a0<cjd\\_>\u00a0has joined #xwiki  \n11:13\u00a0<tmortagne>\u00a0woshilapin: make sure you macro has the right visibility  \n11:13\u00a0<tmortagne>\u00a0sounds like your macro has user visibility  \n11:14\u00a0<tmortagne>\u00a0should be wiki or global  \n11:14\u00a0<woshilapin>\u00a0\"right visibility\"? \u00a0What do you mean?  \n11:14\u00a0<woshilapin>\u00a0I have only one wiki 'wiki'  \n11:14\u00a0<tmortagne>\u00a0look at your macro with object editor  \n11:14\u00a0<tmortagne>\u00a0you have a field in there indicating who should see that macro  \n11:15\u00a0<woshilapin>\u00a0Indeed :-)  \n11:15\u00a0<tmortagne>\u00a0maybe you chose user (that should be named \"macro author\" probably) by mistake  \n11:15\u00a0<tmortagne>\u00a0user visibility allow a user that does not have programming or admin right to register a wiki macro for himself  \n11:16\u00a0<woshilapin>\u00a0OK  \n11:16\u00a0<tmortagne>\u00a0\\* wiki=admin right  \n11:16\u00a0<tmortagne>\u00a0\\* global= programming right  \n11:16\u00a0<woshilapin>\u00a0But why 'user visibility' is default?  \n11:16\u00a0<cjd>\u00a0has quit  \n11:16\u00a0<woshilapin>\u00a0(by the way, it works, thanks)  \n11:16\u00a0<tmortagne>\u00a0there is no real default, I guess it's just first in the list of available possibility  \n11:17\u00a0<tmortagne>\u00a0s/possibility/possibilities/  \n11:17\u00a0<woshilapin>\u00a0Yes  \n11:17\u00a0<cjd\\_>\u00a0is now known as <cjd>  \n11:17\u00a0<woshilapin>\u00a0OK, anyway, thanks for the suppoer  \n11:18\u00a0<woshilapin>\u00a0support\\*  \n11:24\u00a0<gdelhumeau>\u00a0I don't reproduce http://ci.xwiki.org/job/xwiki-enterprise-test-wysiwyg/lastBuild/org.xwiki.enterprise$xwiki-enterprise-test-wysiwyg/testReport/org.xwiki.test.wysiwyg/StandardFeaturesTest/testItalics/ manually  \n12:02\u00a0<cjd>\u00a0has quit  \n12:04\u00a0<cjd>\u00a0has joined #xwiki  \n12:05\u00a0<cjd>\u00a0is now known as <Guest41316>  \n12:07\u00a0<KermitTheFragger>\u00a0has quit  \n12:41\u00a0<Enygma`>\u00a0I have my doubts about those tests  \n12:41\u00a0<Enygma`>\u00a0they were not failing for the 6.2 rc1 release  \n12:41\u00a0<Enygma`>\u00a0so my take is that they are flukes  \n12:42\u00a0<Enygma`>\u00a0but we really need to get these flukes into control  \n12:42\u00a0<Enygma`>\u00a0they are very annoying  \n12:42\u00a0<Enygma`>\u00a0starting to handle test failures too locall  \n12:51\u00a0<Enygma`>\u00a0vmassol: any idea about http://ci.xwiki.org/job/xwiki-enterprise-test-ui/lastBuild/org.xwiki.enterprise$xwiki-enterprise-test-ui/testReport/org.apache.maven.surefire.junit4/JUnit4Provider/org\\_xwiki\\_test\\_ui\\_AllTests/ ?  \n12:59\u00a0<vmassol>\u00a0Enygma`: what I'd like to do  \n12:59\u00a0<vmassol>\u00a0modify start\\_xwiki.sh to stop any running XE process (if a script parameter is passed)  \n12:59\u00a0<vmassol>\u00a0the first problem here is \"Error binding monitor port 8079: java.net.BindException: Cannot assign requested address\"  \n13:00\u00a0<vmassol>\u00a0which could be caused by either a running XE or by an issue with my check in XwikiExecutor  \n13:00\u00a0<vmassol>\u00a0(which I would remove after I modify start\\_xwiki.sh since it wouldn't not be needed any longer)  \n13:00\u00a0<vmassol>\u00a0now  \n13:00\u00a0<vmassol>\u00a0the NPE is easy to fix, doing it now  \n13:01\u00a0<vmassol>\u00a0I introduced the problem yesterday actually  \n13:02\u00a0<vmassol>\u00a0done  \n13:13\u00a0<Denis>\u00a0has quit  \n13:28\u00a0<Denis>\u00a0has joined #xwiki  \n13:33\u00a0<Enygma`>\u00a0not reproducing locally: http://ci.xwiki.org/job/xwiki-enterprise-test-ui-6.2.x/lastBuild/org.xwiki.enterprise$xwiki-enterprise-test-ui/testReport/org.xwiki.test.ui/EditObjectsTest/testPropertyDisplayersForNewObjects/  \n13:33\u00a0<Enygma`>\u00a0used @Intermittent(repetition=10)  \n13:43\u00a0<vmassol>\u00a0Hi guys, does anyone know how I can get the process id and continue execution in a shell script?  \n13:43\u00a0<vmassol>\u00a0I know I can use $! to get it  \n13:43\u00a0<vmassol>\u00a0currently in our start\\_xwiki.sh \u00a0wehave:  \n13:43\u00a0<vmassol>\u00a0java $XWIKI\\_OPTS $3 $4 $5 $6 $7 $8 $9 -jar $JETTY\\_HOME/start.jar ${JETTY\\_HOME}/etc/jetty.xml ${JETTY\\_HOME}/etc/jetty-\\*.xml  \n13:43\u00a0<vmassol>\u00a0so it's blocking and waiting till the JVM exits  \n13:43\u00a0<vmassol>\u00a0I'd like to get the pid and save it in a lock file  \n13:44\u00a0<vmassol>\u00a0but also continue blocking execution till the JVM exits  \n13:44\u00a0<Guest41316>\u00a0mmm trickey one  \n13:44\u00a0<vmassol>\u00a0the \"fg\" command depends on the shell I guess  \n13:44\u00a0<vmassol>\u00a0so I cannot use & and then fg  \n13:44\u00a0<vmassol>\u00a0actually maybe  \n13:44\u00a0<Guest41316>\u00a0don't save the java process, save the shell process  \n13:45\u00a0<Guest41316>\u00a0echo $$ > pid  \n13:45\u00a0<Guest41316>\u00a0java .......  \n13:45\u00a0<Guest41316>\u00a0the script will keep running as long as java is still running  \n13:45\u00a0<vmassol>\u00a0$$ represents the shell pid?  \n13:45\u00a0<Guest41316>\u00a0yeap  \n13:45\u00a0<vmassol>\u00a0cool  \n13:45\u00a0<vmassol>\u00a0that should work then thanks  \n13:45\u00a0<Guest41316>\u00a0kill -9 $$  \n13:45\u00a0<vmassol>\u00a0trying  \n13:46\u00a0<vmassol>\u00a0I won't try that! :)  \n13:46\u00a0<Guest41316>\u00a0kill -11 `pidof apache2`  \n13:46\u00a0<Guest41316>\u00a0(11 is a sigsegv, synthetic segmentation fault)  \n13:54\u00a0<DarkKnightCZ>\u00a0has left #xwiki  \n13:58\u00a0<vmassol>\u00a0hmmm  \n13:58\u00a0<vmassol>\u00a0doesn't work  \n13:58\u00a0<vmassol>\u00a0kill the shell process doesn't kill the JVM apparently  \n13:58\u00a0<vmassol>\u00a0s/kill/killing  \n13:58\u00a0<vmassol>\u00a0(Guest41316)  \n14:01\u00a0<Guest41316>\u00a0ahh right  \n14:01\u00a0<vmassol>\u00a0actually I can stop using our stop\\_xwiki.sh script\u2026  \n14:02\u00a0<Guest41316>\u00a0reconnecting to get my nick back...  \n14:03\u00a0<Guest41316>\u00a0has quit  \n14:03\u00a0<cjd>\u00a0has joined #xwiki  \n14:04\u00a0<Enygma`>\u00a0vmassol: \u00a0does the first answer on this question help http://stackoverflow.com/questions/1821968/pid-of-last-started-process-in-bash-script  \n14:04\u00a0<vmassol>\u00a0ah it was you cjd ;)  \n14:04\u00a0<cjd>\u00a0yeah, my nick is set to enforce mode so nobody else can use it unless they auth  \n14:05\u00a0<Enygma`>\u00a0some\\_program &  \n14:05\u00a0<Enygma`>\u00a0some\\_pid=$!  \n14:05\u00a0<cjd>\u00a0ahh indeed, 'wait'  \n14:05\u00a0<vmassol>\u00a0actually what I'm doing now is:  \n14:05\u00a0<Enygma`>\u00a0in your case..  \n14:05\u00a0<Enygma`>\u00a0java ...  \n14:05\u00a0<Enygma`>\u00a0xwiki\\_pid=$!  \n14:05\u00a0<vmassol>\u00a0run stop\\_xwiki.sh  \n14:06\u00a0<vmassol>\u00a0however I need to modify stop\\_xwiki.sh so that it kills the process if it doesn't stop by itself  \n14:06\u00a0<cjd>\u00a0+1  \n14:06\u00a0<vmassol>\u00a0so I still need to store the real JVM pid  \n14:06\u00a0<vmassol>\u00a0I'll try the wait  \n14:06\u00a0<vmassol>\u00a0is that standard on all unixes?  \n14:07\u00a0<cjd>\u00a0hmm  \n14:07\u00a0<cjd>\u00a0System.getPid() -> pid.file ?  \n14:08\u00a0<cjd>\u00a0does start\\_xwiki.sh need to do anything after xwiki shuts down?  \n14:09\u00a0<vmassol>\u00a0remove the lock file  \n14:09\u00a0<cjd>\u00a0ok  \n14:10\u00a0<vmassol>\u00a0I have something strange  \n14:10\u00a0<cjd>\u00a0yeah, +1 the wait method  \n14:11\u00a0<vmassol>\u00a0this is what I have:  \n14:11\u00a0<vmassol>\u00a0https://gist.githubusercontent.com/vmassol/2f1b6b9c3207dd17ed3b/raw/cfa4d26b55198eabe335aabe69eb969ec3a11763/gistfile1.txt  \n14:11\u00a0<cjd>\u00a0looks like wait is a shell builtin so anywhere there is bash, there is wait  \n14:11\u00a0<vmassol>\u00a0now when I exeucte the second instance  \n14:12\u00a0<vmassol>\u00a0the first one stops fine  \n14:12\u00a0<vmassol>\u00a0but in the console of the second one I get:  \n14:12\u00a0<vmassol>\u00a0https://gist.githubusercontent.com/vmassol/73707faca38befe362f8/raw/cfc93f2ac2bbb5dcefa0c7750ab7c7d55ff15181/gistfile1.txt  \n14:12\u00a0<vmassol>\u00a0not sure why I get \"Error binding monitor port 8079: java.net.BindException: Address already in use\"  \n14:12\u00a0<cjd>\u00a0cool  \n14:12\u00a0<vmassol>\u00a0since the stop\\_xwiki.sh is waiting....  \n14:13\u00a0<vmassol>\u00a0oh yes  \n14:13\u00a0<vmassol>\u00a0hmm no  \n14:13\u00a0<vmassol>\u00a0I don't know  \n14:15\u00a0<vmassol>\u00a0if the JVM is stopped completely shouldn't it mean that the ports are freed? can they overlast the JVM?  \n14:16\u00a0<vmassol>\u00a0if so then it's more complex because I'd need to do a loop and check if someone is holding the port  \n14:16\u00a0<vmassol>\u00a0(in a standard way)  \n14:16\u00a0<cjd>\u00a0https://ezcrypt.it/j39n#opPHBmCcMRAZoxEJsuWjmRgH  \n14:16\u00a0<cjd>\u00a0no, they cannot outlast the process  \n14:17\u00a0<cjd>\u00a0there's always a chance that another process holds the port  \n14:17\u00a0<vmassol>\u00a0but the JVM doesnet spawn another process AFAIK  \n14:17\u00a0<cjd>\u00a0oh oops bug  \n14:19\u00a0<cjd>\u00a0https://ezcrypt.it/k39n#og8g5xXV0cN8FKiopEbUdr1x  \n14:19\u00a0<cjd>\u00a0that loop might not be 100% right  \n14:20\u00a0<vmassol>\u00a0ok but that's for later  \n14:20\u00a0<vmassol>\u00a0ATM I need to understand why I have this \"Error binding monitor port 8079: java.net.BindException: Address already in use\" error  \n14:20\u00a0<cjd>\u00a0anyway that's the most resilient way to stop the process  \n14:20\u00a0<vmassol>\u00a0(and how to fix it)  \n14:21\u00a0<cjd>\u00a0hmm  \n14:21\u00a0<cjd>\u00a0race condition?  \n14:21\u00a0<cjd>\u00a0oh no, it had been up for an hour  \n14:23\u00a0<ClemensR>\u00a0is it possible that yet another unrelated (or old, defunct) process is still listening at 8079 ?  \n14:23\u00a0<vmassol>\u00a0with a sleep 2 it still fails but with a sleep 10 it works  \n14:24\u00a0<cjd>\u00a0ClemensR: we did a `netstat -lnpt` and it didn't show the port as bound  \n14:24\u00a0<cjd>\u00a0so I'm confused  \n14:24\u00a0<vmassol>\u00a0cjd: that's different  \n14:24\u00a0<ClemensR>\u00a0ah, ok, then I join the 'confused' group :/  \n14:24\u00a0<vmassol>\u00a0cjd is talking about some job running on ci  \n14:25\u00a0<vmassol>\u00a0but here I'sm experimenting locally  \n14:25\u00a0<vmassol>\u00a0just running sh start\\_xwiki.sh twice  \n14:25\u00a0<cjd>\u00a0mm /nod  \n14:25\u00a0<vmassol>\u00a0I want the second one to stop the first one  \n14:25\u00a0<cjd>\u00a0mmm I wouldn't  \n14:26\u00a0<vmassol>\u00a0it seems that the port is really freed only when the shell exits for the first one  \n14:26\u00a0<vmassol>\u00a0or something like that  \n14:26\u00a0<cjd>\u00a0oh  \n14:26\u00a0<cjd>\u00a0hang on a sec  \n14:28\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n14:28\u00a0<cjd>\u00a0http://stackoverflow.com/questions/14388706/socket-options-so-reuseaddr-and-so-reuseport-how-do-they-differ-do-they-mean-t  \n14:29\u00a0<cjd>\u00a0``The question is, how does the system treat a socket in state TIME\\_WAIT? If SO\\_REUSEADDR is not set, a socket in state TIME\\_WAIT is considered to still be bound to the source address and port and any attempt to bind a new socket to the same address and port will fail until the socket has really been closed, which may take as long as the configured Linger Time.''  \n14:30\u00a0<cjd>\u00a0Write once, refactor everywhere  \n14:30\u00a0<vmassol>\u00a0ok I think I know  \n14:31\u00a0<vmassol>\u00a0it seems the stop returns immediately  \n14:31\u00a0<vmassol>\u00a0I'm printing the date before and after the actual stop, ie the java execution to stop jetty  \n14:31\u00a0<cjd>\u00a0mhm  \n14:31\u00a0<vmassol>\u00a0and it seems too fast to be true  \n14:31\u00a0<vmassol>\u00a0before stop: Thu Sep 11 14:30:24 CEST 2014  \n14:31\u00a0<vmassol>\u00a0after stop: Thu Sep 11 14:30:24 CEST 2014  \n14:31\u00a0<vmassol>\u00a0not even 1 second\u2026  \n14:32\u00a0<vmassol>\u00a0to start a JVM , run the stop and stop the JVM  \n14:32\u00a0<cjd>\u00a0doesn't it take 1 second to start the JVM?  \n14:32\u00a0<cjd>\u00a0<trollface>  \n14:32\u00a0<vmassol>\u00a0I can't know since it's blocking :)  \n14:33\u00a0<cjd>\u00a0anyway making stop\\_xwiki.sh work well I'm in favor of, making start\\_xwiki.sh automatically call stop\\_xwiki.sh is too magical IMO  \n14:33\u00a0<vmassol>\u00a0so I think the stop\\_xwiki.sh finishes before it's really stopped  \n14:34\u00a0<vmassol>\u00a0s/before it's/before jetty/  \n14:34\u00a0<cjd>\u00a0should not be possible to finish before the lock is released  \n14:34\u00a0<cjd>\u00a0\\*file deleted  \n14:34\u00a0<vmassol>\u00a0yes but deleting the file take a split second  \n14:34\u00a0<vmassol>\u00a0that'snot a problem  \n14:34\u00a0<cjd>\u00a0but it only happens after xwiki is actually stopped  \n14:35\u00a0<vmassol>\u00a0apparently not  \n14:35\u00a0<vmassol>\u00a0otherwise it would work :)  \n14:35\u00a0<cjd>\u00a0are you using my script or yours?  \n14:35\u00a0<vmassol>\u00a0mine  \n14:35\u00a0<cjd>\u00a0I'm not sure of the stuff in that loop  \n14:35\u00a0<cjd>\u00a0hard for me to follow  \n14:36\u00a0<cjd>\u00a0try mine :)  \n14:36\u00a0<vmassol>\u00a0I don't want to do any kill ATM  \n14:36\u00a0<vmassol>\u00a0that's a fallback only  \n14:36\u00a0<vmassol>\u00a0if it fails to stop but we need to give it a chance to stop properly first  \n14:36\u00a0<cjd>\u00a0ok then comment out the kill lines  \n14:36\u00a0<vmassol>\u00a0you changed the loop?  \n14:36\u00a0<cjd>\u00a0yeah  \n14:37\u00a0<cjd>\u00a0https://ezcrypt.it/k39n#og8g5xXV0cN8FKiopEbUdr1x  \n14:37\u00a0<vmassol>\u00a0ok I'll try but I don't see why it would make a difference  \n14:38\u00a0<vmassol>\u00a0same  \n14:38\u00a0<vmassol>\u00a0which I expected  \n14:38\u00a0<cjd>\u00a0hrm  \n14:39\u00a0<cjd>\u00a0sec  \n14:39\u00a0<vmassol>\u00a0there's no reason at all  \n14:39\u00a0<vmassol>\u00a0it would change anything  \n14:39\u00a0<vmassol>\u00a0it's not about the deletion of the lock file  \n14:40\u00a0<cjd>\u00a0echo \">>$XWIKI\\_LOCK\\_FILE<< === >>`cat $XWIKI\\_LOCK\\_FILE`<<\"  \n14:41\u00a0<vmassol>\u00a0wdym?  \n14:41\u00a0<vmassol>\u00a0the echo works fine  \n14:41\u00a0<ClemensR>\u00a0I cannot reproduce locally  \n14:42\u00a0<vmassol>\u00a0ClemensR: here are my full start\\_xwiki.sh and stop.xwiki.sh  \n14:42\u00a0<cjd>\u00a0making sure the lock is indeed there  \n14:43\u00a0<vmassol>\u00a0start\\_xwiki.sh: https://gist.githubusercontent.com/vmassol/b10524449403c7eaa09d/raw/bbbe39063b191c5eb6e328a208509e9e100275a6/gistfile1.txt  \n14:45\u00a0<vmassol>\u00a0stop\\_xwiki.sh: https://gist.githubusercontent.com/vmassol/32a6a2bcdf4a5849c87c/raw/9b081ecad833deb7140058799c0627e97d544e3d/gistfile1.txt  \n14:45\u00a0<vmassol>\u00a0what I do:  \n14:45\u00a0<vmassol>\u00a0in a shell run: sh start\\_xwiki.sh  \n14:45\u00a0<vmassol>\u00a0wait till it's fully started  \n14:45\u00a0<vmassol>\u00a0thenin a second shell in the same directory  \n14:45\u00a0<vmassol>\u00a0run: sh start\\_xwiki.sh  \n14:46\u00a0<ClemensR>\u00a0ah, lock file is in /var/tmp/ ... maybe that makes a difference (though it shouldn't)  \n14:46\u00a0<vmassol>\u00a0I'm pretty sure the real proboem is that when the java process exits  \n14:46\u00a0<vmassol>\u00a0the port are not fully freed yet on my OS  \n14:46\u00a0<vmassol>\u00a0(Mac)  \n14:46\u00a0<vmassol>\u00a0it may be os-dependent  \n14:47\u00a0<cjd>\u00a0while [ \"$timer\" -lt 100 -a -e XWIKI\\_LOCK\\_FILE ]; do  \n14:47\u00a0<cjd>\u00a0while [ \"$timer\" -lt 100 -a -e $XWIKI\\_LOCK\\_FILE ]; do  \n14:47\u00a0<vmassol>\u00a0yes  \n14:47\u00a0<vmassol>\u00a0that's just a typo in my paste  \n14:47\u00a0<cjd>\u00a0and it's not in your file?  \n14:47\u00a0<vmassol>\u00a0I reverted your loop to my first loop before pasting  \n14:48\u00a0<vmassol>\u00a0(and I made a typo)  \n14:49\u00a0<vmassol>\u00a0when stop\\_xwiki.sh is called from the second eeuction on start\\_xwiki.sh  \n14:49\u00a0<ClemensR>\u00a0I dont have that jetty/etc/jetty-\\*.xml, but I guess that is no problem  \n14:49\u00a0<cjd>\u00a0[ ! -e $XWIKI\\_LOCK\\_FILE ] && echo 'lock missing' && exit 0;  \n14:49\u00a0<cjd>\u00a0java $XWIKI\\_OPTS -jar $JETTY\\_HOME/start.jar --stop  \n14:49\u00a0<vmassol>\u00a0I can see that my first shell is still active about 4-5 seconds after  \n14:49\u00a0<vmassol>\u00a0(I have a spinning symbol on my shell command tab)  \n14:50\u00a0<vmassol>\u00a0first shell is still active == first shell is still executing something  \n14:51\u00a0<ClemensR>\u00a0now I can reproduce, one :)  \n14:52\u00a0<vmassol>\u00a0ok good  \n14:52\u00a0<vmassol>\u00a0wdym by \"one\"?  \n14:53\u00a0<cjd>\u00a0ls /var/tmp  \n14:53\u00a0<cjd>\u00a0is the lock there?  \n14:53\u00a0<vmassol>\u00a0yes that works fine  \n14:53\u00a0<vmassol>\u00a0again  \n14:53\u00a0<cjd>\u00a0ok  \n14:54\u00a0<vmassol>\u00a0I don't see how the lock file can be an issue  \n14:54\u00a0<vmassol>\u00a0it's not about the lock file  \n14:54\u00a0<vmassol>\u00a0but about the port being freed  \n14:55\u00a0<cjd>\u00a0sec  \n14:55\u00a0<ClemensR>\u00a0the interesting thing is that the script from the jetty-hsqldb is working w/o problems  \n14:55\u00a0<vmassol>\u00a0you mean you can start 2 instances of jetty on the same port?  \n14:55\u00a0<vmassol>\u00a0:)  \n14:56\u00a0<cjd>\u00a0user@blk1:~/xwiki-enterprise-jetty-hsqldb-6.2-SNAPSHOT$ time ./\\_stop\\_xwiki.sh && ps -ef | grep java && netstat -lnpt  \n14:56\u00a0<cjd>\u00a0lock missing  \n14:57\u00a0<cjd>\u00a0lock [/var/tmp/xwiki-.lck] missing  \n14:57\u00a0<ClemensR>\u00a0I meant, when the four \"stop when running\" lines are pasted into the script from teh original distro  \n14:57\u00a0<cjd>\u00a0user@blk1:~/xwiki-enterprise-jetty-hsqldb-6.2-SNAPSHOT$ cat ./\\_stop\\_xwiki.sh | grep JETTY\\_PORT  \n14:57\u00a0<cjd>\u00a0XWIKI\\_LOCK\\_FILE=\"${XWIKI\\_LOCK\\_DIR}/xwiki-${JETTY\\_PORT}.lck\"  \n14:57\u00a0<cjd>\u00a0user@blk1:~/xwiki-enterprise-jetty-hsqldb-6.2-SNAPSHOT$  \n14:58\u00a0<cjd>\u00a0JETTY\\_PORT == \"\"  \n14:58\u00a0<ClemensR>\u00a0for me the stop-script exits a second before the old process really quits  \n14:58\u00a0<ClemensR>\u00a0ah, thats it, JETTY\\_PORT is not set from $1 :)  \n14:59\u00a0<ClemensR>\u00a0script actually expects JETTY\\_STOP\\_PORT as $1  \n15:00\u00a0<vmassol>\u00a0oh yes  \n15:00\u00a0<vmassol>\u00a0good catch  \n15:00\u00a0<vmassol>\u00a0my bad  \n15:00\u00a0<vmassol>\u00a0fixing that and trying again  \n15:00\u00a0<ClemensR>\u00a0using XWIKI\\_LOCK\\_FILE=\"${XWIKI\\_LOCK\\_DIR}/xwiki-${JETTY\\_STOP\\_PORT}.lck\" \u00a0\u00a0in both files works better  \n15:01\u00a0<vmassol>\u00a0I need: \u00a0/bin/sh stop\\_xwiki.sh $JETTY\\_STOP\\_PORT  \n15:01\u00a0<ClemensR>\u00a0uh, gotta go, meeting at 1500 here/ well, issue found in time :)  \n15:01\u00a0<vmassol>\u00a0thanks!  \n15:01\u00a0<ClemensR>\u00a0has left #xwiki  \n15:02\u00a0<vmassol>\u00a0hmmm still the same probem :(  \n15:02\u00a0<cjd>\u00a0https://ezcrypt.it/l39n#EKadpZ0QB3LbsfpBGtpX3BYN  \n15:03\u00a0<vmassol>\u00a0that's normal cjd  \n15:03\u00a0<vmassol>\u00a0the 3 processes execute in parallel  \n15:03\u00a0<vmassol>\u00a0since the stop takes the most time  \n15:03\u00a0<cjd>\u00a0mmm no  \n15:03\u00a0<vmassol>\u00a0it's normal that netsat would show it still bound  \n15:03\u00a0<cjd>\u00a0oh  \n15:03\u00a0<vmassol>\u00a0&& means execute in // no?  \n15:04\u00a0<cjd>\u00a0no, execute after  \n15:04\u00a0<cjd>\u00a0but only if the previous one succeeds  \n15:04\u00a0<vmassol>\u00a0ok then indeed it's what I said  \n15:04\u00a0<cjd>\u00a0like \u00a0if (something() && somethingElse())  \n15:04\u00a0<vmassol>\u00a0when the jvm exits the port are not freed yet  \n15:05\u00a0<cjd>\u00a0actually I think the timer just timed out  \n15:05\u00a0<cjd>\u00a0because it was 12 seconds  \n15:05\u00a0<cjd>\u00a0and the next time I ran it, it worked  \n15:05\u00a0<cjd>\u00a0better make it 20 before trying to kill it  \n15:06\u00a0<cjd>\u00a0https://ezcrypt.it/m39n#QrSGrJtW0NSTh4LRIlO2upRx  \n15:06\u00a0<cjd>\u00a0second time works  \n15:06\u00a0<cjd>\u00a0hey  \n15:06\u00a0<cjd>\u00a0who installed cryptocurrency in my vm ?!  \n15:10\u00a0<vmassol>\u00a0hmm it worked for me when I tried:  \n15:10\u00a0<vmassol>\u00a0time sh stop\\_xwiki.sh && ps -ef | grep java && lsof -iTCP:8080 -sTCP:LISTEN  \n15:11\u00a0<vmassol>\u00a0but it's strange  \n15:11\u00a0<vmassol>\u00a0ps still shows the process  \n15:12\u00a0<vmassol>\u00a0but the lsof doesn't show the port as bound for 8080  \n15:12\u00a0<vmassol>\u00a0checking 8079 now  \n15:12\u00a0<OSIMasson>\u00a0has joined #xwiki  \n15:12\u00a0<vmassol>\u00a0ok for 8079 it's still boind  \n15:12\u00a0<cjd>\u00a0increase the timout  \n15:13\u00a0<vmassol>\u00a0what timeout?  \n15:13\u00a0<vmassol>\u00a0in stop\\_xwiki.sh?  \n15:13\u00a0<cjd>\u00a0yeap  \n15:13\u00a0<cjd>\u00a0or put an echo below it saying \"timed out\"  \n15:13\u00a0<cjd>\u00a0so you know if it times out  \n15:14\u00a0<vmassol>\u00a0same  \n15:14\u00a0<vmassol>\u00a0not sure what the timeout would change  \n15:14\u00a0<cjd>\u00a0user@blk1:~/xwiki-enterprise-jetty-hsqldb-6.2-SNAPSHOT$ ./\\_start\\_xwiki.sh  \n15:14\u00a0<cjd>\u00a0An XWiki instance is already running on port 8080, stopping it!  \n15:14\u00a0<cjd>\u00a0java.net.ConnectException: Connection refused  \n15:14\u00a0<cjd>\u00a0this is a bad idea  \n15:14\u00a0<cjd>\u00a0you should not add that part to start\\_xwiki.sh  \n15:15\u00a0<cjd>\u00a0you should check if the process is running and if it's not, clear out the stale lock  \n15:15\u00a0<vmassol>\u00a0actually I read up a lot on that  \n15:15\u00a0<vmassol>\u00a0and the consensus is that it's bad to do what you say  \n15:15\u00a0<vmassol>\u00a0and instead the good practice is to save teh pid  \n15:16\u00a0<vmassol>\u00a0because doing a ps might not always work as expected  \n15:16\u00a0<gdelhumeau>\u00a0do we still have the \"undelete\" right in XWiki?  \n15:16\u00a0<gdelhumeau>\u00a0I don't see it in the <select> tag  \n15:16\u00a0<gdelhumeau>\u00a0on a XWikiGlobalRights object  \n15:16\u00a0<vmassol>\u00a0so I wanted to avoid doing a ps  \n15:17\u00a0<vmassol>\u00a0in any case the big problem is that the port is not freed when stop\\_xwiki.sh exits  \n15:17\u00a0<vmassol>\u00a0so the current stop\\_xwiki.sh doesn't work  \n15:17\u00a0<vmassol>\u00a0the wait at the end doesn't do much in practice apparently  \n15:18\u00a0<vmassol>\u00a0I'm surprised that the port outlives the JVM  \n15:18\u00a0<vmassol>\u00a0s/JVM/JVM process/  \n15:19\u00a0<vmassol>\u00a0a simple sleep 10 at the end of stop\\_Xwiki.sh would work but it's not very nice  \n15:19\u00a0<cjd>\u00a015:15 < vmassol> and instead the good practice is to save teh pid <-- saving the pid is brittle but it's standard practice  \n15:20\u00a0<cjd>\u00a0what I don't like is that if xwiki is already running, you try to stop it  \n15:20\u00a0<cjd>\u00a0when the admin didn't ask you to stop anything  \n15:20\u00a0<vmassol>\u00a0that's not my point  \n15:20\u00a0<cjd>\u00a0that will lead to angry admins, I'm willing to bet on it  \n15:20\u00a0<vmassol>\u00a0you're talking details  \n15:20\u00a0<vmassol>\u00a0and that's absoutely not my goal  \n15:20\u00a0<vmassol>\u00a0as I mentioned twice already above  \n15:20\u00a0<vmassol>\u00a0:)  \n15:20\u00a0<vmassol>\u00a0my goal is to pass a param to the start script to control that behavior  \n15:21\u00a0<vmassol>\u00a0I just haven't implemented it yet because I don't care at this stage  \n15:21\u00a0<vmassol>\u00a0ofc we shouldn't stop a running XE if the user has not asked for it!!  \n15:21\u00a0<vmassol>\u00a0I'd be angry if someone did that to me :)  \n15:22\u00a0<cjd>\u00a0ahh ok  \n15:22\u00a0<octo>\u00a0Hello :) qq, XWikiDocument#getXObject() is supposed to return the BaseObject of the document, right?  \n15:22\u00a0<vmassol>\u00a0octo: the first xobject actually  \n15:22\u00a0<vmassol>\u00a0there can be a lot...  \n15:23\u00a0<vmassol>\u00a0depends what param you pass actually  \n15:24\u00a0<vmassol>\u00a0if you use it without params then it's the first one  \n15:24\u00a0<octo>\u00a0vmassol: getXObject() calls getXObject(DocumentReference)  \n15:24\u00a0<tmortagne>\u00a0octo: XWikiDocument#getXObject() is pretty random (unless there is only one object of course), better indicate at least the type of object you want of you know it  \n15:25\u00a0<vmassol>\u00a0yes but check getXObject(DocumentReference classReference)  \n15:25\u00a0<tmortagne>\u00a0s/of/if/  \n15:25\u00a0<vmassol>\u00a0you'll see it iterate on all objects  \n15:25\u00a0<octo>\u00a0Okay, maybe take a step back.  \n15:25\u00a0<vmassol>\u00a0and stops on the frist one  \n15:25\u00a0<octo>\u00a0What I want to get at is the Guid or the document  \n15:25\u00a0<tmortagne>\u00a0there is no such thing as \"Guid or the document\"  \n15:25\u00a0<octo>\u00a0As far as I see the BaseObject is the only class exposign the getGuid() method  \n15:25\u00a0<vmassol>\u00a0getId  \n15:25\u00a0<vmassol>\u00a0?  \n15:25\u00a0<vmassol>\u00a0getId()?  \n15:26\u00a0<vmassol>\u00a0XWikiDocument.getId()  \n15:26\u00a0<vmassol>\u00a0not sure why you'd need this though....  \n15:26\u00a0<tmortagne>\u00a0be carefull that getId() is local  \n15:26\u00a0<tmortagne>\u00a0can't you use the document reference ?  \n15:27\u00a0<octo>\u00a0I'd like to have an identifier of a wiki page that is final, i.e. doesn't change when the page is renamed  \n15:28\u00a0<tmortagne>\u00a0there is nothing like that  \n15:28\u00a0<tmortagne>\u00a0what you could use is the value of some field of a custom object you put in those pages  \n15:28\u00a0<octo>\u00a0Ugh, that will make this complicated :\\  \n15:29\u00a0<tmortagne>\u00a0that way that object field value won't change if you rename the document and you can search the document based on it  \n15:29\u00a0<tmortagne>\u00a0it's like introducing yourself a uid to a document  \n15:29\u00a0<octo>\u00a0That sounds like a plan  \n15:30\u00a0<octo>\u00a0tmortagne: Can I listen for DocumentCreated events and just add such an object automatically in that handler?  \n15:31\u00a0<vmassol>\u00a0cjd: ok I'll go the ps way then\u2026  \n15:31\u00a0<vmassol>\u00a0and do some loop till the process is no longer there  \n15:31\u00a0<vmassol>\u00a0I don't see any other option....  \n15:32\u00a0<tmortagne>\u00a0octo: yes you can automatically ad such object when a document is created with DocumentCreatedEvent  \n15:32\u00a0<tmortagne>\u00a0actually would be better to listener to DocumentCreatingEvent  \n15:32\u00a0<tmortagne>\u00a0and modify the XWikiDocument you get with the event  \n15:32\u00a0<vmassol>\u00a0note that adding objects to all doc might slow your wiki a bit since loading a doc will also load the object ie do more queries on the db  \n15:32\u00a0<tmortagne>\u00a0if you work with DocumentCreatedEvent you will have 2 save, the normal save plus you adding your object  \n15:32\u00a0<andreeapopescu>\u00a0has quit  \n15:33\u00a0<cjd>\u00a0vmassol: https://ezcrypt.it/q39n#hOvgyeNwO2AirknllVNmgyjC  \n15:35\u00a0<octo>\u00a0tmortagne: Thank you!  \n15:35\u00a0<tmortagne>\u00a0octo: you're welcome :)  \n15:37\u00a0<vmassol>\u00a0cjd: what does this change? BTW your waitTwenty() is not correct as $1 is the jetty stop port  \n15:38\u00a0<vmassol>\u00a0scratch the last part  \n15:38\u00a0<vmassol>\u00a0(it's the method param)  \n15:38\u00a0<vmassol>\u00a0but again I really don't understand what you're trying to do  \n15:38\u00a0<vmassol>\u00a0why do you keep thinking that the lock file is a problem?  \n15:38\u00a0<cjd>\u00a0I think it's the same as what you're trying to do  \n15:38\u00a0<cjd>\u00a0robust stop script  \n15:39\u00a0<vmassol>\u00a0it's not  \n15:39\u00a0<vmassol>\u00a0well  \n15:39\u00a0<vmassol>\u00a0it's going to always kill the process without letting it a chance to stop correctly  \n15:39\u00a0<cjd>\u00a0not when I tested it  \n15:39\u00a0<ClemensR>\u00a0has joined #xwiki  \n15:40\u00a0<vmassol>\u00a0could I talk to you on skype?  \n15:40\u00a0<vmassol>\u00a0does your skype setup allows this? :)  \n15:40\u00a0<cjd>\u00a0meaning w/ audio?  \n15:40\u00a0<cjd>\u00a0heh  \n15:40\u00a0<vmassol>\u00a0yup  \n15:41\u00a0<cjd>\u00a0nope, sorry  \n15:41\u00a0<vmassol>\u00a0ok too bad  \n15:41\u00a0<vmassol>\u00a0ok so let's do the slow ay  \n15:41\u00a0<vmassol>\u00a0\\*way  \n15:41\u00a0<cjd>\u00a0I think slow so it wouldn't help much to talk live  \n15:41\u00a0<vmassol>\u00a0the stop\\_xwiki.sh | ps | netstat  \n15:41\u00a0<vmassol>\u00a0shows  \n15:41\u00a0<vmassol>\u00a0that the when the java command returns jetty is not fully stopped  \n15:41\u00a0<vmassol>\u00a0so in your script  \n15:42\u00a0<vmassol>\u00a0you get to the line that says:  \n15:42\u00a0<gdelhumeau>\u00a0vmassol: cjd : use https://www.gruveo.com/ (WebRTC)  \n15:42\u00a0<vmassol>\u00a0echo 'Failed to stop XWiki, attempting kill';  \n15:42\u00a0<vmassol>\u00a0and then you execute  \n15:42\u00a0<gdelhumeau>\u00a0tested during the seminar, and I was happy with it  \n15:42\u00a0<vmassol>\u00a0kill `cat $XWIKI\\_LOCK\\_FILE`  \n15:42\u00a0<vmassol>\u00a0so even though there's no probem stopping xwiki it'll always end doing a kill  \n15:43\u00a0<cjd>\u00a015:41 < vmassol> that the when the java command returns jetty is not fully stopped \u00a0<-- I tested a bunch of times and it did not happen  \n15:43\u00a0<vmassol>\u00a0and the kill will happen when jetty is being stopped so not even sure how jetty will like it....  \n15:43\u00a0<vmassol>\u00a0cjd: on mac it does all the time  \n15:43\u00a0<cjd>\u00a0what I saw was the result of the timeout being too short and not telling me it was a timeout  \n15:44\u00a0<vmassol>\u00a0I don't see the relationshiup between the lock file/timeout and the port beeing freed  \n15:44\u00a0<cjd>\u00a0try my scripts and tell me if it says it's attempting a kill (you can comment the kill if you'd rather like)  \n15:44\u00a0<vmassol>\u00a0ok  \n15:44\u00a0<cjd>\u00a0s/like//  \n15:45\u00a0<cjd>\u00a0time ./\\_stop\\_xwiki.sh && ps -ef | grep java && netstat -lnpt  \n15:47\u00a0<vmassol>\u00a0note: you changed from #!/bin/sh to bash...  \n15:47\u00a0<vmassol>\u00a0in the start script  \n15:47\u00a0<cjd>\u00a0indeed I did  \n15:47\u00a0<cjd>\u00a0`wait` is standard in bash, 'sh' is not standardized at all  \n15:47\u00a0<OSIMasson>\u00a0has left #xwiki  \n15:47\u00a0<cjd>\u00a0meant to mention that  \n15:48\u00a0<vmassol>\u00a0is bash avaialble on all unixes?  \n15:48\u00a0<cjd>\u00a0all sane ones :)  \n15:49\u00a0<cjd>\u00a0might not be on an openwrt router but that's a non-point  \n15:49\u00a0<vmassol>\u00a0ok  \n15:49\u00a0<vmassol>\u00a0exactly same problem  \n15:49\u00a0<cjd>\u00a0paste?  \n15:49\u00a0<vmassol>\u00a0actually no  \n15:49\u00a0<vmassol>\u00a0even worse  \n15:49\u00a0<vmassol>\u00a0:)  \n15:50\u00a0<vmassol>\u00a0when I start the second instance I get:  \n15:50\u00a0<vmassol>\u00a0https://gist.githubusercontent.com/vmassol/8a01a48eeabac6fcb07e/raw/1929af3995d3137d1b24a3af994301dea37d9bdb/gistfile1.txt  \n15:50\u00a0<vmassol>\u00a0ah wait  \n15:50\u00a0<vmassol>\u00a0checking something  \n15:51\u00a0<cjd>\u00a0time ./\\_stop\\_xwiki.sh && ps -ef | grep java && netstat -lnpt  \n15:51\u00a0<cjd>\u00a0I want to know how that behaves (w/ 1 instance running)  \n15:51\u00a0<vmassol>\u00a0I forgot to change stop\\_xwiki.sh to stop\\_xwiki2.sh  \n15:51\u00a0<momomomomo>\u00a0has joined #xwiki  \n15:52\u00a0<cjd>\u00a0well since my version of the script nolonger calls it, it's kind of a nonpoint  \n15:52\u00a0<vmassol>\u00a0ah yes  \n15:52\u00a0<vmassol>\u00a0so no it doesn't work....  \n15:52\u00a0<cjd>\u00a0time ./\\_stop\\_xwiki.sh && ps -ef | grep java && netstat -lnpt  \n15:52\u00a0<vmassol>\u00a0wow /prioc  \n15:52\u00a0<cjd>\u00a0proc is in all unics  \n15:52\u00a0<vmassol>\u00a0that's non standard I believe  \n15:52\u00a0<vmassol>\u00a0I don't have it on mac  \n15:52\u00a0<cjd>\u00a0o\\_O  \n15:53\u00a0<vmassol>\u00a0I don't have any /proc/ directory  \n15:53\u00a0<vmassol>\u00a0I've reviewed a lot of ways to check for a process  \n15:53\u00a0<vmassol>\u00a0yesterday  \n15:53\u00a0<vmassol>\u00a0and there are only 2 that can work  \n15:54\u00a0<cjd>\u00a0ok I stand corrected  \n15:54\u00a0<vmassol>\u00a0best one is with the pid  \n15:54\u00a0<vmassol>\u00a0and second best is ps  \n15:54\u00a0<cjd>\u00a0I thought proc was an iron standard  \n15:54\u00a0<vmassol>\u00a0but you need to be careful \u00a0with the grep  \n15:54\u00a0<vmassol>\u00a0ps aux should be standard I think  \n15:54\u00a0<vmassol>\u00a0and the grep needs to be precise enough to not target other processes  \n15:55\u00a0<vmassol>\u00a0FTR I was reading this thread http://stackoverflow.com/questions/9117507/linux-unix-command-to-determine-if-process-is-running  \n15:55\u00a0<cjd>\u00a0anyway  \n15:55\u00a0<cjd>\u00a0time ./\\_stop\\_xwiki.sh && ps -ef | grep java && netstat -lnpt  \n15:56\u00a0<cjd>\u00a0if we can shut the thing down and know after it stops, we're ok  \n15:56\u00a0<cjd>\u00a0the rest is details  \n15:56\u00a0<vmassol>\u00a0netsat won't work  \n15:56\u00a0<vmassol>\u00a0I pasted what works above  \n15:56\u00a0<vmassol>\u00a0\\*netstat  \n15:56\u00a0<vmassol>\u00a0finding it again  \n15:57\u00a0<cjd>\u00a0that line is just for testing whether we can stop xwiki w/o a race condition, not to be put into a script  \n15:57\u00a0<vmassol>\u00a0I know  \n15:58\u00a0<vmassol>\u00a0found it  \n15:58\u00a0<vmassol>\u00a0time sh stop\\_xwiki.sh && ps -ef | grep java && lsof -iTCP:8080 -sTCP:LISTEN  \n15:58\u00a0<vmassol>\u00a0s/8080/8079  \n15:58\u00a0<DarkKnightCZ>\u00a0has left #xwiki  \n15:59\u00a0<vmassol>\u00a0but since stop.sh won't work I don't see what you expect to see  \n15:59\u00a0<vmassol>\u00a0it doesn't stop XE  \n15:59\u00a0<cjd>\u00a0it does on my machine  \n15:59\u00a0<vmassol>\u00a0that's why your script is even worse than the one I had  \n15:59\u00a0<vmassol>\u00a0which at least stopped XE  \n16:00\u00a0<cjd>\u00a0what's the backscroll when you run that?  \n16:01\u00a0<vmassol>\u00a0backscroll?  \n16:01\u00a0<cjd>\u00a0what's printed to the screen..  \n16:01\u00a0<vmassol>\u00a0I pasted it above  \n16:01\u00a0<vmassol>\u00a0:)  \n16:01\u00a0<cjd>\u00a0https://gist.githubusercontent.com/vmassol/8a01a48eeabac6fcb07e/raw/1929af3995d3137d1b24a3af994301dea37d9bdb/gistfile1.txt <-- ?  \n16:01\u00a0<vmassol>\u00a0https://gist.githubusercontent.com/vmassol/8a01a48eeabac6fcb07e/raw/1929af3995d3137d1b24a3af994301dea37d9bdb/gistfile1.txt  \n16:01\u00a0<vmassol>\u00a0yup  \n16:02\u00a0<cjd>\u00a0$ sh start\\_xwiki2.sh \u00a0<-- wrong command  \n16:02\u00a0<cjd>\u00a0time sh stop\\_xwiki.sh && ps -ef | grep java && lsof -iTCP:8080 -sTCP:LISTEN  \n16:02\u00a0<cjd>\u00a0I want to know what that one does  \n16:02\u00a0<vmassol>\u00a0then you don't understand what I'm trying to do  \n16:02\u00a0<vmassol>\u00a0:)  \n16:02\u00a0<vmassol>\u00a0ok  \n16:02\u00a0<vmassol>\u00a0but it won't be what I 'm trying to achieve  \n16:02\u00a0<cjd>\u00a0I was under the impression that the stop script returned before stopping xwiki  \n16:02\u00a0<cjd>\u00a0therefor it would send the kill signal  \n16:03\u00a0<cjd>\u00a0so I wanted to see what was happening to debug it  \n16:03\u00a0<vmassol>\u00a0ok trying  \n16:09\u00a0<xwikibot>\u00a0has joined #xwiki  \n16:12\u00a0<vmassol>\u00a0I don't need ps anymore  \n16:12\u00a0<vmassol>\u00a0now that we can stop xwiki for sure  \n16:13\u00a0<cjd>\u00a0durr  \n16:13\u00a0<cjd>\u00a0kill -0 $XWIKI\\_PID  \n16:13\u00a0<cjd>\u00a0that is universal  \n16:13\u00a0<cjd>\u00a0not sure how I managed to forget that  \n16:14\u00a0<vmassol>\u00a0yes they mention it on http://stackoverflow.com/questions/9117507/linux-unix-command-to-determine-if-process-is-running  \n16:14\u00a0<vmassol>\u00a0but I don't think I even need this  \n16:14\u00a0<vmassol>\u00a0hmm no same  \n16:15\u00a0<cjd>\u00a0doesn't work for you?  \n16:15\u00a0<vmassol>\u00a0so the issue is really triggere by calling stop from start  \n16:15\u00a0<vmassol>\u00a0\\*triggered  \n16:15\u00a0<vmassol>\u00a0stop works because it ends the shell process started  \n16:15\u00a0<vmassol>\u00a0for some reason  \n16:16\u00a0<cjd>\u00a0that's odd  \n16:16\u00a0<vmassol>\u00a0grrr  \n16:16\u00a0<vmassol>\u00a0we're back to where I was  \n16:18\u00a0<vmassol>\u00a0wait  \n16:19\u00a0<vmassol>\u00a0made a mistake  \n16:21\u00a0<vmassol>\u00a0it works fine :)  \n16:21\u00a0<vmassol>\u00a0great  \n16:21\u00a0<vmassol>\u00a0thanks for your help cjd, I'll take over from there  \n16:22\u00a0<cjd>\u00a0cool, yw  \n16:22\u00a0<vmassol>\u00a0hmm  \n16:22\u00a0<vmassol>\u00a0just did a ctrl-c and it didn't stop it cleanly as it did before  \n16:22\u00a0<cjd>\u00a0ahh of course  \n16:22\u00a0<cjd>\u00a0because of the start script using & and wait  \n16:23\u00a0<vmassol>\u00a0btw your script needs to be improve when there's a lock file but no process  \n16:23\u00a0<vmassol>\u00a0which happened when I did the ctrl-c  \n16:23\u00a0<vmassol>\u00a0trying to start after that  \n16:23\u00a0<vmassol>\u00a0leads to  \n16:24\u00a0<cjd>\u00a0http://alvinalexander.com/java/jwarehouse/jetty-6.1.9/bin/jetty.sh.shtml  \n16:24\u00a0<cjd>\u00a0JETTY\\_PID ?  \n16:24\u00a0<vmassol>\u00a0https://gist.githubusercontent.com/vmassol/ffe0fb87dde12fe8ce6e/raw/1f85d62c08d415289f950dac00c5b906f3437d40/gistfile1.txt  \n16:24\u00a0<Denis>\u00a0has quit  \n16:25\u00a0<cjd>\u00a0ahh yea, we should indeed add the check to the stop script as well  \n16:25\u00a0<vmassol>\u00a0interesting script  \n16:25\u00a0<vmassol>\u00a0pretty complex too...  \n16:26\u00a0<cjd>\u00a0kill -0 $XWIKI\\_PID || ( echo 'XWiki was not stopped cleanly, removing pid file' && rm $XWIKI\\_PID\\_FILE  \n16:26\u00a0<cjd>\u00a0)  \n16:26\u00a0<vmassol>\u00a0well we need to fix the ctrl-C issue  \n16:26\u00a0<vmassol>\u00a0it was great  \n16:26\u00a0<Denis>\u00a0has joined #xwiki  \n16:26\u00a0<cjd>\u00a0yeah  \n16:27\u00a0<cjd>\u00a0JETTY\\_PID=/var/tmp/xwiki-8080.lck  \n16:27\u00a0<vmassol>\u00a0so wait doesn't respond to ctrl-c  \n16:27\u00a0<cjd>\u00a0or whatever  \n16:27\u00a0<cjd>\u00a0well.. technically it does, it stops waiting :)  \n16:27\u00a0<vmassol>\u00a0I mean the signal is not caught anymore by the JVM for some reason  \n16:27\u00a0<cjd>\u00a0set JETTY\\_PID and then let jetty create the actual file  \n16:27\u00a0<cjd>\u00a0yeah, because the JVM is forked into the background so it won't get signals from the console  \n16:28\u00a0<vmassol>\u00a0JETTY\\_PID is not standard  \n16:28\u00a0<vmassol>\u00a0they use some other script: \"start-stop-daemon\"  \n16:29\u00a0<cjd>\u00a0yup  \n16:30\u00a0<cjd>\u00a0start-stop-deamon is a nice one because it forks the process, (thus getting the pid) then it writes the pid file, then it execve's the program you want to run, therefor not changing pid  \n16:30\u00a0<momomomomo>\u00a0has quit  \n16:30\u00a0<cjd>\u00a0but you need to use C to be able to do that  \n16:33\u00a0<vmassol>\u00a0cjd: why not use \"fg\" simply?  \n16:33\u00a0<vmassol>\u00a0process &  \n16:33\u00a0<vmassol>\u00a0fg  \n16:33\u00a0<cjd>\u00a0I don't see any reason why not  \n16:33\u00a0<vmassol>\u00a0trying  \n16:33\u00a0<cjd>\u00a0never seen it used before so there might be a dragon sleeping under it  \n16:33\u00a0<cjd>\u00a0\\*shrug\\*  \n16:35\u00a0<momomomomo>\u00a0has joined #xwiki  \n16:35\u00a0<vmassol>\u00a0hmm doesnet work  \n16:35\u00a0<vmassol>\u00a0start\\_xwiki2.sh: line 129: fg: no job control  \n16:36\u00a0<cjd>\u00a0does your mac have start-stop-dameon ?  \n16:37\u00a0<vmassol>\u00a0no  \n16:37\u00a0<vmassol>\u00a0http://apple.stackexchange.com/questions/99888/is-there-any-port-of-start-stop-daemon-for-os-x  \n16:42\u00a0<cjd>\u00a0https://support.hyperic.com/display/SIGAR/Home  \n16:42\u00a0<cjd>\u00a0kind of neat  \n16:42\u00a0<vmassol>\u00a0bbiab  \n16:54\u00a0<sdumitriu1>\u00a0cjd: No need for inline suppression comments  \n16:54\u00a0<cjd>\u00a0out of band in an xml file is quite bad IMO  \n16:55\u00a0<sdumitriu1>\u00a0Why?  \n16:55\u00a0<cjd>\u00a0refactor the code, don't change the xml file  \n16:55\u00a0<cjd>\u00a02 places to change  \n16:55\u00a0<cjd>\u00a0coupling  \n16:55\u00a0<sdumitriu1>\u00a0Yep  \n16:55\u00a0<sdumitriu1>\u00a0There are two contradicting rules  \n16:55\u00a0<sdumitriu1>\u00a0There's a rule about not mixing multiple languages in a source file  \n16:56\u00a0<cjd>\u00a0I disagree about multiple languages in a source file  \n16:56\u00a0<cjd>\u00a0not sure where that rule came from but I think it needs to justify itself  \n17:00\u00a0<cjd>\u00a0@Annotations(are not strictly java, they're bolted on to the spec but they're a declaritive thing unto themselves)  \n17:01\u00a0<sdumitriu1>\u00a0The problem with checkstyle:off is that it's all or nothing  \n17:01\u00a0<sdumitriu1>\u00a0And maintaining the checkstyle exclusion file isn't that wrong  \n17:02\u00a0<cjd>\u00a0meh, it's the old makefile mess again  \n17:02\u00a0<sdumitriu1>\u00a0If you refactor the code so that the exception doesn't apply anymore (rename a function), but the rule is still broken, the build will fail  \n17:02\u00a0<sdumitriu1>\u00a0And you'll know you have to update one or two lines in the XML  \n17:02\u00a0<cjd>\u00a0but you refactor the code so the rule is nolonger broken, then you get no feedback  \n17:03\u00a0<cjd>\u00a0and you have a file full of stuff that nobody's sure which of it is necessary  \n17:03\u00a0<sdumitriu1>\u00a0In theory that shouldn't be that often required, since exclusions are supposed to be exceptional cases  \n17:03\u00a0<cjd>\u00a0like #includes which nobody wants to spend the time to try deleting and see if the build fails as a result  \n17:03\u00a0<sdumitriu1>\u00a0Not a frequent practice  \n17:03\u00a0<sdumitriu1>\u00a0If we have a larger exclusion config than the java code itself, then you have a bigger problem  \n17:03\u00a0<cjd>\u00a0well we're going to have to kill off some rules then :)  \n17:04\u00a0<sdumitriu1>\u00a0Ironically, I'm working on enabling a few more rules right now  \n17:04\u00a0<cjd>\u00a0smart ones or dumb ones?  \n17:04\u00a0<sdumitriu1>\u00a0(including the RequireThis rule, which you're right, isn't active yet)  \n17:04\u00a0<cjd>\u00a0<loaded question>  \n17:04\u00a0<cjd>\u00a0RequireThis +1  \n17:04\u00a0<cjd>\u00a0smart, low cost of compliance, tells the reader a lot  \n17:05\u00a0<sdumitriu1>\u00a0RequireThis is broken now :( https://github.com/checkstyle/checkstyle/pull/274  \n17:05\u00a0<cjd>\u00a0but don't make it harder to contribute !  \n17:05\u00a0<cjd>\u00a0if you're going to make it harder, we need to throw some of these things overboard so it's at least a balanced budget  \n17:06\u00a0<sdumitriu1>\u00a0Is there any codestyle rule that doesn't make it harder to \\_write\\_ code?  \n17:06\u00a0<sdumitriu1>\u00a0All codestyle rules are supposed to make it easier to \\_read\\_ code  \n17:07\u00a0<sdumitriu1>\u00a0At various costs at write time  \n17:07\u00a0<cjd>\u00a0well some of the bad javadoc ones make it harder to read  \n17:07\u00a0<cjd>\u00a0and \"you must split this up \\*somewhere\\*\"  \n17:07\u00a0<sdumitriu1>\u00a0But code, like most data, is more often read than written  \n17:08\u00a0<cjd>\u00a0duplicate strings and private/package-private javadoc requirements are burning me the most atm  \n17:08\u00a0<sdumitriu1>\u00a0The problem is that most devs don't realize just how much more code reading they do  \n17:08\u00a0<sdumitriu1>\u00a0Send a vote for those  \n17:08\u00a0<sdumitriu1>\u00a0We'll let the community decide  \n17:08\u00a0<cjd>\u00a0I want to keep the discussion open a bit longer because some people (vmassol) want to discuss it but have not yet had the time  \n17:09\u00a0<cjd>\u00a0rushing a vote kind of forces a premature -1  \n17:09\u00a0<sdumitriu1>\u00a0Sure  \n17:09\u00a0<sdumitriu1>\u00a0But I'd say the veto rule shouldn't apply here  \n17:10\u00a0<sdumitriu1>\u00a0It's not a design decision, it's a \"community feeling good\" decision, and no member should dictate how the community is supposed to feel good  \n17:10\u00a0<cjd>\u00a0that's an interesting point  \n17:10\u00a0<msmeria>\u00a0has quit  \n17:10\u00a0<cjd>\u00a0still we shouldn't go forward with something \"scary\" unless we all feel like we're together on it  \n17:10\u00a0<sdumitriu1>\u00a0\"You'll write clean\\* code, and you'll enjoy it!\" (\\*clean as defined by the BDFL in this 142 pages document)  \n17:11\u00a0<cjd>\u00a0well yeah, but we're talking about repealing a law, bearuacracies are scared to death of repealing laws  \n17:11\u00a0<cjd>\u00a0There will be anarchy in the streets!  \n17:12\u00a0<sdumitriu1>\u00a0If we're not following the rules because we believe in them, then we're doing it wrong  \n17:12\u00a0<cjd>\u00a0good point as well  \n17:13\u00a0<cjd>\u00a0I'm hugely +1 for RequireThis  \n17:13\u00a0<sdumitriu1>\u00a0You can collect my aphorisms and make a book, we'll split the revenue fairly  \n17:13\u00a0<cjd>\u00a0heh  \n17:14\u00a0<cjd>\u00a0but I think it needs to balance with some relaxation of rules  \n17:14\u00a0<sdumitriu1>\u00a0Sure  \n17:15\u00a0<cjd>\u00a0and I can squeeze most of the in-package private stuff into private/package-private so I can probably sneek by without even the detection of /internal/ package  \n17:16\u00a0<cjd>\u00a0just change class/method javadoc rule to be >=protected  \n17:16\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n17:18\u00a0<Slashman>\u00a0has joined #xwiki  \n17:18\u00a0<cjd>\u00a0sdumitriu1: RequireThis for both fields and methods or only for fields?  \n17:19\u00a0<sdumitriu1>\u00a0Only fields  \n17:19\u00a0<cjd>\u00a0my feeling is only fields since java is -braindead- err not able to store function pointers  \n17:20\u00a0<sdumitriu1>\u00a0The default for checkstyle is only fields  \n17:20\u00a0<sdumitriu1>\u00a0And they usually have good defaults  \n17:20\u00a0<sdumitriu1>\u00a0Not always  \n17:20\u00a0<cjd>\u00a0do you know a way to quickly bring the whole project into compliance?  \n17:20\u00a0<Enygma`>\u00a0vmassol: any idea why jobs just stop executing?  \n17:20\u00a0<Enygma`>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-test-extension/10/console  \n17:20\u00a0<Enygma`>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-test-pageobjects-6.2.x/2/console (did not even start well)  \n17:22\u00a0<sdumitriu1>\u00a0cjd: In Eclipse: Alt+Shift+S - F followed by Alt+Shift+S - U  \n17:22\u00a0<sdumitriu1>\u00a0On the src/main/java directory  \n17:22\u00a0<sdumitriu1>\u00a0That fixes most of the style issues, but not the deeper issues  \n17:23\u00a0<cjd>\u00a0I'll need some help with that, I don't have eclipse..  \n17:24\u00a0<cjd>\u00a0although I could actually run checkstyle and parse the output into a script to fix it :)  \n17:31\u00a0<sdumitriu1>\u00a0Misspoke, RequireThis applies by default to methods, we must explicitly disable that  \n17:32\u00a0<DarkKnightCZ>\u00a0has left #xwiki  \n17:35\u00a0<ClemensR>\u00a0has left #xwiki  \n18:01\u00a0<sdumitriu1>\u00a0I wonder if anybody would complain if I break the build...  \n18:01\u00a0<cjd>\u00a0has quit  \n18:02\u00a0<evalica>\u00a0has quit  \n18:04\u00a0<Enygma`>\u00a0has quit  \n18:06\u00a0<tmortagne>\u00a0sdumitriu1: these days you could get lucky and have jenkins blamed for it before you fix it  \n18:14\u00a0<momomomomo>\u00a0has quit  \n18:31\u00a0<momomomomo>\u00a0has joined #xwiki  \n18:34\u00a0<Denis>\u00a0has quit  \n18:36\u00a0<tmortagne>\u00a0has quit  \n18:42\u00a0<sdumitriu1>\u00a0nexus unavailable?  \n18:43\u00a0<vmassol>\u00a0yes momentarily  \n18:43\u00a0<vmassol>\u00a0I think GF restarted the machine  \n18:44\u00a0<vmassol>\u00a0pinging him  \n18:51\u00a0<gdelhumeau>\u00a0has quit  \n18:53\u00a0<vmassol>\u00a0it's back now  \n19:18\u00a0<Denis>\u00a0has joined #xwiki  \n19:19\u00a0<momomomomo>\u00a0has quit  \n19:36\u00a0<woshilapin>\u00a0has quit  \n19:43\u00a0<sburjan>\u00a0has joined #xwiki  \n19:44\u00a0<mflorea>\u00a0has joined #xwiki  \n19:48\u00a0<abusenius>\u00a0has joined #xwiki  \n19:52\u00a0<Denis>\u00a0has quit  \n20:01\u00a0<OSIMasson>\u00a0has joined #xwiki  \n20:03\u00a0<vmassol>\u00a0has quit  \n20:13\u00a0<OSIMasson>\u00a0has left #xwiki  \n20:28\u00a0<abusenius\\_>\u00a0has joined #xwiki  \n20:30\u00a0<abusenius>\u00a0has quit  \n20:39\u00a0<momomomomo>\u00a0has joined #xwiki  \n22:34\u00a0<momomomomo>\u00a0has quit  \n22:39\u00a0<momomomomo>\u00a0has joined #xwiki  \n23:21\u00a0<vmassol>\u00a0has joined #xwiki  \n23:36\u00a0<D-Spair>\u00a0has quit  \n23:36\u00a0<D-Spair>\u00a0has joined #xwiki  \n23:37\u00a0<mflorea>\u00a0has quit  \n23:46\u00a0<xwikiorg\\_guest\\_8>\u00a0has joined #xwiki  \n23:47\u00a0<xwikiorg\\_guest\\_8>\u00a0Hey! \u00a0\u00a0>:-) \u00a0\u00a0\u00a0Is the maven repo down?  \n23:47\u00a0<vmassol>\u00a0yes  \n23:47\u00a0<vmassol>\u00a0we're haviing some problems ATM  \n23:47\u00a0<vmassol>\u00a0and the infra guys are sleeping right now\u2026 sorry\u2026.  \n23:47\u00a0<xwikiorg\\_guest\\_8>\u00a0I am doing my first xwiki install... and couldn't figure out what was happening!  \n23:48\u00a0<vmassol>\u00a0yeah bad timing  \n23:48\u00a0<xwikiorg\\_guest\\_8>\u00a0Bummer  \n23:48\u00a0<vmassol>\u00a0it usually doesn't happen...  \n23:48\u00a0<xwikiorg\\_guest\\_8>\u00a0Well, I guess I can try again tomorrow!  \n23:48\u00a0<vmassol>\u00a0yeah that would be better, again sorry about that  \n23:49\u00a0<xwikiorg\\_guest\\_8>\u00a0Unless there is anywhere else to get the xwiki-enterprise-ui-mainwiki-all-6.1.xar?  \n23:49\u00a0<xwikiorg\\_guest\\_8>\u00a0I could load it through the admin panel with superadmin...  \n23:49\u00a0<xwikiorg\\_guest\\_8>\u00a0No worries ;-)  \n23:49\u00a0<vmassol>\u00a0well you could get it from OW2 but it's best to use the Distribution Wizard  \n23:50\u00a0<xwikiorg\\_guest\\_8>\u00a0That sounds like a better plan.  \n23:50\u00a0<xwikiorg\\_guest\\_8>\u00a0(Waiting, that is)  \n23:50\u00a0<xwikiorg\\_guest\\_8>\u00a0I have a different question \u00a0;-)  \n23:50\u00a0<vmassol>\u00a0hehe  \n23:51\u00a0<xwikiorg\\_guest\\_8>\u00a0So I am hoping to use basic auth to log in users...  \n23:51\u00a0<xwikiorg\\_guest\\_8>\u00a0I am setting us xwiki as an internal tool and want it behind out production environment... and I would like to use our existing auth.  \n23:51\u00a0<xwikiorg\\_guest\\_8>\u00a0(php session based)  \n23:52\u00a0<xwikiorg\\_guest\\_8>\u00a0Ever heard of somethgin like this?  \n23:52\u00a0<xwikiorg\\_guest\\_8>\u00a0Ideally, I could log users into xwiki with their existing php session.  \n23:52\u00a0<vmassol>\u00a0xwiki supports lots of auths. Don't know about that php session based on  \n23:52\u00a0<vmassol>\u00a0but worst case you can write your own auth  \n23:53\u00a0<xwikiorg\\_guest\\_8>\u00a0I guess I could write a custom authenticator to hit a remote database?  \n23:53\u00a0<vmassol>\u00a0some info here: http://platform.xwiki.org/xwiki/bin/view/AdminGuide/Authentication  \n23:53\u00a0<xwikiorg\\_guest\\_8>\u00a0Alright, I'll git it a shot  \n23:53\u00a0<xwikiorg\\_guest\\_8>\u00a0Thanks!  \n23:53\u00a0<abusenius\\_>\u00a0has quit\n"}