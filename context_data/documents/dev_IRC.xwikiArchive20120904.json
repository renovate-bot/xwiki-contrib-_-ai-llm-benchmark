{"id": "dev:IRC.xwikiArchive20120904", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20120904", "title": "IRC Archive for channel #xwiki on 04 September 2012 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:03\u00a0<sdumitriu>\u00a0has joined #xwiki  \n00:45\u00a0<polx>\u00a0has quit  \n00:57\u00a0<Denis>\u00a0has quit  \n00:58\u00a0<ries\\_>\u00a0has joined #xwiki  \n00:58\u00a0<ries>\u00a0has quit  \n00:58\u00a0<ries\\_>\u00a0is now known as <ries>  \n01:05\u00a0<ries>\u00a0has quit  \n01:22\u00a0<jvdrean>\u00a0has joined #xwiki  \n02:41\u00a0<sdumitriu>\u00a0has quit  \n02:57\u00a0<sdumitriu>\u00a0has joined #xwiki  \n04:39\u00a0<sdumitriu>\u00a0has quit  \n06:26\u00a0<CIA-120>\u00a0Marius Dumitru Florea\u000f master\u000f \\* r5fcc072\u000f https://github.com/xwiki/xwiki-commons/commit/5fcc0720c87a52a0362d448cdccc5d0cbb89a351 \u000f/ xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/AbstractJob.java :\u000f Properly set end date when a job is finished. - http://git.io/d4gsNw  \n06:27\u00a0<CIA-120>\u00a0Marius Dumitru Florea\u000f stable-4.1.x\u000f \\* rd7de32d\u000f https://github.com/xwiki/xwiki-commons/commit/d7de32dc471eac0a216064214d8d882c070059f0 \u000f/ xwiki-commons-core/xwiki-commons-job/src/main/java/org/xwiki/job/AbstractJob.java :\u000f Properly set end date when a job is finished. - http://git.io/pq7OCw  \n06:40\u00a0<polx>\u00a0has joined #xwiki  \n07:19\u00a0<rrodriguez>\u00a0has joined #xwiki  \n07:38\u00a0<rrodriguez>\u00a0has quit  \n07:52\u00a0<rrodriguez>\u00a0has joined #xwiki  \n07:53\u00a0<rrodriguez>\u00a0has quit  \n08:00\u00a0<vmassol>\u00a0has joined #xwiki  \n08:33\u00a0<Denis>\u00a0has joined #xwiki  \n08:45\u00a0<mflorea>\u00a0has joined #xwiki  \n08:54\u00a0<eshan>\u00a0has joined #xwiki  \n09:30\u00a0<evalica>\u00a0has joined #xwiki  \n09:47\u00a0<vmassol>\u00a0jvdrean: good morning. I don't understand the need for UIExtension.getXDOM()  \n09:49\u00a0<+jvdrean>\u00a0vmassol: hi  \n09:50\u00a0<vmassol>\u00a0ok I get it  \n09:50\u00a0<vmassol>\u00a0I'd have called it execute() or something like tis  \n09:50\u00a0<+jvdrean>\u00a0how would you get the content to display from the extension without it ? in the data map ?  \n09:50\u00a0<vmassol>\u00a0not \u00a0a egtter  \n09:50\u00a0<+jvdrean>\u00a0before I had a #render() method which was returning html  \n09:51\u00a0<vmassol>\u00a0no html!  \n09:51\u00a0<vmassol>\u00a0XDOM is good  \n09:51\u00a0<vmassol>\u00a0BTW I don't think we need a render in SS  \n09:51\u00a0<+jvdrean>\u00a0oh, so the naming  \n09:52\u00a0<vmassol>\u00a0$services.rendering.render($services.uix.execute(), \"xhtml/1.0\")  \n09:53\u00a0<vmassol>\u00a0should be enough  \n09:53\u00a0<vmassol>\u00a0I don't think we need to duplicate this code in UIExtension SS  \n09:54\u00a0<vmassol>\u00a0$services.rendering.render($services.uix.extension(id).execute(), \"xhtml/1.0\")  \n09:55\u00a0<+jvdrean>\u00a0is \"execute\" a common name in the rendering module ?  \n09:55\u00a0<vmassol>\u00a0(not sure about getExtension() vs execute(id)  \n09:55\u00a0<vmassol>\u00a0)  \n09:55\u00a0<vmassol>\u00a0that's how it's called for the Macro for ex  \n09:55\u00a0<vmassol>\u00a0Macro.execute()  \n09:55\u00a0<vmassol>\u00a0btw  \n09:55\u00a0<+jvdrean>\u00a0ok, then indeed it'd be better to be consistent  \n09:55\u00a0<vmassol>\u00a0you shouldn't return a XDOM  \n09:55\u00a0<vmassol>\u00a0but a List<Block>  \n09:56\u00a0<vmassol>\u00a0a XDOM is a full document  \n09:56\u00a0<vmassol>\u00a0List<Block> is a fragment  \n09:56\u00a0<vmassol>\u00a0Macro.execute() return a List<Block> too  \n09:57\u00a0<CIA-120>\u00a0Vincent Massol\u000f master\u000f \\* rbb91050\u000f https://github.com/xwiki/xwiki-platform/commit/bb91050ccec99f9c4a03c7ea215c15e92a2bd533 \u000f/ (2 files in 2 dirs):\u000f XWIKI-649 : Mechanism for inserting custom content in pre-existing code - http://git.io/sQybxg  \n09:58\u00a0<+Denis>\u00a0Hi devs, what is happening with the M3 release ?  \n09:58\u00a0<vmassol>\u00a0Denis: it's supposed to be yesterday  \n09:58\u00a0<vmassol>\u00a0I asked here about the status but didn't get any response (AFAIR)  \n09:59\u00a0<vmassol>\u00a0we need input from jvdrean and mflorea  \n09:59\u00a0<vmassol>\u00a0since both had stuff to commit for M3  \n09:59\u00a0<vmassol>\u00a0uiextension + upgrade farm with EM  \n09:59\u00a0<vmassol>\u00a0(mflorea+tmortagne)  \n10:00\u00a0<+Denis>\u00a0yes, I was surprised not seeing anything about either another shift or a progress, while it is supposed to be already released  \n10:01\u00a0<+mflorea>\u00a0I still have work to do, ~1day, so I hope to finish today  \n10:03\u00a0<vmassol>\u00a0mflorea: probability it'll be done today?  \n10:03\u00a0<vmassol>\u00a0:)  \n10:03\u00a0<vmassol>\u00a0(ie no surprises)  \n10:03\u00a0<vmassol>\u00a0> 50%?  \n10:03\u00a0<+mflorea>\u00a0yes  \n10:03\u00a0<vmassol>\u00a0ok  \n10:04\u00a0<vmassol>\u00a0jvdrean: would 1 day more max be enough for you?  \n10:04\u00a0<vmassol>\u00a0(or are you done for M3?)  \n10:08\u00a0<+jvdrean>\u00a0one more day is enough  \n10:09\u00a0<vmassol>\u00a0Denis: are you ok to postpone the release by one more day, ie we release tomorrow?  \n10:09\u00a0<vmassol>\u00a0btw do we have a RM?  \n10:09\u00a0<+mflorea>\u00a0me  \n10:09\u00a0<vmassol>\u00a0hmm maybe you need some help  \n10:10\u00a0<vmassol>\u00a0to get the max time to work on the EM upgrade  \n10:10\u00a0<vmassol>\u00a0?  \n10:10\u00a0<vmassol>\u00a0mflorea: would it help if we could find you another RM for M3?  \n10:11\u00a0<+Denis>\u00a0massol: yes, no pb for me, the better is to state this with anticipation on our roadmap as soon as we know we will shift  \n10:11\u00a0<vmassol>\u00a0yep  \n10:12\u00a0<+Denis>\u00a0what is the plan for 4.1.4 ?  \n10:12\u00a0<+mflorea>\u00a0let's see how I progress with the EM upgrade. If I still have lots of stuff to do in the afternoon then we can look for another RM, otherwise I'll do it. I'll let you know my status after lunch  \n10:15\u00a0<+Denis>\u00a0vmassol: in the release notes of 4.1.3, we said that 4.2M1 and 4.1.4 will fix an important EM issue. Since we are about to release 4.2M3, this seems not consistent  \n10:15\u00a0<vmassol>\u00a0Denis: we need a RM for 4.1.4 and we're ready to release it IMO  \n10:16\u00a0<vmassol>\u00a0(there are a lot of fixes in it\u00e0  \n10:16\u00a0<vmassol>\u00a0)  \n10:16\u00a0<+jvdrean>\u00a0vmassol: so UIX shouldn't return a xdom, but I'll need one at the beginning when I parse the original string right ? I can't get directly a List<Block> from a String  \n10:17\u00a0<vmassol>\u00a0jvdrean: I don't understan  \n10:17\u00a0<vmassol>\u00a0String \u2014> Parser \u2014> List<Block>  \n10:18\u00a0<+jvdrean>\u00a0I can't find this API  \n10:18\u00a0<vmassol>\u00a0what API?  \n10:18\u00a0<vmassol>\u00a0parser.parse returns an XDOM  \n10:18\u00a0<vmassol>\u00a0then you call xdom.getChildren()  \n10:19\u00a0<+jvdrean>\u00a0\"so UIX shouldn't return a xdom, but I'll need one at the beginning when I parse the original string right\"  \n10:19\u00a0<+jvdrean>\u00a0so yes that's it thanks  \n10:19\u00a0<vmassol>\u00a0ok  \n10:19\u00a0<vmassol>\u00a0:)  \n10:19\u00a0<vmassol>\u00a0you don't need one to parse  \n10:19\u00a0<+jvdrean>\u00a0I get one from parsing  \n10:19\u00a0<vmassol>\u00a0this is what I wasn't understanding  \n10:19\u00a0<vmassol>\u00a0yep  \n10:22\u00a0<+Denis>\u00a0vmassol: part of them, there is a partial fix about a issue with migration of a copied XWikiPrefs document, and I am not really sure we have done the right thing about it, but I do not really know what to do  \n10:23\u00a0<+Denis>\u00a0and I have not receive enought feedback on the ML  \n10:23\u00a0<vmassol>\u00a0Denis: can it do more harm than is in 4.1.3?  \n10:24\u00a0<vmassol>\u00a0s/than/than what/  \n10:25\u00a0<+Denis>\u00a0it depend on your POV  \n10:27\u00a0<+Denis>\u00a0imo, it does not really solve the issue while taking on option on the future than I am not sure is right. At the same time, it is mostly unused feature that could be impacted  \n10:27\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:27\u00a0<+Denis>\u00a0I may better fix it before the release of M3, if I know what we really want to do  \n10:27\u00a0<+Denis>\u00a0I do not want to decide alone however  \n10:33\u00a0<vmassol>\u00a0Denis: who has the knowledge to provide input to you to decide?  \n10:34\u00a0<+Denis>\u00a0I think no one in particular :(  \n10:34\u00a0<vmassol>\u00a0maybe you could ping some committer with the knowledge offline and have some chat with him/her to decide and then report on the list?  \n10:34\u00a0<vmassol>\u00a0then take your best guess  \n10:34\u00a0<vmassol>\u00a0:)  \n10:36\u00a0<+Denis>\u00a0maybe you ?  \n10:37\u00a0<vmassol>\u00a0you'd need to explain the hwole thing though because I don't remember what it's about  \n10:38\u00a0<+Denis>\u00a0the initial story is that, if you copy XWikiPrefs, you copy also the internal custom mapping of it  \n10:38\u00a0<vmassol>\u00a0Denis: we can plan a call if you wish for later on today  \n10:39\u00a0<+Denis>\u00a0sure, when ?  \n10:39\u00a0<vmassol>\u00a015:00 French time, ok?  \n10:39\u00a0<+Denis>\u00a0ok  \n10:40\u00a0<+Denis>\u00a0thnaks  \n10:40\u00a0<vmassol>\u00a0ok  \n10:40\u00a0<vmassol>\u00a0Denis: I'm about to commit this in 4.1.4 and master: https://gist.github.com/3618610  \n10:40\u00a0<vmassol>\u00a0hope it's ok  \n10:41\u00a0<vmassol>\u00a0(in beginTransaction)  \n10:42\u00a0<vmassol>\u00a0oops forgot the params  \n10:42\u00a0<vmassol>\u00a0;)  \n10:43\u00a0<vmassol>\u00a0ok I've udated the gist: https://gist.github.com/3618610  \n10:44\u00a0<+Denis>\u00a0suddenly I am puzzled  \n10:44\u00a0<+Denis>\u00a0in com.xpn.xwiki.store.XWikiHibernateBaseStore#execute, there is a similar test after the opening of the transaction !  \n10:45\u00a0<+Denis>\u00a0weren't we in an execute when we got our issue ?  \n10:46\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (context.getDatabase() != null && !context.getDatabase().equals(getCurrentDatabase(context))) {  \n10:46\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0setDatabase(getSession(context), context);  \n10:46\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \n10:46\u00a0<vmassol>\u00a0?  \n10:46\u00a0<+Denis>\u00a0yes  \n10:46\u00a0<vmassol>\u00a0checking  \n10:46\u00a0<+Denis>\u00a0(note also the check for null)  \n10:46\u00a0<vmassol>\u00a0yes seen it  \n10:47\u00a0<vmassol>\u00a0updated https://gist.github.com/3618610  \n10:48\u00a0<vmassol>\u00a0checking now what was happeing with our hiddenfilter  \n10:48\u00a0<+Denis>\u00a0what I am afraid is that this \"if\" could do even more harm than good, since the current db is never restored...  \n10:49\u00a0<vmassol>\u00a0hmm  \n10:49\u00a0<+Denis>\u00a0\u2026but if it is there, it have probably been needed  \n10:49\u00a0<vmassol>\u00a0it was going through those lines  \n10:49\u00a0<vmassol>\u00a0ok  \n10:49\u00a0<+Denis>\u00a0and your change will void it  \n10:49\u00a0<vmassol>\u00a0yes  \n10:49\u00a0<vmassol>\u00a0but that's better  \n10:49\u00a0<vmassol>\u00a0I think this test should be removed  \n10:50\u00a0<vmassol>\u00a0wdyt?  \n10:50\u00a0<+Denis>\u00a0I agree, but the outcome is unknown, hope it does not break anything that works, like a readonly operation  \n10:50\u00a0<vmassol>\u00a0it's old code from artem  \n10:51\u00a0<vmassol>\u00a0XWIKI-2678  \n10:51\u00a0<vmassol>\u00a0XWIKI-2678: In some context URLFactory generate URL with wrong server/domain  \n10:51\u00a0<vmassol>\u00a0use context.get(\"hibcurrentdatabase\") instead of context.getOriginalDatabase() in store because there is different sense.  \n10:51\u00a0<vmassol>\u00a0ah no  \n10:51\u00a0<vmassol>\u00a0it's another one  \n10:52\u00a0<vmassol>\u00a0XWIKI-2603: Unable to access to different databases via one context in XWikiHibernateBaseStore#execute method  \n10:52\u00a0<vmassol>\u00a0XWIKI-2602: Ability to run interwiki Queries in QueryManager  \n10:52\u00a0<vmassol>\u00a0use context.getOriginalDatabase to discover mismatch of context & hibernate databases  \n10:52\u00a0<vmassol>\u00a0misc changes in JcrQuery  \n10:52\u00a0<vmassol>\u00a0probably XWIKI-2603  \n10:52\u00a0<vmassol>\u00a0yep  \n10:53\u00a0<vmassol>\u00a0http://jira.xwiki.org/browse/XWIKI-2603#  \n10:53\u00a0<+Denis>\u00a0and according to it, you will break some stores  \n10:54\u00a0<vmassol>\u00a0not sure  \n10:54\u00a0<vmassol>\u00a0because the commit did 2 things  \n10:54\u00a0<vmassol>\u00a0set the db in setDatabase  \n10:54\u00a0<vmassol>\u00a0and do this check  \n10:54\u00a0<vmassol>\u00a0in any case it looks wrong to do what is being done  \n10:55\u00a0<vmassol>\u00a0I don't understand why he sets again the DB  \n10:55\u00a0<vmassol>\u00a0if there's an inconsistency  \n10:55\u00a0<+Denis>\u00a0sure  \n10:56\u00a0<vmassol>\u00a0hmm  \n10:56\u00a0<vmassol>\u00a0the problem is that the DB is not reset to what it was before  \n10:56\u00a0<vmassol>\u00a0I think we wanted to support DB switching in nested queries  \n10:56\u00a0<vmassol>\u00a0s/we/he/  \n10:56\u00a0<vmassol>\u00a0the problem is that this is only coded in execute() and not in other store methods  \n10:57\u00a0<+Denis>\u00a0yes, and badly coded  \n10:59\u00a0<+Denis>\u00a0could only work with tail nesting in fact  \n11:02\u00a0<vmassol>\u00a0so wdyt we should do Denis?  \n11:02\u00a0<vmassol>\u00a0remove the check?  \n11:03\u00a0<vmassol>\u00a0(and see how it goes in our functional tests)  \n11:04\u00a0<+Denis>\u00a0you may if you really trust the tests, or you may change your throw into a warning, and keep an eyes on it...  \n11:06\u00a0<vmassol>\u00a0I'll remove it and keep the throw ATM  \n11:06\u00a0<vmassol>\u00a0and see if we get anytihng in our functional tests  \n11:06\u00a0<vmassol>\u00a0I'll commit on master only FTM  \n11:06\u00a0<+Denis>\u00a0ok  \n11:06\u00a0<vmassol>\u00a0hmm no I'll commit on both  \n11:07\u00a0<+Denis>\u00a0no sure this is good  \n11:07\u00a0<+Denis>\u00a0s/no/not  \n11:07\u00a0<vmassol>\u00a0ok, I'll comit on master only then  \n11:07\u00a0<vmassol>\u00a0I need to create a new issue then ;)  \n11:07\u00a0<vmassol>\u00a0(wanted to reuse XWIKI-8160)  \n11:07\u00a0<+Denis>\u00a0event if it works, I am not sure we are safe enougth  \n11:08\u00a0<+Denis>\u00a0to put that in a bug fix release  \n11:08\u00a0<vmassol>\u00a0jvdrean has the problem on xcloud so I'd like him to run this code there but maybe we need to make sure it passes our tests first  \n11:11\u00a0<+Denis>\u00a0Got a very unexpected issue with EM: Installing extension [org.xwiki.platform:xwiki-platform-legacy-oldcore-4.1.1]  \n11:11\u00a0<vmassol>\u00a0re \u00a08160, the problem was:  \n11:11\u00a0<vmassol>\u00a0- the first query was using executeRead  \n11:11\u00a0<vmassol>\u00a0- the second nested query was not using execute() thus the issue  \n11:14\u00a0<CIA-120>\u00a0Vincent Massol\u000f master\u000f \\* r798ee8e\u000f https://github.com/xwiki/xwiki-platform/commit/798ee8e1eb70a4e7922e1beeacec6a49d4864e97 \u000f/ (2 files in 2 dirs):\u000f XWIKI-8172: Fail the query if we find a nested database query within a transaction that operates on a different database - http://git.io/Gbi3ig  \n11:18\u00a0<+Denis>\u00a0mflorea: in fact, I have overlooked it, but in the dependencies, the legacy-oldcore-4.1.1 does not display a provided 4.1.3, and therefore it try to install it. Is it something recently changed/fixed ?  \n11:20\u00a0<+mflorea>\u00a0Denis: first of all xwiki-platform-legacy-oldcore is a core dependency and thus can't be installed/upgraded/downgraded/uninstalled.  \n11:21\u00a0<+Denis>\u00a0mflorea: I know what happen  \n11:21\u00a0<+mflorea>\u00a0I don't understand how you managed to trigger an install  \n11:21\u00a0<+Denis>\u00a0I have a not legacy core installed !  \n11:21\u00a0<+mflorea>\u00a0I see  \n11:22\u00a0<+mflorea>\u00a0it's a bit tricky because legacy-oldcore repackages oldcore  \n11:22\u00a0<+Denis>\u00a0exactly, and the reverse is true as well  \n11:22\u00a0<+mflorea>\u00a0need to check with tmortagne what's the expected behavior  \n11:23\u00a0<+Denis>\u00a0I could open a JIRA, wdyt ?  \n11:23\u00a0<+mflorea>\u00a0but EM should probably recognize legacy-oldcore as a 'feature' of oldcore, and thus think they are the same extension, preventing you from installing it  \n11:24\u00a0<+mflorea>\u00a0need to check with Thomas first  \n11:24\u00a0<+mflorea>\u00a0let me ping him on skype, he's not on irc it seems  \n11:24\u00a0<+Denis>\u00a0is he there at all ?  \n11:26\u00a0<+mflorea>\u00a0hmm, he's not there either, was there not too long ago  \n11:27\u00a0<+mflorea>\u00a0but you can report the issue anyway  \n11:27\u00a0<+Denis>\u00a0mmm  \n11:28\u00a0<+Denis>\u00a0seem legacy-oldcore properly report oldcore to be available  \n11:28\u00a0<+mflorea>\u00a0I'm not sure if EM can replace a jar, because in this case, when you install legacy-oldcore, it should replace the oldcore jar  \n11:28\u00a0<+Denis>\u00a0since the reverse is not fully true, it is finally ok  \n11:29\u00a0<+Denis>\u00a0but, we should probably prevent installing legacy, since this is bad  \n11:29\u00a0<+mflorea>\u00a0hmm, indeed, but still, we need a way to prevent or support installing legacy-oldcore when oldcore is present  \n11:31\u00a0<+Denis>\u00a0and maybe state clearly that extension should depends on oldcore and not legacy-oldcore, when possible  \n11:31\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n11:39\u00a0<vmassol>\u00a0jvdrean: have you used the uiextension module anywhere yet?  \n11:43\u00a0<+jvdrean>\u00a0vmassol: no  \n11:43\u00a0<vmassol>\u00a0jvdrean: woudl be good to have at least one usage before tomorrow  \n11:43\u00a0<+jvdrean>\u00a0yes  \n11:43\u00a0<vmassol>\u00a0ok  \n11:54\u00a0<+Denis>\u00a0mflorea: from a larger perspective, we should prevent installing legacy module when the non-legacy one is present. I wonder how to avoid the singularity this case. How does legacy provide the non-legacy core actually ?  \n11:56\u00a0<+mflorea>\u00a0Denis: https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-legacy/xwiki-platform-legacy-oldcore/pom.xml#L37  \n11:58\u00a0<+Denis>\u00a0does it means that we have missed the check that prevent installing a extension requiring a specific package that provide a feature already installed ?  \n12:01\u00a0<+mflorea>\u00a0I'm not sure what you mean. So in your case you had oldcore already installed. What extension did you try to install?  \n12:04\u00a0<+Denis>\u00a0mflorea: mine, which was depending on the legacy-oldcore  \n12:05\u00a0<+mflorea>\u00a0I understood that you tried to install an extension that depends on legacy-oldcore, which was not present (legacy-oldcore provides oldcore, but not the other way around) so EM tried to install legacy-oldcore. We need to fix EM to detect that legacy-oldcore repackages oldcore (but also has additional stuff) and either replace the jars or unload classes from memory, or simply prevent it, I don't know exactly. Thomas knows better what is possible to implement  \n12:07\u00a0<+mflorea>\u00a0the problem is generic: you have extension A, and extension B which packages A + some other stuff. With the current mechanism, we can say in B's pom that it provides A, but there's no way to tell EM that B should \\_replace\\_ A (i.e. B requires A to be uninstalled)  \n12:07\u00a0<+Denis>\u00a0more generally, I think we should not allow installing an extension that has a dependency on a different package that provide a feature already installed  \n12:20\u00a0<+Denis>\u00a0mflorea: http://jira.xwiki.org/browse/XWIKI-8173  \n12:25\u00a0<+mflorea>\u00a0Denis: I talked with Thomas, and EM should theoretically prevent legacy-oldcore from being installed if oldcore is present. The 'feature' property from legacy-oldcore POM is used in both directions: prevents oldcore from being installed when legacy-oldcore is present and should prevent legacy-oldcore from being installed when oldcore is present.  \n12:26\u00a0<+mflorea>\u00a0\u00a0Ideally, EM should \"replace\" the extension, but this is no possible (read 'very difficult') with core extensions because we don't control the class loader that was used to load them (application container's class loader). For now, best is to not depend on legacy-oldcore, but oldcore, whenever possible  \n12:36\u00a0<+jvdrean>\u00a0vmassol: A database transaction is already started (the current database is [null]) and some code is trying to load/save data from another database [xwiki].  \n12:36\u00a0<vmassol>\u00a0jvdrean: in the build?  \n12:36\u00a0<+jvdrean>\u00a0this is what any request on a fresh XE returns  \n12:37\u00a0<vmassol>\u00a0strange I had checked it on my wiki  \n12:38\u00a0<vmassol>\u00a0trying again  \n12:39\u00a0<vmassol>\u00a0I wonder how \u00a0a transaction can be started without any db set but i could easily exclude this case  \n12:39\u00a0<vmassol>\u00a0(if it's valid)  \n12:40\u00a0<vmassol>\u00a0jvdrean: what url are you calling?  \n12:40\u00a0<vmassol>\u00a0(so that I can reproduce)  \n12:40\u00a0<+jvdrean>\u00a0http://localhost:8080/xwiki/bin/view/Main/  \n12:40\u00a0<vmassol>\u00a0loading the homep age doesn't generate any problem  \n12:40\u00a0<vmassol>\u00a0strange  \n12:41\u00a0<+jvdrean>\u00a0triggered by  \n12:41\u00a0<+jvdrean> at com.xpn.xwiki.XWiki.initializeMandatoryClasses(XWiki.java:817)  \n12:41\u00a0<+jvdrean> at com.xpn.xwiki.XWiki.initXWiki(XWiki.java:796)  \n12:41\u00a0<+jvdrean> at com.xpn.xwiki.XWiki.<init>(XWiki.java:737)  \n12:41\u00a0<+jvdrean> at com.xpn.xwiki.XWiki.getMainXWiki(XWiki.java:394)  \n12:41\u00a0<+jvdrean> at com.xpn.xwiki.XWiki.getXWiki(XWiki.java:485)  \n12:42\u00a0<vmassol>\u00a0empty DB?  \n12:43\u00a0<vmassol>\u00a0ok got it  \n12:43\u00a0<vmassol>\u00a0I had 2 oldcore jars  \n12:44\u00a0<vmassol>\u00a0fixing the check for not null  \n12:44\u00a0<vmassol>\u00a0I'll check after why  \n12:46\u00a0<vmassol>\u00a0ok makes sense that initially there's no db set  \n12:48\u00a0<CIA-120>\u00a0Vincent Massol\u000f master\u000f \\* rd5012cc\u000f https://github.com/xwiki/xwiki-platform/commit/d5012cc8c26484398fb66f8f275640997a858fc8 \u000f/ xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/store/XWikiHibernateBaseStore.java :\u000f XWIKI-8172: Fail the query if we find a nested database query within a transaction that operates on a different database - http://git.io/QC0Bcw  \n13:00\u00a0<CIA-120>\u00a0Vincent Massol\u000f master\u000f \\* r9a0db04\u000f https://github.com/xwiki/xwiki-platform/commit/9a0db041b6c05bc042c8d77ccccbc2df19a6848e \u000f/ xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/store/hibernate/query/HqlQueryExecutor.java :\u000f [Misc] Remove deprecated usage - http://git.io/RP\\_hgA  \n13:01\u00a0<mflorea>\u00a0has quit  \n13:04\u00a0<CIA-120>\u00a0Vincent Massol\u000f master\u000f \\* r847dee9\u000f https://github.com/xwiki/xwiki-platform/commit/847dee91cd04741dff43577b0efdb1f6c4585fee \u000f/ xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/store/hibernate/query/HqlQueryExecutor.java :\u000f [Misc] Simplify code (remove duplication) - http://git.io/Ww6sDw  \n13:36\u00a0<+Denis>\u00a0vmassol: should'nt it be xwiki initially, and not null ?  \n13:37\u00a0<mflorea>\u00a0has joined #xwiki  \n13:37\u00a0<+Denis>\u00a0mflorea: do you know if this has been introduce after 4.1.3 ?  \n13:39\u00a0<+mflorea>\u00a0Denis: I don't know..  \n13:39\u00a0<+Denis>\u00a0I have reported against master, but I have not check that in fact, I could remove if we have any doubt and check later  \n13:39\u00a0<+Denis>\u00a0what is sure, is that in 4.1.3 the check is not both way  \n13:39\u00a0<+mflorea>\u00a0ok  \n13:46\u00a0<vmassol>\u00a0Denis: ideally yes I agree  \n13:47\u00a0<vmassol>\u00a0but the DB isn't set initially  \n13:47\u00a0<vmassol>\u00a0it's set only on the first DB access  \n13:47\u00a0<vmassol>\u00a0and startTx is called before that  \n13:48\u00a0<+Denis>\u00a0difficult to fix ?  \n13:48\u00a0<vmassol>\u00a0by DB I mean \"hibcurrentdatabase\"  \n13:48\u00a0<+Denis>\u00a0yes, I get it  \n13:48\u00a0<vmassol>\u00a0no idea but I certainly wouldn't want to touch that myself  \n13:48\u00a0<CIA-120>\u00a0has quit  \n13:49\u00a0<+Denis>\u00a0maybe just adding a set in the intialization of the component  \n14:01\u00a0<sdumitriu>\u00a0has joined #xwiki  \n14:08\u00a0<coud>\u00a0has joined #xwiki  \n14:25\u00a0<CIA-121>\u00a0has joined #xwiki  \n14:32\u00a0<eshan>\u00a0has quit  \n14:57\u00a0<vmassol>\u00a0could someone check myxwiki.org asap (see mail)?  \n14:57\u00a0<vmassol>\u00a0(entering call in 2 minutes)  \n15:00\u00a0<CIA-121>\u00a0Vincent Massol\u000f master\u000f \\* r97154c2\u000f https://github.com/xwiki/xwiki-rendering/commit/97154c2c6eac14d35cee6ce8713501ca8413f878 \u000f/ xwiki-rendering-macros/xwiki-rendering-macro-content/src/main/java/org/xwiki/rendering/internal/macro/content/ContentMacro.java :\u000f XRENDERING-226: Add a Content macro to be able to mix content in different syntaxes - http://git.io/L1NN0w  \n15:02\u00a0<polx>\u00a0has quit  \n15:02\u00a0<polx>\u00a0has joined #xwiki  \n16:07\u00a0<CIA-121>\u00a0Denis Gervalle\u000f master\u000f \\* r544f0e6\u000f https://github.com/xwiki/xwiki-platform/commit/544f0e64c7c9a707d6f3122558d309401e3870a5 \u000f/ xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/store/migration/hibernate/R40000XWIKI6990DataMigration.java :\u000f XWIKI-8126: Better error reporting when proper hibernate mapping is not found during R40000XWIKI6990 - http://git.io/Qt\\_4zg  \n16:09\u00a0<CIA-121>\u00a0Denis Gervalle\u000f stable-4.1.x\u000f \\* r88a665e\u000f https://github.com/xwiki/xwiki-platform/commit/88a665e3d758bf56c378f3428fbbcea8d3086b64 \u000f/ xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/store/migration/hibernate/R40000XWIKI6990DataMigration.java :\u000f XWIKI-8126: Better error reporting when proper hibernate mapping is not found during R40000XWIKI6990 - http://git.io/1gF2kg  \n16:17\u00a0<sdumitriu>\u00a0has quit  \n16:17\u00a0<sdumitriu>\u00a0has joined #xwiki  \n16:35\u00a0<polx>\u00a0has quit  \n16:36\u00a0<polx>\u00a0has joined #xwiki  \n16:37\u00a0<polx>\u00a0has quit  \n16:38\u00a0<polx>\u00a0has joined #xwiki  \n17:22\u00a0<sdumitriu>\u00a0has quit  \n17:33\u00a0<coud>\u00a0has quit  \n17:44\u00a0<me>\u00a0has joined #xwiki  \n17:44\u00a0<me>\u00a0is now known as <Guest51431>  \n17:44\u00a0<Guest51431>\u00a0bonjour  \n17:45\u00a0<Guest51431>\u00a0I'm running Xwiki 3.036  \n17:47\u00a0<Enygma`>\u00a0has quit  \n17:50\u00a0<evalica>\u00a0has quit  \n17:57\u00a0<Guest51431>\u00a0is there a way to delete a page containing the / character in it's name ?  \n18:56\u00a0<Guest51431>\u00a0I found the answer : create a page with velocity macro  \n18:56\u00a0<Guest51431>\u00a0$xwiki.getDocument(\"SpaceName.DocumentName\").delete()  \n19:02\u00a0<Guest51431>\u00a0thanks to all  \n19:02\u00a0<Guest51431>\u00a0Bye  \n19:02\u00a0<Guest51431>\u00a0has quit  \n19:02\u00a0<vmassol>\u00a0bye  \n19:08\u00a0<gdelhumeau>\u00a0has quit  \n19:17\u00a0<CIA-121>\u00a0Jean-Vincent Drean\u000f master\u000f \\* ra0e4aee\u000f https://github.com/xwiki/xwiki-platform/commit/a0e4aee4d95acadd9d4aea7fff428c2f71cbf60f \u000f/ (8 files in 8 dirs):\u000f XWIKI-649 : Mechanism for inserting custom content in pre-existing code - http://git.io/0NJOnw  \n19:54\u00a0<Denis>\u00a0has quit  \n20:31\u00a0<Denis>\u00a0has joined #xwiki  \n20:36\u00a0<Denis>\u00a0has quit  \n21:01\u00a0<vmassol>\u00a0has quit  \n21:19\u00a0<vmassol>\u00a0has joined #xwiki  \n21:40\u00a0<vmassol>\u00a0has quit  \n21:47\u00a0<vmassol>\u00a0has joined #xwiki  \n21:51\u00a0<vmassol>\u00a0has quit  \n22:01\u00a0<vmassol>\u00a0has joined #xwiki  \n22:10\u00a0<vmassol>\u00a0has quit  \n22:25\u00a0<vmassol>\u00a0has joined #xwiki  \n23:01\u00a0<vmassol>\u00a0has quit  \n23:16\u00a0<rrodriguez>\u00a0has joined #xwiki  \n23:20\u00a0<vmassol>\u00a0has joined #xwiki  \n23:21\u00a0<vmassol>\u00a0has quit  \n23:44\u00a0<rrodriguez>\u00a0has quit  \n\n"}