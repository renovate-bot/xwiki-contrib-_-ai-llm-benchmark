{"id": "dev:IRC.xwikiArchive20100107", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100107", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nxwikibot joined #xwiki at 15:36  \nxwiki-bridge - (15:36): [tmortagne] Vincent Massol: i know what is the issue  \nxwiki-bridge - (15:36): [tmortagne] things is not not reaaly a bug in fact  \nxwiki-bridge - (15:36): [tmortagne] test.png|Financing is a valid file name  \nxwiki-bridge - (15:36): [tmortagne] \"test.png|Financing\"  \nxwiki-bridge - (15:37): [Vincent Massol] hmm  \nxwiki-bridge - (15:37): [Vincent Massol] it probably shouldn't be in the context of a table  \nxwiki-bridge - (15:37): [Vincent Massol] you'd escape it if you wanted it when in a table I think  \nxwiki-bridge - (15:38): [Vincent Massol] or use [[image:xxx]]  \nxwiki-bridge - (15:38): [Vincent Massol] wdyt?  \nxwiki-bridge - (15:38): [tmortagne] probably, but we have the same issue with other use case then  \nxwiki-bridge - (15:38): [Vincent Massol] yes  \nxwiki-bridge - (15:39): [tmortagne] (((test.png)))  \nxwiki-bridge - (15:39): [Vincent Massol] this is not working?  \nxwiki-bridge - (15:39): [Vincent Massol] (((image:test.ong))) isn't working either?  \nxwiki-bridge - (15:39): [tmortagne] it should not, normally the ))) is taken as file name  \nxwiki-bridge - (15:39): [Vincent Massol] ))) is part of the image name?  \nxwiki-bridge - (15:39): [tmortagne] (I did not tested)  \nxwiki-bridge - (15:39): [Vincent Massol] if this is the case that also looks a bug to me  \nxwiki-bridge - (15:40): [tmortagne] thing is it's a big change to support this properly in the parser  \nxwiki-bridge - (15:40): [Vincent Massol] yes  \nxwiki-bridge - (15:40): [tmortagne] it mean we need at least 4 differents context instead of the current two  \nxwiki-bridge - (15:41): [Vincent Massol] indeed (((image:test.pnfg))) doesn't work either  \nxwiki-bridge - (15:41): [Vincent Massol] generates:   \nxwiki-bridge - (15:41): [Vincent Massol] <div><p><img src=\"/xwiki/bin/download/Main/Title/test.png))) <applewebdata://87B663AA-792D-4E74-B93B-1C4F6ED4AB43/xwiki/bin/download/Main/Title/test.png)))>\" class=\"wikimodel-freestanding\" alt=\"test.png)))\"/>&nbsp;hello</p></div>  \nxwiki-bridge - (15:41): [tmortagne] well it's possible to support it with a hack actually i think  \nxwiki-bridge - (15:42): [tmortagne] without several contexts but it's less clean  \nxwiki-bridge - (15:42): [Vincent Massol] we need to decide if this is a feature of 2.0 syntax or a bug  \nxwiki-bridge - (15:42): [Vincent Massol] ie whether we fix it in 2.0 or in 2.1  \nxwiki-bridge - (15:43): [tmortagne] looks more like a bug because it makes impossible to have an image at last element of a table cell  \nxwiki-bridge - (15:43): [Vincent Massol] I think it could a bug of 2.0  \nxwiki-bridge - (15:43): [tmortagne] you have to put a space  \nxwiki-bridge - (15:43): [Vincent Massol] yes and it's unlikely people will use image names that uses syntax delimiters  \nxwiki-bridge - (15:43): [Vincent Massol] (since they are doubled)  \nxwiki-bridge - (15:43): [Vincent Massol] well they can but it's going to be pretty rare  \nxwiki-bridge - (15:43): [tmortagne] et least not as fiule extension for sure  \nxwiki-bridge - (15:44): [Vincent Massol] what about this:  \nxwiki-bridge - (15:44): [Vincent Massol] \u2014image:test\u2014myname.png  \nxwiki-bridge - (15:44): [Vincent Massol] \u2014 is 2 dash  \nxwiki-bridge - (15:44): [Vincent Massol] testing  \nxwiki-bridge - (15:45): [tmortagne] it's always the same behavior \u2014 will be part of the file name here  \nxwiki-bridge - (15:45): [Vincent Massol] right it is  \nxwiki-bridge - (15:45): [Vincent Massol] using 2 dash in a file name is probbaly more common  \nxwiki-bridge - (15:45): [Vincent Massol] but still  \nxwiki-bridge - (15:46): [tmortagne] but handle all possible syntaxes like this mean looot of contexes  \nxwiki-bridge - (15:47): [Vincent Massol] yes we need to find if we can fix it easily or not  \nxwiki-bridge - (15:49): [tmortagne] we can fix some important container like table and groups and let inline styles behave as it is now  \nxwiki-bridge - (15:50): [tmortagne] i.e. use [[image.file]] syntax when there is an issue  \nxwiki-bridge - (15:50): [tmortagne] [[image:file]]  \nxwiki-bridge - (15:50): [Vincent Massol] \"looks more like a bug because it makes impossible to have an image at last element of a table cell\"  \nxwiki-bridge - (15:50): [tmortagne] thanks to this it's not blocker  \nxwiki-bridge - (15:50): [Vincent Massol] this is possible using the [[ ]]\u00a0syntax  \nxwiki-bridge - (15:50): [tmortagne] yes  \nxwiki-bridge - (15:50): [Vincent Massol] that\"'s what I did on xwiki.org  \nxwiki-bridge - (15:51): [Vincent Massol] so we could consider it not a bug  \nxwiki-bridge - (15:52): [Vincent Massol] and say that the inline syntax without [[ ]] can be used when there's no ambiguity and to use the [[ ]]] notation in other cases  \nxwiki-bridge - (15:52): [tmortagne] i think the question is: is it easier tol think of ~| to have | in the file name or is it easier to use [[]] to take care of not breaking the table  \nxwiki-bridge - (15:52): [tmortagne] i think [[]] is easier  \nxwiki-bridge - (15:52): [Vincent Massol] having | in the file name is not very common easier  \nxwiki-bridge - (15:52): [tmortagne] i.e. current behavior  \nxwiki-bridge - (15:53): [Vincent Massol] s/easier/either/  \nxwiki-bridge - (15:53): [tmortagne] and anyway image:file is just a shortcut for [[image:file]] officially  \nxwiki-bridge - (15:53): [Vincent Massol] if we keep the currenetbehavor then the converter should use [[ ]] then when inside a table cell at least  \nxwiki-bridge - (15:53): [tmortagne] so i guess it's ok if it doe snot work all the time  \nxwiki-bridge - (15:53): [Vincent Massol] or maybe always  \nxwiki-bridge - (15:54): [tmortagne] yes the converter should take care of that  \nxwiki-bridge - (15:55): [tmortagne] especially since it's not very difficult; anyway for the converter it's more general that this syntax issue: if a 1.0 image macro is fillowed by anything except a space it should use full syntax  \nxwiki-bridge - (15:55): [tmortagne] otherwise the file name will include the following content  \nxwiki-bridge - (15:56): [tmortagne] mayeb it's ok to make converter always use full syntax which is the safest  \nxwiki-bridge - (16:01): [tmortagne] Vincent Massol: \u00a0I created http://jira.xwiki.org/jira/browse/XWIKI-4730 that can be done quickly to be part of 2.1.2 and fix the issue at converter level at least until we decide what we do for the parser  \nxwiki-bridge - (16:01): [Vincent Massol] ok cool  \nxwiki-bridge - (16:02): [flavius.olaru] in a Skin Object i have macros.vm defined and i'm trying to override an existing macro, but i seem to fail, can anyone help me?  \nxwiki-bridge - (16:02): [flavius.olaru] should my macros.vm from Skin object be parsed after parsing the macros.vm from templates?  \nxwiki-bridge - (16:03): [flavius.olaru] \\*shouldn't?  \nxwiki-bridge - (16:03): [flavius.olaru] i'm on a XE 2.0.2  \nxwiki-bridge - (16:13): [Vincent Massol] tmortagne: re i18n for teh rendering  \nxwiki-bridge - (16:13): [Vincent Massol] we could do a temporary solution easily I think  \nxwiki-bridge - (16:13): [Vincent Massol] which is to call the message tool from the rendering module using introspection  \nxwiki-bridge - (16:13): [tmortagne] rendering module doe snot need any message tool  \nxwiki-bridge - (16:14): [Vincent Massol] I know  \nxwiki-bridge - (16:14): [Vincent Massol] I said temporary  \nxwiki-bridge - (16:14): [tmortagne] thats rendering client that are supposed to call it  \nxwiki-bridge - (16:14): [tmortagne] we do the right way temporary  \nxwiki-bridge - (16:14): [Vincent Massol] unless you think the cost of making the call in the client is the same as doing it from the rendering  \nxwiki-bridge - (16:14): [Vincent Massol] in any case there's only one client right now  \nxwiki-bridge - (16:15): [Vincent Massol] so indeed it shouldn't be much harder  \nxwiki-bridge - (16:15): [Vincent Massol] hmmm  \nxwiki-bridge - (16:15): [Vincent Massol] not sure  \nxwiki-bridge - (16:15): [tmortagne] basically waht we want for now it at WYSIWYG level  \nxwiki-bridge - (16:15): [Vincent Massol] yes  \nxwiki-bridge - (16:16): [Vincent Massol] so without the localization module do yout hink you'll have the time to do this? You'd leave the translations to guillaume or someone else  \nxwiki-bridge - (16:16): [tmortagne] the quickest way to support it i can see: the WYSIWYG generate translation key looking like rendering.<macroname>.<propertyname> and when it cant find value for it i use what the rendering provide  \nxwiki-bridge - (16:17): [tmortagne] also it's not only about java, the probleme is that currently message tool only look at core ApplicatioResources  \nxwiki-bridge - (16:18): [Vincent Massol] indeed that would be a quick solution  \nxwiki-bridge - (16:18): [tmortagne] the main work to do in i18n module was to add support for each macro to provide its own resource file  \nxwiki-bridge - (16:18): [Vincent Massol] mflorea: wdyt?  \nxwiki-bridge - (16:18): [mflorea] let me read  \nxwiki-bridge - (16:19): [tmortagne] mflorea: this part \"the WYSIWYG generate translation key looking like rendering.<macroname>.<propertyname> and when it cant find value for it i use what the rendering provide\"  \nxwiki-bridge - (16:19): [Vincent Massol] (we'd need to define the keys properly so that we can reuse the same ones later on as much a possible)  \nxwiki-bridge - (16:19): [tmortagne] rendering.<macroname>.propertyname  \nxwiki-bridge - (16:19): [tmortagne] Vincent Massol: yes would be better  \nxwiki-bridge - (16:20): [tmortagne] rendering.<macroname>.propertyname  \nxwiki-bridge - (16:20): [tmortagne] rendering.<macroname>.<propertyname>.description  \nxwiki-bridge - (16:21): [mflorea] Thomas, wdym by \"generate\"?  \nxwiki-bridge - (16:21): [tmortagne] hmm no  \nxwiki-bridge - (16:21): [tmortagne] rendering.<macroname>.<propertyname>.name  \nxwiki-bridge - (16:21): [tmortagne] rendering.<macroname>.<propertyname>.description  \nxwiki-bridge - (16:21): [Vincent Massol] yes better  \nxwiki-bridge - (16:21): [Vincent Massol] mflorea: construct  \nxwiki-bridge - (16:21): [mflorea] how, based on what?  \nxwiki-bridge - (16:21): [tmortagne] mflorea: you take the macro technical name, property technical name to find the literal name  \nxwiki-bridge - (16:21): [Vincent Massol] the metadata  \nxwiki-bridge - (16:22): [Vincent Massol] macro metadata  \nxwiki-bridge - (16:22): [tmortagne] you now the technical name, that's what you are currentlu printing  \nxwiki-bridge - (16:22): [tmortagne] for example include macro:  \nxwiki-bridge - (16:22): [tmortagne] you ask include macro for its properties  \nxwiki-bridge - (16:22): [mflorea] oh, so I look at the macro descriptor and build a key and use that key to retrieve the translation  \nxwiki-bridge - (16:22): [tmortagne] yes  \nxwiki-bridge - (16:23): [tmortagne] if you message tool don't return proper value for the key you use the technical/default name  \nxwiki-bridge - (16:24): [tmortagne] rendering.<macroname>.<propertyid>.name  \nxwiki-bridge - (16:24): [tmortagne] rendering.<macroname>.<propertyid>.description  \nxwiki-bridge - (16:24): [tmortagne] to be more clear  \nxwiki-bridge - (16:24): [tmortagne] rendering.<macronid>.<propertyid>.name  \nxwiki-bridge - (16:24): [tmortagne] rendering.<macronid>.<propertyid>.description  \nxwiki-bridge - (16:25): [Vincent Massol] glerouge: would oyu be able to do the french translations or could you find someone to do them?  \nxwiki-bridge - (16:25): [tmortagne] i stop now, i swear :)  \nxwiki-bridge - (16:25): [Vincent Massol] :)  \nxwiki-bridge - (16:25): [Vincent Massol] iterating is good  \nxwiki-bridge - (16:25): [glerouge] I'd be able to do them  \nxwiki-bridge - (16:25): [Vincent Massol] ok great  \nxwiki-bridge - (16:25): [Vincent Massol] mflorea: wdyt?  \nxwiki-bridge - (16:26): [Vincent Massol] is that something you could do?  \nxwiki-bridge - (16:26): [mflorea] yep  \nxwiki-bridge - (16:26): [Vincent Massol] great  \nxwiki-bridge - (16:26): [Vincent Massol] thanks!  \nxwiki-bridge - (16:26): [mflorea] it's not as performant as static keys, but will work  \nxwiki-bridge - (16:27): [Vincent Massol] it's temporary  \nxwiki-bridge - (16:27): [mflorea] GWT support i18n in two way, static, using an interface like Strings.MY\\_KEY, and dynamic, with key lookup  \nxwiki-bridge - (16:28): [tmortagne] the goal is not to have static key anyway  \nxwiki-bridge - (16:28): [mflorea] right now we're using only static, but lookup is possible  \nxwiki-bridge - (16:28): [Vincent Massol] in the future you'd get the keys from the rendering module  \nxwiki-bridge - (16:29): [mflorea] so what's the final key form?  \nxwiki-bridge - (16:29): [mflorea] rendering.<macronid>.<propertyid>.name  \nxwiki-bridge - (16:29): [mflorea] rendering.<macronid>.<propertyid>.description  \nxwiki-bridge - (16:30): [tmortagne] rendering.macro.<macronid>.<propertyid>.name  \nxwiki-bridge - (16:30): [tmortagne] otherwise we will have collisions  \nxwiki-bridge - (16:30): [tmortagne] with other rendering related translations  \nxwiki-bridge - (16:31): [mflorea] ok  \nxwiki-bridge - (16:31): [tmortagne] this naming follow configuration rules  \nxwiki-bridge - (16:31): [tmortagne] i.e. start with the package without the org.xwiki part  \nxwiki-bridge - (16:31): [mflorea] so what do we translate: macro name, macro description, parameter name, parameter description  \nxwiki-bridge - (16:32): [mflorea] enum values should be translated too I think  \nxwiki-bridge - (16:32): [tmortagne] rendering.macro.<macronid>.property.<propertyid>.name (to not have collision when a macro property id is name for example)  \nxwiki-bridge - (16:32): [tmortagne] mflorea: yes enum too  \nxwiki-bridge - (16:33): [Vincent Massol] tmortagne: is rendering.macro.macroid what we currently use?  \nxwiki-bridge - (16:33): [Vincent Massol] we have a macro that has some param already, don't recall which one  \nxwiki-bridge - (16:33): [Vincent Massol] let me check  \nxwiki-bridge - (16:33): [tmortagne] we use for what ?  \nxwiki-bridge - (16:33): [tmortagne] configuration ?  \nxwiki-bridge - (16:34): [Vincent Massol] yes  \nxwiki-bridge - (16:34): [tmortagne] we macro with configuration yes  \nxwiki-bridge - (16:34): [tmortagne] let me think  \nxwiki-bridge - (16:34): [tmortagne] velocity i think  \nxwiki-bridge - (16:35): [Vincent Massol] I don't see them in xwiki.properties.vm  \nxwiki-bridge - (16:35): [tmortagne] it's the configuration for the default filter  \nxwiki-bridge - (16:35): [tmortagne] which is wrong btw  \nxwiki-bridge - (16:36): [tmortagne] DefaultVelocityMacroConfiguration  \nxwiki-bridge - (16:36): [tmortagne] and buggy  \nxwiki-bridge - (16:36): [Vincent Massol] I think we also need translations fro categories  \nxwiki-bridge - (16:36): [tmortagne] PREFIX = \"macro.velocity\" is wrong  \nxwiki-bridge - (16:36): [tmortagne] getProperty(PREFIX + \"filter\", DEFAULT\\_FILTER) is wrong  \nxwiki-bridge - (16:37): [tmortagne] i'm fixing it  \nxwiki-bridge - (16:37): [Vincent Massol] right now they are overriden by config values:  \nxwiki-bridge - (16:37): [Vincent Massol]   \nxwiki-bridge - (16:37): [Vincent Massol] #-# [Since 2.0M3]  \nxwiki-bridge - (16:37): [Vincent Massol] #-# Overrides default macro categories (Each macro has a default category already defined, for example  \nxwiki-bridge - (16:37): [Vincent Massol] #-# \"presentation\" for the Table of Contents Macro).  \nxwiki-bridge - (16:37): [Vincent Massol] #-#  \nxwiki-bridge - (16:37): [Vincent Massol] #-# Ex: To redefine the macro category for the TOC macro so that it'd be in the \"My Category\" category +  \nxwiki-bridge - (16:37): [Vincent Massol] #-# redefine the category for the Script Macro to be \"My Other Category\", you'd use:  \nxwiki-bridge - (16:37): [Vincent Massol] # rendering.macroCategories = toc:My Category  \nxwiki-bridge - (16:37): [Vincent Massol] # rendering.macroCategories = script:My Other Category  \nxwiki-bridge - (16:37): [Vincent Massol] but this is not good enough  \nxwiki-bridge - (16:37): [Vincent Massol] this is only to override  \nxwiki-bridge - (16:37): [Vincent Massol] we should also provide translated values by default  \nxwiki-bridge - (16:38): [Vincent Massol] mflorea: you need to add macro category to your list  \nxwiki-bridge - (16:38): [tmortagne] yes  \nxwiki-bridge - (16:38): [tmortagne] this is two different aspects  \nxwiki-bridge - (16:38): [mflorea] yes, basically, all the info from the descriptors  \nxwiki-bridge - (16:38): [tmortagne] btw it mean we don't support l10n in macro category overwrite  \nxwiki-bridge - (16:39): [Vincent Massol] right  \nxwiki-bridge - (16:39): [tmortagne] not that it's critical but it's a limitation  \nxwiki-bridge - (16:39): [Vincent Massol] we could  \nxwiki-bridge - (16:39): [Vincent Massol] by using a key in teh config  \nxwiki-bridge - (16:39): [Vincent Massol] instead of the value  \nxwiki-bridge - (16:40): [Vincent Massol] we could do what you suggested thomas  \nxwiki-bridge - (16:40): [Vincent Massol] ie consider it a key  \nxwiki-bridge - (16:40): [Vincent Massol] look for a value  \nxwiki-bridge - (16:40): [Vincent Massol] if not found use the key  \nxwiki-bridge - (16:40): [Vincent Massol] (as the value)  \nxwiki-bridge - (16:41): [Vincent Massol] rendering.macroCategories = <macroid>:<key or value>  \nxwiki-bridge - (16:41): [Vincent Massol] and if we decide to use a special char we can do that too  \nxwiki-bridge - (16:41): [Vincent Massol] <key> = @ + key value  \nxwiki-bridge - (16:42): [Vincent Massol] so this looks good IMO  \nxwiki-bridge - (16:42): [Vincent Massol] we have a way to support l10n in overriden cateogries  \nxwiki-bridge - (16:44): [tmortagne] Vincent Massol: yes we support it by putting \u00a0rendering.macroCategories in l10n resource instaed of xwiki.properties  \nxwiki-bridge - (16:45): [Vincent Massol] rendering.macroCategories would still be in xwiki.properties  \nxwiki-bridge - (16:45): [tmortagne] I don't understand then  \nxwiki-bridge - (16:45): [Vincent Massol] example:  \nxwiki-bridge - (16:46): [Vincent Massol] rendering.macroCategories = toc:rendering.macro.toc.category.content  \nxwiki-bridge - (16:46): [Vincent Massol] or simpler:  \nxwiki-bridge - (16:46): [tmortagne] or i do now  \nxwiki-bridge - (16:46): [Vincent Massol] rendering.macroCategories = toc:my.own.ey  \nxwiki-bridge - (16:46): [Vincent Massol] s/ey/key/  \nxwiki-bridge - (16:46): [tmortagne] i did not get the key instead of value part (which was clear)  \nxwiki-bridge - (16:46): [Vincent Massol] ok  \nxwiki-bridge - (16:47): [tmortagne] indeed since we want to do it for rendering in general we can do the same thing for categroies overwrite  \nxwiki-bridge - (16:48): [Vincent Massol] it would even be backward compat if we agree on the fallback mechanism  \nxwiki-bridge - (16:48): [Vincent Massol] (either with special char or ot)  \nxwiki-bridge - (16:48): [Vincent Massol] s/ot/not/  \nxwiki-bridge - (16:56): [Vincent Massol] hibernate question: is it the getter return type that tells what is the type to map for an object to be saved by hibernate?  \nxwiki-bridge - (16:57): [Vincent Massol] for example I see we have a version field of type Version but with a getVersion that returns String and in the hib mapping file, it says \"string\" for the version field  \nxwiki-bridge - (17:05): [Vincent Massol] hmm or maybe it calls toString() in this case?  \nCalebJamesDeLisl joined #xwiki at 17:09  \nxwiki-bridge - (17:17): [Vincent Massol] tmortagne: I feel that defaultDocumentReferenceResolver.resolve(\"\") is not good enough to get the default reference, wdyt?  \nxwiki-bridge - (17:17): [Vincent Massol] defaultReferenceDocumentReferenceResolver(new DocumentReference(null, null)) isn't better   \nxwiki-bridge - (17:17): [tmortagne] why do you need a \"default reference\" ?  \nxwiki-bridge - (17:18): [Vincent Massol] for exemple in the default constructor for XWikiDocument  \nxwiki-bridge - (17:18): [Vincent Massol] to replace:  \nxwiki-bridge - (17:18): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0public XWikiDocument()  \nxwiki-bridge - (17:18): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0{  \nxwiki-bridge - (17:18): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this(\"Main\", \"WebHome\");  \nxwiki-bridge - (17:18): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0}  \nxwiki-bridge - (17:18): [tmortagne] ok, hmm  \nxwiki-bridge - (17:19): [tmortagne] what is the issue with defaultDocumentReferenceResolver.resolve(\"\") ?  \nxwiki-bridge - (17:19): [tmortagne] not nice ?  \nxwiki-bridge - (17:19): [Vincent Massol] another option is to have an empty constrcutor on EntityReference  \nxwiki-bridge - (17:19): [Vincent Massol] defaultReferenceDocumentReferenceResolver(new DocumentReference())  \nxwiki-bridge - (17:19): [tmortagne] in real (not crappy old) use case i don't thing we really need a default reference  \nxwiki-bridge - (17:19): [tmortagne] think  \nxwiki-bridge - (17:20): [Vincent Massol] well the default constructor for XWikiDocument is valid I think  \nxwiki-bridge - (17:20): [tmortagne] i doubt we use it without setting at the document name after constructing the XWikiDocument  \nxwiki-bridge - (17:21): [Vincent Massol] yes you're right  \nxwiki-bridge - (17:21): [Vincent Massol] pretty unlikely it's used  \nxwiki-bridge - (17:21): [tmortagne] we generally use this constructor to call setFullName()  \nxwiki-bridge - (17:21): [tmortagne] old way of parsing a document name  \nxwiki-bridge - (17:21): [Vincent Massol] ok I'll use defaultDocumentReferenceResolver.resolve(\"\") for now then  \nxwiki-bridge - (17:21): [Vincent Massol] I'm adding \u00a0\u00a0\u00a0\u00a0public XWikiDocument(DocumentReference reference)  \nxwiki-bridge - (17:22): [tmortagne] which is replaced now by the use of the resolver  \nxwiki-bridge - (17:22): [Vincent Massol] and deprecating the other constructors  \nxwiki-bridge - (17:22): [tmortagne] ok  \nxwiki-bridge - (18:04): [Vincent Massol] tmortagne & others: when I create new apis (for ex in XWiki or XWikiDocument) to replace String by DocumentReference, do you think I should also remove the XWikiContext parameter (since it can be retrieved using the Execution component)?  \nxwiki-bridge - (18:06): [tmortagne] sounds better but I'm not 100% sure  \nxwiki-bridge - (18:06): [tmortagne] search potential issues  \nxwiki-bridge - (18:07): [tmortagne] since it's new api we can do whatever we want and we already decided that the normal way to get context now is by Execution context component so i guess we should remove XWikiContext parameters yes  \nxwiki-bridge - (18:08): [tmortagne] +1 for me  \nxwiki-bridge - (18:09): [Vincent Massol] hmm I guess it can be dangerous in cases where a new XWikiContext is created prior to calling the lethod  \nxwiki-bridge - (18:09): [Vincent Massol] method  \nxwiki-bridge - (18:09): [Vincent Massol] I'll probably leave it as is to be on the safe side  \nxwiki-bridge - (18:10): [tmortagne] well in fact in that case it's even better i think because it force user to make sure ExecutionContext contains the proper XWikiContext if he wants to use it  \nxwiki-bridge - (18:12): [tmortagne] otherwise it's very easy to have unsynchronised XWikiContext and Execution context  \nxwiki-bridge - (18:12): [tmortagne] like it is now  \nxwiki-bridge - (18:14): [Vincent Massol] yes but it could be something temporary and the context is restored just after  \nxwiki-bridge - (18:14): [tmortagne] yes that's the point  \nxwiki-bridge - (18:14): [tmortagne] for example you call doc.getRenderedContent  \nxwiki-bridge - (18:15): [tmortagne] with a new context  \nxwiki-bridge - (18:15): [tmortagne] but you did not put it in ExecutionContext  \nxwiki-bridge - (18:15): [Vincent Massol] for getRendredContent sure  \nxwiki-bridge - (18:15): [Vincent Massol] since it uses the EC  \nxwiki-bridge - (18:15): [tmortagne] since you change a lot of code is using the EC  \nxwiki-bridge - (18:16): [tmortagne] current resolver is uwing the EC  \nxwiki-bridge - (18:16): [Vincent Massol] what I mean is I 'd need to check all usages  \nxwiki-bridge - (18:16): [tmortagne] so if eny code is parsing a document name it will use the wrong information  \nxwiki-bridge - (18:16): [Vincent Massol] sure but it won't  \nxwiki-bridge - (18:16): [Vincent Massol] since I'm passing DocumentReferences as param  \nxwiki-bridge - (18:16): [Vincent Massol] there's no need top arse it  \nxwiki-bridge - (18:16): [tmortagne] it's not about the metod you are just calling  \nxwiki-bridge - (18:17): [tmortagne] the mathod you are calling can call severall other under it  \nxwiki-bridge - (18:17): [Vincent Massol] I'm just worried I might break stuff  \nxwiki-bridge - (18:17): [tmortagne] if its a final little one sure  \nxwiki-bridge - (18:17): [tmortagne] i don't see how  \nxwiki-bridge - (18:17): [tmortagne] it's new api  \nxwiki-bridge - (18:17): [Vincent Massol] right now the XWikiContext is passed  \nxwiki-bridge - (18:17): [Vincent Massol] so any code could pass its own version   \nxwiki-bridge - (18:17): [tmortagne] yes in old api  \nxwiki-bridge - (18:18): [Vincent Massol] and even if that's a bug I'd still get a different behavior  \nxwiki-bridge - (18:18): [tmortagne] i don't see what is has to do with the new one  \nxwiki-bridge - (18:18): [Vincent Massol] you're right but only if I change them all  \nxwiki-bridge - (18:19): [Vincent Massol] old code will still call new code for some time  \nxwiki-bridge - (18:19): [tmortagne] i still don't see how new api that doe snot exist anymore would break anything if you decide to not have some parameter in it  \nxwiki-bridge - (18:20): [Vincent Massol] myContext \u2014> oldmethod1 \u2014> oldmethod2 \u2014> newmethod (no context param)  \nxwiki-bridge - (18:20): [Vincent Massol] before: myContext \u2014> oldmethod1 \u2014> oldmethod2 \u2014> oldmethod3  \nxwiki-bridge - (18:20): [tmortagne] and ? it just mean that oldmethod2 has to make sure ExecutionContext contains theproper XWikiContext  \nxwiki-bridge - (18:20): [tmortagne] like any user of the new api  \nxwiki-bridge - (18:20): [Vincent Massol] after: myContext \u2014> oldmethod1 \u2014> oldmethod2 \u2014> newmethod (no context param)  \nxwiki-bridge - (18:20): [Vincent Massol] exactly my point  \nxwiki-bridge - (18:20): [Vincent Massol] I don't want to have to review the full chains of all methods  \nxwiki-bridge - (18:21): [Vincent Massol] it's just too hard  \nxwiki-bridge - (18:21): [Vincent Massol] I only put 3 methods chaining in my ex but imagine it with hundreds of methods for hundreds of apis \u2026 :) glurps  \nxwiki-bridge - (18:22): [Vincent Massol] unless we accept the risk and consider it's unlikely to happen. I'm not sure yet it's worth the trouble  \nxwiki-bridge - (18:22): [tmortagne] as you want, i'm just saying what is the best IMO as new api  \nxwiki-bridge - (18:22): [Vincent Massol] oh yes I agree, that's why I proposed it  \nxwiki-bridge - (18:23): [Vincent Massol] but I hadn't though of possible problems  \nxwiki-bridge - (18:23): [tmortagne] possible work  \nCalebJamesDeLisl - (18:30): Is there a way to create an EntityReference from another EntityReference plus a relative path? Like for resolving links?  \nxwiki-bridge - (18:31): [Vincent Massol] Caleb: the normalizer does that I think  \nCalebJamesDeLisl - (18:31): Thanks  \nxwiki-bridge - (18:31): [Vincent Massol] hint: current/reference or default/reference  \nxwiki-bridge - (18:31): [Vincent Massol] see these tests:  \nxwiki-bridge - (18:32): [Vincent Massol] http://svn.xwiki.org/svnroot/xwiki/platform/core/trunk/xwiki-model/src/test/java/org/xwiki/model/internal/reference/DefaultReferenceEntityReferenceResolverTest.java  \nxwiki-bridge - (18:32): [Vincent Massol] is that what you're looking for?  \nxwiki-bridge - (18:38): [tmortagne] CalebJamesDeLisl: you mean something like   \nxwiki-bridge - (18:38): [tmortagne] documentReference = resolve(spaceReference, documentName)  \nxwiki-bridge - (18:38): [tmortagne] ?  \nCalebJamesDeLisl - (18:39): I found what I was looking for in CurrentEntityReferenceNormalizer.  \nxwiki-bridge - (18:47): [Vincent Massol] if you wanted to control completely the default values to use you can have something like:  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0private DocumentReference normalizeReference(String referenceAsString, DocumentReference defaultReference)  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0{  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XWikiContext xcontext = getXWikiContext();  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XWikiDocument originalCurentDocument = xcontext.getDoc();  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try {  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0xcontext.setDoc(new XWikiDocument(defaultReference));  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.currentDocumentReferenceResolver.resolve(referenceAsString);  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} finally {  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0xcontext.setDoc(originalCurentDocument);  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \nxwiki-bridge - (18:47): [Vincent Massol] \u00a0\u00a0\u00a0\u00a0}  \nKermitTheFragger left at 19:05 (\"Leaving\"  \narkub left at 19:52 (Read error: 60 (Operation timed out)  \nxwiki-bridge - (20:02): [NielsMayer] is 2.1.1 the last planned 2.1 release?  \nxwiki-bridge - (20:03): [tmortagne] no there will be at least 2.1.2 and certainly more  \nxwiki-bridge - (20:07): [NielsMayer] thanks tmortagne -- when will 2.1.2 be out approximately?  \nxwiki-bridge - (20:08): [tmortagne] don't know, we need to decide, soon I hope, there is several important bugs fixed in it  \nxwiki-bridge - (20:08): [NielsMayer] ok thanks  \nxwiki-bridge - (21:06): [Vincent Massol] I have broken XE  \nxwiki-bridge - (21:06): [Vincent Massol] infinite recursion at exec time  \nxwiki-bridge - (21:06): [Vincent Massol] fixing  \nkaaloo joined #xwiki at 21:23  \nxwiki-bridge - (21:24): [Vincent Massol] hey hi luis, hope you're doing well  \nkaaloo left at 21:50 (\"Leaving.\"  \nkaaloo joined #xwiki at 23:31  \nkaaloo left at 23:57 (\"Leaving.\"  \n\n"}