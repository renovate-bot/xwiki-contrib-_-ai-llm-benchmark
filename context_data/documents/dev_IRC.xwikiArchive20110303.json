{"id": "dev:IRC.xwikiArchive20110303", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110303", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:00\u00a0<qwebirc44874>\u00a0Bonjour, je viens d'installer XEM sous Vista. La page d'accueil de xwiki me demande de faire un upload de xwiki-enterprise-wiki-2.7.1 or rien ne se passe. Pouvez-vous m'aider ? Merci  \n00:01\u00a0<vmassol>\u00a0Hi qwebirc44874 You can read http://platform.xwiki.org/xwiki/bin/view/AdminGuide/Installation  \n00:02\u00a0<vmassol>\u00a0for XEM it's actually athttp://manager.xwiki.org/xwiki/bin/view/AdminGuide/Installation  \n00:08\u00a0<qwebirc44874>\u00a0Indeed, I applied the instructions http://manager.xwiki.org/xwiki/bin/view/AdminGuide/Installation. I can get in superadmin. I can not even make the upload page import that appears.  \n00:24\u00a0<qwebirc44874>\u00a0I stop my research for now. Thank you for your help. Goodbye  \n00:24\u00a0<vmassol>\u00a0bye  \n00:32\u00a0<qwebirc44874>\u00a0has quit  \n00:49\u00a0<sdumitriu>\u00a0has joined #xwiki  \n01:06\u00a0<vmassol>\u00a0has quit  \n01:20\u00a0<jvdrean>\u00a0has quit  \n03:02\u00a0<DrLou>\u00a0has quit  \n03:16\u00a0<abusenius>\u00a0has quit  \n04:45\u00a0<DrLou>\u00a0has joined #xwiki  \n04:55\u00a0<sdumitriu>\u00a0has quit  \n05:34\u00a0<DrLou>\u00a0has quit  \n06:03\u00a0<Denis>\u00a0has quit  \n06:09\u00a0<Denis>\u00a0has joined #xwiki  \n08:08\u00a0<mflorea>\u00a0has joined #xwiki  \n08:13\u00a0<npm\\_>\u00a0has joined #xwiki  \n08:16\u00a0<npm>\u00a0has quit  \n08:18\u00a0<npm\\_>\u00a0has quit  \n08:20\u00a0<npm>\u00a0has joined #xwiki  \n08:27\u00a0<vmassol>\u00a0has joined #xwiki  \n08:37\u00a0<@cjdelisle>\u00a0http://interactiveasp.net/blogs/natesstuff/archive/2008/06/09/avoiding-circular-dependencies.aspx  \n08:42\u00a0<@cjdelisle>\u00a0I redact my claim that \"bad dependency graphs\" are the biggers problem as that claim is too general. I instead claim that \\_cyclical\\_ dependency graphs are the biggest problem (based on my analisys of what is wrong with the legacy core.)  \n08:42\u00a0<npm\\_>\u00a0has joined #xwiki  \n08:44\u00a0<npm>\u00a0has quit  \n08:49\u00a0<@cjdelisle>\u00a0http://codebetter.com/patricksmacchia/2008/02/10/layering-the-level-metric-and-the-discourse-of-method/  \n08:49\u00a0<@cjdelisle>\u00a0that one is quite a bit better  \n08:56\u00a0<tmortagne>\u00a0has joined #xwiki  \n08:58\u00a0<tuxlover>\u00a0has joined #xwiki  \n08:58\u00a0<tuxlover>\u00a0good morning  \n08:58\u00a0<tuxlover>\u00a0where can i find the users guide for Xwiki?  \n08:59\u00a0<vmassol>\u00a0http://enterprise.xwiki.org/  \n08:59\u00a0<vmassol>\u00a0then check the right menu  \n08:59\u00a0<vmassol>\u00a0(that's for XE)  \n08:59\u00a0<vmassol>\u00a0and good morning tuxlover  \n09:01\u00a0<npm>\u00a0has joined #xwiki  \n09:02\u00a0<npm\\_>\u00a0has quit  \n09:02\u00a0<lucaa>\u00a0has quit  \n09:03\u00a0<mflorea1>\u00a0has joined #xwiki  \n09:04\u00a0<mflorea>\u00a0has quit  \n09:08\u00a0<mflorea1>\u00a0has quit  \n09:09\u00a0<jvdrean>\u00a0has joined #xwiki  \n09:14\u00a0<mflorea>\u00a0has joined #xwiki  \n09:23\u00a0<evalica>\u00a0has joined #xwiki  \n09:31\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:41\u00a0<sburjan>\u00a0has joined #xwiki  \n09:53\u00a0<rrodriguez>\u00a0has joined #xwiki  \n09:57\u00a0<rrodriguez>\u00a0has quit  \n10:05\u00a0<jvdrean>\u00a0has quit  \n10:11\u00a0<lucaa>\u00a0has joined #xwiki  \n10:11\u00a0<esdaniel>\u00a0has joined #xwiki  \n10:12\u00a0<rrodriguez>\u00a0has joined #xwiki  \n10:13\u00a0<esdaniel>\u00a0hai... i'm not getting what I expect when i use the 'tag' RSS feature - i don't get the tagged pages, i get everything :-( Any clues as to why?  \n10:15\u00a0<tuxlover>\u00a0i think the Users Guide could use a rewrite  \n10:15\u00a0<tuxlover>\u00a0it's pretty old. isn't it?  \n10:17\u00a0<+tmortagne>\u00a0tuxlover: it's not really a user guide it's a wiki writter by the community so some part could be old and some other pretty new  \n10:18\u00a0<vmassol>\u00a0tuxlover: what's not working?  \n10:18\u00a0<vmassol>\u00a0tmortagne: just sent a new mail on velocity stuff. would love your feedback  \n10:18\u00a0<+tmortagne>\u00a0s/writter/written/  \n10:18\u00a0<+tmortagne>\u00a0vmassol: ok reading  \n10:19\u00a0<+tmortagne>\u00a0we it arrives :)  \n10:19\u00a0<vmassol>\u00a0it just arrived here  \n10:20\u00a0<vmassol>\u00a0tmortagne: It means I need to redo all I did yesterday on this but it looks much better this way IMO  \n10:23\u00a0<tuxlover>\u00a0i dont know how to add new features  \n10:24\u00a0<tuxlover>\u00a0i have those xar file and now i am unab\u00f6e to find the corrsponding button  \n10:24\u00a0<vmassol>\u00a0tuxlover: pointer please  \n10:24\u00a0<vmassol>\u00a0url?  \n10:25\u00a0<vmassol>\u00a0tmortagne: that said, I'm not sure we really need to separate xwiki-velocity into 2 modules\u2026. xwiki-velocity is for xwiki and we could decide that it makes sense only with a container\u2026. we'd just need to ensure we put xwiki-container-\\* in commons  \n10:25\u00a0<tuxlover>\u00a0i want to add one of these  \n10:26\u00a0<tuxlover>\u00a0http://extensions.xwiki.org/xwiki/bin/view/Main/  \n10:26\u00a0<vmassol>\u00a0tuxlover: you need to read the dev guide then  \n10:26\u00a0<vmassol>\u00a0this is not user guide :)  \n10:26\u00a0<tuxlover>\u00a0and i am usiong the development version  \n10:26\u00a0<tuxlover>\u00a0ok  \n10:28\u00a0<tuxlover>\u00a0you should include these files in the default wiki  \n10:29\u00a0<vmassol>\u00a0what files?  \n10:30\u00a0<tuxlover>\u00a0the developers guide  \n10:30\u00a0<vmassol>\u00a0well it's better to do the online version since it's up to date  \n10:30\u00a0<vmassol>\u00a0which it wouldn't be if it were packaged  \n10:31\u00a0<tuxlover>\u00a0right  \n10:31\u00a0<vmassol>\u00a0why do you think it's hard to go to xwiki.org?  \n10:31\u00a0<tuxlover>\u00a0becasue people want to use it on an offline machine for security purposes  \n10:31\u00a0<tuxlover>\u00a0like me  \n10:31\u00a0<vmassol>\u00a0sure but that can be downloaded from xwiki.org  \n10:31\u00a0<tuxlover>\u00a0but i use wget now  \n10:32\u00a0<vmassol>\u00a0you mean going to a web site is a security issue?  \n10:32\u00a0<vmassol>\u00a0you're not allowed to do that?  \n10:33\u00a0<tuxlover>\u00a0no the wiki is setup on a machine that is not connected to the internet  \n10:33\u00a0<vmassol>\u00a0that's fine but when you're developing  \n10:33\u00a0<vmassol>\u00a0why would you want to do development on a machine not connected to the internet?  \n10:33\u00a0<vmassol>\u00a0you have dev environment and production environment  \n10:34\u00a0<vmassol>\u00a0that production env is not connected to the internet I understand  \n10:34\u00a0<tuxlover>\u00a0becasue as long it is not finished there might be security issues  \n10:34\u00a0<vmassol>\u00a0but for development I don't get it  \n10:34\u00a0<vmassol>\u00a0in any case it's your choice  \n10:34\u00a0<vmassol>\u00a0I think we've disbaled PDF exports though on xwiki.org  \n10:34\u00a0<vmassol>\u00a0let me check  \n10:35\u00a0<vmassol>\u00a0no we haven't  \n10:35\u00a0<vmassol>\u00a0so you can get it as a PDF  \n10:35\u00a0<jstoldt>\u00a0what i don't get is why you need to view the dev guide when the extensions on extensions.xwiki.org usually come with a tiny description how to install them  \n10:36\u00a0<jstoldt>\u00a0besides, the vast marjority of stuff i checked is either a .xar which just needs to be imported (which is written on the page) or plain code...  \n10:38\u00a0<tuxlover>\u00a0ah super  \n10:38\u00a0<tuxlover>\u00a0can you point me to the site  \n10:39\u00a0<jstoldt>\u00a0O\\_o just pick a random extension from the list. like the lightbox macro: http://extensions.xwiki.org/xwiki/bin/view/Extension/Lightbox+Macro#HPrerequisites26InstallationInstructions  \n10:40\u00a0<jvdrean>\u00a0has joined #xwiki  \n10:40\u00a0<jstoldt>\u00a0that's pretty comprehensive for all i care...  \n10:41\u00a0<vmassol>\u00a0tmortagne: the real question is whether we want to be able to use xwiki-velocity without using a webapp resource loader. I'm not sure about that. We could need that but I'm not sure we'll ever need it.  \n10:42\u00a0<tuxlover>\u00a0ah its under contend  \n10:43\u00a0<jstoldt>\u00a0well, you ought to read all of it... :-S  \n10:44\u00a0<vmassol>\u00a0theres'a TOC at the top  \n10:44\u00a0<jstoldt>\u00a0indeed  \n10:58\u00a0<vmassol>\u00a0(\u00ec added it for that exact purpose ;))  \n10:58\u00a0<vmassol>\u00a0but if it's not visible enough we'll need to add a dirct link below the download button for ex  \n11:04\u00a0<jstoldt>\u00a0n'ah, i think it's fine  \n11:14\u00a0<rrodriguez>\u00a0has quit  \n12:28\u00a0<abusenius>\u00a0has joined #xwiki  \n12:51\u00a0<jstoldt>\u00a0has quit  \n13:16\u00a0<abusenius>\u00a0has quit  \n13:22\u00a0<vmassol>\u00a0ok velocity deps reduced and ready to be moved to commons  \n13:23\u00a0<vmassol>\u00a0next step: shared tests...  \n13:26\u00a0<jstoldt>\u00a0has joined #xwiki  \n13:26\u00a0<jstoldt>\u00a0yay, new 2 TB drive installed :-D  \n13:26\u00a0<vmassol>\u00a0nice  \n13:27\u00a0<jstoldt>\u00a0yeah, it was about time... 16 GB is not really worth being called \"archive\" X-D  \n13:35\u00a0<mflorea>\u00a0has quit  \n13:41\u00a0<sburjan>\u00a0has quit  \n13:41\u00a0<Enygma`1>\u00a0has joined #xwiki  \n13:45\u00a0<Enygma`>\u00a0has quit  \n13:45\u00a0<evalica>\u00a0has quit  \n13:46\u00a0<evalica>\u00a0has joined #xwiki  \n13:48\u00a0<Enygma`1>\u00a0has quit  \n13:49\u00a0<@cjdelisle>\u00a0\"Oh and there's the irc bot thing. lol @ people who think they can spam our wiki, recent changes get \u00a0dumped into the channel.\"  \n13:51\u00a0<Enygma`>\u00a0has joined #xwiki  \n13:57\u00a0<sburjan>\u00a0has joined #xwiki  \n14:05\u00a0<DrLou>\u00a0has joined #xwiki  \n14:13\u00a0<mflorea>\u00a0has joined #xwiki  \n14:19\u00a0<jvelociter>\u00a0has joined #xwiki  \n14:33\u00a0<abusenius>\u00a0has joined #xwiki  \n14:34\u00a0<jvelociter>\u00a0has quit  \n14:43\u00a0<vmassol>\u00a0cjdelisle: crypto unit tests are really taking too much time: http://nemo.sonarsource.org/drilldown/measures/207147?metric=test\\_execution\\_time  \n14:43\u00a0<vmassol>\u00a012 mn for the longer one!  \n14:43\u00a0<vmassol>\u00a016mn in total  \n14:43\u00a0<vmassol>\u00a0actually 32mn in total  \n14:44\u00a0<vmassol>\u00a0(and failing in the end: http://nemo.sonarsource.org/drilldown/measures/207147?metric=test\\_success\\_density )  \n14:45\u00a0<vmassol>\u00a0lucaa: some annotation tests failing http://nemo.sonarsource.org/drilldown/measures/207147?metric=test\\_success\\_density#  \n14:46\u00a0<vmassol>\u00a0(actually maybe that's no longer true - re the failing it was done some time back)  \n14:47\u00a0<vmassol>\u00a0technical debt has decreased a bit cool: http://nemo.sonarsource.org/dashboard/index/207147?did=1&period=3  \n14:47\u00a0<vmassol>\u00a0(still quite high)  \n14:48\u00a0<vmassol>\u00a0cjdelisle: cycles have increased! http://nemo.sonarsource.org/dashboard/index/207147?did=1&period=3  \n14:48\u00a0<vmassol>\u00a0http://nemo.sonarsource.org/drilldown/measures/207147?metric=package\\_cycles  \n14:49\u00a0<vmassol>\u00a0tmortagne: cycles in rendering api : http://nemo.sonarsource.org/drilldown/measures/207147?metric=package\\_cycles&rids%5B%5D=215557  \n14:52\u00a0<+tmortagne>\u00a0well between match and block and kind of hard to not have it, maybe BlockMatcher should be in block package directly  \n14:52\u00a0<@cjdelisle>\u00a0back  \n14:52\u00a0<@cjdelisle>\u00a0hey cyclic dependency checking?  \n14:52\u00a0<vmassol>\u00a0cjdelisle: yep  \n14:53\u00a0<@cjdelisle>\u00a0Nice :)  \n14:53\u00a0<+tmortagne>\u00a0if org.xwiki.rendering.renderer.printer depends on org.xwiki.rendering.internal.renderer.printer it sounds indeed pretty wrong  \n14:53\u00a0<+abusenius>\u00a0vmassol: I know how to make crypto tests use less time on linux, you can pass an option to java vm to use /dev/urandom as the randomness source  \n14:53\u00a0<+abusenius>\u00a0but it's somewhat a hack  \n14:53\u00a0<vmassol>\u00a0abusenius: ah that would be great  \n14:53\u00a0<vmassol>\u00a0because right now I have to exclude it from my build as otherwise they fail  \n14:53\u00a0<+abusenius>\u00a0and it needs to be done in the xwiki start script  \n14:54\u00a0<vmassol>\u00a0XE works fine for me but maybe because crypto is off by default?  \n14:54\u00a0<@cjdelisle>\u00a0Hmm I didn't think of that. I have a feeling some of the problem is generating big primes for the keys.  \n14:55\u00a0<@cjdelisle>\u00a0I suppose we could generate a test key pair and hard code them in the test file.  \n14:56\u00a0<+abusenius>\u00a0yes, it's because of seeding SecureRandom  \n14:56\u00a0<@cjdelisle>\u00a0\"crypto is off by default\" It is available by default AFAIK just not used.  \n14:56\u00a0<+abusenius>\u00a0-Djava.security.egd=file:/dev/./urandom  \n14:56\u00a0<+abusenius>\u00a0btw. csrf tests also take more time than needed because of that  \n14:57\u00a0<@cjdelisle>\u00a0I can see how there would be a lack of random on a headless box.  \n14:57\u00a0<@cjdelisle>\u00a0So it'd rather wait than generate all keys using the same random number \\*cough\\*sony  \n14:58\u00a0<+abusenius>\u00a0for testing purposes it does not really matter  \n14:58\u00a0<lucaa>\u00a0has quit  \n14:59\u00a0<@cjdelisle>\u00a0abusenius: \"Kryptographie (von griechisch: ???????, \u201everborgen\u201c und ???????, \u201eschreiben\u201c) \" <-- you?  \n14:59\u00a0<+abusenius>\u00a0yes :)  \n14:59\u00a0<@cjdelisle>\u00a0FYI we are supposed to not commit anything except ascii so you have to do \\u+1234  \n14:59\u00a0<+abusenius>\u00a0wanted to have some UTF-8 characters :)  \n15:00\u00a0<+abusenius>\u00a0ah, damn, forgot about that  \n15:00\u00a0<@cjdelisle>\u00a0It's the same as soon as the java compiler gets hold of it.  \n15:00\u00a0<@cjdelisle>\u00a0BTW: thanks for the test, I could see a signature validation failure over something like that.  \n15:00\u00a0<lucaa>\u00a0has joined #xwiki  \n15:02\u00a0<@cjdelisle>\u00a022:37 min ouch! It must have hung the machine at some point, I can't imagine that being an honest average.  \n15:02\u00a0<+abusenius>\u00a0sounds way too much indeed  \n15:02\u00a0<@cjdelisle>\u00a0It must have hung for a week.  \n15:03\u00a0<+abusenius>\u00a0even the default /dev/random is usually faster  \n15:03\u00a0<+abusenius>\u00a0I have never seen those tests take longer that a dozen of seconds on my machine  \n15:04\u00a0<+abusenius>\u00a0and a few seconds if I move my mouse very fast :)  \n15:04\u00a0<@cjdelisle>\u00a0That's probably because you move the mouse and that adds lots of nice random to the pool.  \n15:04\u00a0<@cjdelisle>\u00a0yea that  \n15:07\u00a0<+abusenius>\u00a0anyway, need to move my attention back to the thesis, happy hacking  \n15:08\u00a0<@cjdelisle>\u00a0What on?  \n15:09\u00a0<vmassol>\u00a0tmortagne: hmm strange, I've commented out \u00a0\u00a0\u00a0\u00a0public void initializeContainer() throws Exception in XWikiComponentInitializer and all unit tests in core still pass fine\u2026 :)  \n15:09\u00a0<+lucaa>\u00a0vmassol: there were tests failing at one point, tmortagne looked at them, iirc  \n15:09\u00a0<+tmortagne>\u00a0maybe clirr is skipped for it  \n15:09\u00a0<vmassol>\u00a0tmortagne: clirr?  \n15:10\u00a0<vmassol>\u00a0the initialize sets the app context  \n15:10\u00a0<+tmortagne>\u00a0ok did not seen \"unit test\"  \n15:10\u00a0<vmassol>\u00a0for me it means we can remove it and thus remove our dep on xwiki-container from shared test  \n15:10\u00a0<+tmortagne>\u00a0tough you were saying that the build was working even when nbreaking the api  \n15:10\u00a0<vmassol>\u00a0it's strange though  \n15:11\u00a0<+tmortagne>\u00a0i'm pretty sure shared test does not use container  \n15:11\u00a0<vmassol>\u00a0well it doesn in initializeContainer  \n15:11\u00a0<+tmortagne>\u00a0it's probably a leftover or a mix with the xwiki-core abstract test  \n15:11\u00a0<vmassol>\u00a0(that's what I commented out)  \n15:11\u00a0<vmassol>\u00a0(the mock)  \n15:11\u00a0<+tmortagne>\u00a0because components don't really need that IMO  \n15:12\u00a0<vmassol>\u00a0I think I know  \n15:12\u00a0<vmassol>\u00a0I modified the xwikiproperties config source  \n15:12\u00a0<vmassol>\u00a0to not fail if it cannot find the prop file  \n15:12\u00a0<vmassol>\u00a0so that probably makes it work even without the mock  \n15:12\u00a0<+tmortagne>\u00a0that was probably for that indeed  \n15:12\u00a0<vmassol>\u00a0I'll remove the mock  \n15:19\u00a0<+abusenius>\u00a0cjdelisle: [15:08] <cjdelisle> What on? <-- was it a question for me?  \n15:19\u00a0<@cjdelisle>\u00a0Yea, what is your thesus about?  \n15:20\u00a0<+abusenius>\u00a0I'm trying to prove that my translation from spi calculus (abstract language to write protocols) to java is secure  \n15:21\u00a0<vmassol>\u00a0ok I think we're ready to start the xwiki commons move....  \n15:21\u00a0<@cjdelisle>\u00a0Ahh provably secure. Be thankful you are not trying to prove the security level of a hash function :)  \n15:22\u00a0<+abusenius>\u00a0well, it is quite nasty, it seems that I'll not manage to prove it  \n15:22\u00a0<+abusenius>\u00a0but at least I'll have a formalization and a couple of simpler properties  \n15:23\u00a0<@cjdelisle>\u00a0Are you discounting the possibility of side channel attacks against the vm?  \n15:24\u00a0<+abusenius>\u00a0no, of course not, otherwise you can stop trying right away :)  \n15:24\u00a0<+abusenius>\u00a0idealized model -> idealized model  \n15:25\u00a0<vmassol>\u00a0tmortagne: so you fixed the issue with rendering-standalone?  \n15:25\u00a0<vmassol>\u00a0ah no still a problem: http://hudson.xwiki.org/view/Rendering/job/xwiki-rendering/63/console  \n15:25\u00a0<@cjdelisle>\u00a0indeed.  \n15:25\u00a0<vmassol>\u00a0I'll look at it  \n15:26\u00a0<vmassol>\u00a0now  \n15:28\u00a0<+tmortagne>\u00a0vmassol: no i can't find what is the issue I can't reproduce it  \n15:28\u00a0<+tmortagne>\u00a0even on the agent itself  \n15:28\u00a0<+tmortagne>\u00a0it fail only when built by hudson  \n15:30\u00a0<vmassol>\u00a0well the jar is not present in the local repository  \n15:36\u00a0<vmassol>\u00a0tmortagne: I'll try to use the shitty maven plugin instead  \n15:36\u00a0<vmassol>\u00a0sounds better with respect to this  \n15:36\u00a0<+tmortagne>\u00a0i'm pretty sure we have some script which is cleaning the local repository otherwise it would quickly be too big  \n15:43\u00a0<sdumitriu>\u00a0has joined #xwiki  \n15:55\u00a0<vmassol>\u00a0anyone has any idea why this orphan test is failing: http://hudson.xwiki.org/view/Functional%20Tests/job/xwiki-product-enterprise-tests/org.xwiki.enterprise$xwiki-enterprise-test-xmlrpc/418/testReport/org.xwiki.test.xmlrpc.confluence/OrphanedPageTest/Checking\\_orphans\\_for\\_XWiki\\_WatchListMessage/ ?  \n15:55\u00a0<vmassol>\u00a0WatchListMessage doesn't exist anymore?  \n16:18\u00a0<lucaa>\u00a0has quit  \n16:19\u00a0<vmassol>\u00a0hmm I wonder if we shouldn't merge platform and enterprise now that we have decided to have a commons top level project and now that we're going to have an extension manager to install extensions...  \n16:20\u00a0<@cjdelisle>\u00a0FWIW I think we should keep enterprise seperate and try to move more of the front end in that direction.  \n16:21\u00a0<vmassol>\u00a0enterprise is just a packaging  \n16:21\u00a0<vmassol>\u00a0there's really no difference with platform  \n16:21\u00a0<vmassol>\u00a0enterprise, manager, watch \u2014> enterprise + optional extensions  \n16:22\u00a0<vmassol>\u00a0etnerprise = foundation == runtime  \n16:22\u00a0<vmassol>\u00a0(minimal runtime)  \n16:22\u00a0<@cjdelisle>\u00a0Commons --> disparate independent reusable modules. \u00a0Platform --> unified system which starts and provides apis to build on (like php) \u00a0Enterprise --> a working wiki  \n16:22\u00a0<vmassol>\u00a0yes working needs a runtime, eactly  \n16:23\u00a0<vmassol>\u00a0ah missed the dot  \n16:23\u00a0<vmassol>\u00a0(wasn't there that's why I missed it ;))  \n16:23\u00a0<@cjdelisle>\u00a0where were you expecting a .?  \n16:23\u00a0<vmassol>\u00a0before Enterprise  \n16:23\u00a0<+sburjan>\u00a0hello. I have a short question. On a page, if I add 2 objects (WikiClassMacro and WikiMacroParameterClass). If I don't fill the Parameter class fields, I get an error when running the macro, even if the macro does \\_not\\_ use/read the parameters. Is this normal ? Could someone explain to me how the system works ?  \n16:24\u00a0<vmassol>\u00a0cjdelisle: sure but there's isn't much difference betwseen platform and enterprise, just some modules to do the packaging  \n16:24\u00a0<@cjdelisle>\u00a0That is unfortunate IMO  \n16:24\u00a0<lucaa>\u00a0has joined #xwiki  \n16:24\u00a0<vmassol>\u00a0anyway i'm not proposing any change now  \n16:24\u00a0<@sdumitriu>\u00a0Not quite  \n16:25\u00a0<vmassol>\u00a0just trying to add differentiation between commons and platform  \n16:25\u00a0<@sdumitriu>\u00a0platform/web doesn't have most of the plugins  \n16:25\u00a0<vmassol>\u00a0and having platform a runtime platform for building wiki apps would be a nice one  \n16:25\u00a0<vmassol>\u00a0plugins are dead  \n16:25\u00a0<@sdumitriu>\u00a0Nope  \n16:25\u00a0<vmassol>\u00a0extensions  \n16:25\u00a0<@sdumitriu>\u00a0They are mandatory for XE  \n16:25\u00a0<@sdumitriu>\u00a0Something required can't be dead  \n16:25\u00a0<vmassol>\u00a0I'm not talking today sergiu but more the vision  \n16:26\u00a0<@cjdelisle>\u00a0I would like to see the templates move from web to enterprise (even become wiki pages)  \n16:26\u00a0<@sdumitriu>\u00a0They are on the death bed, but still very much in charge  \n16:26\u00a0<vmassol>\u00a0in our vision plugins are dead and replaced by extensions installed at runtime  \n16:26\u00a0<vmassol>\u00a0well some can be bundled and others installed at runtie  \n16:26\u00a0<@sdumitriu>\u00a0cjdelisle: +1, that's Template eXtensions, something I wanted to work on for a while  \n16:26\u00a0<@sdumitriu>\u00a0vmassol: s/are/will be  \n16:26\u00a0<vmassol>\u00a0if you remove wiki specific things from platform  \n16:27\u00a0<vmassol>\u00a0it'll be left empty  \n16:27\u00a0<@sdumitriu>\u00a0s/are/want them to be  \n16:27\u00a0<@sdumitriu>\u00a0But right now, that's not true  \n16:27\u00a0<@cjdelisle>\u00a0That depends on the definition of 'wiki'.  \n16:27\u00a0<@sdumitriu>\u00a0Try removing all the plugins, I doubt XWiki will be able to do anything useful  \n16:28\u00a0<vmassol>\u00a0let's not argue on vocabulary  \n16:28\u00a0<vmassol>\u00a0especially since we agree  \n16:28\u00a0<@cjdelisle>\u00a0getDocument does not belong in enterprise IMO it is a low level function which could be used for a wiki, could be used for a cms.  \n16:29\u00a0<vmassol>\u00a0then it's commons  \n16:29\u00a0<vmassol>\u00a0IMO 3 levels is way too much  \n16:29\u00a0<vmassol>\u00a0(if that's whay you're hinting at)  \n16:29\u00a0<vmassol>\u00a0s/whay/what/  \n16:30\u00a0<@cjdelisle>\u00a0On the other hand (I claim) register-inline.vm belongs in enterprise, it is not really an API function.  \n16:30\u00a0<vmassol>\u00a0commons lib, other commons lib not really related to wikis, more libs only making sense when creating a wiki  \n16:30\u00a0<vmassol>\u00a0cjdelisle: it don't agree  \n16:30\u00a0<vmassol>\u00a0lots of people are using xwiki as a cms for ex  \n16:30\u00a0<vmassol>\u00a0even with inline.vm  \n16:31\u00a0<vmassol>\u00a0it just doesn't have to be mandatory  \n16:31\u00a0<vmassol>\u00a0it's not because stuff is in platform/ that you have to use it  \n16:31\u00a0<vmassol>\u00a0you can cherry pick what you need for your tool  \n16:31\u00a0<vmassol>\u00a0but I find the notion of a runtime platform interesting  \n16:31\u00a0<@cjdelisle>\u00a0IMO it is kind of embarassing to ask people to unzip the war file. That is something which ought to be worked against.  \n16:32\u00a0<vmassol>\u00a0sure, I hate it too but that's not really related  \n16:33\u00a0<@cjdelisle>\u00a0Well unless we get templates off the filesystem, we will have to keep on doing that.  \n16:33\u00a0<vmassol>\u00a0IMO the value of xwiki is way more in the runtime platform  \n16:33\u00a0<vmassol>\u00a0than in providing building blocks (lib level)  \n16:33\u00a0<vmassol>\u00a0cjdelisle: why?  \n16:34\u00a0<@cjdelisle>\u00a0Well people can override them in a new skin but that means we have 2 places where skins might be defined which I don't mich like either.  \n16:34\u00a0<vmassol>\u00a0(reuse at lib level doesn't really work in general except for large and very generic domains)  \n16:34\u00a0<@cjdelisle>\u00a0\\*much  \n16:35\u00a0<@cjdelisle>\u00a0(unrelated) I confess, your proposal for entity references is truely the only way to go in the core level. Any misgivings I had about them are wrong.  \n16:37\u00a0<vmassol>\u00a0cool  \n16:37\u00a0<vmassol>\u00a0:)  \n16:40\u00a0<@cjdelisle>\u00a0I like this consept of 3 levels where the commons are unrelated libraries which anyone can use in their projects. Platform is a unified engine which runs and provides a rich set of apis for any use case but does not know anything about how it will be used. Enterprise is an application which runs on that system and showcases all of it's great functionality.  \n16:40\u00a0<vmassol>\u00a0yes it's quite good  \n16:41\u00a0<vmassol>\u00a0commons / platform are the harder to justify though  \n16:41\u00a0<vmassol>\u00a0the differences between both is light  \n16:41\u00a0<vmassol>\u00a0hence my hesitation in starting commons right now\u2026 :)  \n16:42\u00a0<vmassol>\u00a0I'm trying to convince myself it's the right thing to do  \n16:42\u00a0<vmassol>\u00a0I'm ready to dive in, just need that little push to tell me it's the right thing  \n16:42\u00a0<@cjdelisle>\u00a0It will keep things from getting too big (cyclic dependencies etc.) and it will also provide a souce of marketing because a lot of customers are probably also developers and it makes xwiki more of a household name.  \n16:42\u00a0<vmassol>\u00a0well what is the condition for a module to go in commons?  \n16:43\u00a0<vmassol>\u00a0for example why wouldn't, say, xwiki-model not go in commons  \n16:43\u00a0<@cjdelisle>\u00a01. It cannot depend on anything outside of commons (except external to xwiki)  \n16:44\u00a0<vmassol>\u00a01 is the definition of platform too :)  \n16:44\u00a0<+lucaa>\u00a0cjdelisle: this not a decent rule, since you can also bring its deps in commons and you're done :)  \n16:44\u00a0<@cjdelisle>\u00a02. It should have limited dependencies within commons. Bigger modules can have more deps.  \n16:44\u00a0<vmassol>\u00a02 is alreayd a rule we're trying to apply in platform/  \n16:45\u00a0<@cjdelisle>\u00a03. There should be a compelling reason why someone outside of xwiki would want to use that module.  \n16:45\u00a0<vmassol>\u00a0the notion of limited is also fuzzy  \n16:45\u00a0<vmassol>\u00a03 is debatable  \n16:45\u00a0<vmassol>\u00a0nobody has expressed any need  \n16:45\u00a0<vmassol>\u00a0to reuse anything from xwiki  \n16:45\u00a0<vmassol>\u00a0exept the rendering engine  \n16:45\u00a0<vmassol>\u00a0(and the wysiwyg editor btw)  \n16:45\u00a0<vmassol>\u00a01,2, 3 can fit what is in plarform IMO  \n16:45\u00a0<@cjdelisle>\u00a0Yes, 2 is fuzzy and 3 is debatable but we have to make some judgement calls here, it's like asking what is the definition of 'quality'.  \n16:46\u00a0<+lucaa>\u00a0I confirm, I've seen people trying to build stuff on top of xwiki but without really depending on XWiki (don't ask), and the preference was to rewrite some stuff instead of reuse  \n16:46\u00a0<+lucaa>\u00a0observation, for example  \n16:46\u00a0<@cjdelisle>\u00a0Hearing that makes me :)  \n16:46\u00a0<+lucaa>\u00a0yes, but it exists  \n16:46\u00a0<+lucaa>\u00a0it was just an example for the reuse need  \n16:47\u00a0<vmassol>\u00a0lucaa: no cjdelisle likes to rewrite stuff\u2026 hence why he's happy :)  \n16:47\u00a0<+lucaa>\u00a0ah, I see  \n16:47\u00a0<vmassol>\u00a0(at least that's how I understand it)  \n16:47\u00a0<@cjdelisle>\u00a0lol  \n16:47\u00a0<+lucaa>\u00a0then commons shouldn't exist at all, by this rationale  \n16:47\u00a0<+lucaa>\u00a0:)  \n16:47\u00a0<@cjdelisle>\u00a0It's a problem, what am I to do when nothing ever meets my specifications?  \n16:47\u00a0<vmassol>\u00a0lucaa: hence my slight hesitation  \n16:47\u00a0<+lucaa>\u00a0hearing this makes me :)  \n16:48\u00a0<vmassol>\u00a0the best definition for commons that I have now is:  \n16:48\u00a0<vmassol>\u00a0modules that are used by the rendering modules  \n16:48\u00a0<vmassol>\u00a0that def makes sense  \n16:48\u00a0<+lucaa>\u00a0well, maybe it's good  \n16:49\u00a0<vmassol>\u00a0yes one def could be  \n16:49\u00a0<+lucaa>\u00a0because it would be a signal, strong sign for people that they can reuse that  \n16:49\u00a0<+lucaa>\u00a0e.g. observation  \n16:49\u00a0<vmassol>\u00a0modules used by more than 1 top level module  \n16:49\u00a0<@cjdelisle>\u00a0http://codebetter.com/patricksmacchia/2008/02/10/layering-the-level-metric-and-the-discourse-of-method/ <-- did you happen to look at this this morning?  \n16:49\u00a0<+lucaa>\u00a0if people see it in platform they hesitate, because it's xwiki specific  \n16:49\u00a0<vmassol>\u00a0cjdelisle: not yet, too much to read  \n16:50\u00a0<@cjdelisle>\u00a0It is a pretty good argument for a commons.  \n16:50\u00a0<vmassol>\u00a0so we could decide to limit what's in commons to the strict minimum  \n16:50\u00a0<vmassol>\u00a0ie modules only used by at least 2 other top level modules  \n16:51\u00a0<vmassol>\u00a0which makes kind of sense since it prevents over exposing stuff without a strong need  \n16:51\u00a0<+lucaa>\u00a0why exposing stuff without a need is bad?  \n16:51\u00a0<vmassol>\u00a0because you cannot go back  \n16:52\u00a0<vmassol>\u00a0you're establishing a strong contract  \n16:52\u00a0<+lucaa>\u00a0mmh... if you put it like that...  \n16:52\u00a0<vmassol>\u00a0with users  \n16:52\u00a0<+lucaa>\u00a0I see  \n16:52\u00a0<@cjdelisle>\u00a0I would say that for example most of crypto would be suted for commons since it provides easy functions which is where bouncycastle falls short. Captcha on the other hand is a wrapper and if anyone wants captcha they can just use jcaptcha directly.  \n16:52\u00a0<vmassol>\u00a0cjdelisle: I'd agree if we see some usage first  \n16:52\u00a0<vmassol>\u00a0IMO we need to see usage first  \n16:53\u00a0<vmassol>\u00a0that's how it happened for rendering and it seems a good rule to me  \n16:53\u00a0<vmassol>\u00a0this shows interest and warrants the extra effort we spend on doing it  \n16:53\u00a0<@cjdelisle>\u00a0Yea, the lack of usage on that is rather horrible. todo, todo, todo-dododo-dodo  \n16:54\u00a0<vmassol>\u00a0tmortagne: rendering is building now: http://hudson.xwiki.org/job/xwiki-rendering/ :)  \n16:55\u00a0<vmassol>\u00a0first time in 66 builds....  \n16:55\u00a0<@cjdelisle>\u00a0Just splitting things up into small maven projects serves most of our needs re prevention of cycling. Commons is really more about advertising things to the world.  \n16:55\u00a0<+tmortagne>\u00a0vmassol: great ?  \n16:55\u00a0<+tmortagne>\u00a0s/?/!/  \n16:55\u00a0<vmassol>\u00a0:)  \n16:55\u00a0<tuxlover>\u00a0has quit  \n16:56\u00a0<vmassol>\u00a0are we using PDFBox?  \n16:56\u00a0<vmassol>\u00a0version 1.5 was jsut released  \n16:56\u00a0<@cjdelisle>\u00a0this is bad when you see some random release announcement and it's a coin toss whether we depend on it :/  \n16:56\u00a0<vmassol>\u00a0I'm still worried as to what we'll put on commons.xwiki.org  \n16:57\u00a0<vmassol>\u00a0having a tech definition is not very nice\u2026 well that might float....  \n16:57\u00a0<vmassol>\u00a0ok diving in since we need that to release rendering anyway\u2026.  \n16:57\u00a0<evalica>\u00a0has quit  \n16:57\u00a0<vmassol>\u00a0I'll just move the minimal # of modules for now  \n16:58\u00a0<@cjdelisle>\u00a0Sounds like a good plan to start with.  \n17:00\u00a0<vmassol>\u00a0commons right? (and not common)  \n17:00\u00a0<@cjdelisle>\u00a0yes commons  \n17:00\u00a0<+lucaa>\u00a0sdumitriu: I just fixed XSKINX-49, checkout the commit, pleaase, in case you want to adjust it  \n17:00\u00a0<@cjdelisle>\u00a0village green where people gather in droves.  \n17:14\u00a0<sburjan>\u00a0has quit  \n17:18\u00a0<mflorea>\u00a0has quit  \n17:22\u00a0<vmassol>\u00a0tmortagne: we might need an abstraction for loading up a resource. This is the only thing that ties observation-remote to container right now (the loading of jgroups xml files)  \n17:23\u00a0<vmassol>\u00a0(hmm container is already an abstraction\u2026. maybe it's enough)  \n17:23\u00a0<vmassol>\u00a0:)  \n17:26\u00a0<lucaa1>\u00a0has joined #xwiki  \n17:29\u00a0<lucaa>\u00a0has quit  \n17:33\u00a0<+tmortagne>\u00a0vmassol: yep that's supposed to be the job of container  \n17:35\u00a0<vmassol>\u00a0tmortagne: yep I'm fine with that, it just means we'll need to have container in commons IMO  \n17:39\u00a0<lucaa1>\u00a0has quit  \n17:39\u00a0<vmassol>\u00a0I'll move component-api, -default and -observation to commons, what should I do with the -multi ? Leave it as a submodule of xwiki-component/, even though there's only 1?  \n17:41\u00a0<@cjdelisle>\u00a0IMO tiny bits of code left in platform are acceptable since they end up being like wrappers around \"third party\" libraries.  \n17:41\u00a0<vmassol>\u00a0cjdelisle: the question is more where do we leave them  \n17:41\u00a0<vmassol>\u00a0should I remove xwiki-component and keep only xwiki-component-multi?  \n17:42\u00a0<vmassol>\u00a0(I'd say yes even though it's more work)  \n17:42\u00a0<@cjdelisle>\u00a0I think moving it to top level (under core) makes sense.  \n17:42\u00a0<@cjdelisle>\u00a0Although \"Rome wasn't built in a day\"  \n17:42\u00a0<vmassol>\u00a0hehe  \n17:43\u00a0<vmassol>\u00a0I need to remember to only move stuff required by rendering/  \n17:45\u00a0<@cjdelisle>\u00a0(off topic) I did a bunch of thinking re \"replace don't maintain legacy code\" and I don't think rendering can't really be used as an example of success until we have extricated it from core and the wiki engine runs without it.  \n17:45\u00a0<vmassol>\u00a0hmm should I name the new modules in commons xwiki-commons-component or xwiki-component?  \n17:46\u00a0<vmassol>\u00a0for rendering they're named xwiki-rendering-\\*  \n17:46\u00a0<vmassol>\u00a0for enterprise they're named a bit everything  \n17:46\u00a0<vmassol>\u00a0I think it's best to try aligning them on the artifact id  \n17:46\u00a0<vmassol>\u00a0so that would be xwiki-commons-\\*  \n17:47\u00a0<@cjdelisle>\u00a0I don't like the prefix creap, it seems as soon as someone makes up a new prefix, pretty soon it's used everywhere.  \n17:48\u00a0<vmassol>\u00a0http://www.sonatype.com/people/2011/01/maven-tip-project-directories-and-artifact-ids/  \n17:48\u00a0<vmassol>\u00a0(read the comments too)  \n17:48\u00a0<+tmortagne>\u00a0ok for xwiki-commons-\\*  \n17:48\u00a0<@cjdelisle>\u00a0heh just looked at XHS, was like \"hey those are all private methods, oh yea.\" :)  \n17:49\u00a0<abusenius>\u00a0has quit  \n17:49\u00a0<+tmortagne>\u00a0for components-multi i'm not sure, let keep it that way, maybe latter we will have more  \n17:50\u00a0<vmassol>\u00a0tmortagne: yeah I won't move it in the first iteration  \n17:51\u00a0<vmassol>\u00a0btw tmortagne we'll also need to decide if we want -parent for parents or just the name without suffix....  \n17:51\u00a0<vmassol>\u00a0if we want to have dir name == artifcat id then it's without the -parent suffix  \n17:51\u00a0<+tmortagne>\u00a0vmassol: isn't parent a bad old practice ? that's a good occasion to get rid of it for the things we move  \n17:52\u00a0<vmassol>\u00a0I didn't change it for rendering/ but we can  \n17:52\u00a0<+tmortagne>\u00a0i tough we had it only for core-parent and XE/XEM  \n18:00\u00a0<sburjan\\_>\u00a0has joined #xwiki  \n18:01\u00a0<vmassol>\u00a0tmortagne: hmm are we going to need a top level pom module too ;)  \n18:01\u00a0<+tmortagne>\u00a0something above commons and rendering ?  \n18:01\u00a0<+tmortagne>\u00a0probably  \n18:01\u00a0<vmassol>\u00a0right now in rendering/  \n18:01\u00a0<vmassol>\u00a0I have:  \n18:01\u00a0<vmassol>\u00a0\u00a0\u00a0<parent>  \n18:01\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0<groupId>org.xwiki.platform</groupId>  \n18:01\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0<artifactId>xwiki</artifactId>  \n18:01\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0<version>40-SNAPSHOT</version>  \n18:01\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0<relativePath>../pom</relativePath>  \n18:01\u00a0<vmassol>\u00a0\u00a0\u00a0</parent>  \n18:01\u00a0<vmassol>\u00a0the relativepath is wrong  \n18:02\u00a0<vmassol>\u00a0and it's not right to depend on platform  \n18:02\u00a0<+tmortagne>\u00a0since they all have the same maven repository in commons  \n18:02\u00a0<+tmortagne>\u00a0at least  \n18:02\u00a0<vmassol>\u00a0I guess we could move it commons  \n18:02\u00a0<vmassol>\u00a0for now  \n18:02\u00a0<+tmortagne>\u00a0plus license and other things  \n18:02\u00a0<vmassol>\u00a0without introducing another top level module  \n18:02\u00a0<vmassol>\u00a0since commons is the highest in the chain  \n18:02\u00a0<+tmortagne>\u00a0yep could be  \n18:02\u00a0<+tmortagne>\u00a0after all we kind of said that rendering was a commons project which is big enough to have its own life  \n18:03\u00a0<sburjan`>\u00a0has quit  \n18:03\u00a0<sburjan\\_>\u00a0is now known as <sburjan`>  \n18:03\u00a0<+tmortagne>\u00a0what about xwiki pom ? would it be moved to commons and xwiki-core would depends on commons pom ?  \n18:04\u00a0<vmassol>\u00a0yes  \n18:04\u00a0<vmassol>\u00a0that's my idea right ow  \n18:04\u00a0<vmassol>\u00a0now  \n18:04\u00a0<+tmortagne>\u00a0ok for me  \n18:04\u00a0<vmassol>\u00a0I'm talking about moving platform/pom to commons/xwiki-commons-pom  \n18:04\u00a0<+tmortagne>\u00a0yep  \n18:04\u00a0<vmassol>\u00a0there might be a platform/pom remaining if there's something not common enough in there\u2026. but I don't know yet  \n18:05\u00a0<+tmortagne>\u00a0i don't think so for now  \n18:06\u00a0<+tmortagne>\u00a0btw we will really need to have commons and rendering on maven central  \n18:06\u00a0<vmassol>\u00a0yep  \n18:06\u00a0<+tmortagne>\u00a0since otherwise it sounds a lot less tools that can be used outside of xwiki  \n18:15\u00a0<vmassol>\u00a0buckle your seatbelts\u2026.. going to do the first xwiki commons commit....  \n18:17\u00a0<+tmortagne>\u00a0:)  \n18:17\u00a0<vmassol>\u00a0yes! it committed!  \n18:18\u00a0<+tmortagne>\u00a0so what revision di dwe lost this time ? :)  \n18:18\u00a0<vmassol>\u00a0tmortagne: is for you to discover!  \n18:18\u00a0<vmassol>\u00a0s/is/it's/  \n18:19\u00a0<vmassol>\u00a0next step is to move platform/pom  \n18:19\u00a0<+tmortagne>\u00a0yea treasure hunt !  \n18:19\u00a0<vmassol>\u00a0I need to add to hudson first  \n18:22\u00a0<vmassol>\u00a0hudson done  \n18:22\u00a0<vmassol>\u00a0I'm glad I upgraded to 8GB of RAM before doing all this!  \n18:22\u00a0<+tmortagne>\u00a0:)  \n18:25\u00a0<Enygma`>\u00a0has quit  \n18:25\u00a0<vmassol>\u00a0tmortagne: hmmm we have references to platform/tools in the top level pom  \n18:26\u00a0<Enygma`>\u00a0has joined #xwiki  \n18:26\u00a0<vmassol>\u00a0seems we might need to move some of those to commons too  \n18:26\u00a0<vmassol>\u00a0we have only 2  \n18:27\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0<platform.tool.license.version>1.1</platform.tool.license.version>  \n18:27\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0<platform.tool.verification.version>1.15</platform.tool.verification.version>  \n18:27\u00a0<@cjdelisle>\u00a0What does license do? I know I could look but I assume you know off the top of your head.  \n18:27\u00a0<vmassol>\u00a0AFAIR it adds license information to jars  \n18:29\u00a0<vmassol>\u00a0restarting my freebox to get the new firmware  \n18:29\u00a0<@cjdelisle>\u00a0That sounds unnecessary. LGPL mweans anyone can use the jar for anything if they don't modify it.  \n18:30\u00a0<+tmortagne>\u00a0vmassol: yes we need to move them  \n18:31\u00a0<+tmortagne>\u00a0license and coding style are the same for commons  \n18:33\u00a0<+tmortagne>\u00a0xwiki-standards-validator is not used by rendering so it ok for now but it has been designed to be fit in commons too  \n18:34\u00a0<vmassol>\u00a0has quit  \n18:34\u00a0<vmassol>\u00a0has joined #xwiki  \n18:35\u00a0<tmortagne>\u00a0has left #xwiki  \n18:37\u00a0<Enygma`>\u00a0has quit  \n18:37\u00a0<Enygma`>\u00a0has joined #xwiki  \n18:43\u00a0<+cjdelisle>\u00a0everyone should be equal etc etc. and if there's a spammer I can just ask chanserv for +o back  \n18:45\u00a0<abusenius>\u00a0has joined #xwiki  \n18:47\u00a0<+vmassol>\u00a0have to go, will continue later  \n18:47\u00a0<vmassol>\u00a0has quit  \n18:49\u00a0<esdaniel>\u00a0has quit  \n18:51\u00a0<esdaniel>\u00a0has joined #xwiki  \n18:57\u00a0<esdaniel>\u00a0has quit  \n19:00\u00a0<esdaniel>\u00a0has joined #xwiki  \n19:07\u00a0<DrLou>\u00a0has quit  \n19:07\u00a0<jvdrean>\u00a0has quit  \n19:14\u00a0<jbrBridge>\u00a0has quit  \n19:15\u00a0<npm\\_>\u00a0has joined #xwiki  \n19:15\u00a0<Enygma`>\u00a0has quit  \n19:16\u00a0<npm>\u00a0has quit  \n19:16\u00a0<jbrBridg1>\u00a0has joined #xwiki  \n19:16\u00a0<jbrBridg1>\u00a0is now known as <jbrBridge>  \n19:18\u00a0<npm\\_>\u00a0has quit  \n19:18\u00a0<npm>\u00a0has joined #xwiki  \n19:43\u00a0<+cjdelisle>\u00a0wow I never realized how nice grepcode is. It puts little bugs next to lines where it thinks something might be wrong.  \n19:50\u00a0<+cjdelisle>\u00a0never realized --> had noscript blocking all of that  \n21:20\u00a0<DrLou>\u00a0has joined #xwiki  \n21:20\u00a0<esdaniel>\u00a0has quit  \n22:34\u00a0<jstoldt>\u00a0has quit  \n22:34\u00a0<jstoldt>\u00a0has joined #xwiki  \n22:58\u00a0<npm>\u00a0has quit  \n23:08\u00a0<npm>\u00a0has joined #xwiki  \n23:09\u00a0<+cjdelisle>\u00a0Here's a question: How many actions do we really need?  \n23:09\u00a0<@sdumitriu>\u00a0?  \n23:09\u00a0<@sdumitriu>\u00a0/view/ /edit/ you mean?  \n23:09\u00a0<+cjdelisle>\u00a0yup  \n23:10\u00a0<+cjdelisle>\u00a0It boils down to \"Is there any possible way to get away with 1 generic action and have wiki pages do everything else.\"  \n23:10\u00a0<@sdumitriu>\u00a0Not likely  \n23:10\u00a0<@sdumitriu>\u00a0The one generic action we currently have is \u00a0/bin/  \n23:10\u00a0<@sdumitriu>\u00a0(which then gives control to struts)  \n23:11\u00a0<@sdumitriu>\u00a0But we need some place where the different actions are handled  \n23:11\u00a0<@sdumitriu>\u00a0Sure, we can move all the com.xpn.xwiki.web classes into Groovy or something like that  \n23:11\u00a0<+cjdelisle>\u00a0Well we don't really need /register/ for example.  \n23:11\u00a0<@sdumitriu>\u00a0But I don't think it's nice  \n23:12\u00a0<+cjdelisle>\u00a0groovy is bad since it requires PR.  \n23:12\u00a0<@sdumitriu>\u00a0Yep, we can replace any action with a document doing the same thing with API calls  \n23:13\u00a0<@sdumitriu>\u00a0I'd rather have actions as components  \n23:13\u00a0<@sdumitriu>\u00a0And allow devs to plug in new actions  \n23:13\u00a0<@sdumitriu>\u00a0Without requiring a change in web.xml or struts-config.cml  \n23:13\u00a0<+cjdelisle>\u00a0we don't use most of struts it's really just eating space in the .war.  \n23:14\u00a0<@sdumitriu>\u00a0So not to reduce the number of actions to as few as possible, but to add more freedom the actions  \n23:14\u00a0<@sdumitriu>\u00a0+1  \n23:14\u00a0<@sdumitriu>\u00a0We're definitly moving away from it  \n23:14\u00a0<+cjdelisle>\u00a0But then for each action you need a permission and then for each permission you can have it on any level so you end up with silly things like register and programming on a document.  \n23:16\u00a0<+cjdelisle>\u00a0The thing which alluers me to the idea of 1 action is that it means a URL could be direct mapped to a document reference.  \n23:17\u00a0<@sdumitriu>\u00a0Not everything is a document  \n23:17\u00a0<@sdumitriu>\u00a0We have the tempresource action  \n23:17\u00a0<@sdumitriu>\u00a0login/logout  \n23:17\u00a0<+cjdelisle>\u00a0login can be handled in a wiki page and it should be made available in api.  \n23:18\u00a0<@sdumitriu>\u00a0Somewhere you have to tell the platform what you want to do with a document  \n23:18\u00a0<+cjdelisle>\u00a0viewrev is probably the hardest to justify since it would either mean having a separate document or exposing old revisions through different document references.  \n23:18\u00a0<@sdumitriu>\u00a0What do you do then, replace /edit/ with ?action=edit ?  \n23:19\u00a0<@sdumitriu>\u00a0Isn't it the same thing, just that you move code around?  \n23:19\u00a0<+cjdelisle>\u00a0the editor would have to be a document itself ie: ..../XWiki/editor?toEdit=Main.WebHome  \n23:20\u00a0<+cjdelisle>\u00a0And that would have it's advantages since people wouldn't be asking how to modify templates.  \n23:21\u00a0<@sdumitriu>\u00a0And you move security from URL matches to imperative checks?  \n23:21\u00a0<@sdumitriu>\u00a0Forcing people to remember to call the rights check is bad  \n23:21\u00a0<@sdumitriu>\u00a0Someone is bound to forget  \n23:22\u00a0<+cjdelisle>\u00a0You mean in the editor?  \n23:22\u00a0<@sdumitriu>\u00a0For example, yes  \n23:23\u00a0<+cjdelisle>\u00a0the editor is easy, the saver is hard and very hard to justify since it means the script gets to act as the user viewing it.  \n23:25\u00a0<lucaa>\u00a0has joined #xwiki  \n23:25\u00a0<+cjdelisle>\u00a0OTOH if save were a script it would (or should) be blessed with the power of the admin who imported the .xar and noone should be able to protect a document from them.  \n23:28\u00a0<+cjdelisle>\u00a0re: \"just that you move code around?\" It would clearify separation of platform as a unified set of apis and enterprise as the use case for them. It also helps with debugging if all requests follow the same path, we had a broken addAttachment function for quite a while and didn't know it because the upload action did not use it.  \n23:35\u00a0<+cjdelisle>\u00a0Perhaps to solve those 2 problems we could allow scripts in documents to register actions because then unless the script has PR, the script will be forced to use the public api way instead of bypassing it in favor of the low level.  \n23:35\u00a0<vmassol>\u00a0has joined #xwiki  \n23:38\u00a0<vmassol>\u00a0has quit  \n\n"}