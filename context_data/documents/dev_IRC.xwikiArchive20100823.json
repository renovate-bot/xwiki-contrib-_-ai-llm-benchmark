{"id": "dev:IRC.xwikiArchive20100823", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100823", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nEnygma` left at 00:42 (Ping timeout: 265 seconds  \nabusenius left at 01:29 (Ping timeout: 252 seconds  \nsdumitriu left at 02:16 (Ping timeout: 272 seconds  \njvelociter left at 04:24 (Quit: jvelociter  \nvenkatesh joined #xwiki at 04:58  \nvenkatna joined #xwiki at 04:59  \nvenkatna left at 04:59 (Remote host closed the connection  \nvenkatesh left at 04:59 (Remote host closed the connection  \nvenkatesh joined #xwiki at 04:59  \nvenkatesh left at 06:07 (Remote host closed the connection  \nmflorea joined #xwiki at 07:56  \nkibahop joined #xwiki at 08:16  \nkibahop left #xwiki at 08:16  \ntmortagne joined #xwiki at 08:40  \nevalica joined #xwiki at 08:59  \nEnygma` joined #xwiki at 09:01  \nsburjan joined #xwiki at 09:08  \nasrfel joined #xwiki at 09:14  \nlpereira joined #xwiki at 09:18  \nlucaa left at 09:34 (Ping timeout: 265 seconds  \narkub joined #xwiki at 09:49  \nsilviar joined #xwiki at 09:51  \nlucaa joined #xwiki at 09:59  \nabusenius joined #xwiki at 10:11  \nsdumitriu joined #xwiki at 10:15  \nabusenius - (10:15): tmortagne: should I send a proposal about script macro refactoring?  \ntmortagne - (10:16): abusenius: would be good  \nabusenius - (10:16): ok  \nsilviar left at 10:17 (Quit: Leaving.  \nlucaa left at 10:19 (Ping timeout: 276 seconds  \nsilviar joined #xwiki at 10:24  \nlucaa joined #xwiki at 10:26  \ntmortagne - (11:21): abusenius: clirr is saying that removing \" public List execute(JSR223ScriptMacroParameters, String, MacroTransformationContext)\" break API ?  \ntmortagne - (11:22): it's probably a bug because i really don't see any reason for that  \nabusenius - (11:22): yea, it actually overrides superclass method  \ntmortagne - (11:22): yep  \nlucaa left at 11:36 (Ping timeout: 240 seconds  \nlucaa joined #xwiki at 11:42  \nabusenius - (12:01): hm, I forgot to put issue number to commit message when I was moving escaping tests, should I sneak it into a later related change? ^\\_^  \ncjdelisle - (12:03): It's up to you, you can change the log message in svn.  \nabusenius - (12:07): I guess it's easier to put it into next commit  \nabusenius - (12:08): (I need o fix @since anyway)  \nKermitTheFragger joined #xwiki at 12:08  \ntmortagne - (12:11): abusenius: it's very easy to modify svn message but as you want  \nabusenius - (12:12): lucaa: do you remember why you have added IndexedObjectReference to annotations and not to xwiki-model?  \nabusenius - (12:12): btw, tmortagne you also might remember something about that discussion http://www.mail-archive.com/[[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)/msg12991.html  \nabusenius - (12:14): I wonder why ObjectReference still does not really refer an object (index is missing)  \ntmortagne - (12:14): abusenius: lucaa needed object reference but we did not had time to offcially define it in standard if i remember well  \ntmortagne - (12:14): and it got push at the end of the TODO list i guess  \nabusenius - (12:14): I see  \nabusenius - (12:15): well, now I need ObjectReference too :)  \ntmortagne - (12:16): i there was almost a vote for it but lucaa would probably remember better  \ntmortagne - (12:16): s/i there/i think there/  \nabusenius - (12:16): http://lists.xwiki.org/pipermail/devs/2010-July/019503.html  \nabusenius - (12:16): IndexedObjectReference would be much better there  \ntmortagne - (12:18): yes (even if i don't see why this is IndexedObjectReference and not ObjectReference)  \ncjdelisle - (12:19): I thought we were planning on dumping the index and giving each object ref a unique name.  \ntmortagne - (12:20): cjdelisle: yes that's what was proposed  \ntmortagne - (12:21): (even if it would still work using indexes behind the scene for now)  \ncjdelisle - (12:22): +1 for me, it keeps with the java object model.  \nabusenius - (12:22): yes, in principle not indexed object reference is useles  \ncjdelisle - (12:24): Anyone have an opinion on deprecating the better part of XWikiHibernateStore proposal? IMO it will give us a lot of flexabulity for refactoring 2 releases down the road.  \nabusenius - (12:26): do those methods have a better alternatives?  \ncjdelisle - (12:27): They're not really used. see the mail... It's for getting a single object without the document it's attached to.  \ncjdelisle - (12:27): And getting a class property which depends on the class schema which is not used anymore.  \ncjdelisle - (12:27): etc.  \nabusenius - (12:28): I see (havent looked at what those methods are actually doing)  \nabusenius - (12:29): in general I'm always +1 for deprecating old core code as long as there are good new alternatives (or no need for them)  \nlucaa - (13:03): abusenius: I'm responding the object reference mail now  \ncjdelisle - (14:54): I have a patch for XWIKI-5405 and I wanted to make sure nobody would complain before I commit it. http://jira.xwiki.org/jira/secure/attachment/17602/XWIKI-5405-MakeXWikiHibernateStoreSaveAttachmentContent.patch  \ncjdelisle - (14:55): My change is to make XWikiHibernateStore#saveAttachment call XWikiAttachmentStore#saveAttachmentContent  \ncjdelisle - (14:56): What was happening before was UploadAction was calling saveAttachmentContent directly which IMO is quite wrong.  \nsdumitriu - (14:57): +1  \nsdumitriu - (14:57): I think there's a bug open for fixing this  \ncjdelisle - (14:57): I'll look.  \ncjdelisle - (15:06): Don't see anything, I suppose we can just close as duplicate if we run across it later.  \nsdumitriu - (15:08): Found it, XWIKI-1982  \nsdumitriu - (15:08): Not quite the same, but related  \ncjdelisle - (16:02): !who  \njbrBridge - (16:02): \\* members: CalebJamesDeLisle, Eduard Moraru, evalica, James Thompson, ritsu.and.mio  \nsilviar left at 16:04 (Read error: Connection reset by peer  \ncjdelisle - (16:05): !shutdown  \njbrBridge left at 16:05 (Remote host closed the connection  \njbrBridge joined #xwiki at 16:05  \ncjdelisle - (16:08): !who  \njbrBridge - (16:08): \\* members:  \ncjdelisle - (16:09): humf !shutdown  \ncjdelisle - (16:09): !shutdown  \njbrBridge left at 16:09 (Remote host closed the connection  \njbrBridge joined #xwiki at 16:09  \ncjdelisle - (16:10): !who  \njbrBridge - (16:10): \\* members: CalebJamesDeLisle, ritsu.and.mio  \nsburjan left at 16:33 (Ping timeout: 265 seconds  \nsdumitriu left at 16:35 (Quit: Leaving.  \nsdumitriu joined #xwiki at 16:38  \njvelo joined #xwiki at 17:02  \ncjdelisle - (17:05): Anyone else have any opinion on the mail about deprecating the better part of hibernateStore?  \nasrfel left at 17:05 (Quit: Leaving.  \nsdumitriu left at 17:09 (Remote host closed the connection  \nlpereira left at 17:11 (Quit: Leaving.  \nsdumitriu joined #xwiki at 17:12  \ntmortagne - (17:20): cjdelisle: i agree that theses methods should no exists but i'm pretty sure they are used somewhere  \ntmortagne - (17:20): (not in recent core but in some older code or plugin)  \ncjdelisle - (17:20): Some are used in the stats plugin. Some are not used anywhere (in platform)  \ncjdelisle - (17:21): ahh. My results are just from find-grepping the platform.  \ncjdelisle - (17:22): Is there anywhere else I would want to find-grep?  \ntmortagne - (17:23): the last one i remember was stats but you found it already  \ncjdelisle - (17:24): Stats is not too bad. It uses only a couple functions and I think it can be fixed. My main concern is paving a path to removal of the old class structure (If we want to).  \ncjdelisle - (17:27): My earlier proposal loadEntity would be able to be used by stats plugin to replace some of them. But it's just deprecating for now so we would have time.  \ntmortagne - (17:28): yep  \ncjdelisle - (17:30): Ok, I'll start working on the change then.  \nsdumitriu - (17:34): :p  \nlucaa left at 17:40 (Quit: Leaving.  \ncjdelisle - (17:42): what's the status of the old query plugin?  \nlucaa joined #xwiki at 17:44  \ntmortagne - (17:47): pretty much dead  \ncjdelisle - (17:47): What did it do when it was used?  \ntmortagne - (17:51): the goal was to be able to execute more complex query from public API and have some rights based filter to handle security  \ntmortagne - (17:51): but i think it has not really been acctively used  \ntmortagne - (17:51): it was part of a GSOC  \ntmortagne - (17:52): if i remember well  \nlucaa1 joined #xwiki at 17:52  \nlucaa left at 17:53 (Ping timeout: 240 seconds  \ncjdelisle - (17:55): ahh.  \nlpereira joined #xwiki at 18:01  \nlucaa1 left at 18:07 (Quit: Leaving.  \nlucaa joined #xwiki at 18:09  \nlucaa1 joined #xwiki at 18:12  \nlucaa left at 18:13 (Ping timeout: 240 seconds  \nevalica left at 18:44 (Quit: Leaving.  \nabusenius left at 18:53 (Ping timeout: 265 seconds  \nEnygma` left at 19:00 (Ping timeout: 252 seconds  \nKermitTheFragger left at 19:00 (Quit: Leaving  \narkub left at 19:02 (Ping timeout: 258 seconds  \nabusenius joined #xwiki at 19:08  \njvelo left at 19:11 (Quit: Page closed  \nlucaa1 left at 19:25 (Quit: Leaving.  \nnickless joined #xwiki at 19:40  \nabusenius left at 19:41 (Ping timeout: 258 seconds  \nlucaa joined #xwiki at 20:31  \nEnygma` joined #xwiki at 20:38  \nLukemon joined #xwiki at 21:10  \ntmortagne left at 21:51 (Quit: Leaving.  \nnickless - (22:38): sdumitriu: are you around?  \nsdumitriu - (22:38): Yes  \nnickless - (22:39): I'd like to talk about csrf protection  \nsdumitriu - (22:39): OK  \nsdumitriu - (22:39): Ah, yes  \nnickless - (22:39): do you think it is realistic to be included into xwiki any time soon? :)  \nsdumitriu - (22:40): IIRC, my blocker complaint was about the request which isn't fully saved  \nnickless - (22:40): ok, this is bad, I agree  \nsdumitriu - (22:40): But other than that, +1  \nnickless - (22:40): there are many tests that will need to be adapted  \nsdumitriu - (22:41): So, first step would be to see what can be done with the SavedRequest implementation in the core  \nnickless - (22:41): I have looked at it, I think the best is to move it to a component  \nsdumitriu - (22:41): Second step, move the csrf module in the platform  \nsdumitriu - (22:41): +1  \nnickless - (22:41): in order to not duplicate code  \nnickless - (22:42): what about the resubmission page? I'm still not sure if an application is the right way to do it  \nsdumitriu - (22:42): After that, introducing it in the actions that need it, refactor templates, refactor tests  \nsdumitriu - (22:42): No, definitely not an application  \nnickless - (22:43): template?  \nsdumitriu - (22:43): Since it's essential for the well functioning of the core, it should work with an empty database (no documents)  \nsdumitriu - (22:43): So yes, a template  \nnickless - (22:43): ok, I have the template version in another branch :)  \nsdumitriu - (22:43): Actually it should be easy to render the template without a redirect  \nnickless - (22:44): SavedRequestRestorerFilter does the normal srid  \nsdumitriu - (22:44): Just return resubmit.vm in the action method  \nsdumitriu - (22:44): (or render, forgot which one)  \nnickless - (22:44): it is in the core, but does not really need it  \nnickless - (22:44): (same for other filters)  \nnickless - (22:45): can it have any side effects if the filters are moved into components?  \nsdumitriu - (22:45): WDYM?  \nsdumitriu - (22:45): Filters are currently servlet filters  \nnickless - (22:45): well, they set somewhere in configuration  \nnickless - (22:45): \\*are  \nnickless - (22:46): can it happen that the component where they are is not there?  \nsdumitriu - (22:46): Do you want to simply move them \"as is\" in another module, or reimplement the notion of filters as our own components?  \nnickless - (22:47): depends, some of them are quite independent  \nsdumitriu - (22:47): Simply moving should work, since there's no dependency on the core, just standard servlet stuff  \nsdumitriu - (22:47): It's faster, since there's no design phase  \nsdumitriu - (22:48): And it should work like now, no ew bugs  \nsdumitriu - (22:48): new  \nnickless - (22:48): yes, but in order to work with components they must somehow get access to the component manager  \nsdumitriu - (22:48): To answer your question, components can be skipped  \nsdumitriu - (22:48): But that's only if the user manually excludes a component, so he should know what he's doing  \nnickless - (22:48): how would srid work?  \nnickless - (22:49): it must be called from a component  \nnickless is now known as abusenius ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nsdumitriu - (22:49): Let me check the implementation  \nabusenius - (22:49): (it is called from the old core somewhere on login)  \nabusenius - (22:50): com.xpn.xwiki.web  \nabusenius - (22:50): \u00a0\u00a0\u00a0\u00a0com.xpn.xwiki.web.SetCharacterEncodingFilter  \nabusenius - (22:50): \u00a0\u00a0\u00a0\u00a0com.xpn.xwiki.web.SavedRequestRestorerFilter  \nabusenius - (22:50): \u00a0\u00a0\u00a0\u00a0com.xpn.xwiki.web.ActionFilter  \nsdumitriu - (22:51): It's called from showLogin  \nsdumitriu - (22:52): com.xpn.xwiki.user.impl.xwiki.MyFormAuthenticator.showLogin(HttpServletRequest, HttpServletResponse)  \nsdumitriu - (22:52): saveRequest is static, so it can be called from any code  \nsdumitriu - (22:52): And the filter is automatically executed for each request  \nsdumitriu - (22:53): So components don't need to do anything special to use it  \nsdumitriu - (22:53): And I don't think that the filter needs to access any components  \nabusenius - (22:53): yes, it is completely self contained  \nsdumitriu - (22:53): So, to make it reusable, it should be moved in a different module  \nsdumitriu - (22:54): One option would be its own module, but that looks like too much  \nabusenius - (22:54): something like xwiki-filters?  \nsdumitriu - (22:54): I mean, it's a simple servlet filter, it doesn't justify a whole module just for itself  \nabusenius - (22:54): there are 3 filters if I counted right  \nsdumitriu - (22:54): Yes, moving all filters should be OK  \nabusenius - (22:55): ActionFilter only uses 1 helper method from core  \nsdumitriu - (22:55): Another option would be in container-servlet  \nsdumitriu - (22:55): xwiki-container-servlet  \nabusenius - (22:56): do filters also work in portlet?  \nsdumitriu - (22:56): mflorea?  \nsdumitriu - (22:56): I doubt that ServletFilters work for portlets  \nabusenius - (22:56): hm, the name sounds like they are not  \nsdumitriu - (22:56): javax.servlet.Filter  \nsdumitriu - (22:57): Portlets don't use Servlets  \nsdumitriu - (22:57): But there might be something equivalent for portlets as well  \nsdumitriu - (22:57): Hm, in this regard, it makes sense to abstract filters with our own components  \nsdumitriu - (22:58): But that's something for the future  \nsdumitriu - (22:58): For the moment, servlet filters is OK  \nabusenius - (22:58): yes, xwiki-container-servlet seems to be the right place for them for now  \nsdumitriu - (22:58): +1  \nsdumitriu - (22:59): internal or public?  \nsdumitriu - (22:59): If they're supposed to be reused outside that module, then public  \nabusenius - (23:00): other filters are not very useful  \nabusenius - (23:00): it is just the srid implementation  \nabusenius - (23:00): I'd say split it into the public code and filter  \nsdumitriu - (23:04): Hm...  \nsdumitriu - (23:05): You mean a generic request save/restore component, used by both the csrf and SavedRequestRestorerFilter?  \nabusenius - (23:05): something like this, maybe not component, because filter is not a component  \nabusenius - (23:06): but in principle the srid filter is allready separated in 2 quite independent parts  \nsdumitriu - (23:06): Yep, +0  \nabusenius - (23:08): I'll send a proposal  \nMartinCleaver joined #xwiki at 23:13  \nmflorea - (23:15): sdumitriu: servlet filters work in a portal, but, depending on how they are mapped, they apply to the portal servlet (the one that dispatches the requests to the portlets) and whenever a portlet dispatches (forward/include with PortletRequestDispatcher) the request to a servlet. There are also portlet filters, but they are different than servlet filters (they handle portlet requests: action, render, resource, event).  \nabusenius - (23:17): hm, moving srid core to xwiki-servlet would make core depend on servlets, it depends on container-api right now  \nabusenius - (23:17): \\*srid code  \nsdumitriu - (23:21): abusenius: It's OK if the core depends on container-servlet  \nabusenius - (23:24): ok, the only question is then what to do with XWiki.stripSegmentFromPath(String, String)  \nabusenius - (23:24): it is used in xwiki and action filter  \nabusenius - (23:25): the easiest thing is to move it to servlets  \nsdumitriu - (23:28): I don't understand  \nsdumitriu - (23:28): What does it have to do with moving SavedRequest outside the core?  \nabusenius - (23:30): with saved request nothing  \nabusenius - (23:31): there are also 2 other filters that has nothing to do in core  \nsdumitriu - (23:35): Ah, right, it's used in ActionFilter  \nabusenius - (23:35): looks like this method is used to parse url  \nabusenius - (23:36): and this process is almost copy-pasted into 3 places  \nabusenius - (23:36): \"in order to not introduce a new bug\"  \nmflorea left at 23:39 (Quit: Leaving.  \nEnygma` left at 23:44 (Quit: Leaving.  \nEnygma` joined #xwiki at 23:44  \nEnygma` left at 23:49 (Ping timeout: 240 seconds  \n\n"}