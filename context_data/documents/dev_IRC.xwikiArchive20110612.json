{"id": "dev:IRC.xwikiArchive20110612", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110612", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:18\u00a0<abusenius>\u00a0has joined #xwiki  \n00:23\u00a0<mflorea>\u00a0has quit  \n00:54\u00a0<sdumitriu>\u00a0has quit  \n01:05\u00a0<Enygma`>\u00a0has quit  \n01:40\u00a0<Denis>\u00a0has quit  \n02:34\u00a0<jvdrean>\u00a0has quit  \n03:13\u00a0<abusenius>\u00a0has quit  \n07:12\u00a0<pulasthi>\u00a0has joined #xwiki  \n09:38\u00a0<afrey>\u00a0has quit  \n09:38\u00a0<cjdelisle>\u00a0has quit  \n09:38\u00a0<DrLou>\u00a0has quit  \n09:38\u00a0<xipe>\u00a0has quit  \n09:38\u00a0<pulasthi>\u00a0has quit  \n09:39\u00a0<npm>\u00a0has quit  \n09:39\u00a0<SvenDowideit>\u00a0has quit  \n09:50\u00a0<afrey>\u00a0has joined #xwiki  \n09:50\u00a0<DrLou>\u00a0has joined #xwiki  \n09:50\u00a0<SvenDowideit>\u00a0has joined #xwiki  \n09:50\u00a0<xipe>\u00a0has joined #xwiki  \n09:50\u00a0<npm>\u00a0has joined #xwiki  \n09:50\u00a0<pulasthi>\u00a0has joined #xwiki  \n09:50\u00a0<cjdelisle>\u00a0has joined #xwiki  \n09:52\u00a0<sdumitriu>\u00a0has joined #xwiki  \n10:01\u00a0<mflorea>\u00a0has joined #xwiki  \n10:17\u00a0<pulasthi>\u00a0has left #xwiki  \n11:29\u00a0<abusenius>\u00a0has joined #xwiki  \n11:39\u00a0<+abusenius>\u00a0there are spammers on the notifications mailing list...  \n11:40\u00a0<cjdelisle>\u00a0indeed. Hows it going?  \n11:41\u00a0<cjdelisle>\u00a0I got a kick out of the one that said \"plz download my .exe file? :)\"  \n11:43\u00a0<+abusenius>\u00a0I'm almost finished with my studies but for some reason have still tons of things to do :)  \n11:44\u00a0<+abusenius>\u00a0there are also some \"vacancies\" offerings  \n11:44\u00a0<cjdelisle>\u00a0I'm doing some awesome storage work.  \n11:45\u00a0<+abusenius>\u00a0yea, I've seen you are improving that part like every day :)  \n11:45\u00a0<cjdelisle>\u00a0Converting xwiki classes into java classes and then generating objects and storing them with JDO.  \n11:46\u00a0<cjdelisle>\u00a0Most of my work is going on in my own github repo. This is going to be pretty big.  \n11:46\u00a0<+abusenius>\u00a0I want to finally fix all the tests to work with csrf protection  \n11:46\u00a0<+abusenius>\u00a0but it's a bit hard to find time for that atm  \n11:46\u00a0<cjdelisle>\u00a0/nod  \n11:47\u00a0<+abusenius>\u00a0I'm just keeping things synced with the main repo so that I don't spend too much time on that later  \n11:47\u00a0<+abusenius>\u00a0stad-by modus :)  \n11:47\u00a0<+abusenius>\u00a0s/stad/stand/  \n11:48\u00a0<cjdelisle>\u00a0An idea I had re xss is to do all editing in a different subdomain, we're totally not setup for it but it would leverage ff's domain protection which turns out to be very good.  \n11:49\u00a0<+abusenius>\u00a0yea, that might work  \n11:49\u00a0<+abusenius>\u00a0wouldn't it make the setup harder for users?  \n11:50\u00a0<cjdelisle>\u00a0dns would be the sticking point  \n11:50\u00a0<cjdelisle>\u00a0it would have to point everything at the server  \n11:50\u00a0<+abusenius>\u00a0hm, the user wouldn't be logged in in the edit domain if he logs in in the view, right?  \n11:50\u00a0<cjdelisle>\u00a0the hard part would be working around subwikis  \n11:51\u00a0<cjdelisle>\u00a0nah, you'd only login to the edit domain and then when in view domain you'd have another set of cookies which don't authorize editing but let you view stuff... somethign like that.  \n11:52\u00a0<+abusenius>\u00a0it would only work for public wikis  \n11:52\u00a0<+abusenius>\u00a0if you have some restrictions on view, it will get tricky  \n11:53\u00a0<cjdelisle>\u00a0well yea, xss would be able to read secret documents by eating your view domain cookies but it wouldn't be able to spread.  \n11:54\u00a0<+abusenius>\u00a0I mean, how would xwiki know that the user JohnDoe logged in in edit domain is currently viewing the doc X  \n11:54\u00a0<+abusenius>\u00a0?  \n11:55\u00a0<+abusenius>\u00a0but, yes stored xss would have it much harded  \n11:56\u00a0<cjdelisle>\u00a0It would \"tell you\" that you're logged in but unless you're in the edit domain, you're not really trusted  \n11:57\u00a0<+abusenius>\u00a0ok  \n11:57\u00a0<cjdelisle>\u00a0as far as how to sync edit domain and view domain cookies... edit domain could load an image from view domain and pass a parameter and the image sets a cookie etc etc etc  \n11:57\u00a0<cjdelisle>\u00a0ofc way too complicated to actually implement ;)  \n11:57\u00a0<+abusenius>\u00a0yea :)  \n11:58\u00a0<cjdelisle>\u00a0Did you hear about the rootkits that showed up on one of the build engines?  \n11:59\u00a0<+abusenius>\u00a0somebody actually hacked them?  \n11:59\u00a0<+abusenius>\u00a0I read your mails on security list, awesome :)  \n11:59\u00a0<cjdelisle>\u00a0directory full of rootkits, sdumitriu said that one of them worked....  \n11:59\u00a0<+abusenius>\u00a0wow  \n12:00\u00a0<cjdelisle>\u00a0It was really weird for me because just the night before I realized that there was this issue and because scanning is constand someone was bound to find it, well they beat me to it apparently.  \n12:02\u00a0<+abusenius>\u00a0good timing, I guess it could be a lot worse if nobody would take a look at those servers for a few more days  \n12:02\u00a0<cjdelisle>\u00a0hehe the datestamps on the files were \\*old\\*  \n12:03\u00a0<+abusenius>\u00a0creation time stamp might be the real creation  \n12:03\u00a0<+abusenius>\u00a0not the copy  \n12:03\u00a0<cjdelisle>\u00a0hmm indeed, never thought of that.  \n12:04\u00a0<cjdelisle>\u00a0I kinda keep out of that end of security, they're not my systems, I'm not in charge of holding them down, I'd rather just do my own stuff.  \n12:04\u00a0<+abusenius>\u00a0indeed  \n12:08\u00a0<pulasthi>\u00a0has joined #xwiki  \n12:09\u00a0<pulasthi>\u00a0cjdelisle : hi i did the changes needed by the check list and fixed the inheritance problem  \n12:10\u00a0<cjdelisle>\u00a0great, lemme have a look.  \n12:10\u00a0<pulasthi>\u00a0ok  \n12:11\u00a0<cjdelisle>\u00a0On my side I just got XWikiPreferences (the most complicated document in XWiki) to store.  \n12:11\u00a0<pulasthi>\u00a0you mean on cassandra  \n12:11\u00a0<cjdelisle>\u00a0I'm adding an array converter so that arrays can be easily stored.  \n12:11\u00a0<cjdelisle>\u00a0Yes, I just stored it in Cassandra.  \n12:11\u00a0<pulasthi>\u00a0:)  \n12:12\u00a0<cjdelisle>\u00a0nice commmit messages  \n12:12\u00a0<pulasthi>\u00a0:)  \n12:13\u00a0<cjdelisle>\u00a0it doesn't look like you pulled in my commit that adds the checkstyle  \n12:13\u00a0<cjdelisle>\u00a0did you do:  \n12:13\u00a0<cjdelisle>\u00a0git cherry-pick 131ac55b479c62d42c8ccb7e72b54be75284fe04  \n12:14\u00a0<pulasthi>\u00a0i copyed the pom  \n12:14\u00a0<pulasthi>\u00a0:)  \n12:14\u00a0<cjdelisle>\u00a0ahh.  \n12:14\u00a0<pulasthi>\u00a0i got smthing lie 92 errors in my class  \n12:14\u00a0<pulasthi>\u00a0lie - like  \n12:15\u00a0<cjdelisle>\u00a0You should let git do the merging because now in order to pull your changes into my fork I am going to have collisions because we \"both\" did that change.  \n12:15\u00a0<pulasthi>\u00a0:/  \n12:15\u00a0<pulasthi>\u00a0didn't think of that  \n12:16\u00a0<pulasthi>\u00a0i'll remember that  \n12:16\u00a0<cjdelisle>\u00a0also typing one cherry-pick or merge line is far easier for you.  \n12:16\u00a0<cjdelisle>\u00a0even if it seems magical at first and takes getting used to.  \n12:16\u00a0<cjdelisle>\u00a0nitpick:  \n12:16\u00a0<cjdelisle>\u00a0Query q = pm.newQuery(\"SELECT FROM com.spidertracks.datanucleus.basic.model.Primi\" +  \n12:17\u00a0<cjdelisle>\u00a0the + goes on the next line in XWiki code style  \n12:17\u00a0<pulasthi>\u00a0ahh  \n12:17\u00a0<pulasthi>\u00a0eclipse puts the +  \n12:17\u00a0<pulasthi>\u00a0ill correct that  \n12:18\u00a0<cjdelisle>\u00a0just because IDEs try to outsmart ya  \n12:18\u00a0<pulasthi>\u00a0don't u use a IDE ?  \n12:18\u00a0<pulasthi>\u00a0u -you  \n12:19\u00a0<cjdelisle>\u00a0correct. I wouldn't push my decisions on anyone else though, plenty of people are perfectly happy with them  \n12:19\u00a0<pulasthi>\u00a0that includes me :)  \n12:19\u00a0<cjdelisle>\u00a0@version \\$Id.\\*\\$ <-- looks like the IDE borked that. \u00a0should be $Id$  \n12:20\u00a0<pulasthi>\u00a0ahh ill fix that too  \n12:20\u00a0<pulasthi>\u00a0so what should my next step be  \n12:20\u00a0<pulasthi>\u00a0:)  \n12:20\u00a0<cjdelisle>\u00a0what did you change here?  \n12:20\u00a0<cjdelisle>\u00a0https://github.com/pulasthi/Datanucleus-Cassandra-Plugin/commit/e1910511b18649a21c0bc4f75879406d01a08b0b#L3L280  \n12:22\u00a0<cjdelisle>\u00a0this is good:  \n12:22\u00a0<cjdelisle>\u00a0https://github.com/pulasthi/Datanucleus-Cassandra-Plugin/commit/e1910511b18649a21c0bc4f75879406d01a08b0b#L3R233  \n12:23\u00a0<cjdelisle>\u00a0We always uses interfaces such as List rather than implementations such as ArrayList.  \n12:23\u00a0<cjdelisle>\u00a0caught you doing something right ;)  \n12:23\u00a0<pulasthi>\u00a0:)  \n12:24\u00a0<cjdelisle>\u00a0It looks like your IDE made quite a few codestyle changes  \n12:24\u00a0<cjdelisle>\u00a0https://github.com/pulasthi/Datanucleus-Cassandra-Plugin/commit/e1910511b18649a21c0bc4f75879406d01a08b0b#L3L173  \n12:25\u00a0<pulasthi>\u00a0good or bad ?  \n12:25\u00a0<cjdelisle>\u00a0#1 when we improve the codestyle of existing code we usually make the style change and then we change the content in the next commit.  \n12:25\u00a0<cjdelisle>\u00a0#2 it's probably not a good idea to modify the codestyle of anything around your code when our goal is to convince Todd to include this patch.  \n12:26\u00a0<pulasthi>\u00a0hmm  \n12:27\u00a0<pulasthi>\u00a0should i revert them  \n12:28\u00a0<cjdelisle>\u00a0Well, I want to be able to take a look at your code and only see the changes which get you to your goal.  \n12:30\u00a0<cjdelisle>\u00a0find and replace kills  \n12:30\u00a0<cjdelisle>\u00a0https://github.com/pulasthi/Datanucleus-Cassandra-Plugin/commit/e1910511b18649a21c0bc4f75879406d01a08b0b#L4L135  \n12:30\u00a0<pulasthi>\u00a0oops  \n12:30\u00a0<cjdelisle>\u00a0:)  \n12:31\u00a0<cjdelisle>\u00a0Here's what I would do,  \n12:31\u00a0<cjdelisle>\u00a0create a new branch for your work  \n12:32\u00a0<cjdelisle>\u00a0git co -b feature-query-noindex  \n12:32\u00a0<cjdelisle>\u00a0then git co master  \n12:32\u00a0<cjdelisle>\u00a0then revert all of your changes on master  \n12:32\u00a0<cjdelisle>\u00a0git revert HEAD --no-commit  \n12:33\u00a0<cjdelisle>\u00a0git revert HEAD~1 --no-commit  \n12:33\u00a0<cjdelisle>\u00a0git revert HEAD~2 --no-commit  \n12:33\u00a0<cjdelisle>\u00a0(each of your changes)  \n12:33\u00a0<pulasthi>\u00a0ok  \n12:33\u00a0<cjdelisle>\u00a0then your master will be back at todd's last commit  \n12:34\u00a0<cjdelisle>\u00a0(please wait unitl I'm done since this can be dangerous)  \n12:34\u00a0<pulasthi>\u00a0ok  \n12:34\u00a0<cjdelisle>\u00a0then you do:  \n12:34\u00a0<cjdelisle>\u00a0git commit -m \"reverted non-index query feature commits\"  \n12:35\u00a0<mflorea>\u00a0has quit  \n12:35\u00a0<cjdelisle>\u00a0not your master is back at todd's version.  \n12:36\u00a0<pulasthi>\u00a0ok so should i shart ?  \n12:37\u00a0<pulasthi>\u00a0start  \n12:39\u00a0<cjdelisle>\u00a0I just pulled a copy to local so you're safe to play around with git.  \n12:39\u00a0<pulasthi>\u00a0k  \n12:39\u00a0<cjdelisle>\u00a0The goal is to have one or a couple of commits each of which leave the code in a working state.  \n12:40\u00a0<cjdelisle>\u00a0It's not good to push a commit which breaks everything and then fix it in the next commit. If you're doing that then you should be committing against a feature branch and squashing your commits together.  \n12:41\u00a0<pulasthi>\u00a0ahh ok :)  \n12:41\u00a0<pulasthi>\u00a0still a lot to learn it seems  \n12:42\u00a0<cjdelisle>\u00a0I hope I'm not pushing you too fast, I'm just trying to teach you as much as fast as possible.  \n12:42\u00a0<cjdelisle>\u00a0\\*and get code which Todd will be delighted to pull ;)  \n12:43\u00a0<cjdelisle>\u00a0What I think we want is a single patch which implements all of the features when we are done.  \n12:43\u00a0<pulasthi>\u00a0no this is good not too fast :)  \n12:43\u00a0<cjdelisle>\u00a0Also you need to remove my changes to the pom.xml from your change set because Todd will almost definitely not be interested in pullin in our checkstyle rules.  \n12:44\u00a0<pulasthi>\u00a0ok i kept a copy just in case  \n12:45\u00a0<cjdelisle>\u00a0You can change everything back and you can see your patches squached together by using:  \n12:45\u00a0<cjdelisle>\u00a0git diff d9a654cd8063fde7498a HEAD  \n12:45\u00a0<cjdelisle>\u00a0^that will compare the head to the last commit by Todd  \n12:46\u00a0<cjdelisle>\u00a0then you can push your changes to github and I can pull the feature branch and we can work there.  \n12:46\u00a0<pulasthi>\u00a0ok btw in git co -b feature-query-noindex co is clone right?  \n12:46\u00a0<cjdelisle>\u00a0co is checkout  \n12:46\u00a0<cjdelisle>\u00a0err  \n12:47\u00a0<cjdelisle>\u00a0hehe sorry  \n12:47\u00a0<pulasthi>\u00a0np  \n12:47\u00a0<cjdelisle>\u00a0git checkout  \n12:47\u00a0<cjdelisle>\u00a0git checkout -b feature-query-noindex  \n12:48\u00a0<cjdelisle>\u00a0then once you have made your changes you can push your feature branch to github and I can pull it  \n12:50\u00a0<cjdelisle>\u00a0pulasthi: are you using linux?  \n12:51\u00a0<pulasthi>\u00a0yes  \n12:52\u00a0<pulasthi>\u00a0ubuntu to be specific  \n12:52\u00a0<cjdelisle>\u00a0cool, you'll be able to look at diffs in the terminal which is much nicer  \n12:53\u00a0<cjdelisle>\u00a0git config --global color.diff auto  \n12:53\u00a0<cjdelisle>\u00a0git config --global color.status auto  \n12:53\u00a0<cjdelisle>\u00a0git config --global color.branch auto  \n12:53\u00a0<cjdelisle>\u00a0^those make it easier  \n12:53\u00a0<pulasthi>\u00a0thanks ill try it  \n12:56\u00a0<cjdelisle>\u00a0then just jump on the terminal (switch the background color to black because white terminals are the devil) and use:  \n12:56\u00a0<cjdelisle>\u00a0git diff d9a654cd8063fde7498ab1d4513d09db HEAD  \n12:57\u00a0<pulasthi>\u00a0oops i think went one commit back than todds last commit  \n12:57\u00a0<pulasthi>\u00a0:-/  \n12:58\u00a0<cjdelisle>\u00a0that's ok  \n12:58\u00a0<cjdelisle>\u00a0all you need to do is (make sure you don't have any unsaved work and...)  \n12:58\u00a0<cjdelisle>\u00a0git reset --hard HEAD  \n12:58\u00a0<cjdelisle>\u00a0then try again  \n12:59\u00a0<cjdelisle>\u00a0you can correct any mistake in git  \n12:59\u00a0<cjdelisle>\u00a0which is important for me since I make a lot  \n12:59\u00a0<pulasthi>\u00a0:)  \n13:01\u00a0<pulasthi>\u00a0git reset --hard HEAD didnt do anything still same as todds second last commit  \n13:02\u00a0<cjdelisle>\u00a0what was the revert command you were using?  \n13:03\u00a0<pulasthi>\u00a0the last one i used is \u00a0git revert HEAD~5 --no-commit  \n13:03\u00a0<pulasthi>\u00a0then did \u00a0git commit -m \"reverted non-index query feature commits\"  \n13:03\u00a0<cjdelisle>\u00a0oh  \n13:04\u00a0<cjdelisle>\u00a0do this:  \n13:04\u00a0<cjdelisle>\u00a0git log  \n13:04\u00a0<cjdelisle>\u00a0you should see your big revert  \n13:04\u00a0<cjdelisle>\u00a0and behind it, everything you reverted  \n13:04\u00a0<cjdelisle>\u00a0and behind (under) that, todd's stuff  \n13:04\u00a0<cjdelisle>\u00a0is that right?  \n13:05\u00a0<pulasthi>\u00a0yes  \n13:06\u00a0<cjdelisle>\u00a0now since you have not pushed your changes you can do this:  \n13:06\u00a0<cjdelisle>\u00a0git reset --hard HEAD~1  \n13:06\u00a0<cjdelisle>\u00a0if you push your changes to anyone else, then using reset is very evil and should never be done.  \n13:07\u00a0<cjdelisle>\u00a0now do  \n13:07\u00a0<cjdelisle>\u00a0git log  \n13:07\u00a0<cjdelisle>\u00a0and you should see your big commit is gone  \n13:07\u00a0<cjdelisle>\u00a0\\*revert  \n13:07\u00a0<pulasthi>\u00a0yes  \n13:07\u00a0<cjdelisle>\u00a0so you can give it another shot  \n13:07\u00a0<pulasthi>\u00a0thanks  \n13:08\u00a0<pulasthi>\u00a0ill take some time to read the git manual so you want have to worry about these things  \n13:09\u00a0<cjdelisle>\u00a0here's a good starter  \n13:09\u00a0<cjdelisle>\u00a0http://www.pastebay.com/125819  \n13:09\u00a0<cjdelisle>\u00a0lifted from http://incubator.myxwiki.org/xwiki/bin/view/Main/UsingGit  \n13:10\u00a0<cjdelisle>\u00a0because myxwiki is broken  \n13:10\u00a0<pulasthi>\u00a0thanks ill take a look today  \n13:10\u00a0<cjdelisle>\u00a0github also has good info on getting started.  \n13:10\u00a0<cjdelisle>\u00a0I'm going to get a cup of coffee, I'll be back later.  \n13:11\u00a0<cjdelisle>\u00a0remember, don't be shy, it's git, you really can't break anything  \n13:11\u00a0<pulasthi>\u00a0:)  \n13:11\u00a0<pulasthi>\u00a0ok  \n13:35\u00a0<asyd>\u00a0has joined #xwiki  \n13:35\u00a0<asyd>\u00a0hello there!  \n13:39\u00a0<asyd>\u00a0is that possible to deploy xwiki with another root context? It seem to work, but when I try to import the xar, it fails, w/o any error in the logs  \n13:39\u00a0<@sdumitriu>\u00a0It should work fin  \n13:39\u00a0<@sdumitriu>\u00a0fine  \n13:40\u00a0<@sdumitriu>\u00a0The root context is needed just for WebDAV  \n13:40\u00a0<@sdumitriu>\u00a0And just for some WebDAV clients that are a bit broken  \n13:40\u00a0<@sdumitriu>\u00a0Check for JS errors with Firebug  \n13:41\u00a0<asyd>\u00a0ah, it works with firefox, I was using chrome  \n13:42\u00a0<asyd>\u00a0hmm, but I can't login, strange  \n13:42\u00a0<asyd>\u00a0ah my bad  \n13:43\u00a0<@sdumitriu>\u00a0Hm, try refreshing the cache (in Chrome)  \n13:43\u00a0<asyd>\u00a0btw, is there a plugin/module/whatever to enable anonymous comments with captcha?  \n13:44\u00a0<asyd>\u00a0yeah indeed..  \n13:50\u00a0<@sdumitriu>\u00a0asyd: Yep, you just need to change the configuration  \n13:50\u00a0<asyd>\u00a0well, I just click on  \n13:50\u00a0<@sdumitriu>\u00a0Allow comment rights for guests, and on the same admin page there should be a checkbox to require captchas  \n13:50\u00a0<asyd>\u00a0Force un utilisateur non enregistr\u009d \u009d renseigner un captcha lors de l'ajout d'un commentaire sur une page   \n13:50\u00a0<asyd>\u00a0indeed  \n13:50\u00a0<asyd>\u00a0however, when I try to browse as anonymous user, I don't have the form  \n13:55\u00a0<@sdumitriu>\u00a0Yes, but you must also grant the comment right for guest users  \n13:56\u00a0<@sdumitriu>\u00a0On the rights administration page, switch from Groups to Users  \n13:57\u00a0<asyd>\u00a0ahh  \n13:57\u00a0<asyd>\u00a0hmm there is only the admin  \n13:58\u00a0<asyd>\u00a0ah it's by space  \n13:58\u00a0<asyd>\u00a0perfect, thans  \n14:12\u00a0<jvdrean>\u00a0has joined #xwiki  \n14:22\u00a0<asyd>\u00a0hmm I'm looking for a tree view snippet, found http://playground.xwiki.org/xwiki/bin/view/XWiki/Treeview?viewer=code however, even using dataSource: isc.XWEWikiDataSource.create({ space: \"MySpace\" }), it show all spaces  \n14:32\u00a0<asyd>\u00a0ah, it's XWESpaceDataSource  \n14:38\u00a0<asyd>\u00a0however I'm wondering how to don't display the WebPreferences entry  \n14:38\u00a0<pulasthi1>\u00a0has joined #xwiki  \n14:39\u00a0<pulasthi>\u00a0has quit  \n14:49\u00a0<asyd>\u00a0strange, if I choose wiki as preferred syntax as non admin user, I can't switch to wysiwyg  \n14:57\u00a0<vmassol>\u00a0has joined #xwiki  \n14:58\u00a0<pulasthi1>\u00a0has quit  \n15:00\u00a0<asyd>\u00a0hi vmassol !  \n15:13\u00a0<vmassol>\u00a0has quit  \n15:24\u00a0<mflorea>\u00a0has joined #xwiki  \n15:38\u00a0<jvdrean>\u00a0has left #xwiki  \n15:47\u00a0<asyd>\u00a0hmmm in the tree view, it is possible to use the title rather the pagename ?  \n15:48\u00a0<vmassol>\u00a0has joined #xwiki  \n15:55\u00a0<abusenius>\u00a0has quit  \n16:40\u00a0<vmassol>\u00a0has quit  \n17:35\u00a0<mflorea>\u00a0has quit  \n18:14\u00a0<pulasthi>\u00a0has joined #xwiki  \n18:15\u00a0<cjdelisle>\u00a0hi pulasthi  \n18:15\u00a0<pulasthi>\u00a0CJDELISLE: HI  \n18:15\u00a0<cjdelisle>\u00a0Your new commits are nice  \n18:15\u00a0<pulasthi>\u00a0oops caps lock  \n18:15\u00a0<cjdelisle>\u00a0hehe  \n18:16\u00a0<pulasthi>\u00a0so what should i look into next  \n18:16\u00a0<cjdelisle>\u00a0There are still a couple whitespace problems.  \n18:16\u00a0<cjdelisle>\u00a0do this:  \n18:17\u00a0<cjdelisle>\u00a0git diff HEAD~2 HEAD  \n18:17\u00a0<cjdelisle>\u00a0then scroll through it (using the arrow keys)  \n18:17\u00a0<cjdelisle>\u00a0and you'll see trailing whitespace highlighted in red.  \n18:18\u00a0<pulasthi>\u00a0ok ill remove them  \n18:18\u00a0<cjdelisle>\u00a0The javadoc comments in AnnotationEvaluator look strange  \n18:19\u00a0<cjdelisle>\u00a0shouldn't each line be tabbed in rather than only the first?  \n18:19\u00a0<pulasthi>\u00a0hmm yes they where originaly  \n18:20\u00a0<pulasthi>\u00a0ill correct them i didn't notice them  \n18:20\u00a0<vmassol>\u00a0has joined #xwiki  \n18:20\u00a0<cjdelisle>\u00a0also pull the checkstyle commit into your branch  \n18:20\u00a0<cjdelisle>\u00a0git cherry-pick 131ac55b479c62d42c8ccb7e72b54be75284fe04  \n18:21\u00a0<cjdelisle>\u00a0that way you can verify the style of your new work automaticly  \n18:21\u00a0<cjdelisle>\u00a0Just looking at it I think it's very close to full compliance.  \n18:22\u00a0<cjdelisle>\u00a0the last thing on my mind is I see you used 2 commits, is it functional with only the first commit?  \n18:24\u00a0<cjdelisle>\u00a0ahh so you did run checkstyle  \n18:24\u00a0<pulasthi>\u00a0no no by mistake i only added the new AnnotationEvaluator class  \n18:24\u00a0<pulasthi>\u00a0in the first commit  \n18:25\u00a0<pulasthi>\u00a0thus the secound commit  \n18:25\u00a0<cjdelisle>\u00a0well git is nice because you can squash two commits together.  \n18:25\u00a0<pulasthi>\u00a0ahh how do i differ master from branch in the local repo?  \n18:26\u00a0<pulasthi>\u00a0to get the check style only to my branch  \n18:26\u00a0<pulasthi>\u00a0:-/  \n18:26\u00a0<cjdelisle>\u00a0You shared them so you can't rewrite history now but you can revert and generate a commit again.  \n18:27\u00a0<cjdelisle>\u00a0oh I see, you are generating your commit by diffing master against your branch?  \n18:27\u00a0<cjdelisle>\u00a0hmm then pulling in the checkstyle would present a problem.  \n18:27\u00a0<cjdelisle>\u00a0was that the question?  \n18:28\u00a0<cjdelisle>\u00a0or did you just wonder how to do a diff of master and your branch?  \n18:28\u00a0<pulasthi>\u00a0now i have a branch and a master in git right  \n18:28\u00a0<pulasthi>\u00a0but only have repo in the local  \n18:29\u00a0<cjdelisle>\u00a0your branch is only on local because you have not pushed it...  \n18:29\u00a0<pulasthi>\u00a0i did push it into git  \n18:29\u00a0<pulasthi>\u00a0:)  \n18:29\u00a0<cjdelisle>\u00a0oh you did.  \n18:30\u00a0<cjdelisle>\u00a0err what was the question?  \n18:30\u00a0<pulasthi>\u00a0mm mabye im a little confused  \n18:31\u00a0<pulasthi>\u00a0ill read the git tutorials a bit  \n18:31\u00a0<pulasthi>\u00a0if still have a question ill ask  \n18:32\u00a0<pulasthi>\u00a0\\*if i  \n18:32\u00a0<cjdelisle>\u00a0what I would do at this point is revert the last 2 commits, go back to the branch and fix the whitespace and the javadoc tabbing, then make one commit with everything.  \n18:32\u00a0<cjdelisle>\u00a0then you can get back on master and cherry-pick that commit over from the branch  \n18:32\u00a0<pulasthi>\u00a0ahh thats the question how do i switch between master and branch  \n18:32\u00a0<pulasthi>\u00a0localy  \n18:33\u00a0<pulasthi>\u00a0:)  \n18:33\u00a0<cjdelisle>\u00a0ahh  \n18:33\u00a0<cjdelisle>\u00a0git checkout master  \n18:33\u00a0<cjdelisle>\u00a0git checkout <what did we name it?>  \n18:33\u00a0<cjdelisle>\u00a0git branch  \n18:33\u00a0<pulasthi>\u00a0ahh ok thanks  \n18:33\u00a0<cjdelisle>\u00a0shows you a list of all branches  \n18:33\u00a0<pulasthi>\u00a0ill make all the changes and do one commit  \n18:34\u00a0<pulasthi>\u00a0how do u squash commits  \n18:34\u00a0<pulasthi>\u00a0?  \n18:34\u00a0<cjdelisle>\u00a0well you should only do this if you have not shared the commits.  \n18:34\u00a0<pulasthi>\u00a0ok  \n18:34\u00a0<pulasthi>\u00a0err i should read the doc u gave  \n18:34\u00a0<pulasthi>\u00a0first  \n18:34\u00a0<cjdelisle>\u00a0in fact github will not let you push when you have rewritten history  \n18:35\u00a0<cjdelisle>\u00a0but if you have just done a few commits and you have not pushed, then you can do:  \n18:35\u00a0<cjdelisle>\u00a0git rebase -i HEAD~X \u00a0\u00a0\u00a0where X is the number of commits you want to modify  \n18:36\u00a0<cjdelisle>\u00a0git rebase -i \u00a0\u00a0is a whole beast unto itself  \n18:36\u00a0<pulasthi>\u00a0:)  \n18:39\u00a0<cjdelisle>\u00a0these three commands should be on a note stuck to your monitor:  \n18:39\u00a0<cjdelisle>\u00a0git status  \n18:39\u00a0<cjdelisle>\u00a0git log  \n18:39\u00a0<cjdelisle>\u00a0git branch -a  \n18:39\u00a0<cjdelisle>\u00a0they tell you the current state of your repo, they are kind of your eyes and ears  \n18:40\u00a0<pulasthi>\u00a0hmm  \n18:43\u00a0<cjdelisle>\u00a0http://tomayko.com/writings/the-thing-about-git <-- something to bookmark for when you have a moment  \n18:44\u00a0<cjdelisle>\u00a0AnnotationEvaluator line 40, missing an empty line between the field and the comment... but you knew that ;)  \n18:46\u00a0<pulasthi>\u00a0:)  \n18:47\u00a0<pulasthi>\u00a0thanks for the link  \n20:04\u00a0<asyd>\u00a0hm what is the best way to add some extra tags like the one for Google Analytics?  \n20:04\u00a0<cjdelisle>\u00a0wdym by \"tags\"?  \n20:05\u00a0<asyd>\u00a0html tags, I tried to add it at the end of global.vm  \n20:06\u00a0<cjdelisle>\u00a0where do you want them to be? top of the page? bottom?  \n20:07\u00a0<asyd>\u00a0bottom, for sure.  \n20:07\u00a0<asyd>\u00a0seem working  \n20:08\u00a0<cjdelisle>\u00a0docextras.vm will also work  \n20:08\u00a0<asyd>\u00a0ah no, it's not at the end  \n20:08\u00a0<asyd>\u00a0ok  \n20:08\u00a0<cjdelisle>\u00a0hmm does it need to be displayed when editing too?  \n20:09\u00a0<cjdelisle>\u00a0oh, use the copyright notice...  \n20:09\u00a0<asyd>\u00a0no  \n20:09\u00a0<asyd>\u00a0yeah I was looking for the footer one  \n20:09\u00a0<cjdelisle>\u00a0It's in XWikiPreferences  \n20:09\u00a0<asyd>\u00a0but can't find it  \n20:09\u00a0<asyd>\u00a0ahh  \n20:10\u00a0<cjdelisle>\u00a0Page Elements section  \n20:11\u00a0<asyd>\u00a0in the look and feels?  \n20:11\u00a0<asyd>\u00a0hmm ok  \n20:12\u00a0<asyd>\u00a0and this field is used somewhere in a .vm I guess?  \n20:12\u00a0<cjdelisle>\u00a0yes  \n20:12\u00a0<cjdelisle>\u00a0but the advantage is you can modify it from the wiki  \n20:12\u00a0<asyd>\u00a0a skin'one, or a global  \n20:13\u00a0<asyd>\u00a0yeah indeed. but since for the look and fields, sometime I must modifies CSS, sometimes I need to edit some page in the wik  \n20:13\u00a0<asyd>\u00a0grrr, err when adding the <Script>..</script>  \n20:13\u00a0<cjdelisle>\u00a0Have you looked in to StyleSheetExtensions and ScriptExtensions?  \n20:15\u00a0<asyd>\u00a0too bad the skin doesn't containt the full velocity templates to render a page :/  \n20:17\u00a0<cjdelisle>\u00a0that is the future, every UI element registers itself somewhat like firefox extensions.  \n20:56\u00a0<pulasthi>\u00a0has left #xwiki  \n22:29\u00a0<asyd>\u00a0Hmm, I have a public xwiki with both http/https protocol, is there a way to force https for connection?  \n23:59\u00a0<vmassol>\u00a0has quit  \n\n"}