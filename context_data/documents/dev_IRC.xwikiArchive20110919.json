{"id": "dev:IRC.xwikiArchive20110919", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110919", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:03\u00a0<+sburjan`>\u00a0iti dau eu crack  \n00:25\u00a0<rrodriguez>\u00a0has quit  \n04:50\u00a0<DrLou>\u00a0has quit  \n06:51\u00a0<mflorea>\u00a0has joined #xwiki  \n06:51\u00a0<@sdumitriu>\u00a0Hey mflorea  \n06:51\u00a0<@sdumitriu>\u00a0You're up early  \n06:51\u00a0<+mflorea>\u00a0yep  \n06:51\u00a0<@sdumitriu>\u00a0Can you take a look at the failing tests/  \n06:52\u00a0<+mflorea>\u00a0I'll look at the failing tests  \n06:52\u00a0<@sdumitriu>\u00a0?  \n06:52\u00a0<+mflorea>\u00a0yep  \n06:52\u00a0<@sdumitriu>\u00a0Thanks  \n06:52\u00a0<+mflorea>\u00a0np  \n06:53\u00a0<@sdumitriu>\u00a0Except the tests, you're OK for the release? Anything else you want to commit?  \n06:56\u00a0<+mflorea>\u00a0yes, I don't have anything else big to commit (just a few minor code improvements but that should be quick)  \n07:00\u00a0<Denis1>\u00a0has joined #xwiki  \n07:00\u00a0<Denis>\u00a0has quit  \n07:45\u00a0<sdumitriu>\u00a0has quit  \n08:20\u00a0<vmassol>\u00a0has joined #xwiki  \n08:40\u00a0<Denis1>\u00a0is now known as <Denis>  \n08:42\u00a0<vmassol>\u00a0good morning  \n08:43\u00a0<vmassol>\u00a0we need to fix the still failing functional tests ...  \n09:05\u00a0<vmassol>\u00a0mflorea: is your last commit why some functional tests were failing?  \n09:06\u00a0<vmassol>\u00a0(missing XAR)  \n09:06\u00a0<+mflorea>\u00a0indirectly yes  \n09:07\u00a0<+mflorea>\u00a0I'm fixing the tests  \n09:07\u00a0<vmassol>\u00a0what was the issues?  \n09:08\u00a0<vmassol>\u00a0(just want to make sure that XE works even if there's no XAR)  \n09:14\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:14\u00a0<sburjan>\u00a0has joined #xwiki  \n09:25\u00a0<+mflorea>\u00a0there wasn't any issue. I said \"indirectly\". Some tests fail because the new sheet system is applied even for old applications. While debugging this I noticed that the SheetClass is missing.  \n09:46\u00a0<vmassol>\u00a0mflorea: I see you've modified exisitng applications to use the new sheet system  \n09:47\u00a0<vmassol>\u00a0I hope this wasn't needed to fix the tests  \n09:47\u00a0<vmassol>\u00a0since old applications still need to work without change for backward compat  \n09:47\u00a0<+mflorea>\u00a0nop, the last 2 commits are not about using the new sheet system  \n09:47\u00a0<vmassol>\u00a0did you need to make those changes to have the tests pass?  \n09:47\u00a0<+mflorea>\u00a0well, you have to make a change for backward compat, but it's small  \n09:47\u00a0<vmassol>\u00a0argh  \n09:48\u00a0<vmassol>\u00a0that's a blocker  \n09:48\u00a0<+mflorea>\u00a0I need those changes for backward compatibility  \n09:48\u00a0<vmassol>\u00a0because it means no backward compat  \n09:48\u00a0<vmassol>\u00a0:(  \n09:49\u00a0<vmassol>\u00a0can you explain a bit more?  \n09:49\u00a0<+mflorea>\u00a0you have backward compatibility, but not by default. You have to enable it, but simply adding an object of type EditModeClass to your sheets  \n09:49\u00a0<vmassol>\u00a0I want to be 100% sure any existing app will continue to work  \n09:49\u00a0<vmassol>\u00a0ok so that's not backwrad compat  \n09:49\u00a0<vmassol>\u00a0it means that 100% of existing apps will fail  \n09:49\u00a0<vmassol>\u00a0we cannot release with this  \n09:50\u00a0<vmassol>\u00a0I'm really sad that this is coming up now one week after the release date since I thought I made it clear we needed 100% backward compat  \n09:50\u00a0<vmassol>\u00a0:(  \n09:50\u00a0<vmassol>\u00a0so we need to find another system  \n09:51\u00a0<+mflorea>\u00a0backward compatibility is implemented, it's not \"enabled\" by default  \n09:51\u00a0<vmassol>\u00a0this is NOT backward compat  \n09:51\u00a0<vmassol>\u00a0and it's not like a switch  \n09:51\u00a0<vmassol>\u00a0it's for every app  \n09:51\u00a0<vmassol>\u00a0if it were a config param in the xwiki config file it woudl be ok  \n09:55\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:55\u00a0<+mflorea>\u00a0the current solution is the best option. One of the main goals of the new sheet system was to apply sheets automatically. Meaning that you don't have to do anything but add and object of you data and the sheet is automatically detected. This is true for old applications also. So you either complicate the new system by forcing the user to explicitly \"call\" the sheet (so that is isn't called for old apps) or you force old apps to block the new sheet system, wh  \n09:58\u00a0<vmassol>\u00a0it's not the problem  \n09:58\u00a0<vmassol>\u00a0we must absolutely keep backward compat  \n09:59\u00a0<vmassol>\u00a0this means that any existing app will continue to work without change  \n09:59\u00a0<vmassol>\u00a0the largest change we can allow is a config flag  \n09:59\u00a0<vmassol>\u00a0but not having to modify any single app  \n09:59\u00a0<vmassol>\u00a0btw are you volunterring to change every single app on extensions.xwiki.org?  \n10:00\u00a0<vmassol>\u00a0+ got to the 100s of customer sites already using xwiki  \n10:00\u00a0<vmassol>\u00a0to change every single app they have  \n10:00\u00a0<vmassol>\u00a0?  \n10:00\u00a0<+mflorea>\u00a0it's not a big change  \n10:00\u00a0<vmassol>\u00a0so no the current is definitely not the best solution as you say  \n10:00\u00a0<+Denis>\u00a0mflorea: could not the new sheet system detect an old app, which explicitly call their sheet ?  \n10:00\u00a0<vmassol>\u00a0I'm a big big ?1  \n10:01\u00a0<vmassol>\u00a0to release like this  \n10:01\u00a0<vmassol>\u00a0especially in a 3.2 release ie well into the cycle  \n10:05\u00a0<vmassol>\u00a0restarting irc bb in 1mn  \n10:05\u00a0<vmassol>\u00a0back  \n10:05\u00a0<vmassol>\u00a0(it worked without restarting ;))  \n10:10\u00a0<@cjdelisle>\u00a0http://www.youtube.com/aclfestival \u00a0<-- semi-live music (replay of what was live yesterday)  \n10:11\u00a0<vmassol>\u00a0mflorea: I think this situation could have been avoided if you had sent a proposal/vote mail to the dev list about the need to modify existing apps to make them work. We should always ask opinions for important changes like this one IMO.  \n10:11\u00a0<vmassol>\u00a0(unless you only realized it now which is a different story, in which case I'm glad I caught it ;))  \n10:20\u00a0<vmassol>\u00a0guys, seen that we need some more time for the build to stabilize (we still have functional tests failing) + this issue with backward compat + the fact that sergiu still hasn't committed his changes for lucene 3.x, I'd like to propose to postpone M3 to next week (26th) and move RC1 to 3rd of OCtober and final stays for the 10th. WDYT? Should I send a mail?  \n10:21\u00a0<+mflorea>\u00a0+1  \n10:21\u00a0<vmassol>\u00a0this means we absolutely need to release on 26 since we'll only have 1 week for RC1  \n10:21\u00a0<vmassol>\u00a0which means we need to be ready to release around thursday  \n10:31\u00a0<evalica>\u00a0has joined #xwiki  \n11:03\u00a0<evalica>\u00a0has quit  \n11:09\u00a0<evalica>\u00a0has joined #xwiki  \n11:51\u00a0<vmassol>\u00a0tmortagne: wdyt about my proposal to postpone M3 release above?  \n11:51\u00a0<vmassol>\u00a0cjdelisle, Denis, all, any input?  \n11:51\u00a0<vmassol>\u00a0I can send an email but I won't a quick check first here  \n11:51\u00a0<vmassol>\u00a0s/can/will/  \n11:51\u00a0<vmassol>\u00a0s/won't/wanted/  \n11:51\u00a0<vmassol>\u00a0:)  \n11:52\u00a0<vmassol>\u00a0(my fingers are typing by themselves\u2026)  \n11:53\u00a0<@cjdelisle>\u00a0I don't have enough information about the specific issue to comment.  \n11:54\u00a0<@cjdelisle>\u00a0However if we did want to postpone and we were happy to apply a change to c.x.x.XWiki we could fix the problem which is blocking installation in myxwiki.org.  \n11:56\u00a0<@cjdelisle>\u00a0That change is however a bit dangerous since it is fixing an issue with putting macros into the root namespace so, by definition, there are going to be some uses which it breaks  \n11:57\u00a0<+Denis>\u00a0vmassol: +1 for me  \n11:59\u00a0<vmassol>\u00a0ok I'll send a mail  \n12:22\u00a0<mflorea>\u00a0has quit  \n13:05\u00a0<DrLou>\u00a0has joined #xwiki  \n13:07\u00a0<mflorea>\u00a0has joined #xwiki  \n13:55\u00a0<@cjdelisle>\u00a0mflorea: I read your proposal on the list, are you proposing that when I create a document called XyzClassSheet, now any document with an XyzClass object will magicly change?  \n13:56\u00a0<+mflorea>\u00a0yes  \n13:56\u00a0<@cjdelisle>\u00a0Aren't you concerned that it will inhibit people from understanding the tools that they are using when the tools don't seem to make any sense?  \n13:56\u00a0<+mflorea>\u00a0but my mail doesn't propose this, this is already implemented. The mail was about backward compatibility with current apps  \n13:57\u00a0<@cjdelisle>\u00a0Was it proposed earlier and I missed it?  \n13:57\u00a0<+mflorea>\u00a0cjdelisle: it's called convention over configuration  \n13:57\u00a0<+mflorea>\u00a0and of course you can change the default behavior through configuration, but by default, naming convention is used  \n13:58\u00a0<+mflorea>\u00a0why would you name a page XyzClassSheet if not to be a sheet for XyzClass?  \n13:58\u00a0<@cjdelisle>\u00a0The first problem I see is that people will not be able to learn the tools that they are using because the tools are not behaving in a rational manor. When you name things a certain way the toold magicly change behavior.  \n13:59\u00a0<+mflorea>\u00a0I don't see the part that is not rational  \n14:00\u00a0<@cjdelisle>\u00a0If you are first learning XWiki, you see a sheet, a class and a document. When you see the document include the sheet and contain the class, it all makes sense. 3 tools, each providing a function.  \n14:00\u00a0<+mflorea>\u00a099% of the time when you have XyzClassSheet you want it to be the sheet for XyzClass, why state the obvious and not do it automatically  \n14:01\u00a0<@cjdelisle>\u00a0It's \"do what I mean\" as opposed to \"do what I say\"  \n14:01\u00a0<@cjdelisle>\u00a0perl is developed that way  \n14:01\u00a0<@cjdelisle>\u00a0which is why it makes no sense (at least not to me)  \n14:01\u00a0<+mflorea>\u00a0exactly, by naming XyzClassSheet you \\_mean\\_ it's a sheet for XyzClass  \n14:02\u00a0<@cjdelisle>\u00a0Well the part about magic filenames aside  \n14:02\u00a0<+mflorea>\u00a0at an abstract level, there's no different between using the include macro and using a naming convetion. Both are way to specify which is the sheet  \n14:02\u00a0<pturcotte>\u00a0has quit  \n14:02\u00a0<+mflorea>\u00a0the naming convention is more natiral  \n14:02\u00a0<+mflorea>\u00a0natural  \n14:02\u00a0<+mflorea>\u00a0plus  \n14:03\u00a0<@cjdelisle>\u00a0have you considered what will happen if I register a user called XWikiUsersSheet?  \n14:03\u00a0<@cjdelisle>\u00a0am I going to break all of the profiles and/or inject PR script?  \n14:03\u00a0<+mflorea>\u00a0XWikiUsersSheet already exists, I don't see the problem.  \n14:03\u00a0<+mflorea>\u00a0I'm not adding new sheets  \n14:04\u00a0<+mflorea>\u00a0currently XWikiUsersSheet is include in all users, to its the same  \n14:04\u00a0<@cjdelisle>\u00a0Well there's a natural security issue in the fact that I can look for a class which contains no sheet and create a sheet then look for PR documents which use that class.  \n14:05\u00a0<+mflorea>\u00a0as I said, you can easily overwrite the \"default\" sheet  \n14:05\u00a0<+mflorea>\u00a0and specify another one  \n14:06\u00a0<@cjdelisle>\u00a0But since XWiki is mostly confined to intranets I don't think security is as much of an issue as the fact that it's magic filenames.  \n14:07\u00a0<+mflorea>\u00a0do you think maven is magic? it applies the same principle, convention over configuration. You don't have to specify that sources are in src/main/java or that resources are src/main/resources. It's convention that makes your life easier  \n14:07\u00a0<+mflorea>\u00a0it's a best practice  \n14:08\u00a0<+mflorea>\u00a0and for XWiki, naming XyzClass and XyzClassSheet is a best practice  \n14:08\u00a0<@cjdelisle>\u00a0I would liken it more to Microsoft Windows where you can't create a file called COM1 because that's a magic filename.  \n14:09\u00a0<+mflorea>\u00a0I don't see why? what's \"COM1\" in my case?  \n14:09\u00a0<+mflorea>\u00a0what page name can't you use?  \n14:10\u00a0<@cjdelisle>\u00a0well I am not allowed to create a document called XyzClassSheet if XyzClass exists.  \n14:10\u00a0<+mflorea>\u00a0why not?  \n14:10\u00a0<+mflorea>\u00a0how prevents you from doing this?  \n14:10\u00a0<+mflorea>\u00a0s/how/who  \n14:10\u00a0<@cjdelisle>\u00a0Because I would be breaking all of the documents which use XyzClass  \n14:11\u00a0<@cjdelisle>\u00a0It wasn't so long ago that we couldn't create documents with special characters, I kind of see this as a step back toward that.  \n14:11\u00a0<+mflorea>\u00a0but you can, that's one point, and if you do it, then you 99% want to create a sheet for that clss  \n14:11\u00a0<@cjdelisle>\u00a0If somebody learns by following instructions, I guess it takes out one step and makes their lives easier  \n14:12\u00a0<@cjdelisle>\u00a0but people like me learn by understanding the function of the tools which they are using.  \n14:12\u00a0<+mflorea>\u00a0why is it hard to learn a naming convention?  \n14:12\u00a0<+mflorea>\u00a0which is a best practice anyway  \n14:13\u00a0<+mflorea>\u00a0and it's the natural naming  \n14:13\u00a0<@cjdelisle>\u00a0A naming convention I don't mind, what I mind is having magic things happen when you use that naming convention.  \n14:13\u00a0<+mflorea>\u00a0that's the convention for  \n14:13\u00a0<+Denis>\u00a0mflorea: so the sheet document does not require a sheetClass object to be a sheet ?  \n14:13\u00a0<+mflorea>\u00a0Denis: right, the sheet class is optional, if you want custom things  \n14:14\u00a0<+Denis>\u00a0woah  \n14:14\u00a0<+mflorea>\u00a0(like apply the sheet only for a specific action)  \n14:14\u00a0<+mflorea>\u00a0Denis?  \n14:14\u00a0<+Denis>\u00a0I am incline to be with Caleb on this  \n14:14\u00a0<+mflorea>\u00a0why?  \n14:15\u00a0<+Denis>\u00a0there is nothing in xzyClassSheet that implied it is a sheet  \n14:15\u00a0<+mflorea>\u00a0there is... it's name  \n14:15\u00a0<+mflorea>\u00a0and the fact that XyzClass exists, and it's a class  \n14:15\u00a0<+Denis>\u00a0this is just a name anyone could use for a document without knowing it is writing a sheet at all  \n14:16\u00a0<+Denis>\u00a0like xyzClass is not implied to be a class  \n14:17\u00a0<+mflorea>\u00a0why would you put \"Class\" and \"Sheet\" in the name? Do you have any \\_real\\_ use case?.. I feel we're talking only theoretically here, while in practice 99% of the time, when you create XyzClass it is a class and XyzClassSheet it is a sheet  \n14:18\u00a0<@cjdelisle>\u00a0I think what it is with me is that telling me to follow certain rules and that when I do it will \"just work\" is telling me that I am too stupid to understand the tools and how to use them.  \n14:18\u00a0<+mflorea>\u00a0did you ever created a page XyzClass that wasn't a class?  \n14:19\u00a0<+Denis>\u00a0Let say I have no XWiki knowledge, my boss use XWiki for an intranet, and I am starting use it for my technical specs, there is chances I will use names like blablaClass for talking about some class, no ?  \n14:20\u00a0<+mflorea>\u00a0no... Caleb, it means that some people have uses the tools and they have come to the conclusion that 99% we do like this and this has become a good practice and since it's also natural it's good to make it easier for people to create sheets  \n14:20\u00a0<+Denis>\u00a0no XWiki class but Java Class or what ever  \n14:20\u00a0<+mflorea>\u00a0Denis, ok, go on  \n14:20\u00a0<+mflorea>\u00a0question: do you make it a class or not?  \n14:20\u00a0<+mflorea>\u00a0I suppose not  \n14:21\u00a0<+mflorea>\u00a0you just create a page named MyJavaClass  \n14:21\u00a0<+Denis>\u00a0so when you name a document anything, and put a Class in it, you explicitly say you whant a class  \n14:21\u00a0<+mflorea>\u00a0what next?  \n14:21\u00a0<+mflorea>\u00a0let's continue with this use case  \n14:21\u00a0<+mflorea>\u00a0you created a page named MyJavaClass, which isn't a class  \n14:21\u00a0<+mflorea>\u00a0what do you do next?  \n14:22\u00a0<+Denis>\u00a0so when you name another document anything, and say explicitely in let say a SheetClass object, that this document is a sheet for your class, then the magic could happen  \n14:22\u00a0<+mflorea>\u00a0ok, so you also create MyJavaClassSheet (I don't know why if not for a sheet, but let's suppose you do)  \n14:23\u00a0<+mflorea>\u00a0now, how would the sheet be applied? you have to have an object of type MyJavaClass to a page, but you can't because MyJavaClass is not a class  \n14:24\u00a0<@cjdelisle>\u00a0I think the basic consept of extensibility is that we build a platform and we don't know how people are going to use it.  \n14:25\u00a0<@cjdelisle>\u00a0Imagine you're learning XWiki and you happen to be a programmer so you just open up an application and read over it for yourself. How are you ever expected to know that the reason why it works is because of the name of the document?  \n14:25\u00a0<+mflorea>\u00a0a platform has best practices. They are not enforced (in this case you can bind a different sheet than the one following the naming convention) but you are advised to use them  \n14:25\u00a0<+mflorea>\u00a0cjdelisle: give me a real use case, step by step  \n14:25\u00a0<+mflorea>\u00a0let's take the java example  \n14:26\u00a0<+mflorea>\u00a0tell me the steps  \n14:26\u00a0<@cjdelisle>\u00a0I don't know of any use case which would cause a bug, I do know that I would be very unhappy and probably drop XWiki on the spot if I was trying to learn it by reading an application only to discover that the application only works because of the names of the documents it is in.  \n14:27\u00a0<+Denis>\u00a0mflorea: I just says that like xyzClass could be any abcClass or not be class at all, xyzClassSheet could be sheet for abcClass or not be a sheet at all.  \n14:27\u00a0<+mflorea>\u00a0Denis: you have to have objects attach to a page in order for the sheet to be applied  \n14:28\u00a0<+Denis>\u00a0if a class is defined, it is likely that some document will have object for that class  \n14:28\u00a0<+mflorea>\u00a0i.e. XyzDoc is displayed using XyzClassSheet if it has an object of type XyzClass attached  \n14:30\u00a0<+Denis>\u00a0even if xyzClassSheet is not a sheet, and xyzDoc has other mecanism to display itself  \n14:30\u00a0<+Denis>\u00a0how do you prevent that ?  \n14:30\u00a0<+mflorea>\u00a0Denis: if xyzDoc uses include macro then the backward compat is triggered and the sheet is not applied  \n14:31\u00a0<+mflorea>\u00a0I mean, the sheet is not applied automatically; xyzDoc makes the sheet call  \n14:31\u00a0<+mflorea>\u00a0by using the include macro  \n14:32\u00a0<+Denis>\u00a0ok, but you say in your proposal that you want to allow xyzDoc to includes stuffs, including sheets  \n14:32\u00a0<@cjdelisle>\u00a0now there's more magic based on what the content of the document is?  \n14:33\u00a0<+mflorea>\u00a0when I say this I'm referring to \"new\" sheets, i.e. sheets defined with the SheetClasss  \n14:33\u00a0<+Denis>\u00a0oups, we missed something  \n14:33\u00a0<+Denis>\u00a0you just says that sheet does not have to contains a sheetClass object, no ?  \n14:34\u00a0<+mflorea>\u00a0yes  \n14:34\u00a0<+mflorea>\u00a0it's optional  \n14:34\u00a0<+Denis>\u00a0so what is this new sheet ?  \n14:35\u00a0<@cjdelisle>\u00a0is it really that important that the {{include}} be removed from the document?  \n14:36\u00a0<+Denis>\u00a0Caleb, the issue with the include is that it require a template or some coding to be created  \n14:36\u00a0<+Denis>\u00a0on that point, I agree that some magic is interresting  \n14:37\u00a0<@cjdelisle>\u00a0I would rather handle it in script in the wiki (where I can read it) than hide it in oldcore  \n14:37\u00a0<+Denis>\u00a0but I am not in favor of document becoming magically a sheet for some class just by naming convention  \n14:37\u00a0<@cjdelisle>\u00a0I learn by reading code, how can I understand what an application is doing if the name of the document causes something to happen?  \n14:37\u00a0<+mflorea>\u00a0I put new between quotes, it's not really new. What I tried to explain in the mail is that we use to have a SheetClass for specifying the default edit mode (you would use it for say that a doc must be edited in inline mode by default) and I changed the scope of this class, so be used as a sheet descriptor. As a consequence the code in getDefaultEditMode may be confused by a page containing a sheetClass object: did you mean to describe a sheet   \n14:41\u00a0<+mflorea>\u00a0cjdelisle: re using the document content, the fact that a blog post is not using the document title and document content for its title and content it's clearly a limitation of the XWiki platform IMO  \n14:43\u00a0<+mflorea>\u00a0plus, we have to separate content from display. The document should hold only data, while the sheet should control the display. The document shouldn't know which sheet is used to display, it shouldn't even know there are sheets. The document is just data.  \n14:43\u00a0<vmassol>\u00a0for the record I also think that the naming convention isn't good  \n14:43\u00a0<vmassol>\u00a0it's too magical and I agree about that  \n14:43\u00a0<vmassol>\u00a0we can tune that a bit later.  \n14:44\u00a0<vmassol>\u00a0the issue here is that this new feature has been rushed a bit without much time to think about it/use it  \n14:44\u00a0<+Denis>\u00a0cjdelisle: I learn reading code with goto declaration etc..., and since component are used and injected, I have to use other ways to learn :), on that point this is quite similar  \n14:45\u00a0<vmassol>\u00a0(it's also very complex now with lots of possibilities to do the same thing)  \n14:45\u00a0<+Denis>\u00a0but we all agree that naming convention is too magical, I feel that the optionality of the sheet descriptor is the source of the problem  \n14:45\u00a0<vmassol>\u00a0what I'd propose is to continue the discussion about this in a mail thread and see if we need to change something in 3.3  \n14:45\u00a0<+mflorea>\u00a0vmassol: wdym? what is complex?  \n14:46\u00a0<vmassol>\u00a0but that for 3.2 we release it as something new/experimental and mention that we await feedback  \n14:46\u00a0<vmassol>\u00a0mflorea: the 4-5 possibilities of doing the same thing  \n14:46\u00a0<+mflorea>\u00a0list them  \n14:46\u00a0<vmassol>\u00a0attach an object a given class  \n14:46\u00a0<vmassol>\u00a0attach an object of a given class to the page holding the class  \n14:46\u00a0<+mflorea>\u00a0wait  \n14:46\u00a0<vmassol>\u00a0use a name with \\*ActionSheet  \n14:46\u00a0<+Denis>\u00a0vmassol: the issue that prevent release is closely related to the magic of it  \n14:47\u00a0<vmassol>\u00a0use a name with \\*Sheet  \n14:47\u00a0<vmassol>\u00a0I like the first 2 options but I don't like the ones based ont he name  \n14:47\u00a0<vmassol>\u00a0(on the page name that is)  \n14:47\u00a0<+mflorea>\u00a0wdym by \"attach an object of a given class to the page holding the class\" I think you're confusing things  \n14:47\u00a0<vmassol>\u00a0yes I am, there's something but I don't recall exactly  \n14:48\u00a0<vmassol>\u00a0you can remind me  \n14:48\u00a0<@cjdelisle>\u00a0re: dependence injection, I agree, dependency injection is a pain since sometimes you need the program to be running in order to follow where things are going. \u00a0However, with dependency injection you have an annotation and in java, annotations scream out \"MAGIC HERE!\"  \n14:48\u00a0<+mflorea>\u00a0you attach an object of type ClassSheetBinding to a class if you want to bing a sheet other than the one determined by naming convevtion  \n14:48\u00a0<@cjdelisle>\u00a0this proposal is a little more like dependency injection based on the name of the field.  \n14:49\u00a0<vmassol>\u00a0cjdelisle: exactly  \n14:49\u00a0<vmassol>\u00a0that's the part I don't like  \n14:49\u00a0<vmassol>\u00a0the rest is fine  \n14:49\u00a0<@cjdelisle>\u00a0I want there to be a way for someone like me to read the code and reason with it and understand what it is doing.  \n14:50\u00a0<+mflorea>\u00a0the code is in SheetDocumentDisplayer..  \n14:50\u00a0<+mflorea>\u00a0and DefaultSheetManager  \n14:51\u00a0<vmassol>\u00a0since we have the notion of objects in xwiki  \n14:51\u00a0<vmassol>\u00a0(ie metadata)  \n14:51\u00a0<@cjdelisle>\u00a0I open a document to look at it's code, I see {{include}}, I follow the trail, I see code which formats a page and I go back to the document and find an object. It's all clever, it makes sense and I have just learned how objects, classes, and {{include}} work.  \n14:51\u00a0<vmassol>\u00a0it's a bad practice (antipattern) to use page name  \n14:51\u00a0<vmassol>\u00a0as anything menaingful  \n14:51\u00a0<+Denis>\u00a0agreed  \n14:52\u00a0<vmassol>\u00a0you'd use that in suboptimal systems who dont have way to add extensible metadata  \n14:52\u00a0<+mflorea>\u00a0cjdelisle: have you read my comment above about content and display separation?..  \n14:52\u00a0<+Denis>\u00a0but the injection without the include is like component and could be nice  \n14:52\u00a0<@cjdelisle>\u00a0I did  \n14:52\u00a0<pturcotte>\u00a0has joined #xwiki  \n14:52\u00a0<+mflorea>\u00a0vmassol: naming is just the default, you can always overwrite it..  \n14:53\u00a0<+mflorea>\u00a0it's not like this is the only way  \n14:53\u00a0<vmassol>\u00a0that's not ht eproblem mflorea  \n14:53\u00a0<vmassol>\u00a0it's there  \n14:53\u00a0<+Denis>\u00a0what cause issue is clearly the fact that a sheet become a sheet and moreover a sheet for a given class, just by its name  \n14:53\u00a0<vmassol>\u00a0so people will use it  \n14:53\u00a0<@cjdelisle>\u00a0I open a document, it contains nothing, it has an object. If I'm really clever I might go looking for things like the class and bump into the class sheet but where it inevitably ends is me reading the old core and at that point, my evaluation of XWiki would be over.  \n14:53\u00a0<vmassol>\u00a0btw I talked to jv about this last week and he also mentioned he didn't like at all the page naming convetion  \n14:54\u00a0<vmassol>\u00a0(last week = last friday)  \n14:54\u00a0<+Denis>\u00a0define the fact that a document is a sheet for class using objects and that became really better, since document name are not involved  \n14:55\u00a0<+mflorea>\u00a0so, you all are using this naming convention and you still want to add a SheetClass empty object just to state the obvious..  \n14:55\u00a0<+Denis>\u00a0you may event use a sheet for multiple class that way (with more instance of the object defining the sheet)  \n14:55\u00a0<+Denis>\u00a0not empty  \n14:55\u00a0<+Denis>\u00a0a sheetClass that say for which class is this sheet  \n14:55\u00a0<+mflorea>\u00a0nop  \n14:55\u00a0<@cjdelisle>\u00a0IMO the displaying document needs to tell me, the learner, where to look and find the class sheet. Otherwise I open a document and I meet an immediet dead end.  \n14:56\u00a0<+Denis>\u00a0and that implicitly say this document is a sheet  \n14:56\u00a0<+mflorea>\u00a0IMO the class should choose the sheet  \n14:56\u00a0<+mflorea>\u00a0that's how I designed it  \n14:56\u00a0<+Denis>\u00a0cjdelisle: the data document is just data, it is dead end, opening a mysql database does not tel you how we use it  \n14:57\u00a0<+mflorea>\u00a0@Denis exactly  \n14:57\u00a0<@cjdelisle>\u00a0The data document is where I start out.  \n14:57\u00a0<+Denis>\u00a0you start at the wrong place :)  \n14:57\u00a0<@cjdelisle>\u00a0That's where everyone will be and they will see data displayed to them and wonder how that works.  \n14:58\u00a0<@cjdelisle>\u00a0Or you see an error and you want to track down the cause of the error  \n14:58\u00a0<+Denis>\u00a0ok, let start at document, and see an object in it  \n14:58\u00a0<+Denis>\u00a0an object of a given class, so look at the class  \n14:59\u00a0<+mflorea>\u00a0which can be binded to a sheet  \n14:59\u00a0<+Denis>\u00a0there see (following mflorea preference) that the class is displayed with a given sheet, isn't that what you want ?  \n14:59\u00a0<+mflorea>\u00a0b/binded/bound  \n15:00\u00a0<@cjdelisle>\u00a0If you opened the document in edit mode and it said \"This document is displayed by [[XyzClassSheet]]\" then it would be much easier on someone trying to follow the trail.  \n15:01\u00a0<@cjdelisle>\u00a0How about instead of using the document name, create a \"SheetClass\" and when you create a class, you add a SheetClass object to that class document?  \n15:02\u00a0<+mflorea>\u00a0who said you can't display this info in edit mode, we have a sheet manager that can tell you the sheet  \n15:03\u00a0<@cjdelisle>\u00a0SheetClass could point to a class sheet document, or (and it would IMO be much cooler) contain the class sheet as a textArea field right in the SheetClass object.  \n15:04\u00a0<@cjdelisle>\u00a0Then you just have document/object/class  \n15:05\u00a0<vmassol>\u00a0mflorea: right now we don't have any name convention that's doing things. I definitely think that using the name as metadata information is plain wrong  \n15:05\u00a0<vmassol>\u00a0in addition it clutters the document name space since you're not free to use any name you wish anymore  \n15:05\u00a0<+mflorea>\u00a0you're free  \n15:05\u00a0<+Denis>\u00a0so do we agree that defining clearly which sheet is used to display which class (using object of class sheetClass or whatever) without document name convention will solve all issue including the one you open a thread for ?  \n15:06\u00a0<vmassol>\u00a0mflorea: can you explain how could both be free and have a convention on the name?  \n15:06\u00a0<vmassol>\u00a0(I can bet I can find a use case that makes it not free :)  \n15:06\u00a0<vmassol>\u00a0)  \n15:07\u00a0<+mflorea>\u00a0shoot  \n15:07\u00a0<vmassol>\u00a0(after you explain how you're free)  \n15:07\u00a0<vmassol>\u00a0(I need to know the exact rules first before making up my use case)  \n15:08\u00a0<vmassol>\u00a0like wanting to name my page: WhateverViewSheet and in that page I have an object of type XX (where XX is the one you've added)  \n15:08\u00a0<+mflorea>\u00a0because you can name a page XyzClassSheet. If there is already a class XyzClass and for some reason that defies my logic you still want to have the XyzClassSheet page then you simply add and object of type ClassSheetBinding to XyzClass \u00a0to specify a different sheet  \n15:08\u00a0<vmassol>\u00a0suddenly I'll get a strange behavior  \n15:08\u00a0<+mflorea>\u00a0wait  \n15:09\u00a0<+mflorea>\u00a0I don't understand, what XX type are you referring to?  \n15:09\u00a0<vmassol>\u00a0you cannot win mflorea since by definition you're basing on a name convention so there'll always be a use case (even if small) that'll cause a problem  \n15:10\u00a0<+mflorea>\u00a0that's why I have the ClassSheetBinding class to explcitly bind a class to a sheet, if the naming convention is not good for you  \n15:10\u00a0<vmassol>\u00a0again that's not hte problem  \n15:10\u00a0<vmassol>\u00a0the explicit binding is good  \n15:11\u00a0<vmassol>\u00a0the problems is that people in the know will start using the naming convention  \n15:11\u00a0<+mflorea>\u00a0vmassol: isn't maven using naming conventions?  \n15:11\u00a0<vmassol>\u00a0well first 100% of people who don't like maven is becaise it's too magical  \n15:11\u00a0<vmassol>\u00a0and there are a lot of them  \n15:11\u00a0<vmassol>\u00a0second we're not building a build tool  \n15:11\u00a0<+mflorea>\u00a0but we're using it..  \n15:11\u00a0<vmassol>\u00a0so?  \n15:12\u00a0<vmassol>\u00a0we're even using non open source tools  \n15:12\u00a0<vmassol>\u00a0even if I believe in OSS  \n15:12\u00a0<vmassol>\u00a0how does that matter?  \n15:12\u00a0<vmassol>\u00a0:)  \n15:12\u00a0<+mflorea>\u00a0so you don't like maven's \"magic\"?  \n15:12\u00a0<vmassol>\u00a0there are good points and bad ones  \n15:12\u00a0<vmassol>\u00a0but even magic is not that magic all over  \n15:12\u00a0<+Denis>\u00a0mflorea: at least there is a security issue with the creation of xyzClassSheet by anyone, when xyzClass and their object are in use  \n15:13\u00a0<+mflorea>\u00a0I'm trying to understand why naming convention is good for maven and bad for us  \n15:13\u00a0<vmassol>\u00a0mflorea: don't confuse things please  \n15:13\u00a0<vmassol>\u00a0you're talking about apples and oranges  \n15:13\u00a0<vmassol>\u00a0let's talk about xwiki  \n15:13\u00a0<+mflorea>\u00a0yes, which we want to make an application platform  \n15:13\u00a0<@cjdelisle>\u00a0register user named: XWikiRightsSheet \u00a0hehe  \n15:13\u00a0<vmassol>\u00a0if you compared xwiki with a labguage java it would be more appropriate  \n15:14\u00a0<vmassol>\u00a0because they have more points in common than xwiki and maven  \n15:14\u00a0<vmassol>\u00a0in any case xwiki should be extensible  \n15:14\u00a0<vmassol>\u00a0but not magical  \n15:14\u00a0<vmassol>\u00a0we can vote on that  \n15:14\u00a0<vmassol>\u00a0to make sure we all agree  \n15:14\u00a0<vmassol>\u00a0it's quite important actually  \n15:15\u00a0<+Denis>\u00a0mflorea: this not the document xyzClass that make that document defining an xyzClass, and that should be the same for the sheet  \n15:15\u00a0<vmassol>\u00a0since it's general direction for everything we do  \n15:15\u00a0<+Denis>\u00a0vmassol: the direction exist already, see my last comment  \n15:15\u00a0<vmassol>\u00a0Right now the general strategy is simple:  \n15:15\u00a0<vmassol>\u00a0whenever we want to add a new behavior we add XObjects metadata  \n15:16\u00a0<vmassol>\u00a0I really don't see why we would invent anything new  \n15:16\u00a0<vmassol>\u00a0(and I don't see teh need)  \n15:17\u00a0<vmassol>\u00a0actually we do have a bit of magic already but we want to remove it: user pages have to be in the XWiki space. That's not nice  \n15:17\u00a0<+mflorea>\u00a0again, if you want explicit class-sheet binding then you have to add an empty sheet object just to mark a sheet  \n15:17\u00a0<@cjdelisle>\u00a0I was thinking a similar thing: Every time we add new magic, we attach it to a built in class, if you don't want the magic, don't add an object of that class (EG: XWikiRights)  \n15:18\u00a0<vmassol>\u00a0mflorea: and again the issue is not the explciit binding, it's with people who are going to use the magic  \n15:18\u00a0<vmassol>\u00a0mflorea: you can see that differnetly:  \n15:18\u00a0<vmassol>\u00a0in java they refused to do a lot of stuff asked by users  \n15:18\u00a0<vmassol>\u00a0why?  \n15:18\u00a0<vmassol>\u00a0because it made the language dangerous  \n15:18\u00a0<vmassol>\u00a0people who overuse those extra features  \n15:19\u00a0<vmassol>\u00a0s/who/would/  \n15:19\u00a0<vmassol>\u00a0and make the language unreadable  \n15:19\u00a0<vmassol>\u00a0it's not a good thing to popose several ways of doing something and based on some magical stuff  \n15:19\u00a0<vmassol>\u00a0it's called overengineering if you prefer  \n15:20\u00a0<vmassol>\u00a0it's asking for trouble, you can be sure people will abuse it  \n15:20\u00a0<@cjdelisle>\u00a0I have one question about it: What happens if you have a document with multiple objects of the same class and what if you have multiple objects of different classes?  \n15:20\u00a0<JuanDaugherty>\u00a0has left #xwiki  \n15:20\u00a0<+mflorea>\u00a0cjdelisle: read the code :)  \n15:20\u00a0<@cjdelisle>\u00a0ok, -1 until I'm done reading ;)  \n15:20\u00a0<+mflorea>\u00a0vmassol: I'm not convinced  \n15:21\u00a0<vmassol>\u00a0I don't know if this has any impact but in the future the model could well allow a page to have several classes  \n15:21\u00a0<vmassol>\u00a0mflorea: it's the other way around  \n15:21\u00a0<vmassol>\u00a0you need to convince us it's good  \n15:21\u00a0<vmassol>\u00a0since you're changing what we're doing  \n15:21\u00a0<+mflorea>\u00a0well I tried but I obviously failed  \n15:22\u00a0<@cjdelisle>\u00a0I am about to offer a counterproposal which I think will make everybody happy but I want to understand how you resolve that problem.  \n15:22\u00a0<vmassol>\u00a0personally I'm fine to release 3.2 with it because we need to release 3.2 but marked experimental and start a discussion thread on the list for 3.3 and remove it if we don't agree about it  \n15:23\u00a0<vmassol>\u00a0but since it's starting something new (stuff based on page names) it's important we're all comfortable withi t  \n15:23\u00a0<+mflorea>\u00a0Denis: regarding your use case, it can be prevented if you set the proper rights on the space containing the sheet. The sheet manager looks in the same space as the class. So you need edit rights on the space containing the sheet to be able to create a sheet for that class and mess the pages containing that type of objects  \n15:23\u00a0<+mflorea>\u00a0s/space containing the sheet/space containing the class  \n15:23\u00a0<vmassol>\u00a0because if we agree about using name as menaingful then it opens up lots of possibilities for other stuff too  \n15:24\u00a0<vmassol>\u00a0it would need to be a general rule that we're allowed to use name convnetions to perfom actions  \n15:24\u00a0<+mflorea>\u00a0vmassol: I'll send a vote. If you don't like it I can drop the code, it's just a few lines  \n15:24\u00a0<vmassol>\u00a0ok sounds good to me  \n15:25\u00a0<vmassol>\u00a0actually mflorea I think we hsould do the other way around, you're right: don't add stuff we'ren ot sure about and add it later on if it's really needed  \n15:25\u00a0<vmassol>\u00a0rather than start with lots of options and remove some after  \n15:25\u00a0<vmassol>\u00a0it's easier to add than remove  \n15:25\u00a0<vmassol>\u00a0(I thought it was more than a few lines)  \n15:25\u00a0<vmassol>\u00a0(cool to know if you could be removed quickly)  \n15:25\u00a0<vmassol>\u00a0s/if/it/  \n15:26\u00a0<+Denis>\u00a0mflorea: I really think your idea is well done, but nobody will understand all of it without reading the documentation, and this will cause more confusion than real magic, this precisely where we are now.  \n15:26\u00a0<+mflorea>\u00a0DefaultSheetManager looks for naming convention if explicit binding it missing. There are just a few lines  \n15:27\u00a0<+Denis>\u00a0I am +1 to keep explicit binding only for the release  \n15:29\u00a0<@cjdelisle>\u00a0I think we should introduce a DisplayerClass with viewSheet, editSheet, and inlineSheet fields which can be added to the document which defines the class. It's better contained and the magic is confined to a built in class so you don't get magic unless you instanciate it.  \n15:30\u00a0<@cjdelisle>\u00a0Also it's one less document that needs to be loaded from the db since the class has to be loaded anyway for putting together the object.  \n15:30\u00a0<+mflorea>\u00a0@Denis: well, there is a caveat.. some classes are created (\"magically\" :) ) when XWiki is first run. I can't explicitly map these classes to their sheets (it would have to hard-code the name of the class used for binging in old core). In this case I used a configuration property.  \n15:31\u00a0<+mflorea>\u00a0s/binging/binding  \n15:33\u00a0<+Denis>\u00a0mflorea: not sure I get your last point. Isn't the existing code not using the new stuff at all, and therefore should work using simple backward compatibility ?  \n15:33\u00a0<+mflorea>\u00a0cjdeliste: :) what if I want to apply a sheet to the document defining the class (i.e. ClassSheet). What if I'm using a different action? In the new model you'll be able to have custom actions... I really spent time thinking about the sheet system..  \n15:35\u00a0<@cjdelisle>\u00a0you mean if the class contains an object of it's own type?  \n15:35\u00a0<+mflorea>\u00a0Denis: sooner or later we'd have to move to the new system, and then we're gonna it the problem: there are classes created automatically in old core that have to explicitly binded to their sheets  \n15:35\u00a0<@cjdelisle>\u00a0\\*class document  \n15:36\u00a0<+Denis>\u00a0mflorea: and what is the problem with that ?  \n15:36\u00a0<+mflorea>\u00a0cjdelisle: yes, and also if you want to apply a custom sheet for a document. The system I implemented allows you to apply a custom sheet for a single document  \n15:37\u00a0<@cjdelisle>\u00a0also shouldn't it only take effect if the document has no content?  \n15:38\u00a0<+mflorea>\u00a0Denis: ClassSheetBinding is an implementation detail for the DefaultSheetManager. i.e. the default sheet manager uses this class to mark that a class is bound to a sheet. The code in oldcore shouldn't be aware of this and shouldn't hard-code the name of this class  \n15:39\u00a0<@cjdelisle>\u00a0if you wanted to support as yet unknown actions, you could use an ActionDisplayerClass where it has 2 fields: action and classSheet  \n15:40\u00a0<+mflorea>\u00a0cjdelisle: the purpose of the sheet is to display the document. Take the blog post example. The blog should \\_really\\_ use the document title and document content for the blog post title and content. The sheet displaying the blog post decides what to do with the blog post title and content. In other words the sheet is a function of the document  \n15:41\u00a0<+mflorea>\u00a0cjdelisle: I have ClassSheetBinding which specifies the sheet and SheetClass which specifies the action, it's already implemented  \n15:41\u00a0<@cjdelisle>\u00a0ok  \n15:41\u00a0<@cjdelisle>\u00a0If you don't like the idea of implementing the sheet as an object that's fine but I don't like the idea of magical document names.  \n15:42\u00a0<+mflorea>\u00a0I understood very well that :)  \n15:42\u00a0<@cjdelisle>\u00a0heh  \n15:42\u00a0<+Denis>\u00a0mflorea: you means that the oldcore is unable to create classSheetBinding object ?  \n15:43\u00a0<JuanDaugherty>\u00a0has joined #xwiki  \n15:43\u00a0<+mflorea>\u00a0it is able, but by using ClassSheetBinding class it means it will work only with the DefaultSheetManager, which is bad. SheetManager is a component, and you should be able to use a different impl that uses some other classes to mark that a class is bound to a sheet  \n15:43\u00a0<+mflorea>\u00a0@Denis  \n15:45\u00a0<+mflorea>\u00a0i.e. ideally only DefaultSheetManager (from java code at least) should know that a sheet is bound to a class using ClassSheetBinding object  \n15:45\u00a0<jvdrean>\u00a0has joined #xwiki  \n15:46\u00a0<+Denis>\u00a0mflorea: I understand that, but this is link to the oldcore, a new core would not suffer that  \n15:46\u00a0<+mflorea>\u00a0sure  \n15:46\u00a0<+Denis>\u00a0so while the oldcore exist, we have to live with that limitation IMO  \n15:47\u00a0<+mflorea>\u00a0hmm, I think there is also the issue that ClassSheetBinding is not present when XWiki starts, i.e. before you import the xar, so actually I doubt you can create an object of this type..  \n15:48\u00a0<+Denis>\u00a0I just wonder, the SheetManager interface should provide ways to define sheet association and create the binding object  \n15:48\u00a0<+Denis>\u00a0no ?  \n15:48\u00a0<+mflorea>\u00a0until know the include macro was used, so you could simply write literally \"{{include document=\\\"SomeSheet\\\" /}}\" but know you have to create an object  \n15:50\u00a0<+mflorea>\u00a0Denis: I added them at one point but I removed them because I didn't implement them for 3.2 release  \n15:50\u00a0<+mflorea>\u00a0i.e. I added them to the interface  \n15:50\u00a0<+Denis>\u00a0when them exist, wouldn't the old core be able to use it ?  \n15:51\u00a0<+mflorea>\u00a0I guess so, but then the DefaultSheetManager would have to create them in the initialization phase (implements Initializable). Right now they are in the sheet  \n15:52\u00a0<+mflorea>\u00a0s/sheet/xar  \n15:54\u00a0<+Denis>\u00a0yes and for now they will continue to work using backcompat  \n15:55\u00a0<pturcotte>\u00a0has quit  \n15:55\u00a0<+mflorea>\u00a0yes (I'll have to re-add some code I deleted from old core, now that the magic has gone )  \n15:56\u00a0<pturcotte>\u00a0has joined #xwiki  \n16:03\u00a0<sdumitriu>\u00a0has joined #xwiki  \n16:45\u00a0<JuanDaugherty>\u00a0why does workspaces 1.1 rc2 have so much stuff in it?  \n16:46\u00a0<vmassol>\u00a0JuanDaugherty: yep was going to say that  \n16:46\u00a0<vmassol>\u00a0now the only person who could answer your question is jerome velociter since I think he's the only one to have worked on it ;)  \n16:48\u00a0<JuanDaugherty>\u00a0ah.  \n16:50\u00a0<+Denis>\u00a0mflorea: for your last thread on ML, are you asking for 3.2 or in general ?  \n16:50\u00a0<+mflorea>\u00a03.2  \n16:51\u00a0<+mflorea>\u00a0note that it's easy to drop steps of the algorithm  \n16:51\u00a0<+mflorea>\u00a0so don't take into account the time needed to make the adjustments when voting  \n16:53\u00a0<+Denis>\u00a0yes, its is just that in general I have doubt on put the relation between sheet and class, on the class  \n16:54\u00a0<+Denis>\u00a0the class is a class, the doc is data, and the sheet is the code, so I would have seen the binding object in the sheet document  \n16:54\u00a0<+mflorea>\u00a0well :) the reason it exactly why you don't like the magic: someone can create a page XyzClassSheet and thus break your pages. If you define the binding the sheet then anyone can define the sheet  \n16:55\u00a0<+Denis>\u00a0this is security matters, but it would not be incouscious  \n16:55\u00a0<+mflorea>\u00a0my initial idea was that you should have edit rights on the class to be able to bind it to a sheet  \n16:55\u00a0<JuanDaugherty>\u00a0it looks like jvelociter left the xwiki project c. 3.0  \n16:56\u00a0<+tmortagne>\u00a0JuanDaugherty: he left XWiki SAS company, not XWiki project  \n16:56\u00a0<JuanDaugherty>\u00a0ah, I guess that distinction isn't clear enough in my mind yet  \n16:56\u00a0<+tmortagne>\u00a0and this is more recent that 3.0  \n16:56\u00a0<JuanDaugherty>\u00a0this?  \n16:56\u00a0<+tmortagne>\u00a0him living XWiki SAS  \n16:56\u00a0<JuanDaugherty>\u00a0ah  \n16:58\u00a0<+tmortagne>\u00a0JuanDaugherty: you could think of it as XWiki SAS having lots of XWiki project contributors in its staff but that's pretty much all, some XWiki project committers are not XWiki SAS employees  \n16:59\u00a0<JuanDaugherty>\u00a0got it  \n16:59\u00a0<+tmortagne>\u00a0(and also providing server for xwiki.org)  \n17:00\u00a0<vmassol>\u00a0JuanDaugherty: you could also read this past email: http://markmail.org/thread/4omxwpung2todjqf  \n17:00\u00a0<vmassol>\u00a0although the links are probably not correct anymore....  \n17:01\u00a0<vmassol>\u00a0this one is still valid: http://massol.myxwiki.org/xwiki/bin/view/Blog/XWikiSASAndOpenSource  \n17:01\u00a0<+mflorea>\u00a0Denis: also, putting the binding in the sheet document could make it more expensive (?) to find the sheet because you have to query the db for all sheets, where \"class\" prop points to your class.  \n17:01\u00a0<JuanDaugherty>\u00a0lol 12.5 comitters  \n17:01\u00a0<+tmortagne>\u00a0:)  \n17:02\u00a0<vmassol>\u00a0and more here too: http://www.xwiki.com/xwiki/bin/view/Community/OpenSource  \n17:02\u00a0<vmassol>\u00a0hehe  \n17:02\u00a0<vmassol>\u00a0don't remember who was the half, probably guillaume ;)  \n17:03\u00a0<+Denis>\u00a0mflorea: these (rights/perfs) are implementation matter, and the reason for my doubts  \n17:03\u00a0<JuanDaugherty>\u00a0Dubost is no longer involved?  \n17:08\u00a0<vmassol>\u00a0he's still a committer  \n17:08\u00a0<vmassol>\u00a0not very active  \n17:08\u00a0<vmassol>\u00a0a few commiters every 4-5 months  \n17:08\u00a0<vmassol>\u00a0s/commiters/commits/  \n17:08\u00a0<vmassol>\u00a0he's mostly busy running the xwiki sas company  \n17:08\u00a0<JuanDaugherty>\u00a0i c. He appears to be part of the same venture as jvelociter  \n17:09\u00a0<JuanDaugherty>\u00a0ie. \"winesquare\"  \n17:09\u00a0<vmassol>\u00a0if by venture you mean that they both are working for XWiki SAS then yes  \n17:09\u00a0<vmassol>\u00a0ah no  \n17:09\u00a0<vmassol>\u00a0winesquare is the new project from jerome  \n17:09\u00a0<vmassol>\u00a0ludovic isn't involved  \n17:09\u00a0<vmassol>\u00a0that's why he left xwiki sas, to start his own startup around this project  \n17:10\u00a0<JuanDaugherty>\u00a0it says he is on their site  \n17:10\u00a0<vmassol>\u00a0(winesquare is basedon the xwiki platform btw ;))  \n17:10\u00a0<vmassol>\u00a0really?  \n17:10\u00a0<vmassol>\u00a0never checked his web site actually  \n17:10\u00a0<vmassol>\u00a0looking  \n17:10\u00a0<vmassol>\u00a0link?  \n17:10\u00a0<JuanDaugherty>\u00a0no, my bad on their site they have a FB thing which  \n17:10\u00a0<vmassol>\u00a0right  \n17:10\u00a0<JuanDaugherty>\u00a0has him having given a like  \n17:11\u00a0<JuanDaugherty>\u00a0.  \n17:11\u00a0<vmassol>\u00a0yep  \n17:11\u00a0<vmassol>\u00a0and there's me now too  \n17:11\u00a0<vmassol>\u00a0:)  \n17:11\u00a0<vmassol>\u00a0(just gave a \"like\")  \n17:13\u00a0<evalica>\u00a0has quit  \n17:16\u00a0<JuanDaugherty>\u00a0i see you have been working on workspaces design ( http://dev.xwiki.org/xwiki/bin/view/Design/Workspaces ). Is there anything I should be cognizant of in current stable or upcoming 3.2 on this?  \n17:26\u00a0<vmassol>\u00a0JuanDaugherty: you shouldn't use workspaces  \n17:26\u00a0<vmassol>\u00a0it's been retired as you know  \n17:26\u00a0<vmassol>\u00a0and we've integrated several of its features in XE  \n17:26\u00a0<vmassol>\u00a0(and no I haven't worked on the design of workspaces)  \n17:27\u00a0<JuanDaugherty>\u00a0I meant the concept with the URL I just gave, not jvelociter's project  \n17:27\u00a0<JuanDaugherty>\u00a0besides it's not being supported, why shouldn't I use it?  \n17:27\u00a0<JuanDaugherty>\u00a0\\*its  \n17:28\u00a0<vmassol>\u00a0you can of course but don't expect any support for it. I have for ex no clue that it can even start up or work  \n17:29\u00a0<Enygma`>\u00a0has quit  \n17:29\u00a0<jvdrean>\u00a0has quit  \n17:30\u00a0<JuanDaugherty>\u00a0yeah, it doesn't look well formed which is unfortunate since as your design salient indicates, there is pressing functionality there that one might want to use  \n17:30\u00a0<JuanDaugherty>\u00a0s/formed/packaged, presented, whatever/  \n17:30\u00a0<jvdrean>\u00a0has joined #xwiki  \n17:31\u00a0<vmassol>\u00a0JuanDaugherty: if youhave a need you should talk about it  \n17:31\u00a0<vmassol>\u00a0maybe it's already covered by an XE extension  \n17:31\u00a0<JuanDaugherty>\u00a0no I don't think so  \n17:32\u00a0<vmassol>\u00a0hmm unless you're talking about the new workspaces  \n17:33\u00a0<vmassol>\u00a0this one http://dev.xwiki.org/xwiki/bin/view/Design/Workspaces has nothing to do with XWiki Workspaces done by Jerome Velociter  \n17:33\u00a0<vmassol>\u00a0it's a new project and will be released as an XE extension very soon  \n17:34\u00a0<JuanDaugherty>\u00a0that does appear to be the same URL I mentioned parenthetically above  \n17:34\u00a0<JuanDaugherty>\u00a0very soon means after 3.2?  \n17:35\u00a0<vmassol>\u00a0yes it is but I thought you were continuing on the discussion about the retired xwiki workspaces (XWS)  \n17:35\u00a0<vmassol>\u00a0yes probably soon after 3.2  \n17:35\u00a0<JuanDaugherty>\u00a0why would I do that?  \n17:35\u00a0<vmassol>\u00a0sorry got to go work a bit  \n17:35\u00a0<JuanDaugherty>\u00a0k, great, thx  \n17:35\u00a0<vmassol>\u00a0ttyl  \n17:50\u00a0<abusenius>\u00a0has joined #xwiki  \n17:56\u00a0<vmassol>\u00a0has quit  \n17:59\u00a0<vmassol>\u00a0has joined #xwiki  \n17:59\u00a0<sburjan>\u00a0has quit  \n18:02\u00a0<vmassol>\u00a0has quit  \n18:21\u00a0<vmassol>\u00a0has joined #xwiki  \n18:50\u00a0<mflorea>\u00a0has quit  \n19:51\u00a0<pturcotte>\u00a0has quit  \n19:53\u00a0<pturcotte>\u00a0has joined #xwiki  \n20:12\u00a0<Enygma`>\u00a0has joined #xwiki  \n20:20\u00a0<+sburjan`>\u00a0cjdelisle: around ?  \n20:23\u00a0<@cjdelisle>\u00a0I am but not for much longer  \n20:23\u00a0<@cjdelisle>\u00a0what's up?  \n20:23\u00a0<+sburjan`>\u00a0just one question  \n20:23\u00a0<+sburjan`>\u00a0regarding the EM permanent directory vote  \n20:24\u00a0<+sburjan`>\u00a0option #2 will mean that if you want to run the xwiki as another user, you will have to move t he ~./xwiki dir to the new user's homedir, right ?  \n20:24\u00a0<@cjdelisle>\u00a0correct.  \n20:25\u00a0<+sburjan`>\u00a0ok. just wanted to know it for sure  \n20:25\u00a0<@cjdelisle>\u00a0on a production machine it should really always run as \"tomcat\" though  \n20:25\u00a0<+sburjan`>\u00a0yepp. or www (httpd)  \n20:25\u00a0<@cjdelisle>\u00a0yup  \n20:50\u00a0<tmortagne>\u00a0has quit  \n21:21\u00a0<vmassol>\u00a0has quit  \n21:21\u00a0<mflorea>\u00a0has joined #xwiki  \n23:12\u00a0<pturcotte>\u00a0has quit  \n23:28\u00a0<Enygma`>\u00a0has quit  \n23:39\u00a0<abusenius>\u00a0has quit  \n23:54\u00a0<mflorea>\u00a0has quit  \n\n"}