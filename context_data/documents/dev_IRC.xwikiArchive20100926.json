{"id": "dev:IRC.xwikiArchive20100926", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100926", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nlucaa joined #xwiki at 00:03  \nnpm joined #xwiki at 00:24  \nsdumitriu joined #xwiki at 00:48  \ncjdelisle - (00:51): http://www.pastebay.com/105537  \ncjdelisle - (00:51): My google betterifier 0.02  \ncjdelisle - (01:04): The betterifier allows you to use ssl almost all the time and still have the top menu, it removes the left menu (which I find annoying) and the ads, it expands the content so it's not all cramped up (if you use ctrl+++++ like me) and it fixes the google video preview panels if you use noscript to block google.  \ncjdelisle - (01:08): Also removes all of the sneaky hidden fields that spy on you.  \ncjdelisle - (01:08): Best used with noscript blocking google.  \nflorinciu left at 01:12 (Read error: Connection reset by peer  \nsdumitriu left at 01:13 (Read error: Connection reset by peer  \nabusenius - (01:40): cjdelisle: around?  \ncjdelisle - (01:42): yup  \ncjdelisle - (01:43): abusenius: pong  \nabusenius - (01:43): is 2.4.3 planned for monday?  \nabusenius - (01:44): or, better to say, should I better wait with committing some xss fixes on 2.4 branch until 2.4.3?  \ncjdelisle - (01:45): Yes, wait. I don't think we want anything new until after we have a good release.  \nabusenius - (01:46): yea, don't want to break it by accident yet another time...  \ncjdelisle - (01:46): I usually try to get out of the way a couple days before release time.  \ncjdelisle - (01:47): That said, I was tripped up on the same release number issue that you were.  \ncjdelisle - (01:47): (applications not having the same release cycle as enterprise/core)  \nabusenius - (01:49): I find it very confusing  \ncjdelisle - (01:49): After 2.4.x is released I was thinking about proposing to synchronize release times. In the year I have been hanging around I have never seen an out of sync release.  \ncjdelisle - (01:49): s/release times/version numbers/  \nabusenius - (01:49): but what would be good wrt breaking stuff imo is to have code freeze few days before the release  \ncjdelisle - (01:50): I try to stop committing a few days prior, we could make it a best practice I suppose.  \nabusenius - (01:50): vmassol tolde me some people use different app versions (newer ones) with older cores  \nabusenius - (01:50): \\*told  \nabusenius - (01:51): or update unly some apps  \nabusenius - (01:51): \\*only  \ncjdelisle - (01:51): Well applications depend on the core so we can't support mixing and matching all app versions with all core versions.  \nnpm left at 01:51 (Ping timeout: 255 seconds  \nabusenius - (01:52): but I would really prefer kde-like \"everything is same version\" approach  \ncjdelisle - (01:52): Otherwise new api could never be used.  \ncjdelisle - (01:52): +1  \nnpm joined #xwiki at 01:53  \ncjdelisle - (01:53): I will propose it. Both of us have broken it now and I see no reason to do things the hard way just because we are can.  \ncjdelisle - (01:53): If we did then we would have to accept problems each time we had a new committer.  \nabusenius - (01:54): definitely  \ncjdelisle - (01:54): And sdumitriu made a mistake with panels which caused 2.4.2 to be bunk so apparently even seasoned veterans are not immune.  \ncjdelisle - (01:55): mistake with panels (also a version mismatch issue)  \ncjdelisle - (01:56): Another advantage to fully synchronized versions is we can start using api as soon as it's added.  \ncjdelisle - (01:56): Usually I don't have much trouble with that because I add api then lazily forget to start using it for a couple versions ;)  \ncjdelisle - (01:58): did ya try out that google gm script?  \nabusenius - (02:00): no, where is it supposed to be copy-pasted to?  \ncjdelisle - (02:01): If you have greasemonkey, just right click the monkey and click new user script.  \ncjdelisle - (02:03): I could have posted it to userscripts.com but I don't like the way userscripts.com hides the sourcecode from the user when they download the script.  \nabusenius - (02:05): hm, cool extension  \ncjdelisle - (02:05): greasemonkey? or the google script?  \nabusenius - (02:05): allows you to patch ugly websites :)  \nabusenius - (02:05): greasemonkey  \ncjdelisle - (02:05): ahh yes. you can get banned from anywhere you want :)  \ncjdelisle - (02:07): I remember people were using it to ruin reddit. just sign up a bunch of usernames, text search, downmod, switch proxies repeat.  \nabusenius - (02:12): cool :)  \ncjdelisle - (02:12): Get it working?  \nabusenius - (02:12): yep  \nabusenius - (02:12): just enabled the left menu, I actually use it from time to time  \ncjdelisle - (02:13): Ahh. I found that so annoying that I wrote the whole script just because of it.  \nrrodriguez left at 02:13 (Quit: rrodriguez  \ncjdelisle - (02:13): Works best with noscript blocking google from running it's own javascript.  \ncjdelisle - (02:14): Got one here that makes jira easier to use.  \ncjdelisle - (02:14): http://www.pastebay.com/105544  \ncjdelisle - (02:14): Sdumitriu wrote it.  \ncjdelisle - (02:15): It adds a field so you can copy exactly what you're supposed to include in the commit message.  \nabusenius - (02:17): cool, I always hated jira interface for making it hard to select issue title..  \ncjdelisle - (02:18): Can't get much easier than that.  \nlucaa left at 02:27 (Ping timeout: 240 seconds  \nabusenius left at 04:10 (Ping timeout: 240 seconds  \nmflorea joined #xwiki at 10:15  \nrrodriguez joined #xwiki at 10:47  \nlucaa joined #xwiki at 11:05  \nlucaa left at 11:07 (Read error: No route to host  \nlucaa joined #xwiki at 11:07  \nrrodriguez - (11:25): any nice and experienced person could help me with a javascript doubt?  \nflaviusolaru joined #xwiki at 11:41  \nrrodriguez left at 11:54 (Quit: rrodriguez  \nflaviusolaru left at 12:06 (Quit: Leaving.  \nflaviusolaru joined #xwiki at 12:15  \nabusenius joined #xwiki at 12:18  \nflaviusolaru left at 12:29 (Quit: Leaving.  \nabusenius left at 13:16 (Ping timeout: 265 seconds  \nabusenius joined #xwiki at 13:31  \nvmassol joined #xwiki at 14:36  \nmflorea left at 14:47 (Quit: Leaving.  \nvmassol left at 15:04 (Quit: Leaving.  \nvenkatesh joined #xwiki at 15:19  \nvmassol joined #xwiki at 15:35  \nvmassol left at 15:40 (Ping timeout: 276 seconds  \nvenkatesh left at 16:16 (Ping timeout: 265 seconds  \nlucaa left at 16:27 (Ping timeout: 245 seconds  \nvenkatesh joined #xwiki at 16:49  \nvmassol joined #xwiki at 16:52  \nvmassol left at 16:57 (Ping timeout: 240 seconds  \nvmassol joined #xwiki at 17:42  \nrrodriguez joined #xwiki at 17:44  \nrrodriguez left at 17:46 (Client Quit  \nrrodriguez joined #xwiki at 18:09  \ncjdelisle - (18:10): rrodriguez: If you still want help with javascript, I can give it a try.  \nrrodriguez - (18:12): caleb: thanks! I've been thinking and browsing about my question and I think that I had a wrong focus on an easy problem.  \ncjdelisle - (18:12): What's the problem?  \nrrodriguez - (18:12): What I was trying was to construct a query string like...  \nrrodriguez - (18:13): ($query = \", BaseObject as obj, StringProperty as prop where  \nrrodriguez - (18:13): doc.fullName = obj.name and  \nrrodriguez - (18:13): obj.className='Users.PdrUserClass' and  \nrrodriguez - (18:13): obj.id=prop.id.id and prop.id.name='Type' and  \nrrodriguez - (18:13): prop.value like '%lonxa%'\")  \nrrodriguez - (18:13): and pass a variable to prop.value  \ncjdelisle - (18:13): Oh this is velocity script?  \nrrodriguez - (18:13): yeap  \nrrodriguez - (18:14): what I concluded is that I can use javaScript .concat() to construct the query  \nrrodriguez - (18:14): the first stub is fixed + the value of the variable  \ncjdelisle - (18:14): Javascript is on the client side so you will need a way to post back to the server.  \nrrodriguez - (18:15): ummmm  \nrrodriguez - (18:15): I get the point...  \nrrodriguez - (18:15): that's is problebly why I've not able yet of solve the problem... :-(  \nrrodriguez - (18:15): is it posible to pass a variable to prop.value?  \ncjdelisle - (18:16): It's tricky because you can use velocity to \\_write\\_ javascript but the only way for javascript to communicate back is to use http posts.  \nrrodriguez - (18:16): too tricky for me, I'm afraid...  \ncjdelisle - (18:17): Better to stick with all velocity then I think.  \ncjdelisle - (18:17): And javascript can introduce security concerns because the client can just edit it all they want.  \nrrodriguez - (18:18): Yeap! Could I explain the problem here? I'm sure it's a simple problem, but I'm not able to find an answer  \ncjdelisle - (18:19): Try this:  \ncjdelisle - (18:19): #set($query = \", BaseObject as obj, StringProperty as prop where doc.fullName = obj.name and obj.className='Users.PdrUserClass' and obj.id=prop.id.id and prop.id.name='Type' and prop.value like ?\")  \ncjdelisle - (18:19): Then when you run searchDocuments, use:  \ncjdelisle - (18:20): $xwiki.searchDocuments($query, 0, 0, ['%lonxa%'])  \nrrodriguez - (18:20): give me a while, please  \ncjdelisle - (18:20): Err no that's not quite right.  \ncjdelisle - (18:20): I was thinking %lonxa% was a user supplied input  \nrrodriguez - (18:21): nope  \ncjdelisle - (18:21): #set($query = \", BaseObject as obj, StringProperty as prop where doc.fullName = obj.name and obj.className='Users.PdrUserClass' and obj.id=prop.id.id and prop.id.name='Type' and prop.value like '%lonxa%'\")  \ncjdelisle - (18:21): That should work fine then.  \nrrodriguez - (18:22): yeap, but is the difference between your proposal and what I've posted above?  \ncjdelisle - (18:22): I don't understand why prop.id.id and prop.id.name are used, I have always used prop.id and prop.name but I have seen others use prop.id.id, both seem to work.  \ncjdelisle - (18:23): \"difference between your proposal\" No I suppose there isn't. I guess I don't see what the problem is then.  \nrrodriguez - (18:23): I don't know either! I've copied this example from http://platform.xwiki.org/xwiki/bin/view/DevGuide/QueryGuide  \nrrodriguez - (18:23): Still trying to get it working... I'll move to fully understanding after that!  \nrrodriguez - (18:23): ok  \ncjdelisle - (18:24): What are you doing with $query after you set it?  \nrrodriguez - (18:24): let me try to explain the situation  \nrrodriguez - (18:24): I need to show the results of different queries in different XWiki pages  \nrrodriguez - (18:25): the difference among them is only the value of prop.value  \nrrodriguez - (18:26): If I copy the full code in each page and modify prop.value  \ncjdelisle - (18:26): What are you looking for? Something which has the name of the current page in it?  \nrrodriguez - (18:26): yeap  \nrrodriguez - (18:26): something like  \nrrodriguez - (18:26): that  \nrrodriguez - (18:26): is not the name of a current page but a fixed value for each page  \ncjdelisle - (18:27): hmm. maybe you could create an object in each page then get a property from that object?  \ncjdelisle - (18:29): Another idea would be to keep a global map in one page which maps the name of the document to the value which you are looking for.  \nrrodriguez - (18:29): yeap, of perhaps simple a #set; but how could I pass this value to the query string?  \ncjdelisle - (18:29): There is the good way and the bad way.  \ncjdelisle - (18:30): The bad way is easy to understand but also easy to attack.  \nrrodriguez - (18:30): perhaps I must take this risk as I'm currently lost!  \nrrodriguez - (18:30): :-)  \ncjdelisle - (18:31): I think what you want is to create a single document to hold the script then {{include that document in each page which needs to run the query, does that make any sense?  \nrrodriguez - (18:31): yeap  \nrrodriguez - (18:31): and pass the value of prop.value to each page in some \"simple\" way...  \ncjdelisle - (18:32): I also think that for now the easiest thing to do is create a map in the single script document.  \ncjdelisle - (18:32): Something like:  \ncjdelisle - (18:32): #set($map = {'Some.Document': '%lonxa%'  \nrrodriguez - (18:33): ummm  \ncjdelisle - (18:33): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'Another.Doc': '%somethingElse%'})  \nrrodriguez - (18:33): ummm  \nrrodriguez - (18:34): And where must I include this map?  \nrrodriguez - (18:34): ah!  \ncjdelisle - (18:34): You just put this map in the script document which is included.  \ncjdelisle - (18:34): BTW: I forgot, there should be a , after xa%' \u00a0on the first line  \nrrodriguez - (18:34): and then prop.value=$map?  \ncjdelisle - (18:35): and then prop.value=$map.get($doc.getFullName())  \nrrodriguez - (18:36): this way I get the FullName of each document in the $map variable on a per document basis, is that correct?  \ncjdelisle - (18:36): Yup.  \ncjdelisle - (18:37): If you want to easily edit the \"per document value\" from inside of the document then an object is better but at least this will get you up and running.  \nrrodriguez - (18:39): great! And, if instead of that, if I set the value for $map as #set($map = '%lonxa%')  \nrrodriguez - (18:39): could I pass this value to the query string?  \nrrodriguez - (18:40): to prop.value, I mean  \ncjdelisle - (18:40): If every document had the same value then yes, but you said different documents needed different prop.values so you need to map by the document name.  \nrrodriguez - (18:41): or set the variable in each document, is that correct?  \ncjdelisle - (18:41): That's a possibility.  \nrrodriguez - (18:42): and, please, how must I retrive the value of $map to assign its value to prop.value?  \ncjdelisle - (18:42): #set($value = '%lonxa%') \u00a0\u00a0{{include document=\"Scripts.QueryScript\"/}}  \ncjdelisle - (18:42): if you did that ^^ then you would use $value.  \ncjdelisle - (18:43): The easy/bad way is this:  \ncjdelisle - (18:43): #set($query = \", BaseObject as obj, StringProperty as prop where doc.fullName = obj.name and obj.className='Users.PdrUserClass' and obj.id=prop.id.id and prop.id.name='Type' and prop.value like '\" + $value + \"'\")  \nrrodriguez - (18:43): I'm still working in a 1.3 installation. I've to solve this issue there before migrating to a 2.0 environment  \ncjdelisle - (18:43): or if you use a map:  \nrrodriguez - (18:43): ok!  \ncjdelisle - (18:43): #set($query = \", BaseObject as obj, StringProperty as prop where doc.fullName = obj.name and obj.className='Users.PdrUserClass' and obj.id=prop.id.id and prop.id.name='Type' and prop.value like '\" + $map.get($doc.getFullName()) + \"'\")  \nrrodriguez - (18:43): simple ++  \nrrodriguez - (18:44): simply + $value+  \ncjdelisle - (18:44): the better way is to use a parameter.  \nrrodriguez - (18:44): I'm using #includeInContext to include the script  \nrrodriguez - (18:44): please, where must I use that parameter?  \ncjdelisle - (18:45): Are you using syntax 1.0 or 2.0?  \nrrodriguez - (18:45): 1.0  \ncjdelisle - (18:45): Ok then \u00a0#includeInContext is supported.  \nrrodriguez - (18:46): As I said above, I've a bunch of problems like this in a 1.3 installation before moving to \u00a02.4.x brand new box :-(  \nrrodriguez - (18:46): I've to solve, I mean.  \nrrodriguez - (18:46): Let's try this...  \ncjdelisle - (18:47): I think you'll like the new features in 2.4  \nrrodriguez - (18:47): I'm absolutely sure! :-)  \ncjdelisle - (18:48): http://maven.xwiki.org/site/xwiki-core-parent/xwiki-core/apidocs/com/xpn/xwiki/api/XWiki.html#searchDocuments%28java.lang.String,%20java.util.List%29  \ncjdelisle - (18:48): That's if you want to start using the parameterized search which is better security.  \nrrodriguez - (18:49): But this apply to 2.0 syntax, doesn't it?  \ncjdelisle - (18:49): Don't let me bug you though, you should probably get something that works before you start trying new tricks ;)  \nrrodriguez - (18:49): applies  \ncjdelisle - (18:49): that works in syntax1.0 or 2.0  \nrrodriguez - (18:50): Well, you now, I'm easy to bug :-) The point is that I have to get this small problems solved before moving on!  \nmflorea joined #xwiki at 18:50  \nrrodriguez - (18:51): Let's try this easy no-parametrized solution first!  \ncjdelisle - (18:51): I think your idea is the best:  \ncjdelisle - (18:52): Put #set($queryParam = '%lonxa%') \u00a0#includeInContext('Scripts.YourSearchScript') \u00a0in each document  \ncjdelisle - (18:52): Then put #set($query = \", BaseObject as obj, StringProperty as prop where doc.fullName = obj.name and obj.className='Users.PdrUserClass' and obj.id=prop.id.id and prop.id.name='Type' and prop.value like '\" + $queryParam + \"'\")  \ncjdelisle - (18:52): in the Scripts.YourSearchScript document.  \nrrodriguez - (18:54): I'm getting some error by trying this... let me check...  \ncjdelisle - (18:56): you can pastebin it and I'll be glad to take a look. \u00a0brb  \nrrodriguez - (18:57): thanks!  \nrrodriguez - (18:58): I've...  \nrrodriguez - (18:58): #set($usertype = '%lonxa%')  \nrrodriguez - (18:58): #includeInContext('Main.QuenesUsrLonxasQ')  \nrrodriguez - (18:58): Then, in Main.QuenesUsrLonxasQ  \nrrodriguez - (18:58): #set($query = \", BaseObject as obj, StringProperty as prop where doc.fullName = obj.name and obj.className='Users.PdrUserClass' and obj.id=prop.id.id and prop.id.name='Type' and prop.value like \" + $usertype + \" order by doc.fullName asc\")  \nrrodriguez - (18:59): perhaps some problem with '' or \"\"?  \nrrodriguez - (19:01): $usertype contents %lonxa%, not '%lonxa%  \nrrodriguez - (19:02): '  \ncjdelisle - (19:05): yup you need #set($query = \", BaseObject as obj, StringProperty as prop where doc.fullName = obj.name and obj.className='Users.PdrUserClass' and obj.id=prop.id.id and prop.id.name='Type' and prop.value like '\" + $usertype + \"' order by doc.fullName asc\")  \ncjdelisle - (19:05): note the '\" and the \"'  \nrrodriguez - (19:06): yeap  \nrrodriguez - (19:16): Caleb: it does work.  \nrrodriguez - (19:17): I've to work out now the search script  \ncjdelisle - (19:17): Great. Anything else I can help with?  \nrrodriguez - (19:17): Better don't ask!  \nrrodriguez - (19:17): :-)  \nrrodriguez - (19:18): Thanks, Caleb! I've to work more on my own now! I'll come back with, I hope, challenging doubts!  \nrrodriguez - (19:18): Thanks!  \ncjdelisle - (19:18): No problem :)  \nsburjan` left at 19:19 (Read error: Connection reset by peer  \nsburjan` joined #xwiki at 19:21  \nkwoot left at 19:52 (Quit: leaving  \nmflorea left at 19:58 (Quit: Leaving.  \nlucaa joined #xwiki at 20:26  \nlucaa left at 21:35 (Ping timeout: 245 seconds  \ncjdelisle - (21:58): 2010-09-26 11:03:21,809 [http://127.0.0.1:8081/xwikiTrunk/bin/get/Main/WebHome?xpage=xpart&vm=commentsinline.vm] INFO \u00a0internal.DefaultCSRFToken \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- CSRFToken: Anti-CSRF secret token component has been initialized  \ncjdelisle - (21:59): ^^ Does this happen every time you start the wiki engine?  \nlucaa joined #xwiki at 22:00  \nabusenius - (22:17): cjdelisle: well, every time components are initialized  \ncjdelisle - (22:17): Is there a special need to know that the csrf engine is initialized?  \nabusenius - (22:17): not really ^^  \ncjdelisle - (22:18): Should we be reporting when each component starts?  \nabusenius - (22:19): is info level enabled by default?  \ncjdelisle - (22:19): Yes.  \nabusenius - (22:19): well, it should be debug then  \nabusenius left at 22:43 (Ping timeout: 240 seconds  \nabusenius joined #xwiki at 22:44  \nabusenius left at 22:49 (Ping timeout: 264 seconds  \nabusenius joined #xwiki at 22:58  \nvmassol left at 23:06 (Quit: Leaving.  \nvenkatesh left at 23:44 (Ping timeout: 240 seconds  \n\n"}