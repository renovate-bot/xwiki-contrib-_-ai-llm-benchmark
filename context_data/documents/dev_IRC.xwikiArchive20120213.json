{"id": "dev:IRC.xwikiArchive20120213", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20120213", "title": "IRC Archive for channel #xwiki on 13 February 2012 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:06\u00a0<rrodriguez>\u00a0has quit  \n00:07\u00a0<rrodriguez>\u00a0has joined #xwiki  \n00:08\u00a0<rrodriguez\\_>\u00a0has joined #xwiki  \n00:08\u00a0<rrodriguez>\u00a0has quit  \n00:08\u00a0<rrodriguez\\_>\u00a0is now known as <rrodriguez>  \n00:18\u00a0<vmassol>\u00a0has quit  \n00:19\u00a0<rrodriguez>\u00a0has quit  \n00:58\u00a0<npm>\u00a0is now known as <npm\\_\\_>  \n00:58\u00a0<npm\\_\\_>\u00a0is now known as <npm>  \n02:51\u00a0<tekzilla>\u00a0has quit  \n02:53\u00a0<tekzilla>\u00a0has joined #xwiki  \n04:26\u00a0<pgmjsd>\u00a0has quit  \n04:27\u00a0<pgmjsd>\u00a0has joined #xwiki  \n04:32\u00a0<sdumitriu>\u00a0has quit  \n04:38\u00a0<sdumitriu>\u00a0has joined #xwiki  \n06:15\u00a0<sdumitriu>\u00a0has quit  \n07:39\u00a0<vmassol>\u00a0has joined #xwiki  \n09:22\u00a0<Denis>\u00a0has joined #xwiki  \n09:25\u00a0<tekzilla>\u00a0has quit  \n09:54\u00a0<dbaeli>\u00a0has joined #xwiki  \n09:57\u00a0<jvdrean>\u00a0has joined #xwiki  \n10:11\u00a0<dbaeli>\u00a0Hi, I have a need to translate confluence-1.0 content to xwiki-2.0 content (file based not a running xwiki instance), any advices ?  \n10:13\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n10:13\u00a0<vmassol>\u00a0dbaeli: nice :)  \n10:13\u00a0<vmassol>\u00a0hi Dimitri!  \n10:14\u00a0<dbaeli>\u00a0Hello :-)  \n10:14\u00a0<vmassol>\u00a0several options I can think of  \n10:14\u00a0<vmassol>\u00a0you could do this simply in java using the XWiki Rendering API  \n10:14\u00a0<vmassol>\u00a0it's 3-4 lines of code to do the conversion  \n10:15\u00a0<vmassol>\u00a0let me point you to the code  \n10:15\u00a0<dbaeli>\u00a0I've tried but it gives some weird results for the macros  \n10:15\u00a0<dbaeli>\u00a0Ok I'll show you mine  \n10:15\u00a0<dbaeli>\u00a0also  \n10:15\u00a0<vmassol>\u00a0see http://rendering.xwiki.org/xwiki/bin/view/Main/GettingStarted#HRenderXWikiSyntax2.0contentintoXHTML  \n10:16\u00a0<vmassol>\u00a0replace XHTML output with XWiki Syntax  \n10:16\u00a0<vmassol>\u00a0indeed the result won't be perfect  \n10:16\u00a0<vmassol>\u00a0it depends on the quality of the confluence parser  \n10:16\u00a0<vmassol>\u00a0would be interesting to know what doesn't work  \n10:17\u00a0<dbaeli>\u00a0Ok, I'll try you way, and see what result it gives.  \n10:22\u00a0<vmassol>\u00a0dbaeli: the other solution is something that is still very experimental and is a work in progress. it allows to convert a full wiki site: https://github.com/xwiki-contrib/wiki-stream (this is a refactoring of some GSOC project: https://github.com/xwiki-contrib/sandbox/tree/master/xwiki-wikiimporter )  \n10:22\u00a0<vmassol>\u00a0so ATM I'd recommend using the XWiki Rendering API directly  \n10:54\u00a0<Denis>\u00a0has quit  \n10:54\u00a0<dbaeli>\u00a0has quit  \n10:54\u00a0<jvdrean>\u00a0has quit  \n10:54\u00a0<CIA-120>\u00a0has quit  \n10:54\u00a0<vmassol>\u00a0has quit  \n10:54\u00a0<gdelhumeau>\u00a0has quit  \n10:54\u00a0<xipe\\_>\u00a0has quit  \n10:54\u00a0<pgmjsd>\u00a0has quit  \n10:54\u00a0<DrLou>\u00a0has quit  \n10:54\u00a0<SvenDowideit>\u00a0has quit  \n10:54\u00a0<npm>\u00a0has quit  \n10:54\u00a0<cjd>\u00a0has quit  \n10:57\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n10:57\u00a0<jvdrean>\u00a0has joined #xwiki  \n10:57\u00a0<dbaeli>\u00a0has joined #xwiki  \n10:57\u00a0<Denis>\u00a0has joined #xwiki  \n10:57\u00a0<vmassol>\u00a0has joined #xwiki  \n10:57\u00a0<pgmjsd>\u00a0has joined #xwiki  \n10:57\u00a0<DrLou>\u00a0has joined #xwiki  \n10:57\u00a0<SvenDowideit>\u00a0has joined #xwiki  \n10:57\u00a0<xipe\\_>\u00a0has joined #xwiki  \n10:57\u00a0<CIA-120>\u00a0has joined #xwiki  \n10:57\u00a0<cjd>\u00a0has joined #xwiki  \n10:57\u00a0<npm>\u00a0has joined #xwiki  \n11:04\u00a0<vmassol>\u00a0good morning  \n11:04\u00a0<vmassol>\u00a0so today we must stabilize the build  \n11:04\u00a0<vmassol>\u00a0so that we're read for tomorrow morning  \n11:05\u00a0<vmassol>\u00a0just finishing my last commit  \n11:05\u00a0<vmassol>\u00a0(which I've done over the week end)  \n11:06\u00a0<CIA-120>\u00a0Vincent Massol\u000f master\u000f \\* r38fe406\u000f https://github.com/xwiki/xwiki-platform/commit/38fe4068ed6a4234b55757cc629fef1c65ff26a9 \u000f/ (4 files in 3 dirs):\u000f XWIKI-7524: Add new {{documents}} Macro to list all documents in a livetable - http://git.io/MDbW1Q  \n11:06\u00a0<vmassol>\u00a0done  \n11:06\u00a0<vmassol>\u00a0I'm now going to focus on helping fix the build  \n11:06\u00a0<vmassol>\u00a0would be great if others join me\u2026.  \n11:07\u00a0<Enygma`>\u00a0has joined #xwiki  \n11:09\u00a0<vmassol>\u00a0hmmm  \n11:09\u00a0<vmassol>\u00a0I was going to document the new documents macro but I can't really...  \n11:09\u00a0<vmassol>\u00a0it's currently part of the index app XAR  \n11:10\u00a0<vmassol>\u00a0which would mean documenting it in that app extension on e.x.o which means it would be hard to find for a user  \n11:10\u00a0<vmassol>\u00a0one solution would be to create a new build module but that seems like a lot of work and not sure it's the right solution  \n11:10\u00a0<vmassol>\u00a0hmmm  \n12:00\u00a0<evalica>\u00a0has joined #xwiki  \n12:00\u00a0<vmassol>\u00a0seems like languageTest is hanging on the agent  \n12:00\u00a0<vmassol>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-test-ui/975/console  \n12:01\u00a0<vmassol>\u00a0I cannot reprodcue that locally though  \n12:40\u00a0<qwebirc4453>\u00a0has joined #xwiki  \n12:42\u00a0<jvdrean>\u00a0has quit  \n13:03\u00a0<jvdrean>\u00a0has joined #xwiki  \n13:49\u00a0<qwebirc4453>\u00a0Hi guys, I'd like to modify the tag cloud macro, to display only those tags referring documents accessible to the given user, (I managed the same for spaces checking permissions with $xwiki.hasAccessLevel('view', \"${space}.SomePage\") \u00a0but I don't really know how to achieve the same with tags, any suggestion?  \n13:52\u00a0<vmassol>\u00a0it's a good idea in general and this should probably be the default  \n13:53\u00a0<vmassol>\u00a0now for implementing it\u2026. it's hard to have a performant implementation...  \n13:54\u00a0<vmassol>\u00a0one (not performant) solution is to get all documents having tags (easy to do) and for each doc verify if it can be viewed by the user  \n13:55\u00a0<qwebirc4453>\u00a0yep, if some day it won't be performant, I'll just skip back to the original implementation, but for the moment I'd go for that solution  \n13:58\u00a0<qwebirc4453>\u00a0could you please help me making such a query? I have a loop like this \u00a0#foreach ($tagEntry in $tagCount.entrySet())  \n13:58\u00a0<vmassol>\u00a0it's very simple  \n13:58\u00a0<vmassol>\u00a0use XWQL to find all documents having a XWiki.TagClass objects  \n13:59\u00a0<vmassol>\u00a0note that since you'll want to get the tag values too in one query you'll need to use a select and thus your code will need PR  \n13:59\u00a0<vmassol>\u00a0btw here's an example with HQL (but better do it with XWQL)  \n13:59\u00a0<vmassol>\u00a0XWQL: http://platform.xwiki.org/xwiki/bin/view/DevGuide/QueryGuide  \n14:00\u00a0<vmassol>\u00a0\"from doc.object(XWiki.TagClass) as tag\"  \n14:00\u00a0<vmassol>\u00a0more precisely:  \n14:01\u00a0<vmassol>\u00a0select distinct doc.fullName, obj.tags from Document doc, doc.object(XWiki.TagClass) as obj  \n14:04\u00a0<vmassol>\u00a0qwebirc4453:  \n14:04\u00a0<vmassol>\u00a0{{velocity}}  \n14:04\u00a0<vmassol>\u00a0#foreach ($item in $services.query.xwql(\"select distinct doc.fullName, obj.tags from Document doc, doc.object(XWiki.TagClass) as obj\").execute())  \n14:04\u00a0<vmassol>\u00a0\u00a0\u00a0\\* $item[0] $item[1]  \n14:04\u00a0<vmassol>\u00a0#end  \n14:04\u00a0<vmassol>\u00a0{{/velocity}}  \n14:04\u00a0<vmassol>\u00a0{{velocity}}  \n14:04\u00a0<vmassol>\u00a0#foreach ($item in $services.query.xwql(\"select distinct doc.fullName, obj.tags from Document doc, doc.object(XWiki.TagClass) as obj\").execute())  \n14:04\u00a0<vmassol>\u00a0\u00a0\u00a0\\* docname: $item[0] \u00a0tag: $item[1]  \n14:04\u00a0<vmassol>\u00a0#end  \n14:04\u00a0<vmassol>\u00a0{{/velocity}}  \n14:04\u00a0<vmassol>\u00a0your \u00a0algo should not check again the same document several times  \n14:05\u00a0<vmassol>\u00a0obviously :)  \n14:05\u00a0<vmassol>\u00a0so you'll need to cache in a map the name of docs already checked  \n14:05\u00a0<vmassol>\u00a0or even simpler  \n14:05\u00a0<vmassol>\u00a0use a Set  \n14:05\u00a0<vmassol>\u00a0qwebirc4453: would be great if you could post the result as a snippet on extensions.xwiki.org  \n14:07\u00a0<qwebirc4453>\u00a0sure, i'll have a look at it in the afternoon, I also see what I can do with queries..  \n14:07\u00a0<qwebirc4453>\u00a0maybe I could get any space containing tags, and display just those referring spaces that i can see..  \n14:08\u00a0<qwebirc4453>\u00a0supposing that documents are stored accordingly with the space permission  \n18:34\u00a0<xwikibot>\u00a0has joined #xwiki  \n18:37\u00a0<vmassol>\u00a0memory on xwiki.org: https://skitch.com/e-vmassol/8br9u/google-chrome Looks like a memory leak to me...  \n18:38\u00a0<@cjd>\u00a0azn: no it can't because it can't know that oracle hasn't added another entry using the key that it would be giving you  \n18:39\u00a0<@cjd>\u00a0there is quite a science to having multiple threads selecting primary keys without any of them creating the same one as another  \n18:43\u00a0<azn>\u00a0ok thx  \n18:43\u00a0<@cjd>\u00a0vmassol: it's possible but around 500M, IMO it's hard to tell, document caching would also have a similar growth pattern.  \n18:44\u00a0<vmassol>\u00a0cjd: seen the acitivity on xwiki.org you don't think the cache would be filled in a few minutes/hours?  \n18:45\u00a0<azn>\u00a0has quit  \n18:45\u00a0<@cjd>\u00a0hmm if it's an lru cache then it might be filled quickly and then stay there  \n18:46\u00a0<@cjd>\u00a0probably would be a nice feature to be notified when the cache became full  \n18:55\u00a0<vmassol>\u00a0well we can monitor the caches easily  \n18:58\u00a0<vmassol>\u00a0hmm I need to check why I don't see the infinispan mbeans  \n19:01\u00a0<gdelhumeau>\u00a0has quit  \n19:12\u00a0<dbaeli>\u00a0has joined #xwiki  \n19:14\u00a0<dbaeli>\u00a0has quit  \n19:16\u00a0<CIA-120>\u00a0Vincent Massol\u000f master\u000f \\* r5c987c0\u000f https://github.com/xwiki/xwiki-platform/commit/5c987c01396ec165bfce0680475e8934a1f9b105 \u000f/ xwiki-platform-core/xwiki-platform-web/src/main/webapp/WEB-INF/cache/infinispan/config.xml :\u000f XWIKI-7526: Enable Infinispan JMX mbeans by default for runtime monitoring of XWiki caches - http://git.io/apa0Xw  \n19:26\u00a0<abusenius>\u00a0has joined #xwiki  \n19:28\u00a0<sdumitriu>\u00a0has quit  \n19:45\u00a0<sdumitriu>\u00a0has joined #xwiki  \n20:15\u00a0<sdumitriu>\u00a0has quit  \n20:17\u00a0<sdumitriu>\u00a0has joined #xwiki  \n20:55\u00a0<dbaeli>\u00a0has joined #xwiki  \n21:18\u00a0<vmassol>\u00a0has quit  \n21:58\u00a0<vmassol>\u00a0has joined #xwiki  \n22:17\u00a0<rrodriguez>\u00a0has joined #xwiki  \n22:37\u00a0<vmassol>\u00a0has quit  \n22:37\u00a0<rrodriguez>\u00a0has quit  \n22:38\u00a0<rrodriguez>\u00a0has joined #xwiki  \n22:52\u00a0<CIA-120>\u00a0Sergiu Dumitriu\u000f master\u000f \\* r51fb02d\u000f https://github.com/xwiki/xwiki-platform/commit/51fb02d8a89afd731a0aab701fb6e5177d1d63dc \u000f/ xwiki-platform-core/xwiki-platform-administration/src/main/resources/XWiki/WysiwygEditorConfigSheet.xml :\u000f XWIKI-7481: Small UI breakage on WYSIWYG Administration Page ...  \n23:19\u00a0<abusenius>\u00a0has quit  \n\n"}