{"id": "dev:IRC.xwikiArchive20100310", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100310", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nsdumitriu left at 04:25 (Quit: Leaving.  \nLadySerena left at 04:25 (\\*.net \\*.split  \nplunden left at 04:26 (\\*.net \\*.split  \nnickless left at 04:26 (\\*.net \\*.split  \nCalebJamesDeLisl left at 04:26 (\\*.net \\*.split  \nxipe left at 04:26 (\\*.net \\*.split  \ncypromis left at 04:26 (\\*.net \\*.split  \nDenis left at 04:26 (\\*.net \\*.split  \nnpm left at 04:26 (\\*.net \\*.split  \njfx left at 04:26 (\\*.net \\*.split  \nnuvolari left at 04:26 (\\*.net \\*.split  \nbblfish left at 04:26 (\\*.net \\*.split  \njvelociter left at 04:26 (\\*.net \\*.split  \nbblfish joined #xwiki at 04:28  \nxipe joined #xwiki at 04:28  \nplunden joined #xwiki at 04:28  \nnickless joined #xwiki at 04:28  \nnuvolari joined #xwiki at 04:28  \nnpm joined #xwiki at 04:28  \nDenis joined #xwiki at 04:28  \njfx joined #xwiki at 04:28  \njvelociter joined #xwiki at 04:28  \nLadySerena joined #xwiki at 04:28  \nCalebJamesDeLisl joined #xwiki at 04:28  \ncypromis joined #xwiki at 04:28  \nLadySerena - (05:12): GlassFish v3 is super-sexy  \nDenis left at 06:01 (Read error: Connection reset by peer  \nnickless left at 06:02 (Read error: Operation timed out  \nDenis joined #xwiki at 06:09  \nmflorea joined #xwiki at 07:25  \nnuvolari - (07:30): \\*cough\\* LadySerena, I didn't check what channel I was posting to :P  \nnuvolari - (07:30): anyone of you ever used Faban to do loadtesting?  \nLadySerena - (07:32): XD  \nLadySerena - (07:32): nuuuu  \nLadySerena - (07:32): I haven't  \nbblfish left at 07:33 (Ping timeout: 246 seconds  \nLadySerena - (07:34): =^\\_^=  \nnuvolari - (07:36): it seems to be so powerful but I fail to make it function in harness mode  \nbblfish joined #xwiki at 07:39  \nLadySerena - (07:42): ask its IRC channel or mailing list?  \nLadySerena - (07:42): check the wiki?  \nnuvolari - (07:53): I is awesome :D got it runnin'  \nnuvolari - (07:53): RTFM  \nnuvolari - (07:53): :P  \nvmassol joined #xwiki at 08:05  \nLadySerena - (08:16): :D  \nLadySerena - (08:17): would it be cool if I used XWiki to power the wiki features of my new vCore System?  \nvmassol - (08:26): sure it would...  \nanamarias joined #xwiki at 08:27  \nLadySerena - (08:28): :D  \nanamarias left at 08:36 (Quit: anamarias  \nj-saturne joined #xwiki at 08:56  \nflorinciu joined #xwiki at 08:57  \nmflorea left at 08:59 (Ping timeout: 264 seconds  \nmflorea joined #xwiki at 09:13  \njvdrean joined #xwiki at 09:16  \nmflorea left at 09:34 (Quit: Leaving.  \nsilviar joined #xwiki at 09:38  \nlucaa left #xwiki at 10:05  \njvdrean left at 10:09 (Quit: Leaving.  \nxenon75 joined #xwiki at 10:11  \nKermitTheFragger joined #xwiki at 10:13  \nmflorea joined #xwiki at 10:20  \nplunden - (10:22): Hi, we are trying to access an LDAP server with write access (for updating user data from XWiki to LDAP). The LDAP Plugin provided with XWiki seem to have search methods only. The plan is now to drop the Groovy LDAP package into the WEB\\_INF/lib and then start using it.  \nplunden - (10:22): I mean that package: http://cwiki.apache.org/DIRxSBOX/groovy-ldap.html  \ntmortagne joined #xwiki at 10:23  \nplunden - (10:23): I am wondering that is the WEB\\_INF/lib directory the same as the GROOVY\\_HOME?  \nvmassol left at 10:24 (Quit: Leaving.  \nflorinciu left at 10:25 (Read error: Connection reset by peer  \nvmassol joined #xwiki at 10:25  \nflorinciu joined #xwiki at 10:28  \njvdrean joined #xwiki at 10:35  \nlucaa joined #xwiki at 10:40  \njvelociter left at 10:41 (Quit: jvelociter  \nvmassol - (10:41): tmortagne: good morning  \njvelociter joined #xwiki at 10:42  \ntmortagne - (10:42): vmassol: hi  \nvmassol - (10:42): tmortagne: wdyt about setting the new guid in BaseObject.clone() instead of setting it everywhere else?  \ntmortagne - (10:42): makes sense  \nvmassol - (10:44): anyone sees a pb with that?  \nvmassol - (10:44): (a pity sergiu isn't here)  \nDenis - (10:45): vmassol: it mainly depends on the meaning and usage you expect for this guid, is it used today ?  \nGillesSerasset joined #xwiki at 10:45  \nvmassol - (10:45): Denis: each object is supposed to have a unique UUID AFAIU  \nvmassol - (10:45): I don't know where it's used actually, tmortagne, do you know?  \ntmortagne - (10:46): vmassol: there is one probleme but it's kind of a wrong one i think, rename use clone  \ntmortagne - (10:46): and in rename we certainly don't want to change the uid  \ntmortagne - (10:46): so rename will need to be refactored  \nvmassol - (10:46): tmortagne: yes but indeed it's wrong, but we can set the uuid after the clone too  \ntmortagne - (10:47): and obviously it's used in copy document  \nvmassol - (10:47): (if we don't want to do a big refactoring)  \ntmortagne - (10:47): vmassol: that's what is done currently  \nDenis - (10:47): tmortagne: rename is currently a copy/delete, if it stay so, that make sense anyway, since the deleted object may be undeleted  \ntmortagne - (10:47): in copy document  \njvdrean - (10:47): I think it's been introduced for concerto needs, in order to be able to sync doc objectrs without damages  \njvdrean - (10:47): (vmassol)  \ntmortagne - (10:47): Denis: no it has been refactored AFAIK  \ntmortagne - (10:47): by CalebJamesDeLisl if i remember well  \nvmassol - (10:48): it's still a copy AFAIR  \nvmassol - (10:48): let me check  \nDenis - (10:48): tmortagne: oh, I was not aware of that, sorry  \njvdrean - (10:48): do we have any example of a contrib project released on the xwiki.org maven repo ?  \ntmortagne - (10:48): or maybe we just have a patch not applied yet then  \ntmortagne - (10:48): but there is a jira issue for it for sure and at least a patch  \nvmassol - (10:49): yes it's still a copy right now  \nDenis - (10:49): tmortagne: I think I see a Jira, now that you say so  \nvmassol - (10:49): jvdrean: no, I don't think so, do we release them there?  \nvmassol - (10:49): so basically object guid are not used right now, right?  \ntmortagne - (10:50): vmassol: it's used in REST and XMLRPC i guess  \ntmortagne - (10:51): but we don't use it anywhere else yet AFAIK  \nDenis - (10:51): vmassol, tmortagne: XWIKI-4287 is about the fact that rename change GUID and there is a patch  \ntmortagne - (10:52): yes that's the one  \ntmortagne - (10:52): a,d indeed that was CalebJamesDeLisl :)  \ntmortagne - (10:52): still good memory ;)  \nxenon75 - (10:52): the primary need for GUID was for the concerto prototype (besides the fact that it was good to have GUID for objects)  \nxenon75 is now known as fmancinelli ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \njvdrean - (10:53): vmassol: that's pretty much my question, do we have a policy for contrib releases ? I don't see any org/xwiki/contrib releases, should we allow to release there ?  \nfmancinelli - (10:53): REST and XMLRPC simply exposes that attribute for applications that want to use it (like concerto for example)  \nfmancinelli - (10:53): I don't think they are used internally in any way  \nfmancinelli - (10:55): Sergiu might confirm this, but I am pretty sure that this is the case (i.e., not used internally)  \nvmassol - (10:55): jvdrean: we discussed it but you need to find the thread again, I don't remember  \nvmassol - (10:55): (it might also be on contrib.xwiki.org)  \nDenis - (10:55): the patch make use of clone  \nvmassol - (10:56): Denis: what patch?  \nvmassol - (10:56): caleb?  \nDenis - (10:56): vmassol: why not providing a alternative clone function that keeps GUID ?  \nvmassol - (10:56): ahr ight  \nvmassol - (10:56): I don't see any valid use case  \nvmassol - (10:56): (for keeping the GUID)  \nDenis - (10:56): I feel, normal cloning should change GUID, to keeps them unique  \nvmassol - (10:57): if someone really needs the same GUID  \nvmassol - (10:57): then it can be set after the clone()  \nvmassol - (10:57): but it's a special case  \nDenis - (10:57): the only keeping GUID situation if for internal use, by rename for example  \nvmassol - (10:57): yes  \nvmassol - (10:57): I don't think we need to expose 2 clone() signatures  \nDenis - (10:58): internaly, you may need it  \nvmassol - (10:58): why?  \nDenis - (10:58): for rename  \ntmortagne - (10:58): now from JAVA POV a clone is supposed to do an exact copy  \nDenis - (10:58): at least  \nvmassol - (10:58): what's wrong with what I suggested DenisN  \nvmassol - (10:58): ?  \nvmassol - (10:59): tmortagne: I do'nt agree  \nvmassol - (10:59): a clone never gives the same object identity  \nvmassol - (10:59): it's a different object  \nvmassol - (10:59): so if guid is used for identiying the object  \ntmortagne - (10:59): indeed \"The precise meaning of \"copy\" may depend on the class of the object.\"  \nvmassol - (10:59): it must have a different guid  \ntmortagne - (10:59): (from javadoc)  \nvmassol - (10:59): ok  \nvmassol - (10:59): :)  \nvmassol - (11:00): pfew  \nvmassol - (11:00): Denis: what I was saying  \ntmortagne - (11:00): so yes anyway from object POV +1 for regenerating the guid  \nvmassol - (11:00): is that if you really want the same guid then you can clone and set the guid to the value you want  \nvmassol - (11:01): I don't think we need 2 clone() signatures  \nDenis - (11:01): well just be aware that rename copies at document level, and does not takes care of objet in first place  \ntmortagne - (11:01): rename should be refactored anyway  \nvmassol - (11:01): yes we would required an iteration objects indeed  \ntmortagne - (11:01): it's not normal that it's using copy  \nvmassol - (11:01): s/required/require/  \ntmortagne - (11:01): it does not make sense  \nDenis - (11:02): i am not looking at the source but at the patch of CalebJamesDeLisl  \ntmortagne - (11:02): that's why there is the issue, would be cool if CalebJamesDeLisl could apply the patch he did  \nDenis - (11:02): which use clone anyway  \nvmassol - (11:02): the patch is long  \nDenis - (11:02): on the document  \nvmassol - (11:02): which worries me  \ntmortagne - (11:02): it uses clone but dot copy  \ntmortagne - (11:02): which was supposed to be two difference things  \ntmortagne - (11:02): and still is  \nvmassol - (11:03): but it's probably ok  \ntmortagne - (11:03): without looking at the detail the goal of the patch is what i said: not use copy anymore  \nvmassol - (11:03): Denis is right: this line will need to be changed:  \nvmassol - (11:03): \u00a0newDocAndTranslationsByOld.put(this, (XWikiDocument) newDoc.clone());  \nvmassol - (11:05): why is it cloned btw?  \njvdrean - (11:05): I can't find a discussion about contrib project releases in:  \njvdrean - (11:05): http://contrib.xwiki.org/xwiki/bin/view/Main/WebHome  \njvdrean - (11:05): http://markmail.org/message/q2s6hct7nxuti3bd  \njvdrean - (11:05): http://markmail.org/message/kachlhm3d26g22jb  \njvdrean - (11:05): vmassol: are you sure it's been discussed on the ML ?  \nvmassol - (11:05): jvdrean: not sure, maybe it was only bertween jerome and me  \nvmassol - (11:06): we can rediscuss  \nDenis - (11:06): vmassol, tmortagne: and there is also a newDocOrTrans.clone(oldDocOrTrans);  \ntmortagne - (11:06): vmassol: it's cloned because of hibernate probably  \nvmassol - (11:06): Denis: the clone is wrong semantically  \nvmassol - (11:07): there might be some technical issue but in theory there should be no cloning  \njvdrean - (11:07): I don't have a strong opinion about that, my only concern is that it'd be dangerous to give contributors write access on the xwiki.org maven repo  \nDenis - (11:07): agreed, that is why I propose clone to change GUID, but a service function be available to keep them  \nvmassol - (11:08): jvdrean: I agree, right now the implicit rule  \nvmassol - (11:08): is that releases are done in svn and on code.xwiki.org  \nvmassol - (11:08): (ie no maven repo)  \njvdrean - (11:09): yes that's what I understood  \njvdrean - (11:09): but it's very limitating since it doesn't allow to use contrib projects as dependencies  \ntmortagne - (11:09): vmassol: the real fix would be to have the rename in the XWikiStoreInterface and do it in pure hql, would also fix the issue that we have to load the entire document and atatchemts just to rename it  \nvmassol - (11:09): yes  \nDenis - (11:09): not bad  \nEnygma` joined #xwiki at 11:10  \nvmassol - (11:13): tmortagne, Denis: so ok for me to change clone() to set the new guid in BaseObject? I have the patch ready  \ntmortagne - (11:13): vmassol: yes (I voted on the mail)  \ntmortagne - (11:13): anyway since CalebJamesDeLisl patch has not been applied yet it doe snot break anything  \nDenis - (11:14): to talk about completely other issue, I have just notice that ForguetUsername and ResetPassword are not working if users are not public (readable by guest), is that really good since keeping user private seems to me not unsual ? should I open a jira for that ?  \nvmassol - (11:16): back to working on relative refs in XWikiDocument....  \nDenis - (11:16): vmassol: good news, I am impatient :)  \nvmassol - (11:17): I know...  \njvdrean - (11:21): all, wwyt about having a contrib top level folder on http://maven.xwiki.org/  \njvdrean - (11:22): the idea would be to create a contrib user on maven.xwiki.org  \njvdrean - (11:22): with very restricted rights  \nvmassol - (11:22): jvdrean: what's the end goal?  \njvdrean - (11:22): contrib projects would be publish in /home/contrib/public\\_html  \njvdrean - (11:23): then we can have a /home/maven/public\\_html/contrib symlink  \ntmortagne - (11:23): jvdrean: +1  \njvdrean - (11:23): the main goal is to be able to \"fully\" release contrib project, as in allowing people to build a distrib with dependencies on contrib projects  \nvmassol - (11:23): jvdrean: ok that makes sense  \nvmassol - (11:24): but  \nvmassol - (11:24): I think we should go through nexus for this  \nvmassol - (11:24): it's meant for this  \nvmassol - (11:25): self provisioning  \nvmassol - (11:25): AFAIR  \nvmassol - (11:25): someone needs to read the nexus book and set up nexus properly for us  \nvmassol - (11:26): so that we can use it for staging/releases  \nvmassol - (11:26): including for contribs where it has even more value  \njvdrean - (11:26): hum right it be even better  \njvdrean - (11:26): s/it/it'd/  \nDenis - (11:28): vmassol: we already do so with nexus, that is quite easy :)  \nGillesSerasset left at 11:36 (Ping timeout: 276 seconds  \nGillesSerasset joined #xwiki at 11:37  \ntmortagne - (12:20): mflorea: where in which generated js files are stored the WYSIWYG translations ?  \nbblfish - (12:23): ( work for free: time limited offer that expires when foaf+ssl takes off )  \nmflorea - (12:23): tmortagne: mixed with the editor code. For each translation and for each browser (also for any other custom build properties) GWT generates a different JavaScript file (a permutation). So there is a FF3+en, FF3+fr, IE6+en, etc. In each of these JavaScript file, the translations are mixed with editor code (usually GWT groups string literals at the beginning of the file, but that is not something we can rely on).  \ntmortagne - (12:24): mflorea: ok  \nvmassol - (12:24): bblfish: :)  \nmflorea - (12:26): tmortagne: the reason for this is to download only what you need. If the request comes from FF with en then only the corresponding permutation is downloaded by the client.  \nmflorea - (12:26): all in one request  \nflorinciu left at 12:26 (Read error: Connection reset by peer  \ntmortagne - (12:27): mflorea: sure, i was kind of hopping that the translation was listed in a js file somewhere e in fact and used in other js files  \nmflorea - (12:27): all = code + translation + images + resources  \nsdumitriu joined #xwiki at 12:27  \ntmortagne - (12:28): (so that we could provide a tool to generate just this js file from resources file for someone to easily test)  \nmflorea - (12:31): I understand, but I don't think we can do that, unfortunately. Well, currently I'm using \"static\" GWT i18n (all the translations keys are defined using an interface). There is also the option of using \"dynamic\" i18n (with translation key lookup) but it's costly for the client afaik.  \ntmortagne - (12:32): mflorea: yes better target the performances for now  \nbblfish - (12:34): ok, so I suppose next on http://webid.myxwiki.org/ we can either do nice urls or I can try to do a simple foaf+ssl login - though I think anything there is not going to be that simple - perhaps I'll have to go to Paris for it  \nvmassol - (12:34): sdumitriu: can you give more details about your comment in jira?  \nanamarias joined #xwiki at 12:35  \nsdumitriu - (12:37): vmassol: I'll look at the code  \nvmassol - (12:37): sdumitriu: thomas explained it to me  \nvmassol - (12:38): the pb is in Document:  \nvmassol - (12:38): \u00a0\u00a0\u00a0\u00a0protected XWikiDocument getDoc()  \nvmassol - (12:38): \u00a0\u00a0\u00a0\u00a0{  \nvmassol - (12:38): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!this.cloned) {  \nvmassol - (12:38): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.doc = (XWikiDocument) this.doc.clone();  \nvmassol - (12:38): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.cloned = true;  \nvmassol - (12:38): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \nvmassol - (12:38): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return this.doc;  \nvmassol - (12:38): \u00a0\u00a0\u00a0\u00a0}  \nsdumitriu - (12:38): Yep  \nflorinciu joined #xwiki at 12:40  \ntmortagne - (12:41): same for originalDocument document by the way, which is the previous version of a document, it's set when loading the document (in storage loadXWikiDoc() method)  \nMichelleShi joined #xwiki at 12:41  \ntmortagne - (12:44): so we need two kind of clone (one that duplicate the java object and another that create a new document from the document)  \nvmassol - (12:44): hmm so should I revert clone() as before and instead introduce a new method like copy() or  \nvmassol - (12:44): duplicate()  \nvmassol - (12:44): or something else  \ntmortagne - (12:44): probably the safest  \nvmassol - (12:44): the laternative is more costly  \nvmassol - (12:45): (and more dangerous indeed)  \nvmassol - (12:45): even though nothing is dangerous really since guid are not used ;)  \nnickless joined #xwiki at 12:46  \nvmassol - (12:46): ok lunch time, I'll fix it after, just tell me what method name you'd prefer  \nbblfish - (12:54): is it still true that XWiki only allows one authentication method at a time: http://platform.xwiki.org/xwiki/bin/view/AdminGuide/Authentication ?  \nsdumitriu - (12:55): Yes, unfortunately  \nbblfish - (12:55): oh, that's a big problem then  \nbblfish - (12:56): so does that mean either passwords OR foaf+ssl ? I can't have both?  \nsdumitriu - (13:09): You can implement the fallback in foaf+ssl  \nsdumitriu - (13:10): extend + super  \nsdumitriu - (13:10): Or, you can fix this problem globally, patches welcome :)  \nplunden left at 13:25 (Quit: Leaving.  \nheadache joined #xwiki at 13:27  \nheadache - (13:35): hi  \ntmortagne - (13:35): bblfish: there is not generic way but for example LDAP authenticator fallback on standard authentication  \nheadache - (13:35): :)  \nvmassol - (13:38): sdumitriu, tmortagne, Denis: ok for duplicate() ?  \nsdumitriu - (13:39): Yep  \nvmassol - (13:39): \u00a0\u00a0\u00a0\u00a0/\\*\\*  \nvmassol - (13:39): \u00a0\u00a0\u00a0\u00a0\u00a0\\* Similar to {@link #clone()} but whereas a clone is an exact copy (with the same GUID), a duplicate keeps the  \nvmassol - (13:39): \u00a0\u00a0\u00a0\u00a0\u00a0\\* same data but with a different identity.  \nvmassol - (13:39): \u00a0\u00a0\u00a0\u00a0\u00a0\\*  \nvmassol - (13:39): \u00a0\u00a0\u00a0\u00a0\u00a0\\* @since 2.3M1  \nvmassol - (13:39): \u00a0\u00a0\u00a0\u00a0\u00a0\\*/  \nvmassol - (13:39): \u00a0\u00a0\u00a0\u00a0public XWikiDocument duplicate()  \ntmortagne - (13:39): sounds good  \nbblfish - (13:40): ah ok. Well I think the foaf+ssl way, is just the client side negotiation. from that the server will end up with an authentified WebId ( a URL), which one can think of as the username  \nbblfish - (13:42): so the backend schema just needs to be enhanced with a URL identifier, or a map from URLs to whatever primary key the backend is using needs to be generated  \nlucaa left at 13:42 (Ping timeout: 245 seconds  \nflorinciu left at 13:42 (Ping timeout: 248 seconds  \nmflorea left at 13:42 (Ping timeout: 248 seconds  \nEnygma` left at 13:42 (Ping timeout: 276 seconds  \nsilviar left at 13:43 (Ping timeout: 260 seconds  \nanamarias - (13:46): tmortagne: for the Macros, what should the behaviour be like, if a parameter is required and has a default value ? in the case in which no value is provided by the user  \nanamarias - (13:46): (I'm asking again just to make sure I do the right changes)  \ntmortagne - (13:47): anamarias: AFAIR we already talked about that and the default value was supposed to be automatically listed in the parameters like if users did provided it  \nanamarias - (13:47): shouldn't $context.macro.params.get(\"param1\") return the default value, and not throw an error  \ntmortagne - (13:48): that's exectly what i just said...  \nanamarias - (13:48): so even for mandatory ones  \nanamarias - (13:48): because it trows throw new MacroParameterException(String.format(\"Parameter [%s] is mandatory\", parameterName)); now  \nanamarias - (13:48): ok cool then :)  \ntmortagne - (13:48): no  \ntmortagne - (13:48): mansdatory ones are differents  \ntmortagne - (13:48): mandatory means that user have to provide something  \nanamarias - (13:49): mandatory and required are different things??  \ntmortagne - (13:49): it has absolutely n othing to do with default value  \ntmortagne - (13:49): and we talked about that too  \ntmortagne - (13:49): taht' why you created a jira issue for the WYSIWYG...  \ntmortagne - (13:49): no  \nanamarias - (13:49): my question was : \"... what should the behaviour be like, if a parameter is \\*\\*required\\*\\* and has a \\*\\*default value\\*\\* ? \u00a0... \"  \nflorinciu joined #xwiki at 13:49  \nEnygma` joined #xwiki at 13:49  \ntmortagne - (13:50): let's say it again:  \nanamarias - (13:50): but it has to do with it  \nsilviar joined #xwiki at 13:50  \nmflorea joined #xwiki at 13:50  \ntmortagne - (13:50): - default value should be provided in $context.macro.params.get(\"param1\" automatically  \ntmortagne - (13:50): - but if the user did not provided mandatory parameter the amcro should not even ben executed and return an error  \ntmortagne - (13:50): it's not $context.macro.params.get(\"param1\") that return an error  \nanamarias - (13:51): so default values are useless for required parameters?  \nlucaa joined #xwiki at 13:51  \ntmortagne - (13:51): no, they are used in the WYSIWYG  \ntmortagne - (13:51): default value are useless in the descriptor anyway, except for the WYSIWYG  \nanamarias - (13:52): so,  \nanamarias - (13:52): $context.macro.params.get(\"param1\") - throws error if it's mandatory (even if it has a default value)  \nanamarias - (13:52): $context.macro.params.get(\"param1\") - returns default value (if it's not mandatory)  \nanamarias - (13:53): in both cases no values are provided by the user  \nanamarias - (13:53): is this right?  \ntmortagne - (13:53): again taht's noty what i'm saying: \"if the user did not provided mandatory parameter the amcro should not even ben executed and return an error\"  \ntmortagne - (13:53): $context.macro.params.get(\"param1\") should never return an error  \nanamarias - (13:54): not return error, I ment macro not exacuted  \nanamarias - (13:54): (WikiMacro.execute(..) throws error)  \ntmortagne - (13:54): yes that's it  \nanamarias - (13:54): ok, thanks  \ntmortagne - (13:55): that's was the reason for http://jira.xwiki.org/jira/browse/XWIKI-4946  \ntmortagne - (13:55): the rule is simple: wiki macro should bahave like java macros  \ntmortagne - (13:55): behave  \ntmortagne - (13:56): wiki macro are emulated java macros  \nanamarias - (13:58): I know, but I'm not sure what exactly is the behavior of the java macros  \ntmortagne - (13:59): anamarias: you can test it ;)  \nanamarias - (13:59): yes  \nflorinciu left at 14:02 (Read error: Connection reset by peer  \nvmassol - (14:04): Denis: you there?  \nvmassol - (14:05): tmortagne: one idea: we could have a Resolver that accepts a ReferencePair as parameter  \nvmassol - (14:06): that referencepair would contain both the reference to normalize and the ref to resolve against  \ntmortagne - (14:06): what is ReferencePair ?  \ntmortagne - (14:06): hmm  \nvmassol - (14:07): or introduce params\u2026.  \ntmortagne - (14:07): \u00a0genericthat mean new resolvers based on <ReferencePair>  \ntmortagne - (14:07): maybe the best is custom parameters yes  \ntmortagne - (14:08): s/genericthat/that/  \nvmassol - (14:08): the idea is to add a new resolver  \nvmassol - (14:08): so yes it means a new resolver  \nvmassol - (14:08): in any case  \ntmortagne - (14:09): vmassol: i mean new resolver chain, a different geenric would also need a different abstract  \ntmortagne - (14:09): because we have an abstract based on string and one on EntityReference  \nvmassol - (14:09): it's also a little bit hackish  \nvmassol - (14:10): reusing a param meant for something for another thing  \nvmassol - (14:10): I'd also prefer params:  \nvmassol - (14:10): \u00a0\u00a0\u00a0\u00a0EntityReference resolve(T entityReferenceRepresentation, EntityType type, Object... parameters);  \ntmortagne - (14:10): yep seam more generic and nicer  \ntmortagne - (14:10): seems  \ntmortagne - (14:10): wxaiting for Denis  \ntmortagne - (14:10): waiting  \nanamarias left at 14:12 (Remote host closed the connection  \nanamarias joined #xwiki at 14:13  \nvmassol - (14:14): tmortagne: do you think it would be a pb to break the API and add the parameters?  \nvmassol - (14:15): hmm actually it may not break the api, I'm not sure  \nvmassol - (14:15): hmm it would probably requiring recompilation though  \nvmassol - (14:15): (not sure again)  \nvmassol - (14:16): it would break implementations that's sure  \ntmortagne - (14:16): vmassol: yes it would compile i think but probably not work at runtime because it would not find the proper method signature maybe  \ntmortagne - (14:16): not sure how java handle it  \nvmassol - (14:16): Denis' impl of a Resolver would be broken for sure  \nvmassol - (14:16): now I'm tempted to still do it  \nvmassol - (14:17): I don't think lots of people have written resolvers yet  \ntmortagne - (14:17): Denis's impl is based on one of the abstract  \ntmortagne - (14:17): just need to know how he give the base reference  \ntmortagne - (14:17): maybe he is using the ExecutionContext i don't know  \nvmassol - (14:17): well there's no magic  \ntmortagne - (14:17): vmassol: yes i doubt there is a lot of custom resolvers  \nvmassol - (14:17): there are only 2 possibilities I know of  \nvmassol - (14:18): - the context  \ntmortagne - (14:18): actually it's possible he is doing a cast simply  \nvmassol - (14:18): - using the referncepair idea I posted above  \ntmortagne - (14:18): (i.e. that he doe snot use the Resolver public api but directly the class)  \narkub joined #xwiki at 14:20  \nvmassol - (14:21): would we do it also for DocumentReferenceResolver and all other specific resolvers?( I'd say yes)  \ntmortagne - (14:22): yes, actually most of the time we will need it in DocumentReferenceResolver  \ntmortagne - (14:22): like the use case you have in \u00a0XWikiDocument and BaseObject  \ntmortagne - (14:22): by we should do the same thing for resolver and serializer api  \ntmortagne - (14:23): anyway DocumentReferenceResolver implements resolver api so it would be supported by all resolvers  \nvmassol - (14:24): for serializer\u2026 hmmm\u2026 yes for consistency but we don't have a use case rtight now  \ntmortagne - (14:24): we have  \ntmortagne - (14:24): in XWikiDocument also  \nvmassol - (14:24): ah right you added one I saw  \ntmortagne - (14:24): yep  \ntmortagne - (14:24): for parents  \ntmortagne - (14:25): maybe not used anymore with your refactor  \ntmortagne - (14:25): but it makes sense anyway and it's consistent yes  \nvmassol - (14:27): ok done locally :) (was fast)  \nvmassol - (14:27): now need Denis input to see what he's used + mail for the list  \njvdrean - (14:31): I think I'm ready for a contrib staging release  \njvdrean - (14:31): I'd like to modify the meetingmanager 1.1 tag to include the correct distributionManagement section, and perform a release  \njvdrean - (14:32): wdyt ? (jvelociter)  \njvdrean - (14:32): the http://maven.xwiki.org/contrib/ repo has been automatically created by nexus  \nvmassol - (14:32): jvdrean: I think it's best to send a mail on the list to explain the new strategy you'd like to promote  \nvmassol - (14:33): then to doc it on contrib.xwiki.org  \njvelociter - (14:33): jvdrean: fine with me  \njvelociter - (14:34): for the tag  \nvmassol - (14:34): err re tag  \ntmortagne - (14:34): jvdrean: what about a contrib parent pom with that ?  \nvmassol - (14:34): you cannot modify a tag  \njvdrean - (14:34): vmassol: of course it needs to be validated and documented by I wanted to be sure the proposal is valid first  \nvmassol - (14:34): a tag means it's been already released  \ntmortagne - (14:34): vmassol: technically you can but it's bad  \nvmassol - (14:34): so you need a new relrease  \nvmassol - (14:34): (I know)  \nvmassol - (14:34): a 1.1.1 release  \njvdrean - (14:34): tmortagne: yes having a parent pom for contrib projects would be nice  \nvmassol - (14:35): or wait for more stuff before doing a 1.2 release  \ntmortagne - (14:36): it could also contains the default group id for contrib projects  \ntmortagne - (14:36): (org.xwiki.contrib)  \njvelociter - (14:40): +1 for the parent pom  \njvelociter - (14:40): with org.xwiki.contrib  \njvelociter - (14:41): Q: do we offer automated for contribs projects that asks ?  \ntmortagne - (14:42): would be nice  \nbblfish - (14:45): so if I want to write a custom authenticator, do I still follow the principles of http://platform.xwiki.org/xwiki/bin/view/AdminGuide/Authentication and implement \u00a0http://svn.xwiki.org/svnroot/xwiki/platform/core/trunk/xwiki-core/src/main/java/com/xpn/xwiki/user/api/XWikiAuthService.java ?  \nheadache left at 14:46 (Quit: Sto andando via  \njvdrean - (14:47): vmassol and all: we agree that the idea would be to have a /svnroot/contrib/pom/pom.xml project right ?  \nMichelleShi left at 14:48 (Quit: ??  \ntmortagne - (14:48): bblfish: the best i to take the existing authenticator that is look the more similar, copy it and change auth protocol specific code with yours  \ntmortagne - (14:49): LDAP authenticator is the one with the most features we have, you also have some more simple one in contrib  \nvmassol - (14:49): jvdrean: sounds good  \nbblfish - (14:49): Apparently RESTlets also do authentication. You are using them, are you thinking of using them more deeply for htis too?  \nvmassol - (14:49): tmortagne and all: vote mail sent re resolver/serializer change  \nbblfish - (14:50): I suppose the OpenId authenticator is the closest  \ntmortagne - (14:51): well the openid one need several modification in the core actually  \ntmortagne - (14:51): which is wahy it's not already in standard  \ntmortagne - (14:51): why  \nbblfish - (14:51): how come it needs changes to the core?  \ntmortagne - (14:52): mainly to change the authentication form  \ntmortagne - (14:52): to than you can choose the proper openid url instead of a login/pass  \ntmortagne - (14:53): s/to/so/  \nbblfish - (14:54): you call that a change to the core :-)  \ntmortagne - (14:55): bblfish: well the core expect a login in a pass and call the authenticator with a login and a pass  \nbblfish - (14:55): the simplest foaf+ssl authenticator would need a link or a button on that page. Ie: no need even to enter a username or password  \ntmortagne - (14:55): so yes if you want something different it need a more generic authentication system  \nbblfish - (14:56): well like openid, you end up with a URL identifier  \ntmortagne - (14:56): bblfish: the idea with openid was to log in even when you don't already have an xwiki user  \nbblfish - (14:56): same with foaf+ssl  \ntmortagne - (14:56): sio that the authenticator would automatically create the user  \ntmortagne - (14:57): so you have to give something  \nbblfish - (14:57): yes, foaf+ssl would also have that  \nbblfish - (14:57): (I mean you can do without it, and only use foaf+ssl to log in existing users, but that's not very interesting)  \ntmortagne - (14:57): then that's the same issue, the current static form which take user/pass don't work for you  \ntmortagne - (14:58): well you can support some inf of hack  \nbblfish - (14:58): ok, so I should look at the openid code  \ntmortagne - (14:58): i.e. put the url in the login and nothing in the pass and knows in the authenticator that the url is in the login  \nbblfish - (14:58): that's ugly  \ntmortagne - (14:58): s/inf/kind/  \ntmortagne - (14:58): yes  \ntmortagne - (14:58): i said hack ;)  \nbblfish - (14:59): there are beautiful hacks :-) foaf+ssl is one such  \nbblfish - (14:59): ;-)  \nplunden joined #xwiki at 15:13  \nsavi joined #xwiki at 15:13  \nsdumitriu - (15:26): vmassol: Did you undo the changes done in the initial object clone commit?  \nsdumitriu - (15:30): vmassol: You didn't undo the changes to XWikiDocument.mergeXObjects  \nNirmal joined #xwiki at 15:33  \nsdumitriu - (15:34): It should use duplicate instead of clone  \nvmassol - (15:34): let me check  \nvmassol - (15:36): sdumitriu: right fixing  \nvmassol - (15:36): thanks  \nplunden left at 15:37 (Ping timeout: 265 seconds  \nNirmal left at 15:38 (Ping timeout: 252 seconds  \nsdumitriu - (15:40): The others seem to be correct  \nsdumitriu - (15:41): You should write a test for it  \nsdumitriu - (15:41): :)  \nvmassol - (15:41): sdumitriu: fixed  \nbblfish - (15:43): hi  \nvmassol - (15:43): bblfish: JAAS is the most standard thing you can imagine AFAIK  \nvmassol - (15:43): (in the java world at least)  \nbblfish - (15:43): ok. I will look into that too  \nbblfish - (15:45): I will look into how the openid implementation works, see how close I can get with a foaf+ssl implementation, look at JAAS and Restlets, then either use the code that I have already hacked around an openid implementation to move that into a JAAS or RESTlet component  \nbblfish - (15:47): though I think the Restlet folks are putting a foaf+ssl implementation together already  \nbblfish - (15:48): the more code one writes, the easier it is to see what can be refactored into a simple component  \nanamarias - (15:54): how can I delete all documents within a space, easily, from the interface?  \nsdumitriu - (15:55): http://code.xwiki.org/xwiki/bin/view/Snippets/DeleteSpaceSnippet  \nanamarias - (15:58): thanks Sergiu!  \nbblfish\\_ joined #xwiki at 16:26  \nbblfish\\_ left at 16:29 (Client Quit  \nbblfish\\_ joined #xwiki at 16:33  \nbblfish\\_ left at 16:34 (Client Quit  \nNirmal joined #xwiki at 16:37  \nplunden joined #xwiki at 17:26  \nsilviar left at 17:33 (Quit: Leaving.  \nlucaa left #xwiki at 17:35  \nCalebJamesDeLisl - (17:43): Hello all.  \nCalebJamesDeLisl - (17:44): bblfish: Suppose you were to extend the default form authenticator and in the extended version allowed 2 ways to authenticate?  \nbblfish - (17:45): hi  \nbblfish - (17:45): I was going to look at OpenId authenticator  \nbblfish - (17:45): because it has similar properties  \nCalebJamesDeLisl - (17:46): OpenID is implemented?  \nbblfish - (17:46): there is something \u00a0I was just about to look  \nfmancinelli left at 17:47 (Quit: Leaving.  \nbblfish - (17:47): can't find it with find . -name \"\\*.java\" | grep -i openid in the source code  \nvmassol - (17:48): it's in jira  \nvmassol - (17:48): jira.xwiki.org  \nbblfish - (17:48): I thought jira was a bug management platform...  \nvmassol - (17:48): no  \nvmassol - (17:48): it's an issue tracking system  \ntmortagne - (17:49): bblfish: there is patches on jira projects (\"which is why it's not already in standard\")  \nvmassol - (17:49): http://jira.xwiki.org/jira/secure/IssueNavigator.jspa?reset=true&&query=openid&summary=true&description=true&body=true  \nvmassol - (17:50): check http://jira.xwiki.org/jira/browse/XWIKI-2630  \nvmassol - (17:50): there's a link to a design doc too  \nCalebJamesDeLisl - (17:50): re XWikiDocument.clone: clone is also used in EditAction, SaveAction, and InlineAction (I would prefer a copy on write scheme) I guess that's academic since you went with duplicate.  \nbblfish - (17:50): I would be happy to put openid and foaf+ssl together at that level, and put it on webid.myxwiki.org  \nbblfish - (17:51): is that something that would be feasible?  \ntmortagne - (17:52): it's more http://jira.xwiki.org/jira/browse/XWIKI-2588 actually  \ntmortagne - (17:52): XWIKI-2630 is abut making xwiki an openid serveur/provider  \nvmassol - (17:52): ok  \nCalebJamesDeLisl - (17:53): re the XWikiDocument.rename patch, It took me a long time to debug it and I'm a bit scared to try putting it in. Maybe something to wait for a major release (3.0)?  \nbblfish - (17:54): ah ok. 2588 is about allowing people to login?  \nbblfish - (17:55): yes. \"first version of OpenID authentication (RP). Creating a new OpenID user (registration) and logging in with an OpenID works already. It still needs some cosmetic fixes (forms).\"  \nNirmal left at 17:57 (Quit: Leaving  \nbblfish - (17:58): now as these are patches, I wonder how much of that is still relevant...  \ntmortagne - (17:58): all the independent patch (not core modification are) are still relevant i think  \ntmortagne - (17:59): and even core modification would just need some refactor if some code changed  \ntmortagne - (18:00): actually the final patch for both issues has been attached on http://jira.xwiki.org/jira/browse/XWIKI-2630 it seems  \nheadache joined #xwiki at 18:01  \nbblfish - (18:01): wow. Useful info guys :-)  \nbblfish - (18:03): But this shows again that you have to seperate the content of the xar xml from the metadata.  \nbblfish - (18:03): These patches would be a lot easier to read  \nbblfish - (18:04): ok, I'll be back . A w3c conf call on social web on the other line  \nCalebJamesDeLisl - (18:04): hmm, it edits RegisterAction but not api.XWiki.addUser  \nCalebJamesDeLisl - (18:04): s/addUser/createUser  \nCalebJamesDeLisl - (18:05): RegisterAction is not used by the new registration page.  \nCalebJamesDeLisl - (18:06): Also the patch edits MyFormAuthenticator, I would be in favor of extending it to give the user a choice.  \nplunden left #xwiki at 18:07  \nplunden joined #xwiki at 18:07  \nbblfish left at 18:10 (Remote host closed the connection  \ntmortagne - (18:10): CalebJamesDeLisl: the real issue and what need to be fixed is that we have only one kind of form, IMO we should have authenticator descriptor like we have macro descriptor and we let authenticator describe what it needs and we generate the form based on it  \ntmortagne - (18:11): Markus did not had time to do that for the GSOC  \nCalebJamesDeLisl - (18:17): That sounds ideal, maybe we should start a separate module for authentication outside of the old core.  \ntmortagne - (18:18): i plan to start working on JAAS anyway  \nCalebJamesDeLisl - (18:18): I think I asked this before but why don't we rely on the servlet session? it seems the servlet session is relied upon for ExecutionContext.  \nvmassol - (18:19): CalebJamesDeLisl: EC is independent of any environment  \nCalebJamesDeLisl - (18:19): Ahh, it's thread dependent?  \ntmortagne - (18:19): CalebJamesDeLisl: the plan is to be able to sue component anywhere, not only in a servlet  \nvmassol - (18:20): there's an environment level handled by xwiki-container  \nvmassol - (18:20): but after this level it's indep of the environment  \nvmassol - (18:20): that's the idea at least in the new architecture  \ntmortagne - (18:20): CalebJamesDeLisl: yes EC is a threadlocal  \nvmassol - (18:21): got to go, bbl  \nCalebJamesDeLisl - (18:21): Is the end plan to have authentication rely on the thread?  \ntmortagne - (18:21): what do you mean ?  \ntmortagne - (18:21): it depends what the authenticator needs  \nCalebJamesDeLisl - (18:22): It seems such a pain to be pushing encrypted usernames and passwords back and forth in cookies.  \ntmortagne - (18:22): we use cookies when we want to store something, the EC is not persisted  \ntmortagne - (18:22): that's not the same thing  \nCalebJamesDeLisl - (18:23): Ahh right, I see.  \nEnygma` left at 18:23 (Quit: Leaving.  \nCalebJamesDeLisl - (18:24): Maybe going forward we could think about a hashmap where the user gets just a cookie with a random hash and the password doesn't have to be pushed around all day.  \ntmortagne - (18:26): well the password is not reused in the same session, authentication is usually done only once by session (we do rely on session for some things)  \ntmortagne - (18:27): we use the cookie only to remember the login/pass for later  \ntmortagne - (18:28): well, not realy actually  \ntmortagne - (18:28): or maybe yes  \ntmortagne - (18:29): let's say that's the theory at least ;)  \nCalebJamesDeLisl - (18:29): :) starting my local XE, I seem to remember a cookie called j\\_password.  \ntmortagne - (18:29): yes thta's the remember password  \ntmortagne - (18:30): but it's used only for that  \ntmortagne - (18:30): when you close the session and come back to automatically login  \nCalebJamesDeLisl - (18:30): hmm, cookies: password=FS1YvSKKiX8\\_; rememberme=false  \ntmortagne - (18:31): now when we talk about the current authentication system we need to separate the theory and what is done badly, like tha fact that the password is stored all the time even if rememberme is false ;)  \ntmortagne - (18:31): same for many other things (IMO the whole auth system need to be redone)  \ntmortagne - (18:33): we also had issues in the past with tomcat sessions  \ntmortagne - (18:33): so it's not easy to trust them  \nCalebJamesDeLisl - (18:33): I just threw out the user and pass cookies and clicked a link, it now says I'm not logged in.  \nCalebJamesDeLisl - (18:34): \" the whole auth system need to be redone\" +1  \ntmortagne - (18:34): i thin kif you just remove the password and keep the use it should work  \nCalebJamesDeLisl - (18:35): trying...  \ntmortagne - (18:35): thing is as i said the value in teh session is validated with the usename to make sure the session has the proper user  \ntmortagne - (18:35): because had many issue with tomcat session like the user in the session was the wrong one  \ntmortagne - (18:35): let me find you the test  \nsdumitriu - (18:36): We check the cookie because sometimes users were finding themselves logged in as other users on xwiki.org (re tomcat sessions)  \ntmortagne - (18:36): CalebJamesDeLisl: see MyFormAuthenticator#processLogin  \nCalebJamesDeLisl - (18:37): Hmm, throw out the password cookie and again, not logged in.  \ntmortagne - (18:37): that's weird  \ntmortagne - (18:38): the password is only used when we really re-authenticate  \ntmortagne - (18:38): maybe you have the option xwiki.authentication.always to 1  \ntmortagne - (18:39): even if i doubt you would change it  \nCalebJamesDeLisl - (18:41): It's commented out, I'm using a 2.3 snapshot with no changes except a custom hibernate.cfg.xml  \nCalebJamesDeLisl - (18:42): restarting with it explicitly set to 0  \nCalebJamesDeLisl - (18:47): yup, still getting kicked out. and with this in the logs: \u00a0xwiki.MyPersistentLoginManager \u00a0- Login cookie validation hash mismatch!...  \njvdrean left at 18:49 (Quit: Leaving.  \nKermitTheFragger left at 18:53 (Quit: Leaving  \ntmortagne - (19:02): CalebJamesDeLisl: looks like a bug to me especially with what i see in the code, that would need to be debugged to be sure why it behave like this  \ntmortagne - (19:02): but it's not critical :)  \nCalebJamesDeLisl - (19:03): Everyone wants to talk to me whenever I get coffee :)  \nCalebJamesDeLisl - (19:05): As soon as xwiki-action is finished there will be a clear path to making the authenticator a module.  \ntmortagne left at 19:07 (Quit: Leaving.  \nmflorea left at 19:07 (Quit: Leaving.  \nbblfish joined #xwiki at 19:22  \nanamarias\\_ joined #xwiki at 19:43  \narkub left at 19:46 (Quit: Leaving  \nanamarias left at 19:47 (Ping timeout: 246 seconds  \nanamarias\\_ is now known as anamarias ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nCalebJamesDeLisl - (19:56): vmassol: I'd like to talk more about script v. java, I can definitely see your point about java being intrinsically easier to keep clean. My thinking is that we should provide to the users the same means of customization that we use ourselves.  \nvmassol - (19:57): CalebJamesDeLisl: yes I agree that it should be possible to do everything in wiki pages  \nvmassol - (19:58): and I also agree that a nice direction is to make an IDE application inside XE  \nCalebJamesDeLisl - (19:59): I see no reason why that shouldn't be by adding modules but I think we would want to make modules easier to install and allow them to run in a sandboxed mode (no programming right).  \nCalebJamesDeLisl - (19:59): Alas we have switched positions :)  \nvmassol - (19:59): :)  \nvmassol - (19:59): my only comment is that we'll only get the same facilities as in java in about 10 years from now  \nvmassol - (20:00): so for now our stategy should be to develop java modules for \"business logic\"  \nCalebJamesDeLisl - (20:00): I guess I need a good definition of business logic.  \nvmassol - (20:01): anything non presentational  \nCalebJamesDeLisl - (20:01): for example: My (original) thinking is/was that sending of email should be internal, but handling of invitation emails should be an application.  \nvmassol - (20:02): yes we need to define precisely where we stop  \nCalebJamesDeLisl - (20:02): That was because email sending is generic, internal handling of invitation email would introduce \"one time use\" APIs.  \nvmassol - (20:02): regarding objecy/class manipulation for ex  \nvmassol - (20:03): \\*object  \nvmassol - (20:03): sorry got to go, tennis match  \nCalebJamesDeLisl - (20:03): Good luck :)  \nheadache - (20:06): :D  \nsavi left at 20:21 (Quit: savi  \njvelociter left at 20:21 (Quit: jvelociter  \nheadache - (20:22): goodbye  \nheadache left at 20:22 (Quit: Sto andando via  \nanamarias left at 20:45 (Remote host closed the connection  \nanamarias joined #xwiki at 20:45  \nxenon75 joined #xwiki at 20:46  \nxenon75 left at 20:51 (Ping timeout: 246 seconds  \nmflorea joined #xwiki at 21:16  \nj-saturne left at 21:22 (Quit: Leaving.  \nlucaa joined #xwiki at 21:56  \nC\\_Kode joined #xwiki at 22:23  \nC\\_Kode - (22:24): How to you specify xwiki 1.0 syntax?  \nsdumitriu - (22:24): Edit the document using the wiki or the wysiwyg editors, and there should be a panel on the right where you can choose the syntax for the current document  \nC\\_Kode - (22:25): Thank you  \nC\\_Kode - (22:26): I think my theme doesn't have it.  \nC\\_Kode - (22:26): err, I see it  \nxenon75 joined #xwiki at 22:27  \nanamarias - (22:28): sdumitriu: I have in a string some velocity code, and I want to execute and display the results  \nanamarias - (22:28): If I display it inside a simple {{velocity}} macro, it works fine.  \nanamarias - (22:28): But if I print it inside {{html}} macro, it displays the string content as it is, not the rendered output  \nsdumitriu - (22:29): Example code?  \nanamarias - (22:30): {{velocity}}  \nanamarias - (22:30): $code  \nanamarias - (22:30): {{/velocity}}  \nanamarias - (22:30): vs  \nanamarias - (22:30): {{velocity}}  \nanamarias - (22:30): {{html}}  \nanamarias - (22:30): $code  \nanamarias - (22:30): {{/html}}  \nanamarias - (22:30): {{/velocity}}  \nanamarias - (22:30): where $code is :  \nmflorea left at 22:30 (Quit: Leaving.  \nanamarias - (22:30): '{{blogcategories/}}'  \nsdumitriu - (22:32): {{html wiki=true}}  \nnuvolari left at 22:32 (Ping timeout: 248 seconds  \nanamarias - (22:33): cool, now it works! :)  \nanamarias - (22:33): thanks  \nsdumitriu - (22:33): But why do you need {{html}} there?  \nsdumitriu - (22:33): It should be inside the code for {{blogcategories}} if needed  \nanamarias - (22:35): the example is more complex, I want to put it inside some divs / spans  \nanamarias - (22:35): as the dashboard columns  \nsdumitriu - (22:35): K  \nC\\_Kode left #xwiki at 22:38  \nvmassol - (22:51): cool the guy has added a link to XWiki as I had asked him: http://www.websequencediagrams.com/embedding.html :)  \nGillesSerasset left at 23:01 (Quit: Computer goes to sleep!  \nxenon75 left at 23:06 (Quit: Leaving.  \nanamarias left at 23:11 (Quit: anamarias  \nsavi joined #xwiki at 23:45  \nsavi left #xwiki at 23:46  \nvmassol left at 23:47 (Quit: Leaving.  \n\n"}