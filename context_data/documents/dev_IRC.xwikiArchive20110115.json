{"id": "dev:IRC.xwikiArchive20110115", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110115", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:17\u00a0<rrodriguez>\u00a0has quit  \n00:24\u00a0<rrodriguez>\u00a0has joined #xwiki  \n00:26\u00a0<vmassol>\u00a0has quit  \n01:23\u00a0<florinciu>\u00a0has quit  \n02:15\u00a0<lpereira>\u00a0has quit  \n02:35\u00a0<Enygma`>\u00a0has quit  \n02:40\u00a0<sburjan\\_>\u00a0is now known as <sburjan`>  \n02:51\u00a0<abusenius>\u00a0has quit  \n02:51\u00a0<abusenius>\u00a0has joined #xwiki  \n02:59\u00a0<abusenius>\u00a0has quit  \n04:40\u00a0<DrLou>\u00a0has quit  \n08:49\u00a0<vmassol>\u00a0has joined #xwiki  \n09:58\u00a0<vmassol>\u00a0has quit  \n10:51\u00a0<lpereira>\u00a0has joined #xwiki  \n11:42\u00a0<mflorea>\u00a0has joined #xwiki  \n12:08\u00a0<abusenius>\u00a0has joined #xwiki  \n12:45\u00a0<DrLou>\u00a0has joined #xwiki  \n13:10\u00a0<Enygma`>\u00a0has joined #xwiki  \n13:15\u00a0<jvdrean>\u00a0has joined #xwiki  \n13:18\u00a0<rrodriguez>\u00a0has quit  \n13:19\u00a0<rrodriguez>\u00a0has joined #xwiki  \n13:21\u00a0<sburjan\\_>\u00a0has joined #xwiki  \n13:21\u00a0<sburjan`>\u00a0has quit  \n13:21\u00a0<sburjan\\_>\u00a0is now known as <sburjan`>  \n13:36\u00a0<Enygma`>\u00a0has quit  \n14:30\u00a0<jvelociter>\u00a0has quit  \n14:38\u00a0<rrodriguez>\u00a0has quit  \n14:48\u00a0<florinciu>\u00a0has joined #xwiki  \n15:11\u00a0<florinciu>\u00a0has quit  \n16:06\u00a0<rrodriguez>\u00a0has joined #xwiki  \n16:08\u00a0<florinciu>\u00a0has joined #xwiki  \n16:08\u00a0<rrodriguez>\u00a0has quit  \n16:09\u00a0<rrodriguez>\u00a0has joined #xwiki  \n16:15\u00a0<sdumitriu>\u00a0has joined #xwiki  \n16:17\u00a0<florinciu>\u00a0has quit  \n16:58\u00a0<@sdumitriu>\u00a0cjdelisle: Found the problem in ConfigurableClass  \n16:58\u00a0<@cjdelisle>\u00a0what did I break?  \n16:59\u00a0<@sdumitriu>\u00a0XAADMINISTRATION-200  \n17:00\u00a0<@cjdelisle>\u00a0Thought that was related to the problem causing millions of tests to fail.  \n17:00\u00a0<sburjan`>\u00a0so this breaks almost all of the ui-tests  \n17:00\u00a0<sburjan`>\u00a0I guess  \n17:00\u00a0<@sdumitriu>\u00a0Committed, look at the changes  \n17:01\u00a0<@sdumitriu>\u00a0This is a neat trick:  \n17:01\u00a0<@sdumitriu>\u00a0- \u00a0#set($hasAccess = $xwiki.hasAccessLevel('edit', $userToCheck, $currentDoc))  \n17:01\u00a0<@sdumitriu>\u00a0+ \u00a0#set ($hasAccess = $util.null)  \n17:01\u00a0<@sdumitriu>\u00a0+ \u00a0#setVariable (\"$hasAccess\" $xwiki.hasAccessLevel('edit', $userToCheck, $currentDoc))  \n17:02\u00a0<@sdumitriu>\u00a0This way you can actually return variables.  \n17:02\u00a0<@sdumitriu>\u00a0Thanks to good old #evaluate  \n17:03\u00a0<jvdrean1>\u00a0has joined #xwiki  \n17:03\u00a0<@cjdelisle>\u00a0What's the difference?  \n17:04\u00a0<@sdumitriu>\u00a0\"$hasAccess\" will print the name of the actual parameter  \n17:04\u00a0<@sdumitriu>\u00a0In this case, it will be \"$documentSavedByAuthorizedUser\"  \n17:04\u00a0<@sdumitriu>\u00a0And #setVariable uses #evaluate to assign the output to that variable  \n17:05\u00a0<jvdrean>\u00a0has quit  \n17:05\u00a0<@cjdelisle>\u00a0hmm  \n17:05\u00a0<@cjdelisle>\u00a0Related to the velocity change?  \n17:05\u00a0<@sdumitriu>\u00a0Yes  \n17:06\u00a0<@cjdelisle>\u00a0- \u00a0#set($outputList = $xwiki.searchDocuments($sql, 0, 0, $params))  \n17:06\u00a0<@cjdelisle>\u00a0+ \u00a0#set(discard = $outputList.addAll($xwiki.searchDocuments($sql, 0, 0, $params)))  \n17:06\u00a0<@cjdelisle>\u00a0#set(discard = '') <-- that works?  \n17:06\u00a0<@sdumitriu>\u00a0Because now #set($hasAccess = $xwiki.hasAccessLevel('edit', $userToCheck, $currentDoc)) will only set $hasAccess, and not $documentSavedByAuthorizedUser  \n17:06\u00a0<@sdumitriu>\u00a0Sheeet!  \n17:06\u00a0<@sdumitriu>\u00a0Thanks  \n17:07\u00a0<@sdumitriu>\u00a0cjdelisle: What do you think about the NoSql databases?  \n17:08\u00a0<@cjdelisle>\u00a0Don't know anything about them other than having heard the name before.  \n17:09\u00a0<@sdumitriu>\u00a0Would you like to learn more by implementing NoSql storage for XWiki?  \n17:09\u00a0<@cjdelisle>\u00a0heh we need a pointer class.  \n17:09\u00a0<@sdumitriu>\u00a0We need good old C++ references  \n17:09\u00a0<@cjdelisle>\u00a0Indeed I broke ConfigurableClass.  \n17:10\u00a0<@sdumitriu>\u00a0Don't worry, my blog application is way worse  \n17:10\u00a0<@sdumitriu>\u00a0But I wrote it before I found out that Velocity will change its behavior  \n17:11\u00a0<@cjdelisle>\u00a0Thanks for fixing. I kind of stood back waiting for the dust to clear, not knowing if the problem was there or lower level.  \n17:11\u00a0<@sdumitriu>\u00a0Good thing  \n17:11\u00a0<@sdumitriu>\u00a0I wrote #setVariable last night, it makes things easier  \n17:11\u00a0<@sdumitriu>\u00a0I was worried that all the blog macros will have to be deprecated :(  \n17:12\u00a0<@cjdelisle>\u00a0Nice patching method. I wouldn't use it for new stuff though.  \n17:12\u00a0<@sdumitriu>\u00a0+1  \n17:13\u00a0<@cjdelisle>\u00a0Re nosql, It looks interesting, unless someone is demanding it, I'd want to do some careful investigation to make sure it's the right horse to back.  \n17:13\u00a0<@sdumitriu>\u00a0I'm not sure this will continue to work in Velocity 2.0, since it uses some undocumented behavior (\"$formal\" ending up as \"$actual\")  \n17:13\u00a0<@sdumitriu>\u00a0Well, it is demanded  \n17:13\u00a0<@sdumitriu>\u00a0Manyfold  \n17:14\u00a0<@sdumitriu>\u00a0manifold  \n17:14\u00a0<@cjdelisle>\u00a0Well TransactionRunnable will make that kind of implementation pretty easy.  \n17:14\u00a0<@sdumitriu>\u00a0Yes, that's why I asked you  \n17:15\u00a0<@cjdelisle>\u00a0Just got done implementing ProvidingTransactionRunnable<R, P>  \n17:15\u00a0<@cjdelisle>\u00a0It's not all beautiful but it will be real easy to use.  \n17:15\u00a0<@cjdelisle>\u00a0re email on the list.  \n17:16\u00a0<@sdumitriu>\u00a0Didn't read that one yet  \n17:16\u00a0<@cjdelisle>\u00a0Denis's reply and my reply to that.  \n17:16\u00a0<@sdumitriu>\u00a0Good thing that Denis is using it  \n17:17\u00a0<@cjdelisle>\u00a0Really good, I hate to get too far on something without hearing real user feedback.  \n17:17\u00a0<@sdumitriu>\u00a0If he comes up with a direct jdbc implementation, it could speed things up a bit  \n17:17\u00a0<@sdumitriu>\u00a0By the way, we need to look at that patch of yout for loading all objects in a few queries  \n17:18\u00a0<@cjdelisle>\u00a0Most definitly. It needs a total refactor, it has no tests etc. But the idea is good.  \n17:18\u00a0<@cjdelisle>\u00a0I'd extend it to load multiple documents at once.  \n17:18\u00a0<vmassol>\u00a0has joined #xwiki  \n17:18\u00a0<@cjdelisle>\u00a0And get it out of XHS.java!!  \n18:10\u00a0<@cjdelisle>\u00a0Reading about nosql, it looks like more a general philosophy than an implementation, is there a perticular implementation you had in mind?  \n18:10\u00a0<lpereira>\u00a0has quit  \n18:11\u00a0<@cjdelisle>\u00a0XWiki on memcached would be awesome.  \n20:59\u00a0<vmassol1>\u00a0has joined #xwiki  \n21:00\u00a0<vmassol>\u00a0has quit  \n21:06\u00a0<vmassol>\u00a0has joined #xwiki  \n21:08\u00a0<vmassol1>\u00a0has quit  \n21:41\u00a0<jbrBridg1>\u00a0has joined #xwiki  \n21:47\u00a0<sdumitriu>\u00a0has quit  \n21:47\u00a0<rrodriguez>\u00a0has quit  \n21:47\u00a0<DrLou>\u00a0has quit  \n21:47\u00a0<jbrBridge>\u00a0has quit  \n21:52\u00a0<sdumitriu>\u00a0has joined #xwiki  \n22:01\u00a0<jvdrean1>\u00a0has quit  \n22:23\u00a0<vmassol>\u00a0has quit  \n22:24\u00a0<mflorea>\u00a0has quit  \n22:52\u00a0<jbrBridg1>\u00a0is now known as <jbrBridge>  \n23:37\u00a0<npm\\_>\u00a0has joined #xwiki  \n23:42\u00a0<npm>\u00a0has quit  \n\n"}