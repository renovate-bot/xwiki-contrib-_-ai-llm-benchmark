{"id": "dev:IRC.xwikiArchive20131024", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20131024", "title": "IRC Archive for channel #xwiki on 24 October 2013 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<abusenius\\_>\u00a0has quit  \n00:56\u00a0<UCC>\u00a0has quit  \n01:07\u00a0<polx>\u00a0has quit  \n01:08\u00a0<j-simard>\u00a0has quit  \n04:30\u00a0<Denis>\u00a0has joined #xwiki  \n05:51\u00a0<Denis>\u00a0has quit  \n07:29\u00a0<mflorea>\u00a0has joined #xwiki  \n07:39\u00a0<polx>\u00a0has joined #xwiki  \n07:46\u00a0<polx>\u00a0has quit  \n07:51\u00a0<polx>\u00a0has joined #xwiki  \n07:56\u00a0<evalica>\u00a0has joined #xwiki  \n07:58\u00a0<evalica1>\u00a0has joined #xwiki  \n07:58\u00a0<evalica>\u00a0has quit  \n07:58\u00a0<evalica1>\u00a0is now known as <evalica>  \n08:05\u00a0<msmeria>\u00a0has joined #xwiki  \n08:21\u00a0<tmortagne>\u00a0has joined #xwiki  \n08:51\u00a0<UCC>\u00a0has joined #xwiki  \n08:57\u00a0<sburjan>\u00a0has joined #xwiki  \n09:01\u00a0<mflorea>\u00a0cjd: ping, do you have a few minutes?  \n09:01\u00a0<cjd>\u00a0what's up?  \n09:02\u00a0<mflorea>\u00a0we have a test failing, http://ci.xwiki.org/job/xwiki-enterprise-test-storage/org.xwiki.enterprise$xwiki-enterprise-test-storage/2786/testReport/  \n09:02\u00a0<polx>\u00a0has quit  \n09:02\u00a0<mflorea>\u00a0for quite some time.. :)  \n09:02\u00a0<mflorea>\u00a0s/ :) / :(  \n09:02\u00a0<mflorea>\u00a0I debugged it locally  \n09:03\u00a0<cjd>\u00a0ok  \n09:03\u00a0<mflorea>\u00a0and it seems a NPE is thrown then an attachment is restored and the filesystem storage is on  \n09:03\u00a0<mflorea>\u00a0the issue is here, just a sec  \n09:03\u00a0<cjd>\u00a0wasn't there a change to that logic recently?  \n09:04\u00a0<mflorea>\u00a0there were some changes to oldcore, but non change to platform-store recently, at least not after 5.2 release  \n09:04\u00a0<mflorea>\u00a0the issue is in DeletedFilesystemAttachment#restoreAttachment at line 161  \n09:04\u00a0<mflorea>\u00a0result.setDoc(context.getWiki().getDocument(this.getDocumentReference(), context));  \n09:05\u00a0<cjd>\u00a0and which entity is null?  \n09:06\u00a0<mflorea>\u00a0this.getDocumentReference() returns null, which causes getDocument to return null which triggers a NPE in setDoc which expects a non null doc  \n09:06\u00a0<cjd>\u00a0ok  \n09:07\u00a0<mflorea>\u00a0so the issue is that the deleted attachment doesn't have the document reference set  \n09:07\u00a0<mflorea>\u00a0but I'm not sure were the document reference should be set  \n09:07\u00a0<cjd>\u00a0that's weird, it doesn't seem like an attachment can make it that far without first being attached to a document  \n09:07\u00a0<mflorea>\u00a0I guess when the attachment is deleted  \n09:07\u00a0<mflorea>\u00a0no  \n09:08\u00a0<mflorea>\u00a0it's not about the attachment object, but about the DeletedFilesystemAttachment object  \n09:08\u00a0<mflorea>\u00a0the later doesn't have the document reference set  \n09:09\u00a0<mflorea>\u00a0so probably we don't set the document reference when we create it, which I suppose happens when we delete the attachment, i.e. when we 'move' the attachment to the recycle bin  \n09:10\u00a0<tmortagne>\u00a0actually when we delete it I guess we are using  \n09:10\u00a0<tmortagne>\u00a0DeletedFilesystemAttachment(final XWikiAttachment attachment, final String deleter, final Date deleteDate)  \n09:11\u00a0<tmortagne>\u00a0I would bet for when generate a DeletedFilesystemAttachment instance for a deleted attachment  \n09:11\u00a0<mflorea>\u00a0ok, then I know the issue  \n09:11\u00a0<mflorea>\u00a0we do only this.setDocName(attachment.getDoc().getFullName());  \n09:11\u00a0<mflorea>\u00a0so we set only the doc name not the reference  \n09:12\u00a0<mflorea>\u00a0in DeletedFilesystemAttachment constructor  \n09:12\u00a0<mflorea>\u00a0set/getDocumentReference was probably added later  \n09:12\u00a0<tmortagne>\u00a0setDocName should probably also set the reference (and also probably be deprecated)  \n09:12\u00a0<cjd>\u00a0why it worked before is possibly as important as why it doesn't work now  \n09:12\u00a0<mflorea>\u00a0yes  \n09:13\u00a0<tmortagne>\u00a0cjd: I guess we did not realy care about the document reference before  \n09:13\u00a0<cjd>\u00a0public class DeletedFilesystemAttachment extends DeletedAttachment \u00a0<-- this looks like a likely cause of problems, extending something which is then changed  \n09:13\u00a0<tmortagne>\u00a0and then it's set in the XWikiAttachment when it's put in the XWikiDocument  \n09:13\u00a0<mflorea>\u00a0brb  \n09:14\u00a0<cjd>\u00a0result.setDoc(context.getWiki().getDocument(this.getDocumentReference(), context)); \u00a0<-- my code expects getDocumentReference() to return something  \n09:14\u00a0<tmortagne>\u00a0it's also possible that some old code that was using document name was moved to document reference  \n09:14\u00a0<cjd>\u00a0this.docReference = attachment.getDoc().getDocumentReference(); \u00a0<-- in the constructor my code sets the document ref  \n09:16\u00a0<tmortagne>\u00a0that's when you delete an attachment  \n09:16\u00a0<tmortagne>\u00a0but I don't think that's the issue here  \n09:16\u00a0<tmortagne>\u00a0IMO we are working with a DeletedFilesystemAttachment that has been created from the filesystem  \n09:17\u00a0<tmortagne>\u00a0since we are restoring it  \n09:20\u00a0<tmortagne>\u00a0MutableDeletedFilesystemAttachment#getImmutable() does not set the document reference, that may we were we loose it  \n09:21\u00a0<tmortagne>\u00a0called when getting the deleted attachment from FS in FilesystemAttachmentRecycleBinStore#deletedAttachmentFromProvider  \n09:23\u00a0<tmortagne>\u00a0anyway I'm very surprised there is both a docName and a docReference in a DeletedFilesystemAttachment that can be out of sync  \n09:23\u00a0<tmortagne>\u00a0we should only have one and deduce the other  \n09:23\u00a0<cjd>\u00a0hmm  \n09:24\u00a0<cjd>\u00a0still trying to figure out how it ever worked  \n09:30\u00a0<tmortagne>\u00a0last commit in that module is 3 month old so it's something outside that changed  \n09:30\u00a0<cjd>\u00a0yup  \n09:30\u00a0<cjd>\u00a0that's why I was suspecting the extending of other classes  \n09:31\u00a0<tmortagne>\u00a0but I don't see how we could restore an attachment without going through getImmutable()  \n09:31\u00a0<tmortagne>\u00a0which is the one that loose the reference  \n09:32\u00a0<tmortagne>\u00a0last commit in DeletedAttachment is even older  \n09:32\u00a0<cjd>\u00a0ahh cool  \n09:32\u00a0<cjd>\u00a0thanks  \n09:32\u00a0<cjd>\u00a0I'm just tracing the execution path trying to understand how it used to work  \n09:32\u00a0<tmortagne>\u00a0and anyway DeletedAttachment does not have any support of document reference  \n09:33\u00a0<tmortagne>\u00a0this reference is handled by DeletedFilesystemAttachment  \n09:34\u00a0<UCC>\u00a0has quit  \n09:36\u00a0<Denis>\u00a0has joined #xwiki  \n09:55\u00a0<mflorea>\u00a0the only related issue that was recently closed, for 5.3M1, is http://jira.xwiki.org/browse/XWIKI-7947 . In any case, I'm going to deprecate get/setDocName and set the document reference from setDocName.  \n09:56\u00a0<cjd>\u00a0awesome  \n10:22\u00a0<sburjan>\u00a0vmassol: Hello. What can I do so I have a picture and a link on http://dev.xwiki.org/xwiki/bin/view/Community/HallOfFame  \n10:26\u00a0<sburjan>\u00a0also, the stat from contrib is surely wrong, because I am listed with only 1 commit, but I did several actually  \n10:26\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n10:42\u00a0<tmortagne>\u00a0sburjan: I think the photo comes from github  \n10:43\u00a0<tmortagne>\u00a0also note that the stats are only the last 365 days  \n10:44\u00a0<sburjan>\u00a0well I released 3 applications in the past 365 days  \n10:45\u00a0<sburjan>\u00a0I can't have only one commit on contrib :)  \n10:46\u00a0<tmortagne>\u00a0releasing does not add new commits on master, if you really did other commits then I guess xwiki-contrib stats does not look at all projects  \n10:47\u00a0<tmortagne>\u00a0actually it depends what you release  \n10:47\u00a0<tmortagne>\u00a0but it's also possible Vincent filter maven release plugin commits anyway  \n10:48\u00a0<tmortagne>\u00a0you can check http://dev.xwiki.org/xwiki/bin/view/Community/HallOfFameFull for the full time  \n10:49\u00a0<gdelhumeau>\u00a0I have made un update on: https://github.com/xwiki/xwiki-commons/pull/4  \n10:49\u00a0<tmortagne>\u00a0sburjan: you still have only 1 on http://dev.xwiki.org/xwiki/bin/view/Community/HallOfFameFull so I guess there is a bug indeed  \n10:50\u00a0<tmortagne>\u00a0maybe vmassol configured it so that he appear first ;)  \n10:51\u00a0<sburjan>\u00a0tmortagne: I also comitted: test app, task app  \n10:51\u00a0<sburjan>\u00a0so there are commits, not just releases  \n10:52\u00a0<tmortagne>\u00a0sburjan: again as I said there is definitely a bug since a lot of people are missing commits on http://dev.xwiki.org/xwiki/bin/view/Community/HallOfFameFull anyway  \n10:52\u00a0<sburjan>\u00a0ah ok :)  \n10:52\u00a0<tmortagne>\u00a0look at all the people in red  \n10:53\u00a0<tmortagne>\u00a0sburjan: you should probably report a bug in INFRA  \n10:55\u00a0<sburjan>\u00a0reporting now  \n10:59\u00a0<jack\\_\\_\\_>\u00a0has joined #xwiki  \n11:01\u00a0<sburjan>\u00a0http://jira.xwiki.org/browse/GITHUBSTAT-10  \n11:08\u00a0<jack\\_\\_\\_>\u00a0Hi guys, I'm running xwiki enterprise 3.3 with mysql and attachments stored in the filesystem, I'd like to migrate it on a new server and to update it to version 5.2. I made a xar of my xwiki contents, I'm going to install the 5.2 war, copy the attachment data and import my xar. Would that work? Any advice is welcome, thank you in advance  \n11:10\u00a0<sburjan>\u00a0Hello jack\\_\\_\\_. We have a Migration Guide here: http://platform.xwiki.org/xwiki/bin/view/AdminGuide/Upgrade .  \n11:11\u00a0<sburjan>\u00a0jack\\_\\_\\_, the idea is that you should not export your data and then re-import it in the new version. You should only set the new war to use the same database  \n11:12\u00a0<jack\\_\\_\\_>\u00a0thanks +sburjan, the thing is that I'm also moving to a new server..  \n11:12\u00a0<sburjan>\u00a0and make sure you properly keep your old settings, like FS Attachments enabled, and other settings you made  \n11:13\u00a0<sburjan>\u00a0if you are moving to a new server, I don't know the best strategy. You have to manually move the filesystem attachments. But about the documents, I don't know if a database dump is better than exporting the documents in XAR format like you're doing now. Maybe tmortagne can tell you better  \n11:13\u00a0<jack\\_\\_\\_>\u00a0ok, and should I upgrade gradually or the latest war (5.2) would just work fine?  \n11:14\u00a0<tmortagne>\u00a0the XAR does not contain everything from the database so the safest is a database dump or even simply copy the mysql files directly (when it's stopped) if you keep the exact same version of MySQL  \n11:15\u00a0<tmortagne>\u00a0(for example you don't have the statistics or the activity stream in the XAR)  \n11:16\u00a0<jack\\_\\_\\_>\u00a0I see.. thanks  \n11:17\u00a0<jack\\_\\_\\_>\u00a0I'll make an exact copy, I'll make it run on the new server  \n11:17\u00a0<tmortagne>\u00a0and as sburjan said don't forget to also copy the data dir  \n11:18\u00a0<jack\\_\\_\\_>\u00a0sure, thanks for your time and for your product ;)  \n11:18\u00a0<tmortagne>\u00a0you\u2019re welcome  \n11:21\u00a0<gdelhumeau>\u00a0I have also updated https://github.com/xwiki/xwiki-platform/pull/189 for the BFD  \n11:24\u00a0<tmortagne>\u00a0gdelhumeau: https://github.com/xwiki/xwiki-commons/pull/4 changes deserve there own jira issue on commons, it's a lot more generic than activity stream  \n11:25\u00a0<tmortagne>\u00a0as a general rule it's not very nice to commit things on commons with a platform jira issue id  \n11:26\u00a0<mflorea>\u00a0cjd, tmortagne: I'm afraid the issue with attachment rollback on filesystem store is more complex.. The problem is that the DeletedAttachmentMetadataSerializer saves on the file system only the deleter, the delete date and the XWikiAttachment object, which when serialized by AttachmentMetadataSerializer outputs only the file name, size, author, version, comment and date.  \n11:27\u00a0<mflorea>\u00a0so as you can see the document reference is not saved anywhere  \n11:27\u00a0<mflorea>\u00a0I mean the reference to the document that holds the attachment  \n11:28\u00a0<tmortagne>\u00a0but we must know the document from which we are restoring this attachment. how do we find it in the first place ?  \n11:28\u00a0<mflorea>\u00a0let me see  \n11:29\u00a0<tmortagne>\u00a0and I guess you can use the current wiki to resolve the complete reference from the docname anyway  \n11:29\u00a0<tmortagne>\u00a0I doubt we are restoring an attachment with a different with in the context  \n11:29\u00a0<mflorea>\u00a0I don't have docname  \n11:29\u00a0<mflorea>\u00a0it's not saved as attachment metadata  \n11:29\u00a0<tmortagne>\u00a0ok  \n11:30\u00a0<tmortagne>\u00a0but anyway the code that restore that attachment must know the document  \n11:30\u00a0<mflorea>\u00a0yes, let me check tat  \n11:30\u00a0<mflorea>\u00a0that  \n11:32\u00a0<tmortagne>\u00a0like FilesystemAttachmentRecycleBinStore#restoreFromRecycleBin  \n11:32\u00a0<cjd>\u00a0I was working on tracing that down, between emails and other pings ;)  \n11:32\u00a0<mflorea>\u00a0no, it's in getAllDeletedAttachments, at least that's what XWiki#rollback calls before storing the attachments  \n11:33\u00a0<tmortagne>\u00a0yes but restoreFromRecycleBin probably have the same issue  \n11:34\u00a0<cjd>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Everything cannot be placed into an ordered map because it is conceivable that 2 attachments  \n11:34\u00a0<cjd>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// would be deleted in the same millisecond and that would cause them to be merged.  \n11:34\u00a0<tmortagne>\u00a0anything that calls getDeletedAttachment basically  \n11:34\u00a0<tmortagne>\u00a0problem is that getDeletedAttachment can be called directly  \n11:35\u00a0<tmortagne>\u00a0and in that case it does not really know the document  \n11:36\u00a0<tmortagne>\u00a0wondering if HibernateAttachmentRecycleBinStore#getDeletedAttachment return a DeletedAttachment that countains a document name  \n11:37\u00a0<tmortagne>\u00a0yep looks like it  \n11:37\u00a0<tmortagne>\u00a0since the xwikiattrecyclebin containg the doc name  \n11:37\u00a0<tmortagne>\u00a0sounds like the only way around it is to store the docname in FS recycle bin too  \n11:37\u00a0<mflorea>\u00a0we should probably pass a XWikiDocument parameter to deletedAttachmentFromProvider(DeletedAttachmentFileProvider) but indeed, getDeletedAttachment won't know how to get this document  \n11:38\u00a0<tmortagne>\u00a0since that's how HibernateAttachmentRecycleBinStore works  \n11:38\u00a0<cjd>\u00a0or always associate an attachment with a document before undeleting it  \n11:39\u00a0<tmortagne>\u00a0cjd: I don't understand  \n11:39\u00a0<mflorea>\u00a0cjd, sure, but the issue is that getDeletedAttachment can be called separately and it doesn't know the document  \n11:39\u00a0<tmortagne>\u00a0getDeletedAttachment only have the attachment index and no doc associated with it, that's our situation here  \n11:39\u00a0<mflorea>\u00a0yep  \n11:40\u00a0<tmortagne>\u00a0so the only way to make it work if to have the doc name stored in the recycle bin like we store it in the database recycle bin  \n11:40\u00a0<mflorea>\u00a0now, is getDeletedAttachment really called?  \n11:40\u00a0<tmortagne>\u00a0i.e. applying the same logic  \n11:40\u00a0<cjd>\u00a0but if you do call getDeletedAttachment() then you have to associate it with a document or else undefined behavior results  \n11:40\u00a0<cjd>\u00a0IE: expect it of the caller  \n11:40\u00a0<cjd>\u00a0it's internal  \n11:40\u00a0<tmortagne>\u00a0if you call DeletedAttachment you expect a proper DeletedAttachment  \n11:40\u00a0<tmortagne>\u00a0no it's not  \n11:40\u00a0<tmortagne>\u00a0it's a public method  \n11:40\u00a0<mflorea>\u00a0yep, public  \n11:40\u00a0<tmortagne>\u00a0it's part of AttachmentRecycleBinStore  \n11:41\u00a0<tmortagne>\u00a0so this method have to work anyway  \n11:41\u00a0<tmortagne>\u00a0and when it works the other won't have the document reference issue either since they it it internally  \n11:41\u00a0<tmortagne>\u00a0s/it it/use it/  \n11:41\u00a0<cjd>\u00a0well that's a bit of a political matter, I mean everything is public but it's not exposed to non-pr script  \n11:42\u00a0<cjd>\u00a0and groovy can access private methods so we can't make any guarantees to it at all  \n11:42\u00a0<tmortagne>\u00a0it's in an interface  \n11:42\u00a0<cjd>\u00a0not that I have strong feelings about it  \n11:42\u00a0<tmortagne>\u00a0it's not just happen to be a public method in the implementation  \n11:42\u00a0<tmortagne>\u00a0so it's clearly supposed to work  \n11:42\u00a0<mflorea>\u00a0now, even if we add the docname now, the problem is that the attachments that are already in the recycle bin will trigger an exception  \n11:43\u00a0<gdelhumeau>\u00a0is XCOMMONS-483 a good description?  \n11:43\u00a0<tmortagne>\u00a0gdelhumeau: sounds good  \n11:43\u00a0<mflorea>\u00a0when the user will try to rollback such a document after a 5.3+ upgrade  \n11:43\u00a0<cjd>\u00a0I do recall why I avoided storing the reference, it's because I felt that if a document contains a reference to it's attachments, the attachments should not contain back references  \n11:43\u00a0<gdelhumeau>\u00a0tmortagne: thx  \n11:44\u00a0<cjd>\u00a0IE: circular references are generally a path to pain and misery  \n11:44\u00a0<tmortagne>\u00a0mflorea: either we do some bulletproofing in other methods that know he document or we execute some migration  \n11:46\u00a0<tmortagne>\u00a0cjd: there is no way to find the document from where the attachment is stored ?  \n11:46\u00a0<mflorea>\u00a0let me see where getDeletedAttachment is called, to check is the document is set  \n11:46\u00a0<tmortagne>\u00a0like parent folder or something ? (don't really know the format)  \n11:46\u00a0<cjd>\u00a0tmortagne: yes  \n11:46\u00a0<cjd>\u00a0I'm looking at that now  \n11:46\u00a0<tmortagne>\u00a0that could be our way around it  \n11:47\u00a0<cjd>\u00a0Actually I think the best ways to solve this is to get rid of the function which takes the \"index\" (database ID) and replace it with something more sane.  \n11:48\u00a0<cjd>\u00a0\\*cleanest  \n11:48\u00a0<cjd>\u00a0but I'm well aware that the cleanest solution is usually too time consuming  \n11:52\u00a0<tmortagne>\u00a0it's not a time issue, you are talking about an API  \n11:55\u00a0<mflorea>\u00a0the quick fix would go in FilesystemAttachmentRecycleBinStore#deletedAttachmentFromProvider(DeletedAttachmentFileProvider). There we have the File that holds the metadata so maybe we can extract the document from the file path as tmortagne said  \n11:55\u00a0<tmortagne>\u00a0mflorea: yep that's what I asked cjd about  \n11:56\u00a0<cjd>\u00a0I'm looking for the conversion to see if it's 1 way  \n11:56\u00a0<mflorea>\u00a0let me check how the file path looks like  \n11:56\u00a0<tmortagne>\u00a0cjd: you use URL encoder IIRW  \n11:56\u00a0<cjd>\u00a0That rings a vague bell  \n11:56\u00a0<cjd>\u00a0which is good  \n11:57\u00a0<tmortagne>\u00a0but there is also a special treatment for things that URL encoder does not encode and that are not supported in some FS  \n11:57\u00a0<tmortagne>\u00a0but I guess it's encoded the same way  \n11:57\u00a0<mflorea>\u00a0data/storage/xwiki/Sandbox/FF6/~this/deleted-attachments/interview-plan.txt-1382605997952/~DELETED\\_ATTACH\\_METADATA.xml  \n11:59\u00a0<msmeria>\u00a0has quit  \n11:59\u00a0<cjd>\u00a0inal EntityReferenceSerializer<String> pathSerializer)  \n12:00\u00a0<cjd>\u00a0it lets that do the job  \n12:13\u00a0<mflorea>\u00a0has quit  \n12:45\u00a0<vmassol>\u00a0FTR the hall of fame is now broken for xwiki-contrib  \n12:46\u00a0<vmassol>\u00a0I was missing some repos which is now fixed but the problem is that there's a NPE in gitective for one of the repo when it walks the revisions\u2026.  \n12:46\u00a0<vmassol>\u00a0I can't do much except finding which repo is causing the problem and excluding it  \n12:46\u00a0<vmassol>\u00a0I'm trying to find the repo now  \n12:52\u00a0<vmassol>\u00a0ok found 3 repos which give errors  \n12:58\u00a0<vmassol>\u00a0ah I know  \n12:58\u00a0<vmassol>\u00a0:)  \n12:58\u00a0<vmassol>\u00a0it's empty repos!  \n12:58\u00a0<vmassol>\u00a0fixing  \n13:07\u00a0<vmassol>\u00a0sburjan: fixed, see http://dev.xwiki.org/xwiki/bin/view/Community/HallOfFame  \n13:08\u00a0<vmassol>\u00a0sburjan: also http://jira.xwiki.org/browse/GITHUBSTAT-11  \n13:14\u00a0<mflorea>\u00a0has joined #xwiki  \n13:16\u00a0<sburjan>\u00a0vmassol: looks better now. One thing: Any idea why I don't have an image and a link on the Source Contributors section ?  \n13:17\u00a0<vmassol>\u00a0sburjan: read my message to you above :)  \n13:17\u00a0<sburjan>\u00a0sorry :)  \n13:18\u00a0<bouquetf>\u00a0has quit  \n13:20\u00a0<bouquetf>\u00a0has joined #xwiki  \n13:27\u00a0<vmassol>\u00a0sburjan: fyi I'm on holidays till the end of the week ;)  \n14:06\u00a0<sburjan>\u00a0tmortagne: ping.  \n14:08\u00a0<tmortagne>\u00a0sburjan: yes ?  \n14:09\u00a0<sburjan>\u00a0tmortagne: i remember telling you that when migrating a wiki using DW I got a lot of merge conflicts, where the only diff erence was the Document Author. And you told me that Document Author should not generate a merge conflict, and that there are other modifications whih the diff does not see.  \n14:09\u00a0<tmortagne>\u00a0sburjan: the author does not generate a conflict for sure  \n14:10\u00a0<tmortagne>\u00a0if it was you could get a conflict for every document when you upgrade  \n14:10\u00a0<sburjan>\u00a0yes, this is what you said. Yet I had a lot of conflicts and the UI only showed this difference.  \n14:10\u00a0<sburjan>\u00a0any idea how could I reproduce it in order to make a JIRA issue ?  \n14:10\u00a0<tmortagne>\u00a0sburjan: again don't forget that the diff you see by default is the diff between the current version and the suggested version  \n14:11\u00a0<tmortagne>\u00a0and when there is a conflict the priority goes to current  \n14:11\u00a0<tmortagne>\u00a0which I told you last time too  \n14:11\u00a0<tmortagne>\u00a0make you you try other diffs  \n14:11\u00a0<sburjan>\u00a0so by comparing previous with new, previous with merged, current with merged, etc.. I should spot other differences ?  \n14:11\u00a0<tmortagne>\u00a0the diff you see is not the list of conflicts  \n14:12\u00a0<tmortagne>\u00a0it's the what is going to be done if you click continue  \n14:12\u00a0<sburjan>\u00a0hmm....  \n14:14\u00a0<sburjan>\u00a0I'll try to reproduce and check other comparations  \n14:14\u00a0<sburjan>\u00a0see if I have something comparing other options  \n14:17\u00a0<sburjan>\u00a0but this is not very intuitive for end-users  \n14:17\u00a0<sburjan>\u00a0that's why I got confused  \n14:32\u00a0<evalica>\u00a0has quit  \n14:42\u00a0<evalica>\u00a0has joined #xwiki  \n14:43\u00a0<evalica1>\u00a0has joined #xwiki  \n14:43\u00a0<evalica>\u00a0has quit  \n14:45\u00a0<kstuart>\u00a0has quit  \n14:49\u00a0<cjd>\u00a0has quit  \n14:52\u00a0<kstuart>\u00a0has joined #xwiki  \n14:53\u00a0<cjd>\u00a0has joined #xwiki  \n14:59\u00a0<evalica1>\u00a0has quit  \n15:00\u00a0<evalica>\u00a0has joined #xwiki  \n15:01\u00a0<evalica>\u00a0has quit  \n15:10\u00a0<kstuart>\u00a0has quit  \n15:13\u00a0<kstuart>\u00a0has joined #xwiki  \n15:21\u00a0<UCC>\u00a0has joined #xwiki  \n16:00\u00a0<kstuart>\u00a0has quit  \n16:03\u00a0<kstuart>\u00a0has joined #xwiki  \n16:06\u00a0<UCC>\u00a0has quit  \n16:07\u00a0<kstuart>\u00a0has quit  \n16:08\u00a0<UCC>\u00a0has joined #xwiki  \n16:09\u00a0<kstuart>\u00a0has joined #xwiki  \n16:25\u00a0<xwikibot>\u00a0has joined #xwiki  \n16:30\u00a0<UCC>\u00a0has quit  \n16:40\u00a0<cjd>\u00a0vmassol: can you tell me what this is? protected abstract String getDefaultValue(EntityType type, Object... parameters);  \n16:41\u00a0<tmortagne>\u00a0cjd: your resolver is asked for the name of the passed entity type  \n16:41\u00a0<cjd>\u00a0oh so like \"string\" ?  \n16:41\u00a0<tmortagne>\u00a0it's \"default\" in the sense that it's not in the passed reference  \n16:42\u00a0<tmortagne>\u00a0for example if \"default\" resolver is asked for EntityType.WIKI it will return \"xwiki\"  \n16:42\u00a0<cjd>\u00a0ok  \n16:42\u00a0<cjd>\u00a0but that would be the same no matter what type of resolver you're using  \n16:43\u00a0<cjd>\u00a0because it always defaults to xwiki:Main.WebHome  \n16:43\u00a0<tmortagne>\u00a0no  \n16:43\u00a0<tmortagne>\u00a0it's not the default default  \n16:44\u00a0<tmortagne>\u00a0it's the \"what you should put if it's not part of the reference\"  \n16:44\u00a0<tmortagne>\u00a0in \"current\" resolver the answer will be whatever is the current wiki  \n16:44\u00a0<cjd>\u00a0ok  \n16:44\u00a0<cjd>\u00a0so in the case of a resolver which demands absolute references only?  \n16:45\u00a0<tmortagne>\u00a0see ExplicitStringEntityReferenceResolver  \n16:45\u00a0<tmortagne>\u00a0org.xwiki.model.internal.reference.ExplicitStringEntityReferenceResolver  \n16:46\u00a0<cjd>\u00a0ahh thanks  \n16:52\u00a0<sburjan>\u00a0has quit  \n17:45\u00a0<Denis>\u00a0has quit  \n17:55\u00a0<jack\\_\\_\\_>\u00a0has quit  \n18:22\u00a0<vmassol>\u00a0tmortagne: isn't this supposed to work: https://gist.github.com/vmassol/7140274 ?  \n18:22\u00a0<tmortagne>\u00a0not with def  \n18:22\u00a0<tmortagne>\u00a0def declare local variable  \n18:22\u00a0<tmortagne>\u00a0remove it to have a global one  \n18:22\u00a0<vmassol>\u00a0ah ok, didn't know that  \n18:23\u00a0<vmassol>\u00a0thanks  \n18:23\u00a0<tmortagne>\u00a0the case that is still missing is defining a variable in velocity and use it in another script syntax  \n18:24\u00a0<tmortagne>\u00a0but the opposite works  \n18:34\u00a0<tmortagne>\u00a0has quit  \n18:47\u00a0<vmassol1>\u00a0has joined #xwiki  \n18:50\u00a0<vmassol>\u00a0has quit  \n19:05\u00a0<mflorea>\u00a0has quit  \n19:20\u00a0<gdelhumeau>\u00a0has quit  \n20:15\u00a0<abusenius\\_>\u00a0has joined #xwiki  \n23:02\u00a0<vmassol1>\u00a0has quit\n"}