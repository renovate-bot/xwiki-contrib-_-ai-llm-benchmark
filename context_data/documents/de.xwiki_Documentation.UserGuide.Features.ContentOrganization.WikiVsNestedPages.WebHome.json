{
  "id": "xwiki:Documentation.UserGuide.Features.ContentOrganization.WikiVsNestedPages.WebHome",
  "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/ContentOrganization/WikiVsNestedPages/",
  "title": "Wiki vs Nested Pages",
  "collection": "Eval_de",
  "mimetype": "text/markdown",
  "language": "de",
  "content": "XWiki 7.2 hat das Konzept der Verschachtelten Bereiche eingeführt. Mit diesem neuen Konzept ist es legitim, sich zu fragen, was die Unterschiede zwischen der Verwendung eines (Sub)Wikis und der Verwendung von Verschachtelten Seiten sind.\n\n# Zusammenfassung\n\nEs gibt 2 Hauptanwendungsfälle, in denen Sie ein Wiki anstelle von Verschachtelten Seiten verwenden würden:\n\n* Sie möchten benutzerdefinierte Anwendungen/Erweiterungen für eine Gruppe von Benutzern Ihres Wikis bereitstellen\n* Sie möchten eine XWiki-Farm implementieren, bei der jedes Wiki als Insel betrachtet wird (eigene Benutzer usw.)\n\n# Funktionen\n\n| Funktion | Unterstützt von Wiki? | Unterstützt von Verschachtelten Seiten? | Anmerkungen/Ideen |\n| --- | --- | --- | --- |\n| Benutzerdefiniertes Skin/Farbthema/Icon-Thema festlegen | akzeptieren | akzeptieren |  |\n| Benutzerdefinierte Panels festlegen | akzeptieren | akzeptieren |  |\n| Delegierte Administration/Rechteverwaltung | akzeptieren | akzeptieren\\* | In 7.2 kann ein Admin entscheiden, dass ein solcher Benutzer oder eine Gruppe Admin-Rechte auf einer Seite und deren Unterseiten hat. [\\*] Es ist viel schwieriger, die Rechte für einen Farm-Modus bei Verwendung von Verschachtelten Seiten zu implementieren als bei Verwendung eines Wikis, aber es ist möglich. |\n| Dedizierte Benutzer und Gruppen | akzeptieren | abbrechen | Bietet Isolation, sowohl in Bezug auf Sichtbarkeit als auch Sicherheit. |\n| Begriff des Eigentümers | akzeptieren | abbrechen | Der Eigentümer hat alle Berechtigungen in einem Wiki |\n| Möglichkeit, JAR-Erweiterungen zu installieren | akzeptieren | abbrechen | Derzeit können Sie beim Installieren mit der EM-Benutzeroberfläche nicht entscheiden, eine Erweiterung nur für eine Verschachtelte Seite zu installieren, obwohl dies im Kern unterstützt wird. |\n| Möglichkeit, Anwendungen/Flavors zu installieren | akzeptieren | abbrechen | Derzeit ist es beim Importieren oder Verwenden der EM-Benutzeroberfläche zum Installieren einer Anwendung (XAR) nicht möglich, diese unter einer bestimmten Verschachtelten Seite zu verankern (d. h. sie relativ zu einer Verschachtelten Seite zu installieren). Es ist auch nicht möglich, einen Flavor in einer Verschachtelten Seite zu installieren. |\n| Möglichkeit, einen dedizierten Domainnamen/Saubere URL-Schema und Breadcrumb zu haben | akzeptieren | fehler\\* | [\\*] Möglich, aber mit etwas Konfiguration: Apache-Level-Konfiguration oder URLRewriteFilter-Konfiguration |\n| Möglichkeit, die Datenbank einfach zu warten | akzeptieren | abbrechen | Subwiki verwenden unterschiedliche Schemata, was es sehr einfach macht, pro Wiki zu warten (z. B. für Farm-Anwendungsfälle). Datenbanksicherungen und -wiederherstellungen können pro Wiki durchgeführt werden. Ein Wiki kann unabhängig auf einen anderen Server verschoben werden (einige Links können unterbrochen sein, hängt von der Nutzung ab), was eine Lösung für Skalierbarkeitsprobleme bietet. Erweiterungen können spezielle Tabellen im Schema eines bestimmten Wikis erstellen (erfordert dennoch einige manuelle Konfiguration). Schemata können auch für spezifische Zwecke wie benutzerdefinierte Zuordnungen optimiert werden. |\n| Möglichkeit, Daten einfach über Instanzen hinweg abzufragen | abbrechen\\* | akzeptieren | [\\*] Da Wikis in unabhängigen Schemata gespeichert werden, können Sie keine einzelne DB-Abfrage über mehrere Schemata ausführen. Sie können jedoch Inhalte mit der Solr-Syntax des Query Managers abfragen, die über Schemata hinweg funktioniert. Verschachtelte Seiten befinden sich hingegen innerhalb desselben Wikis, also innerhalb desselben Schemas; es ist möglich, Daten, die in mehreren Verschachtelten Seiten gespeichert sind, mit einer einzigen Datenbankabfrage abzudecken. Zum Beispiel ist es nicht einfach, Daten aus verschiedenen Wikis in einer LiveTable anzuzeigen, und erfordert das Schreiben von benutzerdefiniertem JSON. |\n| Möglichkeit, in mehreren Instanzen zu suchen | akzeptieren | akzeptieren | Solr indexiert Daten unabhängig von der Datenbankspeicherung, sodass die Suche sowohl in Wikis als auch in Verschachtelten Seiten funktioniert. |\n| Möglichkeit, basierend auf einer Vorlage mit mehreren Seiten zu erstellen | akzeptieren | abbrechen | Seitenschablonen sind derzeit nur eine einzelne Seite. |\n| Erstellung/Löschung von Wiki oder Verschachtelter Seite | akzeptieren\\* | akzeptieren | [\\*] Das Löschen einer Verschachtelten Seite warnt vor unterbrochenen Links, was beim Löschen eines Wikis nicht der Fall ist. Außerdem können Sie ein gelöschtes Wiki nicht zurücksetzen, sodass Sie Ihre Daten verloren haben, es sei denn, Sie haben ein Backup. Sie können eine gelöschte Seite auch nicht mit einem einzigen Klick aus der Benutzeroberfläche wiederherstellen, aber zumindest können Sie jede untergeordnete Seite unter einer Verschachtelten Seite aus der Benutzeroberfläche wiederherstellen oder ein Skript verwenden. Mit anderen Worten, es gibt keinen Papierkorb für Wikis. |\n| Umbenennung von Wiki oder Seite | abbrechen | akzeptieren | Seitenumbenennung aktualisiert Backlinks automatisch |\n| Benutzer einladen | akzeptieren | abbrechen | Sie können keine Benutzer nur für eine Seite einladen |\n| Implementierung eines \"Spielplatzes\" | akzeptieren | abbrechen | Verschachtelte Seiten teilen die XClasses. Wenn Sie eine XClass (z. B. XWiki.JavaScriptExtension) ändern, wirken sich die Änderungen auf alle Seiten aus, die sie verwenden. Wikis müssen die XClasses duplizieren, aber das bedeutet, dass die Änderungen isoliert sind. Folglich ist es viel schwieriger (wenn nicht unmöglich), einen \"Spielplatz\" mit einer Verschachtelten Seite zu implementieren als mit einem Wiki. |\n| Einfachheit der Upgrades | abbrechen | akzeptieren | Schwieriger, XWiki zu aktualisieren: Jedes Wiki muss einzeln aktualisiert werden, auch wenn es nur 1 Klick in der Benutzeroberfläche ist. Außerdem ist es langsamer, mehrere Wikis zu aktualisieren (z. B. bei der Durchführung von Datenbankmigrationen, da jedes Wiki eine Datenbank ist). |"
}