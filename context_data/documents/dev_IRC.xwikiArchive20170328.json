{"id": "dev:IRC.xwikiArchive20170328", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20170328", "title": "IRC Archive for channel #xwiki on 28 March 2017 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<keithy\\_>\u00a0has joined #xwiki  \n01:30\u00a0<keithy>\u00a0has joined #xwiki  \n01:30\u00a0<keithy\\_>\u00a0has quit  \n05:15\u00a0<edvorg>\u00a0has joined #xwiki  \n05:16\u00a0<edvorg>\u00a0has quit  \n05:17\u00a0<edvorg>\u00a0has joined #xwiki  \n05:56\u00a0<blackglade>\u00a0has joined #xwiki  \n06:45\u00a0<blackglade>\u00a0has quit  \n07:46\u00a0<msmeria>\u00a0has joined #xwiki  \n07:48\u00a0<msmeria1>\u00a0has joined #xwiki  \n07:51\u00a0<msmeria>\u00a0has quit  \n08:27\u00a0<msmeria>\u00a0has joined #xwiki  \n08:28\u00a0<msmeria1>\u00a0has quit  \n08:32\u00a0<edvorg>\u00a0has quit  \n08:49\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n08:56\u00a0<msmeria1>\u00a0has joined #xwiki  \n08:59\u00a0<msmeria>\u00a0has quit  \n09:09\u00a0<msmeria>\u00a0has joined #xwiki  \n09:11\u00a0<msmeria1>\u00a0has quit  \n10:04\u00a0<evalica>\u00a0has joined #xwiki  \n10:06\u00a0<mflorea>\u00a0has joined #xwiki  \n10:33\u00a0<vmassol>\u00a0cool release in progress :) Hi everyone  \n10:34\u00a0<vmassol>\u00a0FYI I'm going to try debugging quickly https://jira.xwiki.org/browse/XWIKI-14126 to see what's the root issue  \n10:51\u00a0<vmassol>\u00a0gdelhumeau: seems there's a new blocker https://jira.xwiki.org/browse/XWIKI-14128 but I guess we'll fix it for 9.3RC1  \n10:51\u00a0<vmassol>\u00a0we'll just need to indicate it on the RN page  \n10:52\u00a0<vmassol>\u00a0ah no  \n10:52\u00a0<vmassol>\u00a0marius closed it  \n10:52\u00a0<vmassol>\u00a0forget it  \n10:52\u00a0<vmassol>\u00a0cool :)  \n11:09\u00a0<acotiuga>\u00a0has joined #xwiki  \n11:10\u00a0<Slashman>\u00a0has joined #xwiki  \n11:32\u00a0<vmassol>\u00a0@all: I'd like your agreement about https://jira.xwiki.org/browse/XWIKI-14126?focusedCommentId=94473&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-94473 before proceeding  \n11:32\u00a0<vmassol>\u00a0do you see any problem?  \n11:34\u00a0<tmortagne>\u00a0vmassol: it will break every script that followed http://extensions.xwiki.org/xwiki/bin/view/Extension/Query+Module#HFindingpagesundernestedpages no ?  \n11:35\u00a0<vmassol>\u00a0I need to verify this indeed  \n11:35\u00a0<vmassol>\u00a0but at worse we can fix those, there aren't that many  \n11:35\u00a0<tmortagne>\u00a0which includes various parts of XE  \n11:35\u00a0<vmassol>\u00a0I know 3 places  \n11:35\u00a0<vmassol>\u00a0at this point I'm more concerned by all the places that don't handle it  \n11:35\u00a0<tmortagne>\u00a0that's quite a big API change  \n11:36\u00a0<vmassol>\u00a0if we make it optional with a new XWQL escape api then we cannot guarantee its usage  \n11:36\u00a0<vmassol>\u00a0if we add a new bindValue API we cannot also guarantee its usage  \n11:36\u00a0<vmassol>\u00a0I don't see an option right now  \n11:36\u00a0<tmortagne>\u00a0sure but anyone who have been careful to properly escape the String will end up broken with this change  \n11:37\u00a0<vmassol>\u00a0I could maybe include a protection  \n11:37\u00a0<vmassol>\u00a0sure but I highly doubt that it's done in lots of places  \n11:37\u00a0<vmassol>\u00a0but I can protect against double escaping  \n11:37\u00a0<vmassol>\u00a0(to some dergee)  \n11:37\u00a0<vmassol>\u00a0\\*degre  \n11:37\u00a0<vmassol>\u00a0\\*degree  \n11:40\u00a0<vmassol>\u00a0hmm not easy  \n11:40\u00a0<vmassol>\u00a0except if we consider that \"!.\" is special  \n11:40\u00a0<vmassol>\u00a0hmm ayway it won't work  \n11:40\u00a0<vmassol>\u00a0since we need to also modify the query  \n11:40\u00a0<vmassol>\u00a0but I guess this could be added automatically  \n11:41\u00a0<vmassol>\u00a0by the query manager  \n11:41\u00a0<vmassol>\u00a0(to have \" escape '!' \")  \n11:41\u00a0<vmassol>\u00a0and it could be checked  \n11:41\u00a0<vmassol>\u00a0in the bindValue()  \n11:41\u00a0<vmassol>\u00a0so that we know if a \".\" is already escaped or not  \n11:42\u00a0<vmassol>\u00a0hmm there's no need actually  \n11:42\u00a0<vmassol>\u00a0if the user has already done that replacement  \n11:42\u00a0<vmassol>\u00a0then the value contains ! and not \\  \n11:42\u00a0<vmassol>\u00a0so there's nothing to do in the bindValue()  \n11:43\u00a0<vmassol>\u00a0so it should work if we do 2 things  \n11:43\u00a0<vmassol>\u00a01) verify if \"escape '...'\" already exists in the query and if not add one  \n11:44\u00a0<vmassol>\u00a02) if there was no escape in the query string and a \\ is found in the bindValue then escape it  \n11:44\u00a0<vmassol>\u00a0then we just need to pick our escape char and we could use \"!\"  \n11:44\u00a0<vmassol>\u00a0hmm  \n11:44\u00a0<vmassol>\u00a0yes  \n11:44\u00a0<tmortagne>\u00a0doing 1 even when not needed means we will break every single query containing a \"!\"  \n11:45\u00a0<vmassol>\u00a0not really  \n11:45\u00a0<vmassol>\u00a0$spaceReferenceString.replaceAll('([%\\_!])', '!$1')  \n11:45\u00a0<vmassol>\u00a0with the [%\\_!] it should be fine  \n11:45\u00a0<vmassol>\u00a0otherwise it means that the code that uses it doesn't work already  \n11:46\u00a0<vmassol>\u00a0the [...] means all char not in the set, so ! are left alone  \n11:46\u00a0<vmassol>\u00a0hmmm  \n11:47\u00a0<vmassol>\u00a0either there's a problem now or I don't understand fully how ti works :)  \n11:47\u00a0<vmassol>\u00a0ah it's the other way around  \n11:47\u00a0<vmassol>\u00a0[...] means only those chars, there's no ^  \n11:48\u00a0<tmortagne>\u00a0all that seems very bug prone to me  \n11:49\u00a0<vmassol>\u00a0ah yes  \n11:49\u00a0<vmassol>\u00a0I udersand now  \n11:49\u00a0<vmassol>\u00a0we just change the escape char  \n11:49\u00a0<vmassol>\u00a0so no need to escape \\  \n11:49\u00a0<vmassol>\u00a0but if there\"s already an ! for ex  \n11:49\u00a0<acotiuga>\u00a0has quit  \n11:49\u00a0<vmassol>\u00a0then we escape it so that it's unchanged  \n11:49\u00a0<vmassol>\u00a0!something --> !!something  \n11:50\u00a0<acotiuga>\u00a0has joined #xwiki  \n11:50\u00a0<vmassol>\u00a0and since % and \\_ also have a meaning in SQL they're also escaped  \n11:51\u00a0<vmassol>\u00a0for the % and \\_ I' m not sure we should keep them  \n11:51\u00a0<vmassol>\u00a0since that could break stuff  \n11:51\u00a0<vmassol>\u00a0(keep them = escape them)  \n11:52\u00a0<vmassol>\u00a0maybe we should only do:  \n11:52\u00a0<vmassol>\u00a0$spaceReferenceString.replaceAll('([!])', '!$1')  \n11:52\u00a0<vmassol>\u00a0I'll need to ask mflorea1 to be sure since I think he's the one who came up with this  \n11:53\u00a0<vmassol>\u00a0in short we need to ensure that parameter binding work the same for all DB  \n11:53\u00a0<vmassol>\u00a0thus that there's no special character used  \n11:53\u00a0<vmassol>\u00a0since this is not done by hibernate we need to do it  \n11:54\u00a0<tmortagne>\u00a0Hibernate 3.6.9 does not do it to be more precise  \n11:55\u00a0<vmassol>\u00a0do you know if they do it in more recent versions?  \n11:55\u00a0<gdelhumeau>\u00a0I have a bug here: http://www.xwiki.org/xwiki/bin/view/ReleaseNotes/Data/XWiki/9.2/#HAPIBreakages  \n11:55\u00a0<gdelhumeau>\u00a0I think you had the same with the rc  \n11:55\u00a0<vmassol>\u00a0gdelhumeau: fixing  \n11:55\u00a0<vmassol>\u00a0I need to fix the root issue  \n11:56\u00a0<vmassol>\u00a0gdelhumeau: FYI if you edit in xobject you'll see some invalid json  \n11:56\u00a0<vmassol>\u00a0see the change above  \n11:57\u00a0<tmortagne>\u00a0vmassol: I have no idea but what I know is that we are using a 6 years old version of hibernate and it's possible they actually worked on stuff since that time...  \n11:57\u00a0<vmassol>\u00a0I need to find where it's coming from. I think the lenient groovy parser I'm now using is generating it somehow  \n11:57\u00a0<vmassol>\u00a0tmortagne: I wonder when we'll be able to spend the required time to upgrade  \n11:58\u00a0<vmassol>\u00a0has anyone tried?  \n11:58\u00a0<tmortagne>\u00a0it's going to be hard if we never put it in the roadmap  \n11:58\u00a0<vmassol>\u00a0yes since it's probably far from immediate  \n11:58\u00a0<vmassol>\u00a0and lots of potnetial side effects  \n11:58\u00a0<tmortagne>\u00a0yes  \n11:59\u00a0<vmassol>\u00a0the problem is that it's simper to fix this issue than to spend the time to upgrade and see if it fixes it  \n11:59\u00a0<tmortagne>\u00a0not to mention that we are using right now hibernate API deprecated in 3.6.9...  \n11:59\u00a0<vmassol>\u00a0(which is probably unlikrly IMO)  \n11:59\u00a0<vmassol>\u00a0s/simper/simpler  \n12:00\u00a0<tmortagne>\u00a0I think you underestimate potential issues for what you propose  \n12:01\u00a0<vmassol>\u00a0yes that's why I'm asking here  \n12:01\u00a0<vmassol>\u00a0do you see one?  \n12:02\u00a0<tmortagne>\u00a0you only talk about bindValue but that's only one aspect, you will need to also parse the request to ! in it  \n12:02\u00a0<tmortagne>\u00a0you only talk about bindValue but that's only one aspect, you will need to also parse the request to fix ! in it  \n12:02\u00a0<vmassol>\u00a0I never talked only about bindValue  \n12:03\u00a0<vmassol>\u00a0see abovve  \n12:03\u00a0<vmassol>\u00a0and see the jira issue  \n12:03\u00a0<vmassol>\u00a0why fix the request?  \n12:03\u00a0<vmassol>\u00a0you need to add an escape clause if there's none  \n12:03\u00a0<vmassol>\u00a0tmortagne: https://jira.xwiki.org/browse/XWIKI-14126?focusedCommentId=94474&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-94474  \n12:03\u00a0<tmortagne>\u00a0I'm not talking about that, you are forgetting values put directly in the request  \n12:04\u00a0<vmassol>\u00a0yes indeed if the user doesn't use named parameter  \n12:04\u00a0<vmassol>\u00a0and codes it badly then it can fali  \n12:04\u00a0<jeremycahill[m]>\u00a0has quit  \n12:04\u00a0<aloisdg[m]>\u00a0has quit  \n12:04\u00a0<woshilapin[m]>\u00a0has quit  \n12:04\u00a0<free4murad[m]>\u00a0has quit  \n12:04\u00a0<M-cjd>\u00a0has quit  \n12:04\u00a0<Enygma`>\u00a0has quit  \n12:04\u00a0<gdelhumeau>\u00a0has quit  \n12:04\u00a0<LudovicDubost[m]>\u00a0has quit  \n12:04\u00a0<tmortagne>\u00a0has quit  \n12:04\u00a0<evalica[m]>\u00a0has quit  \n12:04\u00a0<vmassol>\u00a0has quit  \n12:04\u00a0<M-mouhb>\u00a0has quit  \n12:04\u00a0<TheBigfoot[m]>\u00a0has quit  \n12:06\u00a0<vmassol>\u00a0has joined #xwiki  \n12:06\u00a0<vmassol>\u00a0of hardcoded values and bound values  \n12:06\u00a0<vmassol>\u00a0since it would be a bad practice and a bug  \n12:06\u00a0<vmassol>\u00a0IMO that could be acceptable  \n12:06\u00a0<vmassol>\u00a0in most cases  \n12:06\u00a0<vmassol>\u00a0so it'll happen if there's a mix  \n12:06\u00a0<vmassol>\u00a0there can be valid cases  \n12:06\u00a0<vmassol>\u00a0using a \"!\" for ex  \n12:06\u00a0<vmassol>\u00a0but they'll be pretty rare  \n12:07\u00a0<vmassol>\u00a0for example: \"... where a like \"AA!BB\" and b like :value\"  \n12:07\u00a0<vmassol>\u00a0IMO it's a code smell anyway  \n12:07\u00a0<vmassol>\u00a0BTW the blog app could be hit by this  \n12:08\u00a0<vmassol>\u00a0hmm actually no  \n12:08\u00a0<vmassol>\u00a0since I don't think it uses named params at all  \n12:08\u00a0<vmassol>\u00a0but yes  \n12:08\u00a0<vmassol>\u00a0we could simply check for \"!\"  \n12:08\u00a0<vmassol>\u00a0in the query  \n12:08\u00a0<vmassol>\u00a0and use another escape char  \n12:09\u00a0<vmassol>\u00a0so we could have 3-4 different escape char and find one that's not used  \n12:09\u00a0<vmassol>\u00a0adding that the algo  \n12:10\u00a0<tmortagne>\u00a0has joined #xwiki  \n12:10\u00a0<tmortagne>\u00a0maybe you can use \\x0  \n12:10\u00a0<tmortagne>\u00a0maybe you can use \\x0  \n12:10\u00a0<tmortagne>\u00a0less chance to find that character in a string  \n12:10\u00a0<tmortagne>\u00a0but that's only if sql supports it as escape char  \n12:11\u00a0<tmortagne>\u00a0also checking if the request already define a escape char might not be that easy  \n12:11\u00a0<vmassol>\u00a0yes I wouldn't bet about that (that it's supported in all dbs)  \n12:11\u00a0<vmassol>\u00a0you mean for example: \u00a0\"... like '.. ESCAPE ...' ...\"  \n12:12\u00a0<vmassol>\u00a0it's relatively safe I think if we check for:  \n12:13\u00a0<vmassol>\u00a0ESCAPE + some spaces + single quote | double quote \u00a0+ char + \u00a0single quote | double quote  \n12:14\u00a0<cjd[m]>\u00a0has joined #xwiki  \n12:14\u00a0<vmassol>\u00a0(don't know if double quote is allowed, would need to check)  \n12:14\u00a0<tmortagne>\u00a0you sure only one char is supported ?  \n12:15\u00a0<vmassol>\u00a0checking  \n12:15\u00a0<tmortagne>\u00a0also you need to parse the whole request since you don't want to match \"escape \"i\"\" located in some value  \n12:15\u00a0<tmortagne>\u00a0also you need to properly parse the whole request since you don't want to match \"escape \"i\"\" located in some value  \n12:16\u00a0<vmassol>\u00a0ESCAPE <escape character>  \n12:16\u00a0<vmassol>\u00a0at http://www.contrib.andrew.cmu.edu/~shadow/sql/sql1992.txt  \n12:18\u00a0<vmassol>\u00a0hmm not so obvious  \n12:19\u00a0<tmortagne>\u00a0looks like there might not be any ' or \" around the character according to the examples  \n12:20\u00a0<vmassol>\u00a0trying to understand <escape character> ::= <character value expression>  \n12:20\u00a0<vmassol>\u00a0<character value expression> seems to be defined at 61.5  \n12:20\u00a0<vmassol>\u00a06.15  \n12:20\u00a0<vmassol>\u00a0<character value expression> ::=  \n12:20\u00a0<vmassol>\u00a0<concatenation>  \n12:20\u00a0<vmassol>\u00a0| <character factor>  \n12:21\u00a0<evalica[m]>\u00a0has joined #xwiki  \n12:21\u00a0<vmassol>\u00a0<concatenation> ::=  \n12:21\u00a0<vmassol>\u00a0<character value expression> <concatenation operator>  \n12:21\u00a0<vmassol>\u00a0<character factor>  \n12:21\u00a0<vmassol>\u00a0<character factor> ::=  \n12:21\u00a0<vmassol>\u00a0<character primary> [ <collate clause> ]  \n12:21\u00a0<vmassol>\u00a0<character primary> ::=  \n12:21\u00a0<vmassol>\u00a0<value expression primary>  \n12:21\u00a0<vmassol>\u00a0| <string value function>  \n12:21\u00a0<vmassol>\u00a0:)  \n12:22\u00a0<vmassol>\u00a0and it goes on...  \n12:22\u00a0<vmassol>\u00a0but I don't know if the <character value expression> of 8.x is the same as defined in 6.15  \n12:23\u00a0<tmortagne>\u00a0seems to me you can put anthing you want in it as long as the result is a character  \n12:23\u00a0<vmassol>\u00a0ATM all examples I see use ESCAPE '<char>'  \n12:23\u00a0<tmortagne>\u00a0like functions and stuff  \n12:24\u00a0<tmortagne>\u00a0could probably even be a parameter I guess  \n12:24\u00a0<vmassol>\u00a0found this  \n12:24\u00a0<vmassol>\u00a0escape\\_character  \n12:24\u00a0<vmassol>\u00a0Caract\u00e8re plac\u00e9 devant un caract\u00e8re g\u00e9n\u00e9rique pour indiquer que celui-ci doit \u00eatre interpr\u00e9t\u00e9 en tant que caract\u00e8re r\u00e9gulier et non en tant que caract\u00e8re g\u00e9n\u00e9rique. escape\\_character est une expression de caract\u00e8res sans valeur par d\u00e9faut et doit correspondre \u00e0 un seul caract\u00e8re.  \n12:24\u00a0<tmortagne>\u00a0could probably even be a parameter I guess  \n12:24\u00a0<vmassol>\u00a0at https://msdn.microsoft.com/fr-fr/library/ms179859.aspx  \n12:24\u00a0<vmassol>\u00a0(for SQL server at least)  \n12:25\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n12:26\u00a0<vmassol>\u00a0I think we're relatively safe to say that we expect: escape + spaces + ' + char + '  \n12:26\u00a0<vmassol>\u00a0and we can document it as a limitation on the query page  \n12:27\u00a0<vmassol>\u00a0I've checked 15 pages on google with examples of SQL and they were all using this syntax  \n12:36\u00a0<vmassol>\u00a0(going for lunch)  \n12:38\u00a0<KermitTheFragger>\u00a0has quit  \n12:54\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n14:20\u00a0<xwikiorg\\_guest\\_8>\u00a0has joined #xwiki  \n14:37\u00a0<msmeria1>\u00a0has joined #xwiki  \n14:39\u00a0<KrzysztofPachno[>\u00a0has joined #xwiki  \n14:39\u00a0<msmeria>\u00a0has quit  \n14:40\u00a0<pbondoer[m]>\u00a0has joined #xwiki  \n14:40\u00a0<TheBigfoot[m]>\u00a0has joined #xwiki  \n14:40\u00a0<LudovicDubost[m]>\u00a0has joined #xwiki  \n14:40\u00a0<woshilapin[m]>\u00a0has joined #xwiki  \n14:40\u00a0<Enygma`>\u00a0has joined #xwiki  \n14:40\u00a0<free4murad[m]>\u00a0has joined #xwiki  \n14:40\u00a0<aloisdg[m]>\u00a0has joined #xwiki  \n14:40\u00a0<M-mouhb>\u00a0has joined #xwiki  \n14:40\u00a0<gdelhumeau1>\u00a0has joined #xwiki  \n14:41\u00a0<msmeria>\u00a0has joined #xwiki  \n14:42\u00a0<msmeria1>\u00a0has quit  \n14:43\u00a0<gdelhumeau>\u00a0vmassol: I'm blocked on http://dev.xwiki.org/xwiki/bin/view/ReleasePlans/ReleasePlanHelp#HUpdateDocker  \n14:43\u00a0<gdelhumeau>\u00a0my gradle version is 2.13  \n14:55\u00a0<msmeria1>\u00a0has joined #xwiki  \n14:57\u00a0<msmeria>\u00a0has quit  \n15:24\u00a0<xwikibot>\u00a0has joined #xwiki  \n15:30\u00a0<vmassol>\u00a0(sorry otp in meeting atm)  \n16:02\u00a0<Slashman>\u00a0has quit  \n16:09\u00a0<KermitTheFragger>\u00a0has quit  \n16:19\u00a0<Slashman>\u00a0has joined #xwiki  \n16:20\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n16:24\u00a0<msmeria1>\u00a0has quit  \n16:25\u00a0<acotiuga>\u00a0has quit  \n16:36\u00a0<sgc072>\u00a0Hi, Is the description for various functions used in x-wiki syntax given anywhere in x-wiki?  \n16:37\u00a0<tmortagne>\u00a0sgc072: you mean http://platform.xwiki.org/xwiki/bin/view/ScriptingDocumentation/ ?  \n16:39\u00a0<sgc072>\u00a0tmortagne, \u00a0Yeah Thanks.  \n16:42\u00a0<floflobel>\u00a0has joined #xwiki  \n16:42\u00a0<floflobel>\u00a0has quit  \n16:42\u00a0<Floflobel\\_>\u00a0has joined #xwiki  \n16:53\u00a0<OSIMasson1>\u00a0has joined #xwiki  \n17:35\u00a0<Floflobel\\_>\u00a0has quit  \n17:40\u00a0<Aranjedeath>\u00a0has joined #xwiki  \n17:41\u00a0<fcharton>\u00a0has joined #xwiki  \n17:48\u00a0<sgc072>\u00a0has quit  \n17:48\u00a0<mflorea>\u00a0has quit  \n17:57\u00a0<KermitTheFragger>\u00a0has quit  \n18:11\u00a0<evalica>\u00a0has quit  \n18:55\u00a0<gdelhumeau>\u00a0has quit  \n19:30\u00a0<sgc072>\u00a0has joined #xwiki  \n20:53\u00a0<Slashman>\u00a0has quit  \n21:31\u00a0<sgc072>\u00a0has quit\n"}