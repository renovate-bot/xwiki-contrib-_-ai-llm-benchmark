{"id": "dev:IRC.xwikiArchive20100528", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100528", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nanamarias left at 00:00 (Quit: anamarias  \nanamarias joined #xwiki at 00:02  \nanamarias left at 00:02 (Client Quit  \nvmassol left at 00:05 (Quit: Leaving.  \nDenis left at 00:05 (Quit: Leaving.  \nmflorea left at 00:25 (Quit: Leaving.  \nabusenius left at 00:33 (Ping timeout: 240 seconds  \nlucaa left at 01:06 (Ping timeout: 264 seconds  \nsdumitriu left at 01:20 (Ping timeout: 276 seconds  \nanna joined #xwiki at 05:21  \nanna left at 06:24 (Quit: anna  \nanna\\_ joined #xwiki at 07:50  \nmflorea joined #xwiki at 07:53  \nanna\\_ left at 08:08 (Quit: anna\\_  \nvmassol joined #xwiki at 08:16  \nvmassol - (08:38): Hi CalebJamesDeLisl, are you fixing the ui-tests stuff we discussed the other day? I think you should commit that independently of anything else you're working on, so that it's a small and focused commit  \nvmassol - (08:38): (and good morning!)  \nanna\\_ joined #xwiki at 08:40  \nkibahop joined #xwiki at 08:54  \nsdumitriu joined #xwiki at 09:10  \nlucaa joined #xwiki at 09:12  \nlucaa1 joined #xwiki at 09:16  \nlucaa left at 09:16 (Ping timeout: 260 seconds  \nSvenDowideit joined #xwiki at 09:25  \nlucaa1 left at 09:26 (Quit: Leaving.  \nevalica joined #xwiki at 09:27  \narkub joined #xwiki at 09:30  \nsilviar joined #xwiki at 09:36  \nkibahop left #xwiki at 09:43  \nlucaa joined #xwiki at 09:53  \nvmassol - (09:54): maybe we should quickly fix the create new space from the dashboard issue for 2.4M1 and 2.3.1  \nvmassol - (09:54): anyone looking into it?  \nbblfish joined #xwiki at 09:59  \nSvenDowideit\\_ joined #xwiki at 10:02  \nvmassol - (10:04): sdumitriu: I think switchToEdit is wrong in ui-tests  \nvmassol - (10:05): EditWikiTest is an instance of a page so it should have anything to do with editing other pages  \nvmassol - (10:05): instead there should be an api in AbstractTest or TestUtil to create a new page  \nvmassol - (10:05): do you agree?  \nvmassol - (10:06): s/EditWikiTest/WikiEditPage/  \nvmassol - (10:07): and the editiInWikiMode action should be in viewPage IMO  \nsdumitriu - (10:08): To create a new page? What kind of page?  \nvmassol - (10:11): I'll work with Caleb on this since I think it's related to what he started  \nvmassol - (10:11): CalebJamesDeLisl: ping me when you're avail  \nabusenius joined #xwiki at 10:13  \nKermitTheFragger joined #xwiki at 10:20  \nmflorea left at 10:30 (Quit: Leaving.  \nvmassol - (10:34): bblfish: added your video to http://www.xwiki.org/xwiki/bin/view/Main/ExternalLinks  \ntmortagne joined #xwiki at 10:34  \nbblfish - (10:35): cool  \nbblfish - (10:35): did that help you understand what foaf+ssl is doing?  \nvmassol - (10:35): still watching  \nbblfish - (10:35): It's true it is easy to miss  \nbblfish - (10:35): :-)  \nbblfish left at 10:38 (Quit: Leaving.  \nfmancinelli joined #xwiki at 10:41  \nbblfish joined #xwiki at 10:55  \nbblfish - (10:55): alors?  \nvmassol - (10:56): bblfish: very nice video. Indeed it helped me  \nvmassol - (10:56): it explains the concepts very well  \nbblfish - (10:56): cool  \nvmassol - (10:56): the only thing missing IMO  \nbblfish - (10:56): it is often difficult to explain simple things  \nvmassol - (10:56): is showing more examples of useful web sites where a webid can be used....  \nvmassol - (10:56): but the problem is that there aren't any probably :)  \nbblfish - (10:56): yes, we have to build them :-)  \nbblfish - (10:57): so if one could login to xwiki, that would be a nice example  \nvmassol - (10:57): for xwiki.org for example indeed  \nbblfish - (10:57): we could also build examples where people could buy space on xwiki, and allow members of a foaf:group to access it  \nbblfish - (10:57): the group would be published in their control  \nbblfish - (10:58): we should have better open source social web software implementing this soon. Then we can have more slick videos  \njvdrean joined #xwiki at 10:58  \nvmassol - (10:59): cool  \nbblfish - (11:00): thanks for retweeting :-)  \nvmassol - (11:00): np  \nvmassol - (11:00): I messed up my tweet  \nvmassol - (11:00): but it cannot be edited  \nvmassol - (11:00): wanted to say \"WebId(FOAF+SSL) with XWiki\u2026.\"  \nbblfish - (11:00): ah yes. np. I often just delete tweets  \nbblfish - (11:01): and rewrite them  \nvmassol - (11:01): ah yes will do that  \nanna\\_ left at 11:12 (Quit: anna\\_  \nmflorea joined #xwiki at 11:20  \nvmassol - (11:32): CalebJamesDeLisl: hi  \nCalebJamesDeLisl - (11:32): Good morning vmassol  \nvmassol - (11:32): I'd like to work on cleaning the test fwk in ui-tests  \nvmassol - (11:32): do you have something to commit before I redo what you may have done? :)  \nCalebJamesDeLisl - (11:33): I have some code but unfortunately I couldn't get getPage() to return an indeterminate type.  \nCalebJamesDeLisl - (11:33): Try as I might I can't convert java into groovy ;)  \nCalebJamesDeLisl - (11:34): So I guess we will have to stick with: ViewPage vp = new ViewPage(); openPage(vp); \u00a0vp.doSomething();  \nCalebJamesDeLisl - (11:35): I changed BasePage to have a function: getURL which returns the url of the page so that openPage knows what to do.  \nCalebJamesDeLisl - (11:35): (I have defined a \"page\" as something accessible by a unique URL.)  \nCalebJamesDeLisl - (11:36): Also created BaseElement (a superclass of BasePage) for \"page objects\" which are not entire pages.  \nvmassol - (11:36): what does it contain?  \nvmassol - (11:36): a URL?  \nCalebJamesDeLisl - (11:37): BaseElement?  \nvmassol - (11:37): yes  \nvmassol - (11:37): how do you pass the URL to the page instance?  \nvmassol - (11:38): use case:  \nvmassol - (11:38): EditWikiTest  \nvmassol - (11:38): imagine the test needs to edit a page  \nCalebJamesDeLisl - (11:38): Edit page might be editing any given page?  \nvmassol - (11:39): (not one of the well known pages but a page that doesn't exost)  \nvmassol - (11:39): WikiEditPage somePage = new WikiEditPage(....)  \nvmassol - (11:40): how do we define the space, document for that page?  \nCalebJamesDeLisl - (11:40): It sounds more natural to say WikiEditPage somePage = new WikiEditPage(new BasePage(\"XWiki\", WebHome));  \nCalebJamesDeLisl - (11:40): \\* \"WebHome\"  \nvmassol - (11:40): WikiEditPage extends BasePage  \nvmassol - (11:40): why would you want it to wrap another BasePage?  \nvmassol - (11:41): ok so new WikiEditPage(\"XWiki\", \"WebHomr\")  \nCalebJamesDeLisl - (11:41): That would work.  \nvmassol - (11:41): so it means there are 2 constructors?  \nvmassol - (11:41): or no?  \nvmassol - (11:41): maybe no acutally  \nvmassol - (11:41): one might be enough  \nvmassol - (11:42): ok are you ready to commit something so that I can help/work on it too?  \nCalebJamesDeLisl - (11:42): new WikiEditPage() maybe ought to be private if there needs to be a url.  \nCalebJamesDeLisl - (11:43): I have to clean up the getPage() failure and debug a problem causing the wiki engine to start twice, then I will be ready.  \nvmassol - (11:43): ok  \nvmassol - (11:44): note: there's a new contributor arriving next week  \nvmassol - (11:44): he'll be working on automated testing  \nvmassol - (11:44): so it would be good that we have somerthing clean in ui-tests for him  \njvdrean - (11:44): mflorea: what's the problem with renaming the 'title' field to 'page' ?  \nvmassol - (11:44): so that he can start with the latest best practices  \nmflorea - (11:47): jvdrean: in Panels.NewPage the entity to select is chosen from a select box. So the 'parameter name' (space or page) is dynamic. If you chose space from the select then the input value is the space name. If you chose page then the input value is the page name. So we can't name the input 'page' nor 'space'.  \nCalebJamesDeLisl - (11:47): I wish I knew how to get getPage() to work but I don't see any way for it to work without breaking type safety.  \nmflorea - (11:47): s/entity to select/entity to create  \nvmassol - (11:47): how would you use it already CalebJamesDeLisl?  \nvmassol - (11:48): (forgot what we said the other day)  \nCalebJamesDeLisl - (11:48): openPage(new ViewPage());  \nCalebJamesDeLisl - (11:48): getPage().doSomethingSpecificToViewPage();  \nvmassol - (11:49): or  \nvmassol - (11:49): s/or//  \nvmassol - (11:49): we could still have:  \nvmassol - (11:50): hmm indded  \nvmassol - (11:50): the best is:  \nmflorea - (11:50): jvdrean: we could set with JavaScript the field name to the value of the select box ('space' or 'page') but IMO you should be able to create a page with JavaScript disabled  \nvmassol - (11:50): ViewPage viewPage = new ViewPage()  \nvmassol - (11:50): openPage(viewPage)  \nvmassol - (11:50): it's not too bad  \nCalebJamesDeLisl - (11:50): Yes, but still the programmer must keep track of which page is currently open.  \nvmassol - (11:51): ViewPage viewPage = new ViewPage()  \nvmassol - (11:51): viewPage.open()  \nvmassol - (11:51): ?  \nanna\\_ joined #xwiki at 11:51  \nvmassol - (11:51): or navigate() instead of open()  \nCalebJamesDeLisl - (11:52): I guess there is no difference between viewPage.open() and openPage(viewPage) is there is no getPage method.  \nlucaa - (11:52): devs, I don't remember exactly, can you call a static function of a class from velocity?  \nvmassol - (11:52): lucaa: not that I know  \nlucaa - (11:52): that is, if you \\_don't\\_ have an instance of that object on the velocity context  \nCalebJamesDeLisl - (11:53): Nope. If you can that's bad.  \njvdrean - (11:53): all: wdyt about removing space creation from Panels.NewPage ?  \nsdumitriu - (11:53): jv: +1  \nlucaa - (11:54): vmassol: CalebJamesDeLisl have you tried that recently, have precise information? I would make a test otherwise but I prefer to not make the test if possible  \nvmassol - (11:54): CalebJamesDeLisl: viewPage.open() could call viewPage.getURL() internally I guess  \nsdumitriu - (11:54): CalebJamesDeLisl: Why is it bad?  \nvmassol - (11:54): lucaa: it's a bad thing to do anyway IMO. Why would you want this?  \nvmassol - (11:54): sdumitriu: because statics are evil  \nCalebJamesDeLisl - (11:54): sdumitriu: Utils.getComponent() \u00a0\u00a0\u00a0\u00a0\u00a0+100 statics are the devil.  \nlucaa - (11:55): vmassol: I don't, wanna do it, I just wanted to be sure of my affirmations  \nmflorea - (11:55): jvdrean: +1, do we know if Panels.NewPage is really used for creating a new space?  \nvmassol - (11:55): jvdrean: not sure  \nvmassol - (11:55): how would users create a new spaces then?  \nvmassol - (11:55): (users of non colbiri skin of course)  \njvdrean - (11:56): they can from the wiki dashboard  \nvmassol - (11:56): yes but that defeats  \nvmassol - (11:56): the idea of the panel  \nvmassol - (11:56): so either you remove the panel altogether  \nvmassol - (11:56): or we keep it imo  \nvmassol - (11:56): and the dashboard is only present on 1 page  \nvmassol - (11:56): the goal of a pane is to be presnet everywhere  \nvmassol - (11:56): s/pane/panel/  \nCalebJamesDeLisl - (11:56): vmassol: Actually I like viewPage.open() because viewPage need not be URL accessable. \u00a0Why did we decide it couldn't be dome int the constructor? I forgot.  \nCalebJamesDeLisl - (11:57): s/dome int/done in/  \nvmassol - (11:57): CalebJamesDeLisl: the navigation should be a user action  \nvmassol - (11:57): for ex: if you have a clickLink() in some page that goes to another page  \nvmassol - (11:57): you don't want to navigate again to that page  \nvmassol - (11:57): just return a ref to it  \nvmassol - (11:57): s/ref/handle/  \nCalebJamesDeLisl - (11:58): That's right.  \nvmassol - (11:58): jvdrean: so for me that panel is a replacement of the menu actions for skins not having creation menu items  \nvmassol - (11:58): (if you remove space creation you remove a useful feature)  \njvdrean - (11:58): vmassol: 1) the panel is the only way to create pages, this is not true for spaces  \njvdrean - (11:59): 2) creating spaces from any page is not really needed imho  \nvmassol - (11:59): I don't agree  \nvmassol - (11:59): I'd be ?1 right now to remove that feature  \nvmassol - (11:59): especially since it's something old  \nvmassol - (11:59): and not our future  \njvdrean - (11:59): 3) power user willing to create new spaces from anywhere can do it by specifying a new space in the create page panel  \nvmassol - (12:00): I really don't understand  \nmflorea - (12:00): what about dropping the select box and using two input fields instead: (1) the space name, prefilled with the name of the current space, and (2) the pane name  \nvmassol - (12:00): why want to remove that feature now  \njvdrean - (12:00): mflorea: yes that would work  \nmflorea - (12:00): evalica wdyt?  \nmflorea - (12:00): s/pane/page  \nvmassol - (12:01): IMO that panel should be an alternative way of creating new pages, including supporting the new template stuff  \nvmassol - (12:02): btw there could be a notion of template space in the future I guess ;)  \nvmassol - (12:02): we have a template page and template wiki already  \nCalebJamesDeLisl - (12:04): Hmm. public static ViewPage open(String space, String name)?  \nvmassol - (12:05): jvdrean: my feeling is that the create new page panel has a use case when people want to hide the menus for example in a custom skin but still want to leave the ability to create some page/space to the user. WDYT?  \ntmortagne left at 12:06 (Quit: Leaving.  \njvdrean - (12:07): vmassol: I think the best is mflorea suggestion, ie. have a space/page fields  \nvmassol - (12:08): jvdrean: why don't we do this for the menu then?  \nvmassol - (12:08): I think it's cleaner not to show the page when you create a space  \nvmassol - (12:08): since it has no meaning  \nkibahop joined #xwiki at 12:09  \nkibahop left #xwiki at 12:09  \nvmassol - (12:09): it could be another panel though I guess  \nvmassol - (12:09): one for creating pages and one for creating spaces  \njvdrean - (12:10): vmassol: the page field would be hidden with JS but sure it's not perfect  \nvmassol - (12:10): I kind of agree that a create new page panel should only be about creating pages  \nvmassol - (12:10): so I remove my ?1 :)  \nvmassol - (12:11): and we can have a create space panel one day if we need one  \nmflorea - (12:13): but using two panels looks like an overhead (a lot of space needed)  \nevalica - (12:14): so I think Marius ideas with two inputs is ok. This way I can decide if I want to create: 1) a new page in current space; 2) a new page is another space; 3) a page in a new space;  \nmflorea - (12:14): why not reuse the code from the create page in the panel, or the other way around  \nvmassol - (12:14): mflorea: it's the same as having 2 menu entries  \nvmassol - (12:14): creating a space is a different topic than creating a page  \nevalica - (12:14): and when I want to create a new space, the page input could auto fill with WebHome  \nvmassol - (12:15): evalica: two input is mandatory for creating a page  \nvmassol - (12:15): the discussion is about creating a space  \nevalica - (12:15): but if I create a new page into a space that doesn't exists .. is the same process - the page is created and the space is created too  \nvmassol - (12:15): no  \nvmassol - (12:15): that's bad  \nmflorea - (12:15): vmassol: yes, I agree, but creating a space means in fact creating a page, WebHome  \nvmassol - (12:15): that assumes that spaces are pages  \nvmassol - (12:15): which is true now  \nvmassol - (12:15): but not in the future  \nvmassol - (12:15): mflorea: nope  \nvmassol - (12:15): it just happens  \nvmassol - (12:15): that it's implemented like this now  \nvmassol - (12:15): (wrongly btw)  \nvmassol - (12:16): but we want to fix this  \nvmassol - (12:16): (in the new model)  \nvmassol - (12:16): so better show the concept of space separately from the concept of page IMO  \nvmassol - (12:16): advanced users will be able to use  \nmflorea - (12:16): I see  \nvmassol - (12:16): the create new page panel  \nvmassol - (12:16): to create a space for now  \nevalica - (12:16): vmassol: what is the rationale for a space without pages?  \nvmassol - (12:17): a space always has pages evalica  \nvmassol - (12:17): but a space isn't necessarily a page itself  \nmflorea - (12:17): create space would create an empty space in the new model  \nvmassol - (12:17): yes  \nlucaa - (12:17): re static methods in velo, it's possible but it needs to be put on the context as such:  \nlucaa - (12:17): http://velocity.apache.org/engine/devel/developer-guide.html#supportforstaticclasses  \nevalica - (12:18): so the users should make an additional step to create a page after? why not make it in one step  \nvmassol - (12:19): the user would go to the space home once the space is created  \nvmassol - (12:19): there he would be able to create pages for ex  \nvmassol - (12:19): he'll see a dashboard of the space  \nvmassol - (12:19): with actions for the space  \nvmassol - (12:19): including action to create pages  \nvmassol - (12:20): said diffrently there'll be a template to visualize a space  \nvmassol - (12:20): (which is different from the template to visualize a page)  \nevalica - (12:20): the nice thing about the 2 inputs was that you weren't forced to create a page just in the current space  \nvmassol - (12:20): evalica: why do you want not to have 2 inputs?  \nevalica - (12:21): I want to have 2 inputs instead of two specialized panels  \nvmassol - (12:21): this is different  \nvmassol - (12:21): we need 2 inputs for creating a page  \nvmassol - (12:21): smae as for the create page menu action  \nvmassol - (12:21): btw  \nvmassol - (12:21): it needs to be improved  \nvmassol - (12:21): (need your help on tis)  \nvmassol - (12:21): s/tis/this/  \nmflorea - (12:22): but what would happen in the new model if the space doesn't exit?  \nvmassol - (12:22): so that either we have auto suggestion for existing spaces  \nmflorea - (12:22): s/exit/exists  \nvmassol - (12:23): mflorea: we need to define that but the \"normal\" strategy would be that you couldn't create a page in a space that doesn't exist  \nmflorea - (12:23): ok  \nvmassol - (12:24): evalica: there are 3 concepts that are different: create page, create space, create wiki  \nvmassol - (12:25): evalica: again right now there no notion of space in xwiki but we want to fix this  \nvmassol - (12:25): s/there/there's/  \nvmassol - (12:25): (right now there's only a notion of namespace for a page but not of a space entity)  \nvmassol - (12:26): (said differently there's no table for spaces in the DB, spaces are not even a page right now)  \nvmassol - (12:32): notification: xwiki.org is going to be restarted in 5 mn  \nvmassol - (12:32): (for maintenance)  \ntmortagne joined #xwiki at 12:37  \nalex-xwiki joined #xwiki at 12:38  \nalex-xwiki left at 12:39 (Client Quit  \nvmassol - (12:40): tmortagne: what's the status re the 2.4M1 release?  \nalex1 joined #xwiki at 12:40  \nvmassol - (12:40): I saw some tests failing on 2.3 rbanch this morning and 1 on trunk  \nalex1 is now known as Guest55994 ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nvmassol - (12:40): oh it seems it's 45 failing again on trunk now  \nGuest55994 left at 12:40 (Client Quit  \ndarkone joined #xwiki at 12:41  \ndarkone left at 12:41 (Client Quit  \nsalecss joined #xwiki at 12:41  \nvmassol - (12:42): who's working on fixing tests?  \nvmassol - (12:43): thoughts: we need to change the way we work since it seems to be a common pattern now that we spend 3-4 days fixing tests before a release.  \nvmassol - (12:44): CalebJamesDeLisl: ping me when you have committed something so that I can help you/continue the work of cleaning up ui-tests  \nCalebJamesDeLisl - (12:45): Ok.  \nvmassol - (12:48): news  \nvmassol - (12:48): !news  \nflorinciu joined #xwiki at 13:09  \nanamarias joined #xwiki at 13:13  \nflorinciu left at 13:49 (Quit: Leaving.  \nCalebJamesDeLisl - (13:57): vmassol: committed.  \nCalebJamesDeLisl - (13:59): Haven't changed any tests yet, just made the framework easier to use.  \nCalebJamesDeLisl - (13:59): No more passing around the WebDriver!  \nflorinciu joined #xwiki at 14:08  \nvmassol - (14:13): checking  \nvmassol - (14:15): CalebJamesDeLisl: something I don't understand  \nvmassol - (14:15): for ex: \u00a0\u00a0\u00a0\u00a0public String getURL(String space, String page)  \nvmassol - (14:15): it's now in BasePage  \nvmassol - (14:15): I don't understand  \nvmassol - (14:15): BasePage is supposed to represent a given apge  \nvmassol - (14:15): page  \nvmassol - (14:15): but here you pass it space and page  \nvmassol - (14:15): it's not logical  \nCalebJamesDeLisl - (14:16): It is used in pages in the open method.  \nCalebJamesDeLisl - (14:17): void open() { getDriver().get(getURL(\"space\", \"page\"))  \nvmassol - (14:17): I don't undestand  \nvmassol - (14:17): it looks wrong to me  \nCalebJamesDeLisl - (14:17): Maybe it should be protected but I'm not sure that there is no valid use case for something else to use it.  \nvmassol - (14:18): I still don't undersand  \nvmassol - (14:18): where is this open method?  \nvmassol - (14:18): (so that I can check it)  \nCalebJamesDeLisl - (14:18): None yet because I haven't changed any tests. (there is one in the invitation test which is not committed.)  \nCalebJamesDeLisl - (14:19): s/invitation test/invitation page/  \nvmassol - (14:19): you say the getURL is used in the open method  \nvmassol - (14:19): but now you say there's no open method  \nvmassol - (14:19): I'm lost  \nCalebJamesDeLisl - (14:20): viewPage.open() was how we decided the page should be opened.  \nCalebJamesDeLisl - (14:20): I havn't committed any code with open methods yet (it's only in the invitation test.)  \nvmassol - (14:20): ok I need to re-read the whole thing  \nvmassol - (14:20): because the changes don't make any sense to me  \nvmassol - (14:21): the context looks strange too  \nCalebJamesDeLisl - (14:21): My thinking is that TestUtils is wrong and everything should be moved somewhere else.  \nvmassol - (14:21): yes but what did is even more wrong IMO  \nvmassol - (14:21): but I need to read a bit more to be sure  \nCalebJamesDeLisl - (14:22): More wrong than all static? ouch.  \nvmassol - (14:22): yep  \nvmassol - (14:22): :)  \nvmassol - (14:22): and actuzlly you've introduced statics  \nCalebJamesDeLisl - (14:23): Well the context has to be referenced globally because junit doesn't allow us to store information between tests.  \nvmassol - (14:23): nope  \nvmassol - (14:23): it's done on \\*purpose\\*  \nvmassol - (14:23): by junit  \nCalebJamesDeLisl - (14:23): So there is no state?  \nvmassol - (14:23): it's not that it does'n't allow it  \nvmassol - (14:23): and junit has ways to share stuff too  \nvmassol - (14:24): I think what you want is a custom test suite  \nvmassol - (14:24): same as what I did in selenium-tests  \nvmassol - (14:24): (for the skin executor)  \nvmassol - (14:25): and I don't see any reason to share the executor  \nCalebJamesDeLisl - (14:26): Well it has to be available to be stopped.  \nvmassol - (14:26): errr?  \nflorinciu left at 14:27 (Read error: Connection reset by peer  \nvmassol - (14:27): that's in SetUp only  \nvmassol - (14:27): Testsetup that is  \nCalebJamesDeLisl - (14:27): The XWikiExecutor should be left to keep running after the tests terminate?  \nvmassol - (14:27): or in th etest suite (in junit4)  \nvmassol - (14:27): it wasn't before  \nvmassol - (14:27): why would it now  \nanamarias left at 14:27 (Quit: anamarias  \nvmassol - (14:28): again the question re teh executor is why would a test want to know it  \nvmassol - (14:28): it's a private implementation detail  \nvmassol - (14:28): that only belongs to the suite  \nCalebJamesDeLisl - (14:28): So how do you run one test?  \nCalebJamesDeLisl - (14:29): -Dtest=InvitationTest  \nvmassol - (14:29): in the same manner  \nvmassol - (14:30): but again there's no reason to expose it  \nvmassol - (14:30): to stuff other than code used to start/stop the container  \nvmassol - (14:31): let me think a bit more  \nvmassol - (14:31): to see if there's a better pattern  \nvmassol - (14:31): re getURL I'm still at a loss to understand it  \nCalebJamesDeLisl - (14:32): I can't think of what object getURL belongs to more than the page object.  \nvmassol - (14:33): I'm talking abotu getURL with params of course  \nvmassol - (14:33): getURL without params make sense  \nCalebJamesDeLisl - (14:35): Still there is a use for getURL with params. To what object would that belong?  \nvmassol - (14:35): I cannot answer without knowing tyhe use case  \nvmassol - (14:35): probably AbstractTest  \nCalebJamesDeLisl - (14:36): well BasePage.getURL with no params might simply call getURL(\"space\", \"page\");  \nCalebJamesDeLisl - (14:38): If it is determined that we \\_must\\_ have a util class, IMO it must be instantiated and made available the way the WebDriver is.  \nCalebJamesDeLisl - (14:41): What if instead of BasePage#getURL(String, String) we had BasePage#open(String, String)? That satisfies all use cases I can think of.  \nvmassol - (14:41): I don't see why it would call getURL(space, page)  \nvmassol - (14:41): I don't see a reason for that  \nvmassol - (14:41): a page knows where it is  \nvmassol - (14:42): you don't need to tell it again  \nvmassol - (14:42): open(string, string) is wrong too  \nvmassol - (14:42): for the same reason  \nvmassol - (14:42): still reading....  \nCalebJamesDeLisl - (14:44): if open(String, String) is unavailable then each page object will have to know it's exact URL.  \nCalebJamesDeLisl - (14:48): So are you for advancing from here or merging out the commit. If you're for polishing it up then I'll commit changes to some page objects.  \nvmassol - (14:52): one thing I'm sure of is that passing executor to BaseElement is not correct  \nvmassol - (14:54): you can go on CalebJamesDeLisl, I'll do some modifications after  \nCalebJamesDeLisl - (14:55): Cool. I agree there are some things to fix. not having to pass the driver around like the XWikiContext is big though.  \nvmassol - (14:55): I knew lots of good practices with junit3  \nvmassol - (14:55): unfortiuately I don't know junit4 well enough  \nCalebJamesDeLisl - (14:57): How'd you like that getUnstoppable()? Kind of principle of least authority type thing.  \nCalebJamesDeLisl - (14:57): I spent way too much time getting that working.  \nvmassol - (14:57): first you removed my comments :)  \nvmassol - (14:57): and you didn't add new comments  \nvmassol - (14:58): even though what you did is the same kind of hack  \nvmassol - (14:58): getUnstoppable is pretty un-undertandable initially without comments ;)  \nCalebJamesDeLisl - (14:58): Yes, I will put the comments back. hack? Why do you say that?  \nvmassol - (14:58): by hack I mean signalling to AbstractTest that it's inside an executing suite  \nvmassol - (14:59): btw it should know that by itself normally  \nvmassol - (14:59): (but don't know how to do that in jjunit4)  \nvmassol - (14:59): actually I remove that  \nvmassol - (15:00): it's a good thing that the test doesn't know it's parent  \nCalebJamesDeLisl - (15:00): I didn't think of it that way, I was thinking \"how to hold the stopping function close so nothing else can call it\"  \nCalebJamesDeLisl - (15:00): I think that pattern would be useful other places where you want to pass some authority but not all to another class.  \nlucaa left at 15:01 (Ping timeout: 272 seconds  \nvmassol - (15:01): the NullExecutor pattern is good to me  \nvmassol - (15:01): no problem with that  \nvmassol - (15:02): (I would have done it as the executor level)  \nCalebJamesDeLisl - (15:02): You're right the executor is only needed to stop so it should be null. hmm how to do that?  \nKermitTheFragger left at 15:02 (Quit: Leaving  \nCalebJamesDeLisl - (15:03): It would be cool if java allowed us to take away the stop method from the class and hold it separately. There are some good things about javascript.  \nvmassol - (15:04): in junit3 I would write a test suite that would call the constructor of the test class, passing it the info it needed  \nvmassol - (15:04): s/needed/needs/  \nCalebJamesDeLisl - (15:04): Reflection?  \nvmassol - (15:04): no need for reflection  \nvmassol - (15:04): to set the info  \nvmassol - (15:05): it probably works similarly in junit4 actually  \nCalebJamesDeLisl - (15:06): I'll try to figure out how to keep the executor null, hopefully I can do it entirely inside of getUnstoppable.  \nsalecss left #xwiki at 15:40  \nanna\\_ left at 15:55 (Quit: anna\\_  \nflorinciu joined #xwiki at 16:12  \nsdumitriu - (16:19): \u00a0  \nsdumitriu - (16:21): q  \nevalica left at 16:24 (Read error: Connection reset by peer  \njvdrean - (16:26): FYI I'm waiting for the space creation problem to be fixed before releasing 2.3.1, that brings us to monday (vmassol, npm, CalebJamesDeLisl)  \nvmassol - (16:26): jvdrean: who's working on fixing it? marius?  \nCalebJamesDeLisl - (16:27): re: the space creation panel?  \nEnygma` left at 16:27 (Ping timeout: 264 seconds  \njvdrean - (16:28): panel + wiki dashboard, yes Marius is on it  \nanna joined #xwiki at 16:29  \nsilviar left at 16:46 (Quit: Leaving.  \nfmancinelli - (17:10): Quick question: is there a way (a macro maybe?) to insert footnotes while writing a paragraph? Something equivalent to the LaTeX text\\footnote{Footnote content here} ?  \ntmortagne - (17:16): i think there is a macro for that, checking  \ntmortagne - (17:16): fmancinelli: http://code.xwiki.org/xwiki/bin/view/Macros/Footnote20Macro ?  \nfmancinelli - (17:16): yep! Thanks  \nabusenius - (17:18): hello @all  \nabusenius - (17:18): is there a reason why html macro doesnt set the parend of the XDOM it parses?  \nabusenius - (17:18): s/parend/parent/  \nvmassol - (17:19): hmm I don't remember a \"parent\" feature, maybe thomas does  \nabusenius - (17:21): every block has a parent, and XDOM is a block too  \ntmortagne - (17:23): abusenius: i don't understand what you expect exactly  \ntmortagne - (17:23): which XDOM are you talking about ?  \nvmassol - (17:24): XDOM is top level so it doesn't have a parent  \nabusenius - (17:24): well, {{html wiki=true}} parses the content with xwiki parser, and it returns an XDOM  \ntmortagne - (17:25): no it return a list of block like any other macro  \nCalebJamesDeLisl - (17:25): s/XDOM/Block/ \u00a0??  \nabusenius - (17:25): no, HTMLMacro.renderWikiSyntax, line 232  \nabusenius - (17:25): XDOM xdom = parser.parse(new StringReader(content));  \nCalebJamesDeLisl - (17:26): If I remember right XDOM extends Block.  \nabusenius - (17:26): well, yes  \nabusenius - (17:26): the problem is, that this xdom becomes the root of all other blocks containing in the html macro  \ntmortagne - (17:26): abusenius: why do you want parent in this temporary XDOM ? for macro executed inside html macro ?  \nabusenius - (17:27): I want to exclude nested script macros  \nabusenius - (17:27): and a nice possibility imo is to look for MacroMarkerBlock in the parents  \ntmortagne - (17:27): ok  \nabusenius - (17:28): but with html I cant reach the toplevel parent any more  \nvmassol - (17:28): why not a transformation?  \nabusenius - (17:28): so volocity > html > groovy is not counted as nested  \nabusenius - (17:29): vmassol, wdym?  \ntmortagne - (17:29): vmassol: html macro always produce just a RawBlock from outside POV, you can't filter script macro inside it  \nvmassol - (17:29): HTML macro is a black box anyway right now  \nabusenius - (17:30): script macros too, until they are executed  \ntmortagne - (17:30): vmassol: yes that's why you can't use transformation  \nvmassol - (17:30): yes but I don't get this thing about parent  \nvmassol - (17:30): if we want to introduce a notion of filter  \nvmassol - (17:30): we need to modify te html macro  \ntmortagne - (17:30): abusenius: wants to try filtering at script macro level  \ntmortagne - (17:31): by looking if he is already inside another script macro  \nabusenius - (17:31): http://jira.xwiki.org/jira/browse/XWIKI-5223  \nvmassol - (17:31): ok I understand now  \nvmassol - (17:31): don't know if it's a good idea though  \nabusenius - (17:31): I added a parent to xdom parsed by html, seems to work locally  \nabusenius - (17:32): any other ideas how to do it?  \ntmortagne - (17:32): abusenius: that's not the nicest, if we want to provide this link, we should replace the XDOM by a MacroMarker(\"html\")  \ntmortagne - (17:32): filtering or not filtering  \nabusenius - (17:33): ok, sounds reasonable  \ntmortagne - (17:33): that can be usefull to access the document content from submacros  \ntmortagne - (17:33): imagine a toc macro inside html macro  \ntmortagne - (17:34): currently i guess it does not work because toc macro can't access the whole document content  \nabusenius - (17:34): I'm just not sure if some other code relies on the fact that stuff inside html macros is independent from the document, or it's just a bug  \ntmortagne - (17:34): i will create an issue about this use case and fix that, filtering is another subject and i'm still not sure we should do that that way  \ntmortagne - (17:35): abusenius: i doubt that there is no reason for html macro content to be isolated  \ntmortagne - (17:35): that's a bug  \nabusenius - (17:35): good  \nabusenius - (17:35): tmortagne, why do you think filtering this way is not a good solution?  \ntmortagne - (17:36): i'm not sure systematic filtering itself is a good idea  \nabusenius - (17:36): what could we do instead then?  \ntmortagne - (17:37): no idea  \ntmortagne - (17:37): that's why i'm using things like \"i'm not sure\" ;)  \nabusenius - (17:37): IMO we should fix XWIKI-5223 anyway, if we find a better solution later - great  \nabusenius - (17:38): and filtering would fix scripting issue  \nflorinciu left at 17:38 (Quit: Leaving.  \nabusenius - (17:38): although html will still be there  \nabusenius - (17:38): {{/html}}  \ntmortagne - (17:38): well it would fix security issue for usre but i could also break use cases  \ntmortagne - (17:38): s/i could/it could/  \nabusenius - (17:38): like what?  \nabusenius - (17:39): IMO nested scripts are just wrong  \nCalebJamesDeLisl - (17:39): Better filter {{include}} macros too ;)  \nabusenius - (17:39): yes, they are a problem too, but I havent looked how they work yet  \ntmortagne - (17:39): vmassol: hmm Transformation#transform takes a XDOM, even if there is no technical reason for that, we should change it i think  \ntmortagne - (17:40): (for Block)  \nvmassol - (17:41): yes we could  \nvmassol - (17:41): I agree Block is better from a design pov  \nabusenius - (17:41): btw, CalebJamesDeLisl , {{include}} takes an existing document, which is another problem than the scripts IMO  \nvmassol - (17:41): XDOM should be changed too in this case  \nvmassol - (17:42): to something that represents a set of blocks  \nCalebJamesDeLisl - (17:42): {{include}} is safe as it is (it delegates power) \u00a0with the problem you're looking at, it can be used to delegate yourself power.  \nvmassol - (17:42): \u00a0but that doesn't have to be terminal  \nvmassol - (17:42): right now it's meant to be terminal  \nmflorea left at 17:43 (Quit: Leaving.  \nvmassol - (17:44): CollectionBlock or something like that but maybe hard to change at this stage  \nCalebJamesDeLisl - (17:45): What ever happened to the plan for code macro only be able to be ended using a \"password\"?  \ntmortagne - (17:46): vmassol: yep we need a CollectionBlock, we talked about that some time ago but never implemented it  \nabusenius - (17:46): CalebJamesDeLisl, was there a discussion about it or something?  \ntmortagne - (17:47): CalebJamesDeLisl: code macro=script macro ? or are you really talking about code highlight macro ?  \nabusenius - (17:47): or is it unrelated to scripting issue?  \ntmortagne - (17:47): (in that case i don't understand)  \nCalebJamesDeLisl - (17:47): I seem to recall {{code}} (highlighting) there was talk of using a unique string to end it.  \ntmortagne - (17:49): CalebJamesDeLisl: ha you mean the discussion about putting a ending amcro syntax as content of a macro  \ntmortagne - (17:49): it was not just about code macro but about any macro  \nCalebJamesDeLisl - (17:49): Apply that to other macros: \u00a0\u00a0#set($key = $mathtool.random()) {{html endsWith=\"$key\"}} $userInput {{$key}}  \nCalebJamesDeLisl - (17:49): Good luck breaking out of that.  \nCalebJamesDeLisl - (17:52): On another note: I'd like to gut most of the functionality in TestUtils which isn't being used yet. Any objections? vmassol?  \nabusenius - (17:52): this example is not very user friendly, but if this would happen automatically, this would be cool  \nCalebJamesDeLisl - (17:53): I figure it TestUtils will still be available in the revision history so functions can be ported to their proper place.  \nvmassol - (17:53): CalebJamesDeLisl: go ahead but we might need some of them in AbstractTest  \nvmassol - (17:54): you can remove and check what's neede dby the tests  \nCalebJamesDeLisl - (17:54): Maybe we will need a TestUtils but I say it must be an instance. \u00a0re check: it builds now.  \nCalebJamesDeLisl - (18:01): Also I'm deprecating it...  \nvmassol - (18:02): why deprecate?  \nCalebJamesDeLisl - (18:04): Because I want to remove the remaining methods and if a util class is needed, make one which is instantiated.  \nCalebJamesDeLisl - (18:05): gotoPage should be a page object method, deletePage should be a function of the DeletePage page object.  \nCalebJamesDeLisl - (18:07): The only function which is arguably a \"util\" function is escapeURL and if that is needed and we don't want it in AbstractTest and it is needed in multiple places, then it should be a function of a util class which is instanciated.  \nCalebJamesDeLisl - (18:11): I'm trying to figure out how I should handle cases where you want to do something (like login) and then be redirected to another page (with xredirect).  \nCalebJamesDeLisl - (18:12): LoginPage.LoginAndOpen(BasePage page) ?  \nCalebJamesDeLisl - (18:12): I really want to avoid adding static methods.  \nvmassol - (18:13): you want loginAsAdmin() to return a page is that it?  \nCalebJamesDeLisl - (18:14): Yes. that would skip going to the main page every time you log in.  \nvmassol - (18:14): (loginAs())  \nvmassol - (18:14): we don't go to the main page do we?  \nvmassol - (18:14): we don't have to I mean  \nCalebJamesDeLisl - (18:14): You end up where ever clicking login sends you (main page by default)  \nvmassol - (18:15): sure and that's ok  \nvmassol - (18:15): it's just that now AbstractAdminAuthenticatedTest navigates to the home page to be sure  \nvmassol - (18:15): but it doesn't have to  \nCalebJamesDeLisl - (18:15): It means you have to login, load the main page, then go to the page you are testing.  \nvmassol - (18:15): why?  \nCalebJamesDeLisl - (18:16): Because the login action sends a redirect to the main page.  \nvmassol - (18:16): not really  \nvmassol - (18:16): it redirects to wheerver you were  \nvmassol - (18:16): not to the home page  \nCalebJamesDeLisl - (18:16): So either login and then go to the page to test, or go to the page to test then login.  \nCalebJamesDeLisl - (18:17): One page gets loaded unnecessarily.  \nvmassol - (18:17): btw re login  \nvmassol - (18:17): maybe we can bypass the page paradigm somehow  \nCalebJamesDeLisl - (18:18): You mean bypass the selemium2 page object paradigm?  \nvmassol - (18:18): ie do the same as what the login page does  \nvmassol - (18:18): ie send a http post  \nCalebJamesDeLisl - (18:19): I was going to do that.  \nCalebJamesDeLisl - (18:19): Actually you can login with a get. I have admin on localhost bookmarked.  \nvmassol - (18:19): ok  \nCalebJamesDeLisl - (18:19): Not good though.  \nCalebJamesDeLisl - (18:20): Anyway I'm sure we can post but we need to load another page, preferably the page we are testing.  \nCalebJamesDeLisl - (18:21): InvitationPage ip = new InvitationPage();  \nCalebJamesDeLisl - (18:21): new PostLogin(ip);  \nCalebJamesDeLisl - (18:21): s/PostLogin/PostLoginAsAdmin/  \nvmassol - (18:22): the new sounds overkill  \nvmassol - (18:22): IMO a method in AbstractTest would be enough  \nvmassol - (18:22): loginAs(\u2026)  \nvmassol - (18:22): + loginAsAdmin()  \nCalebJamesDeLisl - (18:22): It's using a constructor because static is ugly.  \nvmassol - (18:23): constructor is not better  \nvmassol - (18:23): if you don't have a real useful object  \nCalebJamesDeLisl - (18:23): I know, constructors are just static anyway.  \nvmassol - (18:23): it's actually worse  \nvmassol - (18:23): since you'll get several new  \nvmassol - (18:23): instead of one  \nCalebJamesDeLisl - (18:23): I don't like putting everything in AbstractTest.  \nvmassol - (18:23): anyway I don't see why you'd need either a staitc or a new  \nvmassol - (18:23): it's not everything  \nvmassol - (18:24): it's eveyrthing required by tests and not related to a given page  \nvmassol - (18:24): s/given page/page/  \nCalebJamesDeLisl - (18:24): But login is related to a page.  \nCalebJamesDeLisl - (18:24): Also delete is the same.  \nvmassol - (18:24): no  \nvmassol - (18:24): login is not  \nvmassol - (18:24): it would be if you went through the LoginPage page  \nvmassol - (18:25): same for delete  \nCalebJamesDeLisl - (18:25): IMO all things login should be kept with LoginPage.  \nvmassol - (18:25): I don't agree  \nvmassol - (18:25): deifnitelt not  \nvmassol - (18:25): you're mixing  \nvmassol - (18:25): Page Obect which is a DSL for page navigation  \nvmassol - (18:25): with tests  \nvmassol - (18:26): unless you wish to have static methods in LoginPage but that's worse  \nvmassol - (18:26): actually  \nCalebJamesDeLisl - (18:26): Suppose we changed the password for Admin? How many places would have to be changed?  \nvmassol - (18:26): wait  \nvmassol - (18:26): we could do the same thing as junit does with Assert  \nvmassol - (18:26): ie have static imports  \nCalebJamesDeLisl - (18:27): static import LoginPage.LoginAsAdmin?  \nvmassol - (18:27): I still dont think it has anything to do with Login Page  \nvmassol - (18:27): so I'm still agasint that  \nvmassol - (18:27): Login Page is about the login page  \nvmassol - (18:27): doing a post has nothing to do with the login page  \nsdumitriu left at 18:28 (Ping timeout: 260 seconds  \nCalebJamesDeLisl - (18:28): It's nice to have \"Admin\", \"admin\" all in one place.  \nvmassol - (18:28): tha's compltely different  \nvmassol - (18:28): it's about login  \nvmassol - (18:28): not about the login page  \nsdumitriu joined #xwiki at 18:28  \nCalebJamesDeLisl - (18:29): The logic is more compelling for delete, when you delete-confirm something you get a delete page.  \nvmassol - (18:29): it's the same  \nvmassol - (18:29): you can delete without going through the page paradigm  \nvmassol - (18:29): that's why we use confirm=1  \nCalebJamesDeLisl - (18:29): But when you do you end up on a delete page.  \nCalebJamesDeLisl - (18:29): There you have the option to restore.  \nvmassol - (18:29): same for login  \nvmassol - (18:30): you end up on some page  \nvmassol - (18:30): but these do not interest us  \nvmassol - (18:30): when you use that utility api  \nvmassol - (18:30): since we don't care about pages  \nvmassol - (18:30): in those cases  \nvmassol - (18:30): we ignore them  \nCalebJamesDeLisl - (18:30): I thought you like the page object paradigm ;)  \nvmassol - (18:30): otherwise if we don't want to ignore them then we use the page paradigm  \nvmassol - (18:31): no no  \nvmassol - (18:31): you're mixing stuff :)  \nvmassol - (18:31): the page paradigm is to be used when you want to test it  \nvmassol - (18:31): we're not talking about testing it here  \nCalebJamesDeLisl - (18:31): Maybe login should be a function of BasePage because it can be used as an alturnative to open()  \nanna left at 18:31 (Quit: anna  \nvmassol - (18:31): login is a function of BasePAge !!  \nvmassol - (18:32): actually it's viewPage probably  \nvmassol - (18:32): since the login button doesn't exist in edit mode for ex  \nvmassol - (18:32): but again  \nvmassol - (18:32): you're mixing tests with test setup  \nvmassol - (18:32): let me try to reprhase it  \nvmassol - (18:32): we have one test class called LoginLogoutTest  \nvmassol - (18:33): the goal of that page is to test the login/logout using the Page Object strategy  \nvmassol - (18:33): since it's about doing as a user would do  \nvmassol - (18:33): but that's the only test that need to do this  \nCalebJamesDeLisl - (18:33): Currently that login function is used wherever we need admin.  \nvmassol - (18:33): all other tests which test other stuff don't need to retest this  \nCalebJamesDeLisl - (18:33): Agreed.  \nvmassol - (18:33): they just need to have the correct setup  \nvmassol - (18:33): before they start  \nCalebJamesDeLisl - (18:34): I like login as a function of BasePage because you might want to edit page X as admin.  \nvmassol - (18:34): it's wrong IMO  \nvmassol - (18:35): BasePAge must have apis  \nvmassol - (18:35): that are common to all pages  \nCalebJamesDeLisl - (18:35): Even if the button isn't there, as you said we are not testing buttons.  \nvmassol - (18:35): login is not common to all pages  \nvmassol - (18:35): so it shouldn't be there  \nvmassol - (18:35): all PAge Obecet  \nvmassol - (18:35): are representation of UIs  \nvmassol - (18:35): that's their point  \nvmassol - (18:35): s/Obecet/Object/  \nCalebJamesDeLisl - (18:36): So you would require tests to view a page in order to login then login in order to edit a page?  \nvmassol - (18:36): nope I said the opposite just above ;)  \nvmassol - (18:36): suggesting to bypass the page paradigm for logging (except for LoginLogoutTest obviously)  \nvmassol - (18:36): and you said you were about to do this  \nCalebJamesDeLisl - (18:36): When I say login I mean post credentials.  \nvmassol - (18:37): yes  \nCalebJamesDeLisl - (18:37): So if I want to run a test which requires me to edit a page, shouldn't I post credentials with xredirect to that page?  \nCalebJamesDeLisl - (18:38): (to edit action on that page.)  \nvmassol - (18:38): yes we could have an api for that  \nvmassol - (18:38): if we want to save a step  \nCalebJamesDeLisl - (18:38): That's why I wanted a login function in BasePage.  \nvmassol - (18:39): I don't see the relationship  \nvmassol - (18:39): AbstractTest.loginAs(username, password, boolean, PageReference)  \nvmassol - (18:39): pagereference could simply be 2 parameters in practice  \nvmassol - (18:39): space and page  \nCalebJamesDeLisl - (18:39): Why are you passing the page reference, call login on the page.  \nvmassol - (18:40): yes we could pass a PageObject  \nvmassol - (18:40): MyPage page = new MyPage()  \nCalebJamesDeLisl - (18:40): SomePage sp = new SomePage(); \u00a0\u00a0\u00a0sp.loginAs(username, password, rememberMe);  \nvmassol - (18:40): loginAs(\"Admin\", \"admin\", true, page)  \nvmassol - (18:41): btw this is wrong  \nCalebJamesDeLisl - (18:41): sp.loginAs is the same as sp.open() except it posts login credentials.  \nCalebJamesDeLisl - (18:41): wrong?  \nvmassol - (18:41): yes :)  \nvmassol - (18:41): they are similar  \nvmassol - (18:41): but it won't work  \nvmassol - (18:41): hmmm  \nvmassol - (18:41): maybe it will  \nvmassol - (18:42): yes it will  \nvmassol - (18:42): sorry was rthinking about something else  \nvmassol - (18:42): but that's ok actually  \nvmassol - (18:42): we agree except that I disagree to put a non UI action in BasePage  \nCalebJamesDeLisl - (18:42): Hey, I spent last night trying to break java's type safety. I don't know the maening of \"won't work\" ;)  \nvmassol - (18:42): for me all non UI should go in AbstractTest  \nvmassol - (18:43): and if we really find it too big then in static imports  \nCalebJamesDeLisl - (18:43): Well BasePage.open() is in basepage because you need a page to open.  \nvmassol - (18:43): well that's wrong to me  \nvmassol - (18:44): very wrong should I say :)  \nvmassol - (18:44): again it has nothing to do with Page Objects  \nCalebJamesDeLisl - (18:44): So you have util.open(BasePage) ?  \nvmassol - (18:45): yes without the util part  \nvmassol - (18:45): it can return an instance btw  \nCalebJamesDeLisl - (18:45): open returns what?  \nvmassol - (18:45): hmm that will be hard actually  \nvmassol - (18:45): it would work only for well known pages  \nvmassol - (18:45): ;)  \nvmassol - (18:46): so indeed:  \nvmassol - (18:46): MyPage page = new MyPage();  \nvmassol - (18:46): open(page)  \nvmassol - (18:46): I prefer  \nvmassol - (18:46): navigate  \nvmassol - (18:46): to open  \nCalebJamesDeLisl - (18:46): then how does \"open\" know where \"page\" is?  \nvmassol - (18:46): PageObject has a getPageReference method  \nvmassol - (18:47): (or getURL but mmaybe we need finer-grained than getURL))  \nCalebJamesDeLisl - (18:47): So every page knows it's url.  \nCalebJamesDeLisl - (18:47): A page which is not accessable via url cannot exist.  \nvmassol - (18:47): not sure about the url  \nvmassol - (18:47): but at least it knows it's location  \nvmassol - (18:48): s/it's/its/  \nCalebJamesDeLisl - (18:48): I was going to do this but I worried about pages which are only accessable via post.  \nvmassol - (18:49): that works too with location  \nvmassol - (18:49): by definition a page has a location and that's independent of how it's accessed  \nvmassol - (18:50): we could even reuse the Reference code  \nvmassol - (18:50): from xwiki-model  \nCalebJamesDeLisl - (18:50): So what happens if i have a page which is only accessable via post, and I call open(page)?  \nvmassol - (18:51): do you have an example?  \nvmassol - (18:51): what does the test want to do?  \nCalebJamesDeLisl - (18:51): Invitation preview page or sent page should only be available to post requests.  \nvmassol - (18:52): I doubt you'll want to access these directly  \nvmassol - (18:52): without going through the ui  \nCalebJamesDeLisl - (18:52): What happens if you do? Blows up?  \nvmassol - (18:52): why?  \nvmassol - (18:52): I don't understand  \nCalebJamesDeLisl - (18:52): Well you have provided an open function in AbstractTest, let's see what I can try to open.  \nvmassol - (18:52): I really don't understand what you are getting at  \nvmassol - (18:53): it's not open  \nvmassol - (18:53): it's navigate  \nvmassol - (18:53): this has nothing to do with navigatiobn  \nvmassol - (18:53): you just call something  \nCalebJamesDeLisl - (18:53): +4 keystrokes.  \nvmassol - (18:53): and?  \nCalebJamesDeLisl - (18:53): and not familiar to selenium1 test writers.  \nCalebJamesDeLisl - (18:53): Selenium2 uses get  \nvmassol - (18:54): gotoPage is fine too  \nvmassol - (18:54): open just doesn't mean enough  \nCalebJamesDeLisl - (18:54): +1 keystroke ;)  \nvmassol - (18:54): so?  \nvmassol - (18:54): what's the b with keystokes, I don't get it  \nvmassol - (18:54): you want to call it o()?  \nvmassol - (18:54): I'm ?1 to that  \nCalebJamesDeLisl - (18:55): Actually my main attraction to open is that it's familiar to selenium1  \nvmassol - (18:55): I don't think it's a valid criteria at all  \nCalebJamesDeLisl - (18:55): I'm not that concerned with the name though.  \nvmassol - (18:55): selenium2 is not sleeinum1  \nvmassol - (18:55): and the api is compleltely different  \nvmassol - (18:55): sele nium2 is webdriver  \nvmassol - (18:55): a 100% different api  \nvmassol - (18:55): so I don't get the point  \nvmassol - (18:55): :)  \nCalebJamesDeLisl - (18:56): IE is not Firefox but still their idea of javascript is annoying.  \nvmassol - (18:56): and even if it were similar  \nvmassol - (18:56): I will always agree to more clarity rather than less clarity :)  \nvmassol - (18:56): especially in tests and apis  \nCalebJamesDeLisl - (18:56): loadPageAndDisplayInBrowserWindow()  \nCalebJamesDeLisl - (18:56): Ok. this is turning into a bike shed.  \nvmassol - (18:56): yes  \nvmassol - (18:57): this is good  \nvmassol - (18:57): except it has unnecessary redundancies  \nvmassol - (18:57): windows is unnecessary  \nvmassol - (18:57): and browser too since it's only about browsers  \nCalebJamesDeLisl - (18:57): My main concern is where the open function will be.  \nvmassol - (18:58): I don't see any alternative  \nCalebJamesDeLisl - (18:58): If it's a function of the test then it must ask the page where it is.  \nCalebJamesDeLisl - (18:58): Pages which need to so something special to open will not be accessable.  \nCalebJamesDeLisl - (18:58): However the function will still be there so they will fail at runtime.  \nCalebJamesDeLisl - (19:00): If we are to take a page from javascript api then your idea would be the one used.  \nCalebJamesDeLisl - (19:00): like window.loaction=  \nvmassol - (19:01): thanks for the discussion. I have to go now. There's a dinner planned with all neighbours (it's a special neighbour day today) :)  \nCalebJamesDeLisl - (19:02): Thank you. Enjoy yourself.  \nfmancinelli left at 19:02 (Ping timeout: 265 seconds  \narkub left at 19:07 (Quit: Leaving  \nflorinciu joined #xwiki at 19:21  \nflorinciu left at 19:31 (Quit: Leaving.  \ntmortagne left at 19:33 (Quit: Leaving.  \njvdrean left at 19:42 (Quit: Leaving.  \nbblfish left at 19:46 (Quit: Leaving.  \nabusenius left at 19:49 (Ping timeout: 252 seconds  \nmflorea joined #xwiki at 21:05  \nabusenius joined #xwiki at 21:26  \nanamarias joined #xwiki at 21:26  \nanamarias left at 21:35 (Quit: anamarias  \nlucaa joined #xwiki at 21:35  \nflorinciu joined #xwiki at 22:18  \nanamarias joined #xwiki at 22:18  \nanamarias left at 22:22 (Client Quit  \nfmancinelli joined #xwiki at 22:22  \nCalebJamesDeLisl - (22:57): I just realized open could return an undetermined type if it was: \u00a0\u00a0\u00a0public T open(Class<T> clazz)  \nflorinciu left at 23:08 (Quit: Leaving.  \nfmancinelli left at 23:11 (Ping timeout: 260 seconds  \nvmassol left at 23:21 (Quit: Leaving.  \nanna\\_\\_ joined #xwiki at 23:51  \nmflorea left at 23:51 (Quit: Leaving.  \narkub joined #xwiki at 23:56  \n  \n{{/code}}\n"}