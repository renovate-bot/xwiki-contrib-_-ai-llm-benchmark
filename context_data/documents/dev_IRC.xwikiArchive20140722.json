{"id": "dev:IRC.xwikiArchive20140722", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20140722", "title": "IRC Archive for channel #xwiki on 22 July 2014 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<OSIMasson>\u00a0has joined #xwiki  \n00:32\u00a0<OSIMasson>\u00a0has quit  \n00:33\u00a0<vmassol>\u00a0has quit  \n01:31\u00a0<sdumitriu>\u00a0has joined #xwiki  \n01:47\u00a0<OSIMasson>\u00a0has joined #xwiki  \n02:58\u00a0<OSIMasson>\u00a0has quit  \n06:28\u00a0<andreeapopescu>\u00a0has joined #xwiki  \n06:35\u00a0<mflorea>\u00a0has joined #xwiki  \n07:36\u00a0<msmeria>\u00a0has joined #xwiki  \n07:53\u00a0<tmortagne>\u00a0has joined #xwiki  \n07:55\u00a0<tmortagne>\u00a0has joined #xwiki  \n08:09\u00a0<vmassol>\u00a0has joined #xwiki  \n08:28\u00a0<lucaa>\u00a0has joined #xwiki  \n08:32\u00a0<woshilapin>\u00a0has joined #xwiki  \n08:36\u00a0<cjd>\u00a0has joined #xwiki  \n08:43\u00a0<vmassol>\u00a0msmeria: some script running?  \n08:44\u00a0<msmeria>\u00a0vmassol: no. manual work :)  \n08:44\u00a0<lucaa>\u00a0has quit  \n08:44\u00a0<msmeria>\u00a0I'm that fast B-)  \n08:45\u00a0<vmassol>\u00a0ok it's all about the new type value  \n08:45\u00a0<vmassol>\u00a0so it's a script  \n08:45\u00a0<vmassol>\u00a0:)  \n08:45\u00a0<msmeria>\u00a0no script...  \n08:45\u00a0<vmassol>\u00a0what is \"value1\" though?  \n08:45\u00a0<vmassol>\u00a0maybe you should use a better name  \n08:46\u00a0<msmeria>\u00a0it's Admin as the user that has to execute the test  \n08:46\u00a0<vmassol>\u00a0why not use 'admin' as value then?  \n08:46\u00a0<msmeria>\u00a0the value is Admin, value1 is the variable name  \n08:47\u00a0<msmeria>\u00a0look here for ex: http://test.xwiki.org/xwiki/bin/edit/Wiki+Tests/Accept+Join+Request at the Uer Type field  \n08:47\u00a0<msmeria>\u00a0User\\*  \n08:47\u00a0<vmassol>\u00a0I know that the displayed value is \"Admin\" (I guessed that)  \n08:47\u00a0<vmassol>\u00a0still the question stands  \n08:47\u00a0<vmassol>\u00a0I'd never use a variable named value1 in my code  \n08:47\u00a0<vmassol>\u00a0it's so unreadable  \n08:47\u00a0<vmassol>\u00a0:)  \n08:48\u00a0<msmeria>\u00a0so you want me to change value1 to admin ?  \n08:48\u00a0<vmassol>\u00a0value1=Admin|value2=User|value3=Both  \n08:49\u00a0<vmassol>\u00a0depends how much work it is now  \n08:49\u00a0<vmassol>\u00a0it was more a general comment  \n08:49\u00a0<vmassol>\u00a0you do what you want :)  \n08:50\u00a0<vmassol>\u00a0it should be ok IMO since it could a lot of work to change, just think about it for the next time you have to add a property :)  \n08:50\u00a0<msmeria>\u00a0Values (separated by '|'; Example:\u00a0value1=Text displayed for value 1|value2=Text displayed for value 2|value3|value4)  \n08:50\u00a0<msmeria>\u00a0I don't think you can change those...  \n08:50\u00a0<vmassol>\u00a0I know what they are ;)  \n08:50\u00a0<msmeria>\u00a0or if you do, it's a lot of work  \n08:51\u00a0<msmeria>\u00a0I'll leave it as it is for now and try to use better variable names in the future :)  \n09:01\u00a0<lucaa>\u00a0has joined #xwiki  \n09:02\u00a0<msmeria>\u00a0vmassol: I've commited new variable names here: https://github.com/xwiki-contrib/application-testreporting/commit/d14a18cc99f79169038a9da7303adb3805f9c807  \n09:06\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n09:26\u00a0<evalica>\u00a0has joined #xwiki  \n09:27\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:32\u00a0<mflorea>\u00a0has quit  \n09:56\u00a0<mflorea>\u00a0has joined #xwiki  \n09:58\u00a0<ClemensR>\u00a0has joined #xwiki  \n10:08\u00a0<ClemensR>\u00a0has left #xwiki  \n10:38\u00a0<Lyes>\u00a0has joined #xwiki  \n10:59\u00a0<Lyes>\u00a0has quit  \n11:21\u00a0<Lyes>\u00a0has joined #xwiki  \n11:44\u00a0<gdelhumeau>\u00a0has quit  \n11:47\u00a0<Lyes>\u00a0has quit  \n11:47\u00a0<Lyes1>\u00a0has joined #xwiki  \n11:54\u00a0<Emenems>\u00a0has quit  \n11:55\u00a0<Emenems>\u00a0has joined #xwiki  \n11:57\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n11:59\u00a0<Slashman>\u00a0has joined #xwiki  \n12:34\u00a0<vmassol>\u00a0tmortagne: broken link for wikistream here fyi: http://www.xwiki.org/xwiki/bin/view/ReleaseNotes/ReleaseNotesXWiki53  \n12:45\u00a0<woshilapin>\u00a0Hi devs, is there any velocity macro that can be used to display a user like what is done in the template display\\_users.vm?  \n12:46\u00a0<vmassol>\u00a0I don't think so  \n12:46\u00a0<woshilapin>\u00a0(or, rephrase, how to use the code in display\\_users.vm to display a list of user with names, avatars and UID)  \n12:46\u00a0<vmassol>\u00a0would be nice to improve http://extensions.xwiki.org/xwiki/bin/view/Extension/User+Avatar+Macro to do that  \n12:46\u00a0<woshilapin>\u00a0Would you be interested if I move this to a macro (and then transform display\\_users.vm to use this macro)  \n12:47\u00a0<woshilapin>\u00a0Oh, I was just talking about a Velocity macro at this stage  \n12:47\u00a0<vmassol>\u00a0display\\_users.vm supports display several users right?  \n12:47\u00a0<woshilapin>\u00a0Yes  \n12:47\u00a0<vmassol>\u00a0ah no velcoity macro isnot very interesting  \n12:47\u00a0<woshilapin>\u00a0Probably, I would split into 2 velocity macros  \n12:47\u00a0<vmassol>\u00a0but a rendering macro is  \n12:47\u00a0<vmassol>\u00a0:)  \n12:47\u00a0<vmassol>\u00a0now  \n12:47\u00a0<woshilapin>\u00a0It is for readibility  \n12:48\u00a0<vmassol>\u00a0you're right that display\\_users.vm doesn't support rendering macros ATM  \n12:48\u00a0<vmassol>\u00a0(well it can but it's not very nice)  \n12:48\u00a0<vmassol>\u00a0where would you put htat macro? in macros.vm?  \n12:48\u00a0<woshilapin>\u00a0OK, maybe during the seminar, I'll do that  \n12:49\u00a0<woshilapin>\u00a0Don't know  \n12:49\u00a0<woshilapin>\u00a0Where is the best place  \n12:49\u00a0<vmassol>\u00a0yes, I'd also like to do a bit of hacking during the seminar ;)  \n12:49\u00a0<vmassol>\u00a0I don't know the best place. ATM the only place is macros.vm  \n12:49\u00a0<vmassol>\u00a0since that's the only file defined for velocimacros  \n12:50\u00a0<vmassol>\u00a0it's fine for me if you create a new velocimacro  \n12:50\u00a0<woshilapin>\u00a0Yes, but if define them into macros.vm, there is not place for a display\\_users.vm anymore since it will contains 3 lines  \n12:50\u00a0<woshilapin>\u00a0Hum, not exactly, there will be a small place for it  \n12:50\u00a0<vmassol>\u00a0I don't understand  \n12:50\u00a0<woshilapin>\u00a0So OK, I'll try something like that  \n12:50\u00a0<vmassol>\u00a0display\\_users.vm is needed  \n12:51\u00a0<woshilapin>\u00a0Yes, yes  \n12:51\u00a0<vmassol>\u00a0for custom display  \n12:51\u00a0<woshilapin>\u00a0It will just be much smaller  \n12:51\u00a0<vmassol>\u00a0it'll just contain a few lines, you still need to handle both view and edit  \n12:51\u00a0<woshilapin>\u00a0Around 10 lines  \n12:51\u00a0<vmassol>\u00a0well before all this  \n12:51\u00a0<vmassol>\u00a0would be nice to discuss your need/use case  \n12:51\u00a0<vmassol>\u00a0gtg for lunch now!  \n12:51\u00a0<vmassol>\u00a0:)  \n12:51\u00a0<woshilapin>\u00a0OK, we can talk about it later if you want  \n12:52\u00a0<woshilapin>\u00a0For now, I just recopy display\\_users.vm in my project (crappy solution)  \n13:41\u00a0<vmassol>\u00a0woshilapin: \u00a0a user profile macro (rendering macro) would be nice, something similar to https://confluence.atlassian.com/display/DOC/User+Profile+Macro  \n13:42\u00a0<vmassol>\u00a0{{userprofile \u2026/}}  \n13:42\u00a0<vmassol>\u00a0(and {{useravatar/}} would continue to only display the avatar of the user)  \n13:42\u00a0<vmassol>\u00a0but it's probably not what you need for your use case  \n13:43\u00a0<woshilapin>\u00a0I'll see what I can do  \n13:43\u00a0<woshilapin>\u00a0In my case, it's just the 'view' part of the display\\_users.vm that I need  \n14:35\u00a0<gdelhumeau>\u00a0has quit  \n15:10\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n15:20\u00a0<mflorea>\u00a0has quit  \n15:30\u00a0<msmeria>\u00a0has quit  \n15:38\u00a0<mflorea>\u00a0has joined #xwiki  \n15:56\u00a0<mflorea>\u00a0vmassol: ping  \n15:57\u00a0<vmassol>\u00a0mflorea: yes?  \n15:58\u00a0<mflorea>\u00a0I have an issue with webjars. The response content type is not set properly (you always get text/html;charset=ISO-8859-1) and thus you cannot load CSS from webjars  \n15:59\u00a0<vmassol>\u00a0indeed it's not set in WebJarsResourceReferenceHandler  \n15:59\u00a0<mflorea>\u00a0it works for JS, because the browser is permissive, it puts Accept: \\*/\\* on the request  \n15:59\u00a0<mflorea>\u00a0but for CSS, I have Accept: text/css,\\*/\\*;q=0.1  \n15:59\u00a0<vmassol>\u00a0either we try to find out automaitcally or we let the user specify it  \n16:00\u00a0<vmassol>\u00a0or both  \n16:00\u00a0<mflorea>\u00a0how can the user specify it?  \n16:00\u00a0<mflorea>\u00a0as a URL param?  \n16:00\u00a0<vmassol>\u00a0in the URL  \n16:00\u00a0<mflorea>\u00a0ok  \n16:00\u00a0<vmassol>\u00a0yes  \n16:01\u00a0<mflorea>\u00a0that's probably the easies solution  \n16:01\u00a0<vmassol>\u00a0yes  \n16:01\u00a0<mflorea>\u00a0detecting the content type is harder  \n16:01\u00a0<vmassol>\u00a0(and fastest in term of perf)  \n16:02\u00a0<mflorea>\u00a0we could also do a hack and check the resource extension.  \n16:02\u00a0<mflorea>\u00a0file name extension  \n16:03\u00a0<vmassol>\u00a0in this case I'd suggest checking tikka since it does that too  \n16:03\u00a0<vmassol>\u00a0s/checking/using  \n16:03\u00a0<vmassol>\u00a0would just need to check if it also looks in the content by default or not  \n16:03\u00a0<vmassol>\u00a0(I don't remember)  \n16:03\u00a0<vmassol>\u00a0so if user specifies it, then use it, otherwise try to guess it  \n16:04\u00a0<mflorea>\u00a0yep  \n16:05\u00a0<mflorea>\u00a0XWikiAttachment uses new Tika().detect(getFilename());  \n16:05\u00a0<mflorea>\u00a0for getMimeType()  \n16:05\u00a0<vmassol>\u00a0yes  \n16:05\u00a0<mflorea>\u00a0so without reading the content  \n16:05\u00a0<vmassol>\u00a0indeed  \n16:06\u00a0<mflorea>\u00a0now, is it possible to set the header from the ResourceReferenceHandler?  \n16:06\u00a0<mflorea>\u00a0ah  \n16:06\u00a0<vmassol>\u00a0yes  \n16:06\u00a0<vmassol>\u00a0I tihnk so  \n16:06\u00a0<mflorea>\u00a0setContentType on the response  \n16:07\u00a0<vmassol>\u00a0that's for sure yes  \n16:07\u00a0<mflorea>\u00a0ok, I'll make a fix  \n16:08\u00a0<vmassol>\u00a0thanks  \n16:08\u00a0<vmassol>\u00a0working on some xwiki presentation ATM ;)  \n16:08\u00a0<mflorea>\u00a0ok :), I need to do that too, but later  \n16:25\u00a0<Denis>\u00a0has joined #xwiki  \n16:47\u00a0<Lyes>\u00a0has joined #xwiki  \n16:48\u00a0<vmassol>\u00a0bb in 1 hour  \n16:48\u00a0<Lyes1>\u00a0has quit  \n17:16\u00a0<mflorea>\u00a0vmassol: adding the new contentType parameter requires a new signature for the webjars.url method, and it doesn't fill right to add a map for this. I don't see other use cases, I mean other params that we may need. Moreover, we already have the input stream and Tika is reading only a few bytes from the start, resetting the input stream afterwards, so it shouldn't affect the performance.  \n17:17\u00a0<mflorea>\u00a0I'm going to use only tika for now. We can add support for overwriting Tika later  \n17:33\u00a0<evalica>\u00a0has quit  \n17:36\u00a0<Enygma`>\u00a0has quit  \n17:45\u00a0<tmortagne>\u00a0mflorea: it's probably possible keep an instance of the DefaultDetector and reuse it instead of recreating it at each request  \n17:46\u00a0<mflorea>\u00a0tmortagne: right, but is it thread safe?  \n17:46\u00a0<mflorea>\u00a0it should be  \n17:46\u00a0<tmortagne>\u00a0I don't see why not since we don't modify it  \n17:46\u00a0<tmortagne>\u00a0it should be ok  \n17:53\u00a0<sdumitriu>\u00a0has quit  \n17:56\u00a0<sdumitriu>\u00a0has joined #xwiki  \n18:10\u00a0<xwikibot>\u00a0has joined #xwiki  \n18:17\u00a0<gdelhumeau>\u00a0has quit  \n18:17\u00a0<Denis>\u00a0has quit  \n18:28\u00a0<mflorea>\u00a0has quit  \n18:48\u00a0<tmortagne>\u00a0has quit  \n18:57\u00a0<cjd>\u00a0has quit  \n19:02\u00a0<andreeapopescu>\u00a0has left #xwiki  \n19:13\u00a0<woshilapin>\u00a0has quit  \n19:27\u00a0<Slashman>\u00a0has quit  \n19:45\u00a0<vmassol>\u00a0sdumitriu: cool to see you committing clean up \u00a0stuff :)  \n19:48\u00a0<abusenius>\u00a0has joined #xwiki  \n20:29\u00a0<Lyes>\u00a0has quit  \n20:57\u00a0<lucaa>\u00a0has quit  \n21:15\u00a0<sdumitriu>\u00a0vmassol: MockitoComponentMockingRule should call MockitoAnnotations.initMocks, so that we can have @Mock fields  \n21:15\u00a0<sdumitriu>\u00a0WDYT?  \n22:28\u00a0<OSIMasson>\u00a0has joined #xwiki  \n22:31\u00a0<Lyes>\u00a0has joined #xwiki  \n22:45\u00a0<Lyes>\u00a0has quit  \n22:58\u00a0<OSIMasson>\u00a0has quit  \n23:37\u00a0<vmassol>\u00a0sdumitriu: I don't know this feature well, would need to read up on it a bit more to have an opinion. Not sure it's useful though since writing mock(SomeInterface.class) is not really hard  \n23:39\u00a0<sdumitriu>\u00a0vmassol: If a mock is used in many places, you can:  \n23:41\u00a0<sdumitriu>\u00a01. use a class field initialized in a @Before method  \n23:41\u00a0<vmassol>\u00a0sdumitriu: time for bed for me, if you think it's useful either go ahead or send an email on the list to propose it  \n23:41\u00a0<sdumitriu>\u00a02. copy paste a lot of mock(class) code between methods  \n23:41\u00a0<sdumitriu>\u00a03. user a @Mock class field  \n23:42\u00a0<sdumitriu>\u00a03 seems the better choice  \n23:42\u00a0<vmassol>\u00a0would be interesting to see how some of our current code can be improved by this but I'm really not sure  \n23:42\u00a0<vmassol>\u00a0since you need to set up expectations anyway  \n23:42\u00a0<vmassol>\u00a0(which we do in a @Before if you need to share the mock)  \n23:43\u00a0<vmassol>\u00a0I really need to go now :)  \n23:43\u00a0<vmassol>\u00a0nn  \n23:43\u00a0<sdumitriu>\u00a0K, good night  \n23:43\u00a0<vmassol>\u00a0sry  \n23:43\u00a0<vmassol>\u00a0I'm not against it, just not sure how useful it is  \n23:43\u00a0<vmassol>\u00a0has quit\n"}