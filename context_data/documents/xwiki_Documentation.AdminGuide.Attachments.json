{"id": "xwiki:Documentation.AdminGuide.Attachments", "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments", "title": "Attachments", "collection": ["Eval", "Eval-Small", "Eval-Large"], "mimetype": "text/markdown", "language": "en", "content": "\n**Contents*** [Size Limit](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HSizeLimit)\n* [Mimetype Restriction](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HMimetypeRestriction)\n* [Versions](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HVersions)\n* [Deletion](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HDeletion)\n* [Attachment Storage](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HAttachmentStorage)\n\t+ [Filesystem Attachment Store](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HFilesystemAttachmentStore)\n\t\t- [Filesystem attachment store location](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HFilesystemattachmentstorelocation)\n\t\t- [Other considerations](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HOtherconsiderations)\n\t\t\t* [Directory cleanup](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HDirectorycleanup)\n\t+ [Database Attachment Store](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HDatabaseAttachmentStore)\n\t\t- [Switch to database attachment store](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HSwitchtodatabaseattachmentstore)\n* [Attachment display or download](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HAttachmentdisplayordownload)\n* [Upload summary](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HUploadsummary)\n* [Security](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HSecurity)\nAttachments can be uploaded either through the regular [upload action](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/Attachments), [WebDAV](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/WebDAV), [XML-RPC](https://extensions.xwiki.org/xwiki/bin/view/Extension/XML-RPC%20Integration) or [Rest](https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/XWikiRESTfulAPI).  \nAs an administrator you can set limits on the maximum size of an attachment and where the attachments will be stored.\n\n# Size Limit\n\nThe maximum size of an attachment is limited by a configuration parameter in the *XWikiPreferences* document. It is set to 100GB by default (32MB for XWiki < 10.9RC1).  \nTo change it follow these steps:\n\n1. Go to *http://<yourwiki>/xwiki/bin/edit/XWiki/XWikiPreferences?editor=object*\n2. Click on the line that says XWikiPreferences 0 (right below the line that says Objects of type XWiki.XWikiPreferences (1))\n3. Scroll down to the field that says Maximum Upload Size and change the number to whatever size you want (it is expressed in bytes)\n4. Scroll to the bottom and click \"Save\"\n5. Repeat for each (sub)wiki for which you need to increase the size, since currrently this configuration has to be set per wiki\n\nNote that if you've already tried to attach a file and it failed, in order for the new size setting to be taken into account you might need to clear your browser's cache.\n\n# Mimetype Restriction\n\nSee [Attachent Validation Application](https://extensions.xwiki.org/xwiki/bin/view/Extension/Attachment/Validation/UI/).\n\n# Versions\n\nWhen a user uploads an attachment and then uploads another attachment with the exact same name, you can decide whether or not to keep a version history of the attachments like you do with documents.  \nXWiki stores all document attachment versions by default which costs more storage space. If you need only latest versions of attachments, you can disable attachment version control by editing your [xwiki.cfg](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Configuration/) and adding:\n\nxwiki.store.attachment.versioning=0# Deletion\n\nDeleted attachments are stored in a recycle bin so that they can be restored along with the document when rolling back or previewing an earlier version where the attachment should be visible. To disable this feature, edit [xwiki.cfg](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Configuration/) and add:\n\nstorage.attachment.recyclebin=0You can view the list of deleted attachments in your wiki and delete them permanently by going to XWiki.DeletedAttachments in your wiki.\n\n# Attachment Storage\n\nXWiki offers plugin attachment storage mechanisms so you can store your attachments in the database or directly in the filesystem.\n\nGenerally metadata for attachment and deleted attachments stay in the database whatever store is used for the content. The metadata contains the type of store used for the content allowing each attachment to choose a different store. The consequence is that what you configure is the **default** store for a new attachment and not the store used for all attachments.\n\n## Filesystem Attachment Store\n\nThe default since 10.5\n\nThe Filesystem attachment store saves your attachments in files in a directory tree. This means you will have one more thing to do when you back up your data but it also means you can save larger (over one gigabyte) files. Filesystem attachment store implements a two stage commit mechanism to maintain integrity even if the database fails to commit the attachment meta-data.\n\n### Filesystem attachment store location\n\nBy default the filsystem storage is located in a sub-folder (store/file since XWiki 11.0 and storage before) of the permanent directory (defined with the parameter environment.permanentDirectory in the xwiki.properties file). By default it's defined to be data, which is a directory relative to where the Java Servlet Container was started. It's recommend to modify this value to be absolute sure that you can start the Servlet Container from any directory and still have XWiki find the attachments located in this work directory.\n\nFor example:\n\nenvironment.permanentDirectory=/opt/tomcat6/dataSince 11.4 it's possible to set the location of the filesystem store without modifying the general permanent directory using property store.file.directory of the file xwiki.properties.\n\nstore.file.directory=/my/custom/location### Other considerations\n\nIf you are running a [cluster](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Clustering/) you will need \u00a0to have a synchronized storage directory for each node. You can use NFS or other means to mount the disk on each node in the cluster.\n\n#### Directory cleanup\n\nSince [XWiki 6.0M2](https://www.xwiki.org/xwiki/bin/view/ReleaseNotes/ReleaseNotesXWiki61M2), it is possible to save time on startup by preventing XWiki from cleaning up empty directories in the Filesystem Attachment Store. To do this, edit xwiki.properties and set **store.fsattach.cleanOnStartup** to false. If you do this, you will be responsible for cleanup of empty directories yourself.\n\n## Database Attachment Store\n\nThe default before 10.5.\n\nThis attachment storage mechanism stores your attachments in database entries in the [xwikiattachment\\_content](https://www.xwiki.org/xwiki/bin/view/Documentation/DevGuide/DsXWikiAttachmentContent), [xwikiattachment\\_archive](https://www.xwiki.org/xwiki/bin/view/Documentation/DevGuide/XWikiAttachmentArchive) and [xwikiattrecyclebin](https://www.xwiki.org/xwiki/bin/view/Documentation/DevGuide/DsXwikiRecycleBin) tables. This system allows for easy backup of your attachments by dumping the database and keeping all of your data together, but attachment size is memory constrained since the attachment content and archive must all be held in memory. As a general rule, attachments larger than 30MB are not possible.\n\n### Switch to database attachment store\n\nThese settings should read as follows:\n\nxwiki.store.attachment.hint = hibernate  \nxwiki.store.attachment.versioning.hint = hibernate  \nxwiki.store.attachment.recyclebin.content.hint=hibernate  \n  \n# If you need to use database store for the attachment it's probably true for deleted attachments  \nxwiki.store.recyclebin.content.hint = hibernateAlso make sure they are not commented out.\n\nWhen using this attachment store with a MySQL database, you must set the max\\_allowed\\_packet to about 3 times the size of your largest attachment since the attachment and its version history must be saved. See the [MySQL Installation guide](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/InstallationMySQL) for more information.\n\n# Attachment display or download\n\nWhen possible (see [Security section](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Attachments#HSecurity) below) attachments are displayed directly in the browser when accessed.  \nIt is possible for developers to force-downloading an attachment by adding the parameter ?force-download=1 in the attachment URL.\u00a0\n\nXWiki 12.10+\u00a0it's possible to use a dedicated property in xwiki.properties to always force some attachment mime-types to be downloaded:\n\n#-# [Since 12.10]  \n#-# Define the kind of attachment that you always want to be downloaded and never displayed inline.  \n#-# By default this list is empty, but you can specify a list of mime-types (coma separated list of values) which  \n#-# should be always downloaded no matter who attached them or what is the whitelist/blacklist configuration.  \n#-#  \n#-# The distinction with the blacklist configuration above is that the blacklist won't affect file attached by a user  \n#-# with programming rights, while this configuration affect any attachment.  \n# attachment.download.forceDownload=\n\n# Upload summary\n\nXWiki 16.3.0+\u00a0You can enable upload summaries in xwiki.properties to let users add descriptions during attachment uploads.\n\n#-# [Since 16.3.0RC1]  \n#-# Indicate whether or not comments for attachment uploads should be settable from UI, and displayed whenever the  \n#-# attachment revisions are listed. The default is false.  \n# attachment.upload.enableComments=false\n\n# Security\n\nIn order to prevent attacks by using attachments, it's possible to control which attachments' can be directly opened on the browser based on their mimetypes.  \nTwo properties in xwiki.properties allow to control that independently:\n\n#-# [Since 5.2M2]  \n#-# Define the kind of attachment that can be displayed inline. You can either choose to do it through a whitelist  \n#-# (only the mimetypes defined in this list would be displayed inline) or a blacklist (every mimetype that is not in  \n#-# this list would be displayed inline if possible).  \n#-# Note that only one configuration is used between the whitelist and the blacklist, and the whitelist always have  \n#-# the priority over the blacklist. Also note that these configurations exist for security reason so they are only  \n#-# impacting attachments added by users who do not have programming rights.  \n#-# If you want to force downloading some attachments types please check the configuration below.  \n#-#  \n#-# By default we use the following whitelist (coma separated list of values).  \n# attachment.download.whitelist=audio/basic,audio/L24,audio/mp4,audio/mpeg,audio/ogg,audio/vorbis,audio/vnd.rn-realaudio,audio/vnd.wave,audio/webm,image/gif,image/jpeg,image/pjpeg,image/png,image/tiff,text/csv,text/plain,text/xml,text/rtf,video/mpeg,video/ogg,video/quicktime,video/webm,video/x-matroska,video/x-ms-wmv,video/x-flv  \n#-#  \n#-# If you prefer to use a blacklist instead, you can define the forbidden types here, as a coma separated list of  \n#-# values. We advise you to forbid at least the following mimetypes : text/html, text/javascript  \n# attachment.download.blacklist=text/html,text/javascript\n"}