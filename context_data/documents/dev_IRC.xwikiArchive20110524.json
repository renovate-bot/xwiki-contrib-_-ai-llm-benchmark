{"id": "dev:IRC.xwikiArchive20110524", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110524", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:59\u00a0<jvdrean>\u00a0has joined #xwiki  \n01:08\u00a0<DrLou>\u00a0has joined #xwiki  \n01:19\u00a0<sdumitriu>\u00a0has quit  \n01:26\u00a0<jvdrean>\u00a0has quit  \n03:04\u00a0<abusenius>\u00a0has quit  \n04:46\u00a0<DrLou>\u00a0has quit  \n06:45\u00a0<jamesxu>\u00a0has quit  \n06:50\u00a0<mflorea>\u00a0has joined #xwiki  \n07:01\u00a0<Denis>\u00a0has quit  \n07:08\u00a0<Denis>\u00a0has joined #xwiki  \n07:41\u00a0<vmassol>\u00a0has joined #xwiki  \n09:03\u00a0<jvdrean>\u00a0has joined #xwiki  \n09:07\u00a0<jvdrean>\u00a0has quit  \n09:30\u00a0<arkub>\u00a0has joined #xwiki  \n09:31\u00a0<sburjan>\u00a0has joined #xwiki  \n09:52\u00a0<tmortagne>\u00a0has joined #xwiki  \n10:05\u00a0<sdumitriu>\u00a0has joined #xwiki  \n10:18\u00a0<vmassol>\u00a0good morning everyone  \n10:18\u00a0<vmassol>\u00a0let's make all tests pass today and start the release!  \n10:19\u00a0<vmassol>\u00a0hmm seems we still have problem to stop a container: http://ci.xwiki.org/job/xwiki-enterprise-tests/org.xwiki.enterprise$xwiki-enterprise-test-ldap/646/testReport/org.xwiki.test.ldap.framework/XWikiLDAPTestSetup/junit\\_framework\\_TestSuite\\_3301f287/  \n10:19\u00a0<vmassol>\u00a0port 9010 is used  \n10:20\u00a0<+tmortagne>\u00a0vmassol: yep, I just checked cluster stoping and it's not that  \n10:20\u00a0<vmassol>\u00a0it cannot be that tmortagne  \n10:20\u00a0<vmassol>\u00a0(well it could)  \n10:20\u00a0<vmassol>\u00a0cluster comes after ldap tests  \n10:21\u00a0<+tmortagne>\u00a0yep but could be a previous test  \n10:21\u00a0<vmassol>\u00a0yep but then it would fail for module sbefor the ldap one  \n10:21\u00a0<vmassol>\u00a0unless  \n10:21\u00a0<vmassol>\u00a0the container can be stopped and the rmi port left open  \n10:22\u00a0<vmassol>\u00a0hmm no  \n10:22\u00a0<+sburjan>\u00a0vmassol: I'm still investigating the oracle issue  \n10:22\u00a0<+sburjan>\u00a0good morning by the way  \n10:22\u00a0<vmassol>\u00a0we're setting up the rmi port for all func tests  \n10:22\u00a0<vmassol>\u00a0so if the cluster tests were leaving it up the next test serie would fail before the ldap tests  \n10:23\u00a0<+tmortagne>\u00a0sure  \n10:23\u00a0<vmassol>\u00a0maybe we need to cehck for port 9010 during the stop  \n10:23\u00a0<+tmortagne>\u00a0but then it mean it the test just before LDAP then  \n10:23\u00a0<+tmortagne>\u00a0or LDAP itself  \n10:23\u00a0<+tmortagne>\u00a0hmm wait  \n10:23\u00a0<vmassol>\u00a0and wait till it's not responding  \n10:23\u00a0<+tmortagne>\u00a0ha I maybe know actually  \n10:23\u00a0<+tmortagne>\u00a0wondering what is the port used by LDAP server  \n10:24\u00a0<vmassol>\u00a09001 was used by hsqldb  \n10:24\u00a0<vmassol>\u00a0(when in standalone mode)  \n10:24\u00a0<vmassol>\u00a0fyi  \n10:24\u00a0<vmassol>\u00a0I don't know about the LDAP server  \n10:24\u00a0<vmassol>\u00a0hope it's not 9010 ;)  \n10:24\u00a0<+tmortagne>\u00a0well that would be the most simple explanation  \n10:24\u00a0<vmassol>\u00a0yep  \n10:25\u00a0<+tmortagne>\u00a0LDAP serveer is \"finding\" on open port but checking from what port it start to search  \n10:27\u00a0<vmassol>\u00a0tmortagne: I don't see what the ldap server is started  \n10:27\u00a0<vmassol>\u00a0I see LDAPRunner.start()  \n10:27\u00a0<vmassol>\u00a0but I don't see where it's started in that method  \n10:27\u00a0<vmassol>\u00a0I only see importLdif(this.getClass().getResourceAsStream(\"init.ldif\"));  \n10:27\u00a0<vmassol>\u00a0is that what starts the server?  \n10:27\u00a0<+tmortagne>\u00a0setUp();  \n10:28\u00a0<vmassol>\u00a0oh AbstractServerTest is part of the ldap framework  \n10:28\u00a0<+tmortagne>\u00a0AbstractServerTest is a apache ds helper to run LDAP tests  \n10:28\u00a0<vmassol>\u00a0ok  \n10:28\u00a0<+tmortagne>\u00a0and when it find a port it set it in port variable  \n10:28\u00a0<+tmortagne>\u00a0will add a log  \n10:29\u00a0<+tmortagne>\u00a0maybe there is a log already actually checking  \n10:30\u00a0<+tmortagne>\u00a0no, no port  \n10:30\u00a0<+tmortagne>\u00a0s/pmort/log/  \n10:34\u00a0<+tmortagne>\u00a0no does not seems to be it, for me it started on port 1024  \n10:34\u00a0<+tmortagne>\u00a0will see what port is used in jenkins but I don't thing that's it  \n10:36\u00a0<+tmortagne>\u00a0vmassol: does not seems to fail all the time also since looks like the current build does not have the issue, but last time it failed it was on agent-2  \n10:37\u00a0<+tmortagne>\u00a0so maybe it's related to agent-2  \n10:37\u00a0<vmassol>\u00a0yeah IMO it's a timing issue to stop correctly hte container  \n10:37\u00a0<+tmortagne>\u00a0it's not supposed to contibnue until the containier is stopped  \n10:37\u00a0<vmassol>\u00a0I'll try to google this a bit  \n10:48\u00a0<+tmortagne>\u00a0vmassol: agent also have lots of network issue, It just goot a timeout on http://repo1.maven.org/maven2 and it's not the first time  \n10:48\u00a0<+tmortagne>\u00a0http://repo1.maven.org/maven2 is working well  \n10:49\u00a0<+tmortagne>\u00a0actually I was wrong the last test on agent-1 have the issue  \n10:49\u00a0<+tmortagne>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-tests/org.xwiki.enterprise$xwiki-enterprise-test-ldap/646/testReport/org.xwiki.test.ldap.framework/XWikiLDAPTestSetup/junit\\_framework\\_TestSuite\\_3301f287/  \n10:50\u00a0<+tmortagne>\u00a0on LDAP only it seems  \n10:51\u00a0<+tmortagne>\u00a0same for webdav which follow LDAP  \n10:51\u00a0<+tmortagne>\u00a0but others don't  \n10:52\u00a0<+tmortagne>\u00a0actually not only, selenium 1 have the issue, it's executed just before LDAP  \n10:52\u00a0<+tmortagne>\u00a0so it's definitely not related to LDAP  \n10:53\u00a0<+tmortagne>\u00a0so \u00a0in the last build it's selenium followed by LDAP followed by webdav and no other  \n10:53\u00a0<vmassol>\u00a0test-ui seems ok  \n10:53\u00a0<vmassol>\u00a0so indeed it seems the stopping of the rmi port after the test-ui tests  \n10:53\u00a0<vmassol>\u00a0(since seleinum tests come just after)  \n10:53\u00a0<+tmortagne>\u00a0not that it's the same in previous build too  \n10:53\u00a0<+tmortagne>\u00a0so it's not that random  \n10:54\u00a0<+tmortagne>\u00a0llooking at all previous builds  \n10:54\u00a0<+tmortagne>\u00a0there is more in 643  \n10:56\u00a0<+tmortagne>\u00a0so yes maybe it's not all but there is some timing issue probably  \n11:06\u00a0<vmassol>\u00a0tmortagne: we're not waiting for the stop to be over in XWikiExecutor  \n11:07\u00a0<vmassol>\u00a0I'm going to try to change this  \n11:07\u00a0<pulasthi>\u00a0has joined #xwiki  \n11:07\u00a0<pulasthi>\u00a0cjdelisle : hi  \n11:18\u00a0<vmassol>\u00a0hmmm the stop script should return only after jetty is stopped  \n11:18\u00a0<vmassol>\u00a0(tmortagne)  \n11:18\u00a0<vmassol>\u00a0so I don't think we should need to wait in the java code  \n11:19\u00a0<+tmortagne>\u00a0yep that's what I meat  \n11:22\u00a0<vmassol>\u00a0for build 645 the issue was in misc tests it seems since other tests after it failed with the port already in use  \n11:22\u00a0<+tmortagne>\u00a0s/meat/meant/  \n11:22\u00a0<vmassol>\u00a0however the console log shows a correct stop: http://ci.xwiki.org/job/xwiki-enterprise-tests/645/org.xwiki.enterprise$xwiki-enterprise-test-misc/console  \n11:22\u00a0<pulasthi>\u00a0has quit  \n11:22\u00a0<pulasthi>\u00a0has joined #xwiki  \n11:26\u00a0<vmassol>\u00a0the stop in misc was 1 minute before the start in xmlrpc tests  \n11:26\u00a0<vmassol>\u00a003:44:58.564  \n11:26\u00a0<vmassol>\u00a003:46:03,838  \n11:26\u00a0<vmassol>\u00a0so it had 1 extra minute to stop correctly  \n11:26\u00a0<vmassol>\u00a0that's a lot  \n11:27\u00a0<+tmortagne>\u00a0yes 1 min seems big  \n11:28\u00a0<+tmortagne>\u00a0myxwiki.org does not seems to be in a very good shape  \n11:36\u00a0<+sburjan>\u00a0any idea how can I explort a Space to a XAR but to have attachments in the XAR ? it seems that Import Export Application is unable to do that  \n11:40\u00a0<+tmortagne>\u00a0sburjan: you can modify one line in http://extensions.xwiki.org/xwiki/bin/view/Extension/Large+Wiki+Export to export a space instead of the whole wiki  \n11:40\u00a0<+tmortagne>\u00a0this line:  \n11:41\u00a0<+tmortagne>\u00a0int total = wiki.getStore().search(\"select distinct count(doc.name) from XWikiDocument as doc\", 0, 0, context).get(0)  \n11:41\u00a0<+tmortagne>\u00a0add a where about the space name  \n11:41\u00a0<+sburjan>\u00a0tmortagne: if I add attachments in XAR and re-pack it should be ok ?  \n11:41\u00a0<+tmortagne>\u00a0sburjan: how would you do that ? attachments are suposed to ba encoded in the page XML itself  \n11:41\u00a0<+tmortagne>\u00a0you cna't just put the files in the xar package  \n11:42\u00a0<vmassol>\u00a0tmortagne: I see jetty still running on an agent  \n11:42\u00a0<vmassol>\u00a0even though there's no tesst active rigth now  \n11:42\u00a0<+tmortagne>\u00a0vmassol: yep i seen gost yesterday too  \n11:42\u00a0<+sburjan>\u00a0tmortagne: thanks  \n11:42\u00a0<vmassol>\u00a0tmortagne: do you know what agent is hudsonagent@ks201485 ?  \n11:42\u00a0<+tmortagne>\u00a0let me check  \n11:42\u00a0<+tmortagne>\u00a02  \n11:43\u00a0<+tmortagne>\u00a0agent-2  \n11:43\u00a0<vmassol>\u00a0ok so the last build is http://ci.xwiki.org/job/xwiki-enterprise-tests/647/console  \n11:43\u00a0<vmassol>\u00a0but indeed if it's already started ebfore a full test run, it'snot going to stop  \n11:43\u00a0<vmassol>\u00a0since it's failing with a port already in use  \n11:44\u00a0<vmassol>\u00a0btw this is strange\u2026. hmmm  \n11:44\u00a0<Enygma`>\u00a0has joined #xwiki  \n11:44\u00a0<vmassol>\u00a0since in our xwikiexecutor we check if the server is already started  \n11:44\u00a0<+tmortagne>\u00a0yep  \n11:44\u00a0<+tmortagne>\u00a0and it was working last time I trying executing test from Eclipse  \n11:45\u00a0<+tmortagne>\u00a0s/trying/tried/  \n11:45\u00a0<vmassol>\u00a0btw we also have:  \n11:45\u00a0<vmassol>\u00a0Exception in thread \"main\" java.net.BindException: Selenium is already running on port 4444. Or some other service is.  \n11:45\u00a0<vmassol>\u00a0on http://ci.xwiki.org/job/xwiki-enterprise-tests/647/console  \n11:45\u00a0<+tmortagne>\u00a0sburjan: actually it's two lines, you also need to add the filter in  \n11:46\u00a0<+tmortagne>\u00a0documentNames = wiki.getStore().search(\"select doc.web, doc.name from XWikiDocument as doc\", 100, offset, context)  \n11:46\u00a0<+tmortagne>\u00a0the first one in the count and the second the one really getting the documents names  \n11:46\u00a0<+tmortagne>\u00a0vmassol: it's like a running test was killed  \n11:47\u00a0<+sburjan>\u00a0tmortagne: seems that Import Export app explort the attachments. But dummy me I was looking for the files in the xar, i didn't knew they were actually encoded in the XML  \n11:47\u00a0<+tmortagne>\u00a0sburjan: ok  \n12:01\u00a0<abusenius>\u00a0has joined #xwiki  \n12:03\u00a0<@sdumitriu>\u00a0abusenius, cjdelisle: http://www.h-online.com/security/news/item/Successful-timing-attacks-on-elliptic-curve-cryptography-1247772.html  \n12:11\u00a0<pulasthi>\u00a0has left #xwiki  \n12:15\u00a0<+abusenius>\u00a0yea, no wonder, ECC is no better in that respect than RSA  \n12:16\u00a0<+abusenius>\u00a0just the key is smaller, so the time difference  \n12:22\u00a0<@sdumitriu>\u00a0Fixed validation tests  \n12:22\u00a0<@sdumitriu>\u00a0Nope, escaping test  \n12:23\u00a0<@sdumitriu>\u00a0The tests still fail to run:  \n12:23\u00a0<@sdumitriu>\u00a0java.rmi.server.ExportException: Port already in use: 9010; nested exception is: \u00a0 java.net.BindException: Address already in use  \n12:25\u00a0<vmassol>\u00a0sdumitriu: yes, we still have no clue why this is happening  \n12:25\u00a0<@sdumitriu>\u00a0vmassol: About XWIKI-5970, what do you think is best: ignore the problem, and change our code so that it doesn't pass media=json in the query string, or deploy a patched version of the com.noelios.restlet jar?  \n12:28\u00a0<vmassol>\u00a0sdumitriu: I don't enough to answer  \n12:29\u00a0<vmassol>\u00a0if we don't need media=json for it to work then we should remove it  \n12:29\u00a0<vmassol>\u00a0I commented on the issue too  \n12:29\u00a0<vmassol>\u00a0we need to log an issue against RESTlet asap  \n12:29\u00a0<vmassol>\u00a0if you do this then I can ping jerome louvel  \n12:44\u00a0<vmassol>\u00a0tmortagne: did you stop the stray java process on agent2?  \n12:44\u00a0<+tmortagne>\u00a0vmassol: not today  \n12:44\u00a0<vmassol>\u00a0if not then it solved by itself: http://ci.xwiki.org/job/xwiki-enterprise-tests/647/org.xwiki.enterprise$xwiki-enterprise-test-misc/console  \n12:45\u00a0<+tmortagne>\u00a0checking something  \n12:45\u00a0<vmassol>\u00a0hmm then it failed again in xmlrpc tests: http://ci.xwiki.org/job/xwiki-enterprise-tests/647/org.xwiki.enterprise$xwiki-enterprise-test-xmlrpc/console  \n12:45\u00a0<+tmortagne>\u00a0hmm no nothing  \n12:47\u00a0<vmassol>\u00a0hmm strange I don't see the logs I've added on the latest enterprise tests run: http://ci.xwiki.org/job/xwiki-enterprise-tests/648/org.xwiki.enterprise$xwiki-enterprise-test-misc/console  \n12:48\u00a0<vmassol>\u00a0also http://ci.xwiki.org/job/xwiki-enterprise-tests/648/org.xwiki.enterprise$xwiki-enterprise-test-misc/console doesn't show the correct stop this time  \n12:48\u00a0<+tmortagne>\u00a0Executing 'sh' with arguments: '-f' 'stop\\_xwiki.sh' '8079'  \n12:48\u00a0<+tmortagne>\u00a0is not right ?  \n12:49\u00a0<vmassol>\u00a0yes but normally there's a log from jetty  \n12:49\u00a0<vmassol>\u00a0saying that it was gracefully shut down  \n12:49\u00a0<+tmortagne>\u00a0hmm maybe it's because of the exception then  \n12:49\u00a0<vmassol>\u00a0no  \n12:49\u00a0<vmassol>\u00a0it was there before too  \n12:49\u00a0<vmassol>\u00a0and there was still this message  \n12:49\u00a0<+tmortagne>\u00a0this exception is not nice anyway  \n12:50\u00a0<vmassol>\u00a0hmm the graceful message doesn't always appear  \n12:50\u00a0<vmassol>\u00a0it's there for ex: http://ci.xwiki.org/job/xwiki-enterprise-tests/645/org.xwiki.enterprise$xwiki-enterprise-test-misc/console  \n12:50\u00a0<vmassol>\u00a0but it hasn't been there from build 646 till 648  \n12:50\u00a0<+tmortagne>\u00a0I see  \n12:50\u00a0<vmassol>\u00a0the exception isn't nice that's the one I mentioned to you the other day  \n12:51\u00a0<vmassol>\u00a0I looked at it but couldn't understand why  \n12:51\u00a0<+tmortagne>\u00a0yes I know but still don'y know what's wrong  \n12:51\u00a0<+tmortagne>\u00a0looks like some log is not here, maybe it's a jenkins bug  \n12:52\u00a0<+tmortagne>\u00a02011-05-24 03:44:58,457 [http://localhost:8080/xwiki/bin/export/Main/WebHome?format=html] WARN \u00a0o.x.v.i.DefaultVelocityEngine \u00a0- Deprecated usage of method [com.xpn.xwiki.api.XWiki.parseMessage] in /templates/exceptioninline.vm@1,24  \n12:52\u00a0<+tmortagne>\u00a0should be always there  \n12:52\u00a0<+tmortagne>\u00a0if we always call this URL  \n12:52\u00a0<vmassol>\u00a0I've added some more logging  \n12:52\u00a0<vmassol>\u00a0but I don't see it displayed  \n12:52\u00a0<vmassol>\u00a0(I've added them in XWikiExecutor)  \n12:53\u00a0<vmassol>\u00a0hm did I push\u2026 cheecking  \n12:53\u00a0<+tmortagne>\u00a0I always forget  \n12:53\u00a0<vmassol>\u00a0ok I didn't push :)  \n13:01\u00a0<abusenius>\u00a0has quit  \n13:16\u00a0<evalica>\u00a0has joined #xwiki  \n13:22\u00a0<mflorea>\u00a0has quit  \n13:25\u00a0<Enygma`>\u00a0has quit  \n13:28\u00a0<evalica>\u00a0has quit  \n13:35\u00a0<jvelociter>\u00a0has joined #xwiki  \n13:38\u00a0<@cjdelisle>\u00a0Good morning, I think it makes sense to start releasing now and I think I will propose a post-release freeze on features until we have all test pass at least once WDYT?  \n13:41\u00a0<+sburjan>\u00a0i don't understand. In #647 we had only 2 ui-tests faiing. in #648 we have 16 failing  \n13:41\u00a0<@cjdelisle>\u00a0are the 2 that fail the AllTests class?  \n13:42\u00a0<+tmortagne>\u00a0sburjan: the 2 test are not real tests  \n13:42\u00a0<+tmortagne>\u00a0they just mean XWiki did not even started  \n13:42\u00a0<+sburjan>\u00a0oh  \n13:46\u00a0<@cjdelisle>\u00a0most of these failing tests are flickers, yesterday I saw as few as 5 tests failing.  \n13:47\u00a0<@cjdelisle>\u00a0I think we need a combination of a post release freeze on changes and a removal of tests which are observed to pass then fail  \n13:48\u00a0<vmassol>\u00a0yes we need to quarantine flickering tests  \n13:53\u00a0<@cjdelisle>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-tests/649/#showFailuresLink  \n13:53\u00a0<@cjdelisle>\u00a0four failures, three of which are known to flicker.  \n13:54\u00a0<@cjdelisle>\u00a0when this test cycle is done I intend to build on executor 1.  \n14:02\u00a0<alex-xwiki>\u00a0has joined #xwiki  \n14:05\u00a0<DrLou>\u00a0has joined #xwiki  \n14:07\u00a0<mflorea>\u00a0has joined #xwiki  \n14:22\u00a0<pulasthi1>\u00a0has joined #xwiki  \n14:23\u00a0<pulasthi1>\u00a0cjdelisle :hi :)  \n14:23\u00a0<@cjdelisle>\u00a0hey pulasthi1  \n14:24\u00a0<@cjdelisle>\u00a0I'm really sorry, it seems like every time we talk I am doing a release  \n14:24\u00a0<@cjdelisle>\u00a0it's because xwiki releases every day  \n14:24\u00a0<@cjdelisle>\u00a0;)  \n14:24\u00a0<pulasthi1>\u00a0cjdelisle: i was away for some time sdue to some personal matters  \n14:24\u00a0<pulasthi1>\u00a0i did look into the code a bit  \n14:25\u00a0<@cjdelisle>\u00a0cool, is there anything that jumped out at you or you had questions about?  \n14:25\u00a0<pulasthi1>\u00a0not really so i was planning on starting work on the project and to put in some real time  \n14:26\u00a0<abusenius>\u00a0has joined #xwiki  \n14:26\u00a0<@cjdelisle>\u00a0awesome, we need to work on two fronts. First we need to be able to load and store XWikiDocuments and supporting objects in Cassandra  \n14:28\u00a0<@cjdelisle>\u00a0Then we need to improve the Cassandra plugin so that it will A) support JPQL (because JPQL is so similar to XWQL), \u00a0B) support querying of properties in nested objects, and C) support queries against non-indexed fields.  \n14:28\u00a0<pulasthi1>\u00a0and we still need to add a patch to the datanuclues plugin right  \n14:29\u00a0<@cjdelisle>\u00a0Yes but we don't need to work too closely with the original developer, we can simply fork the project and work at our own leasure  \n14:29\u00a0<pulasthi1>\u00a0ok so shall i start working on the cassendra plugin part i can easily put upto 4-5 hours for the project :)  \n14:29\u00a0<pulasthi1>\u00a0in a day  \n14:30\u00a0<pulasthi1>\u00a0that might vary ;)  \n14:30\u00a0<@cjdelisle>\u00a0Nice. Maybe the first thing to do is get it to be able to query against non-indexed fields.  \n14:31\u00a0<pulasthi1>\u00a0first i have to look at the existing code base( i didnt really have time to do anything the last two weeks :/)  \n14:31\u00a0<@cjdelisle>\u00a0Yea, now that you have read XWiki you can read DataNucleus... \u00a0reading and more reading....  \n14:32\u00a0<pulasthi1>\u00a0:)  \n14:33\u00a0<pulasthi1>\u00a0you took a look at that code right?  \n14:34\u00a0<@cjdelisle>\u00a0I did  \n14:34\u00a0<@cjdelisle>\u00a0Here you can see an illustration of the problem:  \n14:34\u00a0<@cjdelisle>\u00a0https://github.com/cjdelisle/xwiki-store-datanucleus/blob/master/src/test/java/org/xwiki/store/datanucleus/test/AppTest.java#L76  \n14:35\u00a0<pulasthi1>\u00a0ahh i have that project forked  \n14:35\u00a0<@cjdelisle>\u00a0oh you're the one who forked me  \n14:35\u00a0<pulasthi1>\u00a0yep :)  \n14:36\u00a0<@cjdelisle>\u00a0I was that and was going to look (and make adolescent jokes)  \n14:36\u00a0<@cjdelisle>\u00a0\"SELECT FROM org.xwiki.store.datanucleus.test.Document WHERE content == \\\"ContentA\\\" && notIndexed == \\\"Hello\\\"\"  \n14:36\u00a0<@cjdelisle>\u00a0^that works  \n14:36\u00a0<@cjdelisle>\u00a0however  \n14:36\u00a0<@cjdelisle>\u00a0\"SELECT FROM org.xwiki.store.datanucleus.test.Document WHERE notIndexed == \\\"Hello\\\"\"  \n14:36\u00a0<@cjdelisle>\u00a0that would fail with an error  \n14:36\u00a0<pulasthi1>\u00a0ill take a look and let you know if i get stuck :)  \n14:36\u00a0<pulasthi1>\u00a0hmmm  \n14:37\u00a0<@cjdelisle>\u00a0the reason is because Cassandra can't select by non-indexed fields.  \n14:37\u00a0<pulasthi1>\u00a0the problem is in the plugin right?  \n14:37\u00a0<vmassol>\u00a0rebuilding all tests locally  \n14:38\u00a0<@cjdelisle>\u00a0The reason why the first query works is because the Cassandra plugin is clever enough to know that it just needs to get \\*every\\* entry forwhich content is \"ContentA\" then pass the results along to DataNucleus for further processing  \n14:38\u00a0<+tmortagne>\u00a0sdumitriu: could you give me rights admin right on https://github.com/xwiki-contrib/ to take care of android GSOC ?  \n14:38\u00a0<@cjdelisle>\u00a0Then DataNucleus filters those results against the query and removes all results where notindexed is not equal to \"Hello\"  \n14:38\u00a0<@sdumitriu>\u00a0Sure  \n14:38\u00a0<@cjdelisle>\u00a0make any sense?  \n14:39\u00a0<+tmortagne>\u00a0sdumitriu: thanks  \n14:39\u00a0<pulasthi1>\u00a0hmm yep to some extent  \n14:40\u00a0<@cjdelisle>\u00a0ok  \n14:40\u00a0<pulasthi1>\u00a0:)  \n14:40\u00a0<pulasthi1>\u00a0the problem is with the interface with datanucles plugin and cassendra it cant stright away search based on the notindexed property  \n14:40\u00a0<@sdumitriu>\u00a0tmortagne: Done  \n14:40\u00a0<pulasthi1>\u00a0am i right  \n14:40\u00a0<+tmortagne>\u00a0sdumitriu: cool, creating the repository now  \n14:41\u00a0<@cjdelisle>\u00a0Yes, Cassandra can't handle the non-indexed property so the query fails.  \n14:41\u00a0<@cjdelisle>\u00a0Instead of failing it should simply select all entries of that type and pass them all to DataNucleus for further filtering.  \n14:41\u00a0<@cjdelisle>\u00a0It would me slow but slow is better than broken queries.  \n14:42\u00a0<pulasthi1>\u00a0k ill take a look at the code and try to get familiar \u00a0with it :)  \n14:43\u00a0<@cjdelisle>\u00a0That should be a reasonably easy jumping off point.  \n14:43\u00a0<@cjdelisle>\u00a0https://github.com/cjdelisle/xwiki-store-datanucleus/blob/master/src/test/java/org/xwiki/store/datanucleus/test/AppTest.java#L160  \n14:43\u00a0<pulasthi1>\u00a0hmm :)  \n14:43\u00a0<@cjdelisle>\u00a0The other two needed improvments are described in these comments but they will be significantly more complex.  \n14:44\u00a0<jamesxu>\u00a0has joined #xwiki  \n14:44\u00a0<pulasthi1>\u00a0lets start with the easy one :)  \n14:45\u00a0<@cjdelisle>\u00a0haha agent1 has la aliased to ls  \n14:48\u00a0<@cjdelisle>\u00a0branching commons for release  \n15:04\u00a0<pulasthi>\u00a0has joined #xwiki  \n15:05\u00a0<pulasthi1>\u00a0has quit  \n15:19\u00a0<+sburjan>\u00a0vmassol: I might have something regarding oracle issue  \n15:20\u00a0<vmassol>\u00a0sburjan: yes? BTW are there any blocker in your tests for the 3.1M2 release?  \n15:21\u00a0<+sburjan>\u00a0XE-919  \n15:21\u00a0<@cjdelisle>\u00a0Who has the jenkins agent1 key in their github account?  \n15:21\u00a0<@cjdelisle>\u00a0\"Oops! The key has already been taken.\"  \n15:21\u00a0<@cjdelisle>\u00a0I suppose I could commit something and we'll know who ;)  \n15:22\u00a0<+tmortagne>\u00a0probably the last one whi did the release so that would be marta or sdumitriu if the key was sdumitriu key  \n15:22\u00a0<+tmortagne>\u00a0(2.7.2 release)  \n15:22\u00a0<@sdumitriu>\u00a0Wait  \n15:23\u00a0<@cjdelisle>\u00a0actually it doesn't matter, I don't need to push anything upstream to do the release, I'm releasing from a branch that I'll delete as soon as it's done anyway  \n15:24\u00a0<+tmortagne>\u00a0cjdelisle: well you need to tag at least  \n15:24\u00a0<@cjdelisle>\u00a0ahh that is true  \n15:24\u00a0<@sdumitriu>\u00a0cjdelisle: Removed the key, you can go on  \n15:24\u00a0<@cjdelisle>\u00a0thanks  \n15:26\u00a0<@sdumitriu>\u00a0cjdelisle: Should we PGP sign the tags?  \n15:26\u00a0<jamesxu>\u00a0has quit  \n15:29\u00a0<jamesxu>\u00a0has joined #xwiki  \n15:31\u00a0<@cjdelisle>\u00a0interesting question  \n15:31\u00a0<pulasthi>\u00a0has quit  \n15:31\u00a0<@cjdelisle>\u00a0I don't know a whole lot about how you do signing through git but I would think that would require pushing from localhost, no?  \n15:32\u00a0<@sdumitriu>\u00a0Well, the manual part is simple: git tag -s  \n15:32\u00a0<@cjdelisle>\u00a0so I would pull the tag to local then push it again signed?  \n15:32\u00a0<@sdumitriu>\u00a0Reading  \n15:33\u00a0<@sdumitriu>\u00a0Hm, there's no option for the maven-release-plugin to use the -s parameter  \n15:34\u00a0<@cjdelisle>\u00a0if the key is on agent1 then the signature might as well be crayon  \n15:34\u00a0<@sdumitriu>\u00a0But I guess that if you use pushChanges=false, then you can manually re-tag  \n15:34\u00a0<@cjdelisle>\u00a0hmm  \n15:36\u00a0<@sdumitriu>\u00a0So, release on agent1, but push only the release commits to github, don't push the tag; add your computer as a remote, and push the tag to your computer; checkout the tag, create a new signed tag, delete the unsigned tag; push the tag to github  \n15:36\u00a0<@sdumitriu>\u00a0WDYT?  \n15:36\u00a0<@sdumitriu>\u00a0Too complex?  \n15:37\u00a0<@cjdelisle>\u00a0shouldn't the tag's sha1 be equal to a sha1 of a commit against the branch?  \n15:37\u00a0<@sdumitriu>\u00a0(actually git tag -f -s will replace the old tag in one move)  \n15:37\u00a0<@sdumitriu>\u00a0Nope  \n15:37\u00a0<@sdumitriu>\u00a0The tag is a distinct object  \n15:38\u00a0<@sdumitriu>\u00a0It contains the sha of the commit inside, but has its own sha  \n15:38\u00a0<@cjdelisle>\u00a0so I can get the sha1 of the commit which is tagged  \n15:38\u00a0<@cjdelisle>\u00a0then I can push the branch, checkout the sha1 on local, tag and push  \n15:39\u00a0<@sdumitriu>\u00a0Yep  \n15:39\u00a0<@cjdelisle>\u00a0then I don't need to be messing with my nat and not sleeping well because I have w0rld open ports  \n15:40\u00a0<@sdumitriu>\u00a0For example:  \n15:40\u00a0<@sdumitriu>\u00a0git cat-file -p xwiki-platform-3.1-milestone-1  \n15:41\u00a0<@cjdelisle>\u00a0what does that do?  \n15:41\u00a0<pulasthi>\u00a0has joined #xwiki  \n15:41\u00a0<@sdumitriu>\u00a0First row should be:  \n15:41\u00a0<@sdumitriu>\u00a0object 0ccb476875da6a9cf07b37cc0f5ca7a59f26f667  \n15:41\u00a0<@sdumitriu>\u00a0That's the ID of the commit you should tag  \n15:41\u00a0<@cjdelisle>\u00a0ahh  \n15:41\u00a0<@sdumitriu>\u00a0(prints the raw blob of the tag object)  \n15:42\u00a0<@cjdelisle>\u00a0checking man page...  \n15:43\u00a0<@sdumitriu>\u00a0After pushing the signed tag, you should delete it from agent1 and pulling the new tag from origin  \n15:44\u00a0<@cjdelisle>\u00a0yup  \n15:44\u00a0<@sdumitriu>\u00a0Now, the PGP signature is only meaningful if we can verify it against a key  \n15:44\u00a0<@sdumitriu>\u00a0Where do we put our keys?  \n15:44\u00a0<@sdumitriu>\u00a0(public)  \n15:45\u00a0<@cjdelisle>\u00a0good question, mine is attached to my user document on xwiki.org  \n15:50\u00a0<+sburjan>\u00a0are we releasing with XE-919 unfixed ?  \n15:51\u00a0<@sdumitriu>\u00a0I think it is fixed  \n15:51\u00a0<+sburjan>\u00a0it should be closed then.  \n15:53\u00a0<@cjdelisle>\u00a0how can I get info about the tag I just made?  \n15:53\u00a0<@cjdelisle>\u00a0I want to see some pretty text before I push it  \n16:00\u00a0<@cjdelisle>\u00a0looks like it worked  \n16:02\u00a0<@sdumitriu>\u00a0cjdelisle: git cat-file should do that  \n16:03\u00a0<@sdumitriu>\u00a0Or git show  \n16:06\u00a0<@cjdelisle>\u00a0yup, done and just recorded the process  \n16:06\u00a0<@cjdelisle>\u00a0I'll add that to release process.  \n16:15\u00a0<@cjdelisle>\u00a0export VERSION=3.1-milestone-2  \n16:15\u00a0<@cjdelisle>\u00a0hehe can't believe it took till now to think of that one  \n16:21\u00a0<pulasthi1>\u00a0has joined #xwiki  \n16:21\u00a0<pulasthi1>\u00a0has left #xwiki  \n16:22\u00a0<sdumitriu>\u00a0has quit  \n16:22\u00a0<pulasthi>\u00a0has quit  \n16:24\u00a0<@cjdelisle>\u00a0I'd like to switch from using project.version to using parent.version to set ${commons.version} in other projects because it eliminates the need to manually modify the pom files during release.  \n16:38\u00a0<sdumitriu>\u00a0has joined #xwiki  \n16:43\u00a0<sburjan>\u00a0has quit  \n17:05\u00a0<+tmortagne>\u00a0sdumitriu: isn't our database migration system based on svn revision number ?  \n17:05\u00a0<@sdumitriu>\u00a0Yes  \n17:05\u00a0<+tmortagne>\u00a0so we will have issues  \n17:06\u00a0<+tmortagne>\u00a0I was trying to understand why database is always migrated in the integration test even if the packager now use current version of xwiki-oldcore to create the hsqldb database  \n17:06\u00a0<+tmortagne>\u00a0could that be because of that ?  \n17:07\u00a0<vmassol>\u00a0it's not based on svn  \n17:07\u00a0<vmassol>\u00a0I mean it's just a number  \n17:07\u00a0<+tmortagne>\u00a0well that's what XWikiDBVersion javadoc say  \n17:08\u00a0<vmassol>\u00a0it can be named anything  \n17:08\u00a0<vmassol>\u00a0the version in the DB starts at 0  \n17:08\u00a0<vmassol>\u00a0we never set it  \n17:08\u00a0<vmassol>\u00a0except in the migrator  \n17:09\u00a0<+tmortagne>\u00a0vmassol: but the migrator still use svn revision to set the version of the database  \n17:09\u00a0<vmassol>\u00a0the migrator uses the value returned by migration classes  \n17:09\u00a0<vmassol>\u00a0it's jsut a number  \n17:10\u00a0<vmassol>\u00a0public XWikiDBVersion getVersion()  \n17:10\u00a0<+tmortagne>\u00a0you mean it's not generated ?  \n17:10\u00a0<vmassol>\u00a0yep  \n17:10\u00a0<vmassol>\u00a0it's static and hardcoded  \n17:10\u00a0<vmassol>\u00a0in each migrator  \n17:10\u00a0<vmassol>\u00a0for ex you can check R15428XWIKI2977Migrator  \n17:10\u00a0<+tmortagne>\u00a0but then why generated database is wrong in packager plugin  \n17:10\u00a0<vmassol>\u00a0wrong?  \n17:10\u00a0<vmassol>\u00a0it's jsut that the version is not set int he DB I guess  \n17:11\u00a0<vmassol>\u00a0have you checked if the migrator is executed in the packager plugin?  \n17:11\u00a0<vmassol>\u00a0(maybe it's not)  \n17:11\u00a0<+tmortagne>\u00a0version not set mean it's wrong  \n17:11\u00a0<@cjdelisle>\u00a0git tag -u 0x65B209D6 `pwd | sed 's/.\\*\\/\\([^\\/]\\*\\)$/\\1/'`-$VERSION -m \"Releasing XWiki $VERSION\"  \n17:12\u00a0<vmassol>\u00a0tmortagne: sure. I'm just explaining why it's not working as you'd expeect  \n17:12\u00a0<vmassol>\u00a0(you asked a question)  \n17:12\u00a0<vmassol>\u00a0s/explaining/trying to explain/  \n17:13\u00a0<+tmortagne>\u00a0but migrator as supposed to be automatically called when the database is generated  \n17:13\u00a0<vmassol>\u00a0have you checked if the migrator is executed in the packager plugin?  \n17:13\u00a0<+tmortagne>\u00a0why would it have to explicitly call it ?  \n17:13\u00a0<vmassol>\u00a0I never said that  \n17:13\u00a0<vmassol>\u00a0I just said that you should check  \n17:14\u00a0<vmassol>\u00a0because if it's not called that would explain it  \n17:14\u00a0<vmassol>\u00a0just look at the logs  \n17:14\u00a0<+tmortagne>\u00a0sure but if it's not called it's not packager bug but standard bug if a newly generated database doe snot have proper version  \n17:17\u00a0<vmassol>\u00a0tmortagne: migrator doesn't seem to be called: http://ci.xwiki.org/view/Enterprise/job/xwiki-enterprise/org.xwiki.enterprise$xwiki-enterprise-database-hsqldb/7294/console  \n17:17\u00a0<vmassol>\u00a0(I don't see any log from migrators in the console)  \n17:18\u00a0<+tmortagne>\u00a0vmassol: the only thing needed is to set the proper version, migrator should not be executed since the database is already the right one  \n17:18\u00a0<vmassol>\u00a0that will need to be done explicitely by the packager plugin then  \n17:19\u00a0<vmassol>\u00a0would need to be hardcoded  \n17:19\u00a0<vmassol>\u00a0running the migrator is maybe a better solution  \n17:19\u00a0<@sdumitriu>\u00a0The packager plugin never did set a version in the generated database  \n17:19\u00a0<+tmortagne>\u00a0a normal xwiki instance which generate database in mysql have exactly the same need  \n17:19\u00a0<vmassol>\u00a0easier for maintenance  \n17:19\u00a0<+tmortagne>\u00a0it's not something specific to packager  \n17:19\u00a0<@sdumitriu>\u00a0It's a very old bug, unrelated to the git move  \n17:20\u00a0<+tmortagne>\u00a0the version should be set migrator enabled or not  \n17:20\u00a0<vmassol>\u00a0tmortagne: how?  \n17:21\u00a0<+tmortagne>\u00a0i don't know but again it has nothing to do with migration or packager, it's a bug in core itself for the use case I just described  \n17:21\u00a0<vmassol>\u00a0you need to auto discover the db version  \n17:21\u00a0<vmassol>\u00a0and this means calling each migrator  \n17:21\u00a0<vmassol>\u00a0and asking if it should run or not  \n17:22\u00a0<vmassol>\u00a0then you can set the version in the db  \n17:22\u00a0<+tmortagne>\u00a0why auto discover just aslk the current version to the migrator  \n17:22\u00a0<vmassol>\u00a0this is exactly what the migrator manager does  \n17:22\u00a0<+tmortagne>\u00a0no see to execute them  \n17:22\u00a0<vmassol>\u00a0how do you know if it should execurte or not?  \n17:22\u00a0<vmassol>\u00a0it's always safer to ask the migrator  \n17:22\u00a0<+tmortagne>\u00a0because you just generated it so that measn you don't need too migrate  \n17:22\u00a0<vmassol>\u00a0how do you tell xe this?  \n17:23\u00a0<vmassol>\u00a0from xe pov it doesn't know  \n17:23\u00a0<vmassol>\u00a0someone could just have removed the version in the db  \n17:23\u00a0<vmassol>\u00a0anyway  \n17:24\u00a0<@sdumitriu>\u00a0You don't have the version anywhere  \n17:24\u00a0<vmassol>\u00a0need to go back to fixing the tests  \n17:24\u00a0<@sdumitriu>\u00a0It's the migrators that report a new version  \n17:24\u00a0<vmassol>\u00a0at least you know why it always run the migrations now  \n17:24\u00a0<@sdumitriu>\u00a0The final version is the highest one reported by the migrators  \n17:24\u00a0<vmassol>\u00a0sdumitriu: I already explained this  \n17:24\u00a0<vmassol>\u00a0(see above)  \n17:24\u00a0<@sdumitriu>\u00a0Yes, but then tmortagne said:  \n17:25\u00a0<+tmortagne>\u00a0but executing a migrator that expect the database to be in a specific state is not that clean either  \n17:25\u00a0<vmassol>\u00a0tmortagne: right now we've coded our migrators so that they should work in whatever state the db is in  \n17:25\u00a0<vmassol>\u00a0it does require some checks in the migrators  \n17:25\u00a0<vmassol>\u00a0but it's clean  \n17:25\u00a0<vmassol>\u00a0since a migration can fail in mid step for ex  \n17:26\u00a0<vmassol>\u00a0so we need to cover that  \n17:26\u00a0<@sdumitriu>\u00a0No need to execute  \n17:26\u00a0<@sdumitriu>\u00a0There's com.xpn.xwiki.store.migration.XWikiMigratorInterface.getVersion()  \n17:26\u00a0<vmassol>\u00a0sdumitriu: that doesn't prove anything  \n17:26\u00a0<@sdumitriu>\u00a0Why?  \n17:26\u00a0<vmassol>\u00a0it doesn't prove the db is in the right state  \n17:26\u00a0<@sdumitriu>\u00a0We can iterate all migrators and execute getVersion on them  \n17:26\u00a0<@sdumitriu>\u00a0And keep the highest number  \n17:26\u00a0<@sdumitriu>\u00a0It should be  \n17:27\u00a0<vmassol>\u00a0well that's not true  \n17:27\u00a0<@sdumitriu>\u00a0Migrators are designed to help when upgrading from an older version  \n17:27\u00a0<vmassol>\u00a0lots of time in the past it wasn't  \n17:27\u00a0<+tmortagne>\u00a0sdumitriu: that's what I meannt by getting the current version from the migrator  \n17:27\u00a0<@sdumitriu>\u00a0During a build, there is no older version  \n17:27\u00a0<@sdumitriu>\u00a0The platform should create the data in the right format  \n17:27\u00a0<vmassol>\u00a0because the version of the packager plugin is not always the latest version  \n17:27\u00a0<@sdumitriu>\u00a0If it doesn't, then it's not a problem that the migrators can fix, since migrators run only once in the lifetime of the wiki  \n17:28\u00a0<vmassol>\u00a0I mean the version of core used by the packager plugin  \n17:28\u00a0<@sdumitriu>\u00a0It should be  \n17:28\u00a0<+tmortagne>\u00a0vmassol: that's the point, it generated the database with some version of core  \n17:28\u00a0<+tmortagne>\u00a0it set that version of coe  \n17:28\u00a0<@sdumitriu>\u00a0The plugin should depend on the current version of the project being built  \n17:28\u00a0<+tmortagne>\u00a0if yo uuse the database with a more recent version of core then it will be migrated  \n17:29\u00a0<abusenius>\u00a0has quit  \n17:29\u00a0<+tmortagne>\u00a0the only thing important is that the generated database has the version of the core used to generate it  \n17:30\u00a0<vmassol>\u00a0been able to reproduce the BreadcrumbsTest failure after 120 runs\u2026. trying to understand now...  \n17:39\u00a0<mflorea>\u00a0has quit  \n17:40\u00a0<@cjdelisle>\u00a0http://xwiki.pastebay.com/124192  \n17:40\u00a0<@cjdelisle>\u00a0copy/paste release  \n17:44\u00a0<@sdumitriu>\u00a0Nice  \n17:45\u00a0<vmassol>\u00a0sdumitriu: I think you coded this:  \n17:45\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0executeJavascript(\"if ($('uitest-livetable-status')) $('uitest-livetable-status').remove();\");  \n17:45\u00a0<vmassol>\u00a0in LiveTableElement  \n17:46\u00a0<@sdumitriu>\u00a0Probably  \n17:46\u00a0<@sdumitriu>\u00a0Why?  \n17:46\u00a0<vmassol>\u00a0I'm trying to understand how this will work since the LT element is cached  \n17:46\u00a0<vmassol>\u00a0for ex:  \n17:46\u00a0<vmassol>\u00a0in EditRightsPane  \n17:46\u00a0<vmassol>\u00a0private LiveTableElement getRightsTable()  \n17:47\u00a0<vmassol>\u00a0will cache the LT element  \n17:47\u00a0<vmassol>\u00a0and the div element for the LT status is added in the LT element constructor  \n17:47\u00a0<vmassol>\u00a0so if it's removed it'll not be added again if cached right?  \n17:48\u00a0<vmassol>\u00a0it'll work in most cases though since the test itself will do something like: RightsEditPage rep = new RightsEditPage();  \n17:48\u00a0<vmassol>\u00a0but if it's reused during one test it won't work I guess  \n17:49\u00a0<vmassol>\u00a0IMO we could jsut reset the value  \n17:49\u00a0<vmassol>\u00a0instead of removing the element  \n17:49\u00a0<vmassol>\u00a0wdyt?  \n18:29\u00a0<abusenius>\u00a0has joined #xwiki  \n18:37\u00a0<@sdumitriu>\u00a0tmortagne: http://jira.xwiki.org/jira/browse/XWIKI-1859  \n18:39\u00a0<+tmortagne>\u00a0sdumitriu: thanks did not seen it, so vmassol you even created the issue for the bug :)  \n18:40\u00a0<vmassol>\u00a0tmortagne: yep I remember  \n18:40\u00a0<vmassol>\u00a0:)  \n18:58\u00a0<arkub>\u00a0has quit  \n19:04\u00a0<tmortagne>\u00a0has quit  \n19:07\u00a0<@cjdelisle>\u00a0should xwiki-enterprise-installer-generic be a child of xwiki-enterprise-installer  \n19:07\u00a0<@cjdelisle>\u00a0?  \n19:07\u00a0<@cjdelisle>\u00a0right now it is a child of xwiki-enterprise  \n19:08\u00a0<@cjdelisle>\u00a0and it won't release like that  \n19:14\u00a0<vmassol>\u00a0yes it should probably be a child of installer, don't know why it isn't  \n19:16\u00a0<@cjdelisle>\u00a0btw: did you see the pastebin up a little ways?  \n19:17\u00a0<@cjdelisle>\u00a0http://xwiki.pastebay.com/124192  \n19:17\u00a0<@cjdelisle>\u00a0almost to the point of ./release.sh  \n19:19\u00a0<vmassol>\u00a0cjdelisle: nice, you should update the release process page with it  \n19:21\u00a0<@cjdelisle>\u00a0Yes, as soon as I finish the release and have all of the problems worked out  \n19:21\u00a0<@cjdelisle>\u00a0$VERSION is a big won  \n19:21\u00a0<@cjdelisle>\u00a0win even  \n19:22\u00a0<vmassol>\u00a0how come pwd gives you the version?  \n19:24\u00a0<@cjdelisle>\u00a0it gives you 'xwiki-platform' so if the tag is called xwiki-platform-3.1-milestone-2 then that iglyness will give it to you  \n19:24\u00a0<@cjdelisle>\u00a0you have to manually export VERSION=3.1-milestone-2  \n19:28\u00a0<jvdrean>\u00a0has joined #xwiki  \n20:22\u00a0<mflorea>\u00a0has joined #xwiki  \n20:56\u00a0<alex-xwiki>\u00a0has left #xwiki  \n22:27\u00a0<vmassol>\u00a0has quit  \n22:53\u00a0<mflorea>\u00a0has quit  \n\n"}