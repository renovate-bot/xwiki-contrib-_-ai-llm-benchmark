{"id": "dev:IRC.xwikiArchive20111013", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20111013", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n01:17\u00a0<pturcotte>\u00a0has joined #xwiki  \n01:24\u00a0<pturcotte>\u00a0has quit  \n01:33\u00a0<pturcotte>\u00a0has joined #xwiki  \n02:49\u00a0<pturcotte>\u00a0has quit  \n04:57\u00a0<DrLou>\u00a0has quit  \n07:01\u00a0<Denis2>\u00a0has joined #xwiki  \n07:04\u00a0<Denis>\u00a0has quit  \n07:07\u00a0<sdumitriu>\u00a0has quit  \n07:52\u00a0<sburjan`>\u00a0has quit  \n07:52\u00a0<sburjan`>\u00a0has joined #xwiki  \n07:56\u00a0<mflorea>\u00a0has joined #xwiki  \n07:57\u00a0<vmassol>\u00a0has joined #xwiki  \n08:12\u00a0<sburjan`>\u00a0has quit  \n08:19\u00a0<sburjan`>\u00a0has joined #xwiki  \n08:55\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:13\u00a0<Denis2>\u00a0is now known as <Denis>  \n09:59\u00a0<sburjan>\u00a0has joined #xwiki  \n10:09\u00a0<vmassol>\u00a0has quit  \n10:48\u00a0<vmassol>\u00a0has joined #xwiki  \n10:52\u00a0<+Denis>\u00a0vmassol: Morning, have you see my questions on ML ?  \n10:53\u00a0<vmassol>\u00a0Denis: Hi. Yes. Actually I have started implementing it yesterday in the train and hit some of the issues you raised  \n10:53\u00a0<vmassol>\u00a0I'm planning a quick brainstorming session with tmortagne in a few minutes to talk about it and then I'll reply  \n10:57\u00a0<+Denis>\u00a0ah ok, maybe we could brainstorm together  \n10:58\u00a0<vmassol>\u00a0Denis: sure, I'll add you on skype to this meeting. Give me 2 more minutes  \n13:28\u00a0<sburjan`>\u00a0has quit  \n13:29\u00a0<vmassol>\u00a0tmortagne: do you think we should beef up our \\*.test tests in the Rendering project to add tests for all supported syntaxes? Right now we have tests for the xwiki 2.0 syntax and XHTML but not that many for other syntaxes. WDYT?  \n13:30\u00a0<+tmortagne>\u00a0vmassol: you mean going in all test files and add input/output for other syntaxes we support ?  \n13:30\u00a0<+tmortagne>\u00a0i.e. do we really officially support them ?  \n13:30\u00a0<+tmortagne>\u00a0or do we support the bridges  \n13:30\u00a0<vmassol>\u00a0yes  \n13:31\u00a0<vmassol>\u00a0ie ensure that they work by having tests for them  \n13:31\u00a0<+tmortagne>\u00a0if we support them then yes we should have the same tests for all syntaxes when it make sense I guess  \n13:31\u00a0<vmassol>\u00a0(even though external parsers might also have tests fro them)  \n13:31\u00a0<vmassol>\u00a0ok  \n13:31\u00a0<+tmortagne>\u00a0but what happen when the test fail ?  \n13:31\u00a0<+tmortagne>\u00a0and a lot of them will  \n13:32\u00a0<vmassol>\u00a0we skip it and explain in the comment what needs to be fixed?  \n13:32\u00a0<vmassol>\u00a0I wasn't suggesting  \n13:32\u00a0<+tmortagne>\u00a0I mean what do we do  \n13:32\u00a0<vmassol>\u00a0to add tets for them all at once  \n13:32\u00a0<sburjan`>\u00a0has joined #xwiki  \n13:32\u00a0<vmassol>\u00a0I meant as a strategy  \n13:32\u00a0<vmassol>\u00a0and we slowly build up our tests for them  \n13:33\u00a0<+tmortagne>\u00a0so the rule would be ignore it and reference an issue URL or something for example ?  \n13:33\u00a0<vmassol>\u00a0ie whenver we find a bug or whenever we feel like it, add some tests for all syntaxes  \n13:33\u00a0<vmassol>\u00a0yes sounds like a good rule  \n13:33\u00a0<vmassol>\u00a0at least it documents it  \n13:33\u00a0<+tmortagne>\u00a0+1  \n13:33\u00a0<+tmortagne>\u00a0we will hesitate before adding new syntaxe now :)  \n13:34\u00a0<+tmortagne>\u00a0but it make sense anyway  \n13:34\u00a0<+tmortagne>\u00a0from rendering project POV there is no reason to have test only for xwiki/2.0 syntax  \n13:34\u00a0<vmassol>\u00a0it on a case by case basis but it's the only wayt o really know the state of what works or not  \n13:34\u00a0<+tmortagne>\u00a0yep  \n13:35\u00a0<+tmortagne>\u00a0would be nice to extract a report out of the found ignored tests  \n13:35\u00a0<+tmortagne>\u00a0and publish it on rendering.xwiki.org  \n13:35\u00a0<vmassol>\u00a0could be interesting indeed to generate some automatic report from those tests files  \n13:35\u00a0<vmassol>\u00a0since we can assume that they all pass in our build  \n13:36\u00a0<vmassol>\u00a0which means that skipped one are issues and can be shown as not working  \n13:36\u00a0<vmassol>\u00a0(on the report)  \n13:37\u00a0<sdumitriu>\u00a0has joined #xwiki  \n13:37\u00a0<vmassol>\u00a0actually we can even have some live tests on rendering.xwiki.org  \n13:37\u00a0<vmassol>\u00a0for people to try it out  \n13:37\u00a0<vmassol>\u00a0:)  \n13:38\u00a0<+tmortagne>\u00a0yep we could  \n13:42\u00a0<+tmortagne>\u00a0like a UI were you assemble a graph with parser, transformations and renderer like the tool in directx sdk to plain with codecs  \n13:44\u00a0<Enygma`>\u00a0has joined #xwiki  \n13:46\u00a0<vmassol>\u00a0that's going way further than what I meant\u2026 (if you mean something like Yahoo Pipes ;))  \n13:46\u00a0<vmassol>\u00a0hmm some tests are only interesting only for some syntaxes  \n13:46\u00a0<vmassol>\u00a0for ex:  \n13:46\u00a0<vmassol>\u00a0\\*\\*This is bold and not a list  \n13:47\u00a0<+tmortagne>\u00a0vmassol: yea sure was just thinking of a tool I want to do since rendering exist actually :)  \n13:47\u00a0<vmassol>\u00a0this is only interesting for syntaxes that have a potentially conflicting list item and bold syntaxes  \n13:47\u00a0<evalica>\u00a0has joined #xwiki  \n13:47\u00a0<vmassol>\u00a0tmortagne: ok :)  \n13:48\u00a0<vmassol>\u00a0same for this test:  \n13:48\u00a0<vmassol>\u00a0This is \\*\\*bold\\*\\* but this is \\*not\\*  \n13:48\u00a0<vmassol>\u00a0for ex in docbook it's:  \n13:48\u00a0<vmassol>\u00a0<article><para>This is <emphasis role=\"bold\">bold</emphasis> but this is \\*not\\*</para></article>  \n13:48\u00a0<vmassol>\u00a0which is not really an interesting test  \n13:49\u00a0<+tmortagne>\u00a0we could do something like http://pygments.org/  \n13:49\u00a0<vmassol>\u00a0yep exactly what I had in mind  \n13:49\u00a0<vmassol>\u00a0you choose input syntax, output syntax  \n13:49\u00a0<+tmortagne>\u00a0weird they don't give the choice for the output since they support lots of different output too  \n13:50\u00a0<+sburjan>\u00a0Ubuntu 11.10 will be released today :)  \n13:51\u00a0<vmassol>\u00a0tmortagne: it's original what they do on the pygemtns site  \n13:51\u00a0<vmassol>\u00a0they reuse the user tests  \n13:51\u00a0<+tmortagne>\u00a0sburjan: yep waiting for it too  \n13:51\u00a0<vmassol>\u00a0http://pygments.org/demo/603/  \n13:51\u00a0<vmassol>\u00a0http://pygments.org/demo/  \n13:51\u00a0<vmassol>\u00a0ahah: \"Note that this is not meant to be a pastebin\" ;)  \n13:52\u00a0<+tmortagne>\u00a0:)  \n13:53\u00a0<+tmortagne>\u00a0vmassol: yep about the fact that they keep the tests I think it's nice too since it provide lots of example when you don't have any idea what to test  \n13:53\u00a0<+tmortagne>\u00a0and for us it can provide things to put in unit tests  \n13:53\u00a0<vmassol>\u00a0yes and it's easy to do for us  \n13:53\u00a0<vmassol>\u00a0with a demo space  \n13:53\u00a0<vmassol>\u00a0saved in wiki pages  \n13:53\u00a0<vmassol>\u00a0real easy  \n13:53\u00a0<+tmortagne>\u00a0yep  \n13:53\u00a0<+tmortagne>\u00a0well easy with the version of rendering in xwiki.org  \n13:53\u00a0<+tmortagne>\u00a0so not always the latest  \n13:53\u00a0<+sburjan>\u00a0vmassol: I saw on the mailing list that you want to change something that will break backward-compat.  \n13:54\u00a0<vmassol>\u00a0tmortagne: sure  \n13:54\u00a0<vmassol>\u00a0sburjan: you have good filters ;)  \n13:54\u00a0<+sburjan>\u00a0this means that we won't be able to migrate from old to new ? or just that we need to write a migration component ?  \n13:54\u00a0<vmassol>\u00a0none of these  \n13:55\u00a0<vmassol>\u00a0well  \n13:55\u00a0<vmassol>\u00a0it depends  \n13:55\u00a0<vmassol>\u00a0it's backward compat at the api level  \n13:55\u00a0<+sburjan>\u00a0ok, I understand  \n13:57\u00a0<vmassol>\u00a0tmortagne: so do we add a syntax in \\*.test file only when we think it's going to prove something useful?  \n13:58\u00a0<vmassol>\u00a0or do we add it all the time, just because it's simpler and \"who knows\"  \n13:58\u00a0<vmassol>\u00a0?  \n13:58\u00a0<+tmortagne>\u00a0vmassol: I would say the \"who knows\" version  \n13:58\u00a0<+tmortagne>\u00a0unless the test really target something you can't do in the syntax  \n13:59\u00a0<+tmortagne>\u00a0like testing macro in syntaxes that don't have the notion of macro if there is  \n13:59\u00a0<+tmortagne>\u00a0well or only put the output  \n14:00\u00a0<+tmortagne>\u00a0so see it's not failing and do something  \n14:00\u00a0<+tmortagne>\u00a0but it's not going to work as input  \n14:02\u00a0<vmassol>\u00a0yep  \n14:02\u00a0<vmassol>\u00a0ok I'm fine with more tests than needed  \n14:18\u00a0<vmassol>\u00a0tmortagne: actually even for not supported stuff it would be good to still list them (so that they can be in the report), maybe introduce some |notavailable keyword  \n14:19\u00a0<+tmortagne>\u00a0indeed  \n14:19\u00a0<+tmortagne>\u00a0\"unsupported\" would be more clear maybe  \n14:19\u00a0<vmassol>\u00a0yes better  \n14:41\u00a0<evalica>\u00a0has quit  \n14:48\u00a0<evalica>\u00a0has joined #xwiki  \n14:56\u00a0<pturcotte>\u00a0has joined #xwiki  \n15:11\u00a0<evalica>\u00a0has quit  \n15:11\u00a0<evalica>\u00a0has joined #xwiki  \n15:13\u00a0<evalica>\u00a0has quit  \n15:14\u00a0<evalica>\u00a0has joined #xwiki  \n15:31\u00a0<vmassol>\u00a0too bad...  \n15:32\u00a0<+tmortagne>\u00a0could do it in groovy  \n15:32\u00a0<vmassol>\u00a0yes  \n15:45\u00a0<vmassol>\u00a0working now  \n15:45\u00a0<vmassol>\u00a0:)  \n15:49\u00a0<+evalica>\u00a0vmassol: put the textarea in a div or a p - in order to get to the next row regardless of the resolution  \n15:50\u00a0<vmassol>\u00a0evalica: go ahead and fix it if you want, that would help me :)  \n15:50\u00a0<vmassol>\u00a0thanks  \n15:53\u00a0<+tmortagne>\u00a0vmassol: I think the macro you are using for the result in inline instead of being standalone  \n15:53\u00a0<+tmortagne>\u00a0which makes it looks not very nice with mutliline  \n15:53\u00a0<+tmortagne>\u00a0multiline  \n15:53\u00a0<vmassol>\u00a0ah yes  \n15:54\u00a0<vmassol>\u00a0caty has the lock ATM  \n15:54\u00a0<+evalica>\u00a0done  \n15:55\u00a0<vmassol>\u00a0is it better tmortagne?  \n15:55\u00a0<+tmortagne>\u00a0yep  \n15:55\u00a0<+tmortagne>\u00a0also when converting you loose the source (you get only the result)  \n15:55\u00a0<vmassol>\u00a0indeed  \n15:55\u00a0<vmassol>\u00a0fixing  \n15:56\u00a0<+tmortagne>\u00a0same thing for input and output syntaxes they should be on the right state  \n15:59\u00a0<vmassol>\u00a0done  \n16:00\u00a0<+tmortagne>\u00a0vmassol: http://rendering.xwiki.org/xwiki/bin/view/Main/Demo?inputsyntax=plain%2F1.0&outputsyntax=plain%2F1.0&input=some+text+here%0D%0A%0D%0A{{%2Fcode}}%0D%0A%0D%0Aand+here+too#HDemo  \n16:00\u00a0<+tmortagne>\u00a0ok it's mean :)  \n16:02\u00a0<vmassol>\u00a0:)  \n16:04\u00a0<vmassol>\u00a0tmortagne: why is this not working: $services.extension.getCoreExtension(\"xwiki-rendering\") ? It's not evaluated...  \n16:05\u00a0<+sburjan>\u00a0fails on XHTML Macro 1.0. Groovy error  \n16:06\u00a0<+tmortagne>\u00a0I think it return null  \n16:06\u00a0<vmassol>\u00a0ah yes  \n16:06\u00a0<+tmortagne>\u00a0not sure what is xwiki-rendering  \n16:06\u00a0<vmassol>\u00a0sburjan: link?  \n16:06\u00a0<+sburjan>\u00a0http://rendering.xwiki.org/xwiki/bin/view/Main/Demo?inputsyntax=xwiki%2F2.0&outputsyntax=xhtmlmacro%2F1.0&input=%3D%3D%3D%3D+This+Week+%3D%3D%3D%3D%0D%0A%0D%0A|%3DWhat|%3DComment|%3DWork|%3DStatus%0D%0A|Marketing+meeting+%2B+notes|+|+|Done%0D%0A|Work+on+team+and+jobs+pages|+|+|In+progress%0D%0A|Add+section+for+XWiki+in+5+points+download+on+Product.WebHome|+|+|To+do%0D%0A|Sitemap|+|+|In+progress%0D%0A%0D%0A%0D%0A%0D%0A%0D%0A%0D%0A%0D%0A#HDemo  \n16:07\u00a0<+tmortagne>\u00a0vmassol: what project are you trying to get ? don't forget you need to put the full \"groupId:artifactId\"  \n16:07\u00a0<vmassol>\u00a0tmortagne: ok works  \n16:07\u00a0<vmassol>\u00a0hmm I don't see a getVersion in Extension  \n16:07\u00a0<vmassol>\u00a0properties maybe?  \n16:08\u00a0<vmassol>\u00a0ah getId  \n16:08\u00a0<+tmortagne>\u00a0not, getId() give you an object with the combination of id and version  \n16:08\u00a0<vmassol>\u00a0getId().getVersion()?  \n16:08\u00a0<+tmortagne>\u00a0wanted to have one object with what makes the extension unique  \n16:08\u00a0<+tmortagne>\u00a0yep  \n16:09\u00a0<vmassol>\u00a0ok a little bit strange as an api ...  \n16:09\u00a0<+tmortagne>\u00a0I need this object in many place as parametre so I reused it here too  \n16:10\u00a0<+tmortagne>\u00a0but yest getId().getId() is not very nice but could not find better name for the first one  \n16:10\u00a0<vmassol>\u00a0hmmm  \n16:10\u00a0<vmassol>\u00a0is this new?  \n16:10\u00a0<vmassol>\u00a0it doesn't seem to exist on xwiki.org  \n16:10\u00a0<+tmortagne>\u00a0nop always been like this  \n16:10\u00a0<vmassol>\u00a0works locally on my 3.3-SNAP  \n16:11\u00a0<vmassol>\u00a0this is what I have:  \n16:11\u00a0<vmassol>\u00a0$services.extension.getCoreExtension(\"org.xwiki.rendering:xwiki-rendering-api\").getId().getVersion()  \n16:11\u00a0<+tmortagne>\u00a0getCoreExtension return you something ?  \n16:11\u00a0<+tmortagne>\u00a0maybe that whats doe snot exist in 3.1  \n16:11\u00a0<+tmortagne>\u00a0I don't remember  \n16:11\u00a0<vmassol>\u00a0let me check  \n16:11\u00a0<vmassol>\u00a0it doesn't  \n16:11\u00a0<vmassol>\u00a0it's new?  \n16:12\u00a0<vmassol>\u00a0was there a way of doing it before?  \n16:12\u00a0<+tmortagne>\u00a0possible, the script service API change all the time  \n16:12\u00a0<+tmortagne>\u00a0yep  \n16:12\u00a0<+tmortagne>\u00a0let me see  \n16:12\u00a0<+tmortagne>\u00a0wow github UI changed a lot  \n16:13\u00a0<+tmortagne>\u00a0can't find branches  \n16:13\u00a0<+tmortagne>\u00a0ha found  \n16:13\u00a0<+tmortagne>\u00a0hm not very nicve you can't switch no another branch from were you are  \n16:14\u00a0<+tmortagne>\u00a0ha there another button actually  \n16:14\u00a0<+tmortagne>\u00a0vmassol: actually getCoreExtension exists  \n16:15\u00a0<+tmortagne>\u00a0in 3.1 snapshot at least  \n16:15\u00a0<+tmortagne>\u00a0\u00a0\u00a0\u00a0\u00a0public CoreExtension getCoreExtension(String id)\u00a0\u00a0\u00a0\u00a0{\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return wrapExtension(this.coreExtensionRepository.getCoreExtension(id));\u00a0\u00a0\u00a0\u00a0}  \n16:15\u00a0<vmassol>\u00a0strange  \n16:15\u00a0<+tmortagne>\u00a0so it should work well  \n16:16\u00a0<+tmortagne>\u00a0checking soomething  \n16:16\u00a0<+tmortagne>\u00a0there is soemthing wrong on xwiki.org  \n16:16\u00a0<+tmortagne>\u00a0there is no core extension listed  \n16:17\u00a0<+tmortagne>\u00a0http://www.xwiki.org/xwiki/bin/admin/XWiki/XWikiPreferences?editor=globaladmin&section=Extensions  \n16:17\u00a0<+tmortagne>\u00a0that's why you get null  \n16:18\u00a0<vmassol>\u00a0hmm indeed  \n16:41\u00a0<+sburjan>\u00a0tmortagne: were you able to find some release notes of the new ubuntu ? because their website has almost the same content, presented in a different manner,  \n16:42\u00a0<+tmortagne>\u00a0sburjan: you mean a detailed one ? I found lots of general release notes in blog posts announcing ubuntu release but did not really searched for a detailed one  \n16:42\u00a0<+sburjan>\u00a0I'm searching for the official one  \n16:42\u00a0<+tmortagne>\u00a0ok then no I did not really searched  \n16:43\u00a0<+tmortagne>\u00a0sburjan: https://wiki.ubuntu.com/OneiricOcelot/ReleaseNotes ?  \n16:44\u00a0<+sburjan>\u00a0tmortagne: thanks  \n16:44\u00a0<+tmortagne>\u00a0starting downloading it  \n16:49\u00a0<+tmortagne>\u00a0looks like all the subwiki in xwiki.org point to the wrong wiki in DOWNLOAD XWIKI button  \n16:52\u00a0<+tmortagne>\u00a0wonder how this ever worked actually, looks like the panel expect to be executed in the context of the main wiki  \n16:53\u00a0<+evalica>\u00a0actually I've made it like that ... for manager. xeclipse, enterprise, xoffice worked ok ... because it was redirecting to the specific Main.Download  \n16:54\u00a0<+tmortagne>\u00a0but there are on http://www.xwiki.org/xwiki/bin/view/Main/Download  \n16:55\u00a0<+evalica>\u00a0well the pages are http://manager.xwiki.org/xwiki/bin/view/Main/Download \u00a0http://xeclipse.xwiki.org/xwiki/bin/view/Main/Download \u00a0http://xoffice.xwiki.org/xwiki/bin/view/Main/Download  \n16:55\u00a0<+tmortagne>\u00a0ha not anymore it seems  \n16:56\u00a0<+tmortagne>\u00a0not sure it's right to redirect to enterprise in http://www.xwiki.org/xwiki/bin/view/Main/Download  \n16:56\u00a0<+tmortagne>\u00a0http://www.xwiki.org/xwiki/bin/view/Main/Download should probably link them all or something  \n16:56\u00a0<+evalica>\u00a0it will be too crowded and will lose all the point  \n16:57\u00a0<+tmortagne>\u00a0I said link  \n16:57\u00a0<+tmortagne>\u00a0so having them all only in http://www.xwiki.org/xwiki/bin/view/Main/Download  \n16:57\u00a0<+evalica>\u00a0IMo the solution would be to leave it like it was (Main.Download) and it the subwiki is other than enterprise, manager, xeclipse and xoffice the link should take to enterprise  \n16:58\u00a0<+evalica>\u00a0or something like a test if the local subwiki page Main.Download doesn't exist it should take ... to enterprise  \n16:58\u00a0<+tmortagne>\u00a0evalica: reverted my change, I let you fix it  \n16:58\u00a0<+evalica>\u00a0k  \n17:19\u00a0<+tmortagne>\u00a0sburjan: looks like there is a lot of people downloading on ubuntu servers :)  \n17:20\u00a0<+sburjan>\u00a0stefan tried to dist-upgrade and he got stuck with someerrors :)  \n17:20\u00a0<+sburjan>\u00a0we have an official mirror here in iasi, so I'm not worrying about the speed :)  \n17:20\u00a0<+tmortagne>\u00a0I still did not receive 10% of the upgrade  \n17:20\u00a0<+tmortagne>\u00a0downloading at 50k/s  \n17:21\u00a0<+sburjan>\u00a0I usually download it with 2 MB  \n17:43\u00a0<pgmjsd>\u00a0has quit  \n17:54\u00a0<sburjan>\u00a0has quit  \n18:16\u00a0<vmassol>\u00a0btw we don't send any event when deleting a version  \n18:17\u00a0<+tmortagne>\u00a0vmassol: deleting version ?  \n18:17\u00a0<vmassol>\u00a0in the UI there's a button in the history to delete a revision  \n18:17\u00a0<+tmortagne>\u00a0what event would you send ?  \n18:18\u00a0<vmassol>\u00a0removed revision event? :)  \n18:18\u00a0<+tmortagne>\u00a0so we need a new one  \n18:18\u00a0<+tmortagne>\u00a0I tough you were saying you wanted to send documentmodifiedevent or something like that  \n18:19\u00a0<vmassol>\u00a0in the AS we should know that a document has a different content now  \n18:19\u00a0<vmassol>\u00a0(if you remove the last rev you get the previous content)  \n18:19\u00a0<vmassol>\u00a0(for ex)  \n18:21\u00a0<mflorea>\u00a0has quit  \n18:23\u00a0<sburjan\\_>\u00a0has joined #xwiki  \n18:25\u00a0<sburjan`>\u00a0has quit  \n18:25\u00a0<sburjan\\_>\u00a0is now known as <sburjan`>  \n19:12\u00a0<Enygma`>\u00a0has quit  \n19:12\u00a0<Enygma`1>\u00a0has joined #xwiki  \n19:16\u00a0<tmortagne>\u00a0has quit  \n19:26\u00a0<sburjan`>\u00a0has quit  \n19:26\u00a0<sburjan`>\u00a0has joined #xwiki  \n19:39\u00a0<Enygma`1>\u00a0has quit  \n19:42\u00a0<Enygma`>\u00a0has joined #xwiki  \n20:38\u00a0<abusenius>\u00a0has joined #xwiki  \n20:45\u00a0<DrLou>\u00a0has joined #xwiki  \n21:02\u00a0<evalica>\u00a0has quit  \n21:07\u00a0<Enygma`>\u00a0has quit  \n21:17\u00a0<lpereira>\u00a0has joined #xwiki  \n21:52\u00a0<lpereira>\u00a0has quit  \n22:13\u00a0<sburjan`>\u00a0has quit  \n22:17\u00a0<sburjan`>\u00a0has joined #xwiki  \n22:27\u00a0<sdumitriu>\u00a0has quit  \n22:32\u00a0<sdumitriu>\u00a0has joined #xwiki  \n22:58\u00a0<pturcotte>\u00a0has quit  \n23:20\u00a0<abusenius>\u00a0has quit  \n23:55\u00a0<mflorea>\u00a0has joined #xwiki  \n\n"}