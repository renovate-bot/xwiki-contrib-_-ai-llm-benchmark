{
  "id": "xwiki:Documentation.AdminGuide.Authentication.WebHome",
  "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/",
  "title": "User Authentication",
  "collection": "Eval_de",
  "mimetype": "text/markdown",
  "language": "de",
  "content": "**Inhalt**\n\n* [Wählen Sie den Authentifizierer](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HChoosetheauthenticator)\n* [Authentifizierungstypen](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HAuthenticationTypes)\n\t+ [Formular-Authentifizierung](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HFormAuthentication)\n\t+ [Basis-Authentifizierung](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HBasicAuthentication)\n\t+ [Container-Authentifizierung](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HContainerAuthentication)\n\t+ [OpenId Connect-Authentifizierung](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HOpenIdConnectAuthentication)\n\t+ [Active Directory](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HActiveDirectory)\n\t+ [LDAP](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HLDAP)\n\t+ [Benutzerdefinierte Authentifizierung](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HCustomAuthentication)\n\t\t- [Benutzerdefinierte Authentifizierung mit einem Groovy-Skript auf einer Wiki-Seite](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HCustomAuthenticationusingaGroovyscriptinawikipage)\n* [Konfiguration](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HConfiguration)\n\t+ [Authentifizierungsparameter](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HAuthenticationparameters)\n\t+ [Sicherheit](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HSecurity)\n* [Kerberos SSO-Authentifizierung](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HKerberosSSOAuthentication)\n* [Mail-Vorlagen](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HMailTemplates)\n\nXWiki unterstützt mehrere verschiedene Authentifizierungsmechanismen zur Authentifizierung von Benutzern.\n\nDerzeit erlaubt XWiki nur eine Methode der Authentifizierung gleichzeitig zu aktivieren. Dies wird wahrscheinlich in Zukunft verbessert.\n\nBeachten Sie auch, dass XWiki Cookies aktiviert haben muss, um Ihre Sitzung zu verfolgen und Sie zwischen den Seiten angemeldet zu halten.\n\n# Wählen Sie den Authentifizierer\n\nHistorisch gesehen wird der zu verwendende Authentifizierer in XWiki durch die Eigenschaft xwiki.authentication.authclass in der Datei xwiki.properties gesteuert.\n\nXWiki 15.3+ Für Authentifizierer, die dies unterstützen, ist es möglich, den zu verwendenden Authentifizierer in der Wiki-Administration auszuwählen.\n\n![authserviceadmin.png](https://www.xwiki.org/xwiki/bin/download/Documentation/AdminGuide/Authentication/WebHome/authserviceadmin.png?rev=1.1)\n\n# Authentifizierungstypen\n\n## Formular-Authentifizierung\n\nDie Formular-Authentifizierung ist die Standardmethode, um sich innerhalb eines Wikis zu authentifizieren. Es erfordert einen Benutzer und ein Passwort.\n\n## Basis-Authentifizierung\n\nXWiki unterstützt die [Basis-Zugriffs-Authentifizierung](https://en.wikipedia.org/wiki/Basic_access_authentication), eine Methode, die es einem Webbrowser oder anderen Client-Programmen ermöglicht, Anmeldeinformationen - in Form eines Benutzernamens und eines Passworts - bei einer Anfrage bereitzustellen. Sie können sich mit dem Basis-Authentifizierungsprotokoll gegen einen XWiki-Server authentifizieren, indem Sie das folgende URL-Schema verwenden:\n\nhttps://username:password@mywiki.xwiki.com/xwiki/bin/view/Main/WebHome?basicauth=1  \nSeien Sie vorsichtig, wenn Sie das HTTP-Protokoll verwenden, da Ihr Passwort unverschlüsselt über das Netzwerk gesendet wird und daher sehr unsicher ist. Wenn Sie die Basis-Authentifizierung verwenden, sollten Sie sicherstellen, dass Ihr Wiki so konfiguriert ist, dass es HTTPS verwendet.\n\n## Container-Authentifizierung\n\nDelegiert die Authentifizierung an den Servlet-Container. Wenn dies fehlschlägt, wird auf die standardmäßige XWiki-Authentifizierung zurückgegriffen.\n\nUm XWiki so zu konfigurieren, dass es verwendet wird, geben Sie Folgendes an:\n\nxwiki.authentication.authclass=com.xpn.xwiki.user.impl.xwiki.AppServerTrustedAuthServiceImpl\n\nDamit Benutzer tatsächlich erstellt und nicht nur als Kontextbenutzer gesetzt werden, müssen Sie in der Konfigurationsdatei xwiki.cfg (falls die Eigenschaft noch nicht existiert, erstellen Sie sie) Folgendes festlegen:\n\nxwiki.authentication.createuser=empty\n\n## OpenId Connect-Authentifizierung\n\nSiehe die [OpenId Connect Authenticator Extension](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/).\n\n## Active Directory\n\nWenn Sie XWiki mit einem Active Directory-Server verbinden möchten, haben Sie derzeit zwei Optionen:\n\n* Verwenden des manuellen und generischen Ansatzes mit der [LDAP Authenticator-Erweiterung](https://extensions.xwiki.org/xwiki/bin/view/Extension/LDAP/Authenticator/)\n* Verwenden der dedizierten [Active Directory-Anwendung](https://store.xwiki.com/xwiki/bin/view/Extension/ActiveDirectoryApplication), einer kostenpflichtigen Anwendung, die die Integration von Active Directory mit XWiki vereinfacht. Die Active Directory-Anwendung ermöglicht es Ihnen, Ihren Active Directory-Server einfach mit XWiki zu verbinden, indem Sie einen **visuellen Editor** verwenden, **erweiterte Konfigurationseinstellungen** ohne Neustart des Anwendungsservers aktualisieren, **technischen Support** von [XWiki SAS](https://xwiki.com/) erhalten usw.\n\n## LDAP\n\nSiehe die [LDAP Authenticator-Erweiterung](https://extensions.xwiki.org/xwiki/bin/view/Extension/LDAP/Authenticator/).\n\nDer veraltete LDAP-Kernauthentifizierer (für XWiki < 7.4) ist unter [OldLDAPAuthenticator](https://www.xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/OldLDAPAuthenticator/) zu finden.\n\n## Benutzerdefinierte Authentifizierung\n\nSie können Ihre benutzerdefinierte Authentifizierung erstellen, indem Sie dem [Erstellen eines benutzerdefinierten Authentifizierers](https://www.xwiki.org/xwiki/bin/view/Documentation/DevGuide/Tutorials/Create%20a%20Custom%20Authenticator/)-Tutorial folgen.\n\nBeachten Sie, dass es auch möglich ist, das Rechteverwaltungssystem anzupassen. Weitere Details finden Sie im [Security Module](https://extensions.xwiki.org/xwiki/bin/view/Extension/Security%20Module).\n\n### Benutzerdefinierte Authentifizierung mit einem Groovy-Skript auf einer Wiki-Seite\n\nBeginnen Sie damit, anzugeben, dass Sie den Groovy-Authentifizierer verwenden möchten:\n\nxwiki.authentication.authclass = com.xpn.xwiki.user.impl.xwiki.GroovyAuthServiceImpl\n\nFügen Sie dann einen weiteren Konfigurationsparameter hinzu, um anzugeben, auf welcher Wiki-Seite sich der Authentifizierer befindet:\n\nxwiki.authentication.groovy.pagename = MySpace.MyPage\n\nFügen Sie dann etwas Groovy-Code auf einer Wiki-Seite hinzu, der ein XWikiAuthService-Objekt zurückgibt.\n\n# Konfiguration\n\n## Authentifizierungsparameter\n\nSie können jeden dieser Parameter festlegen, indem Sie Folgendes einstellen:\n\nxwiki.authentication.<param\\_name>=<param\\_value>\n\n| Name | Optional | Erlaubte Werte | Standardwert | Beschreibung |\n| --- | --- | --- | --- | --- |\n| encryptionKey | Nein(1)/XWiki 15.9+, 15.5.4+, 14.10.19+ Ja | ? | n/a | Legt den Verschlüsselungsschlüssel fest, der verwendet wird, um einen geheimen Schlüssel zu erstellen. Der geheime Schlüssel wird an das Cipher-Objekt übergeben, um während der Verschlüsselung und Entschlüsselung von Cookie-Werten verwendet zu werden. |\n| validationKey | Nein(2)/XWiki 15.9+, 15.5.4+, 14.10.19+ Ja | ? | n/a | Legt den Validierungsschlüssel fest, der verwendet wird, um einen Hash-Wert zu generieren; der Hash-Wert wird zusammen mit dem Cookie gespeichert und verwendet, um zu überprüfen, ob das Cookie nicht manipuliert wurde. |\n| cookiedomains | Ja | String | Server-Hostname | An welche(n) Host(s) Ihre Cookies gesendet werden sollen; verwenden Sie dies nur, wenn Sie Cookies über Domains hinweg teilen möchten, andernfalls sollte es auskommentiert werden. |\n| cookielife | Ja | Nummer | 14 | Anzahl der Tage, bis Cookies ablaufen. |\n| cookiepath | Ja | String | / | Der Webapp-Pfad, an den XWiki-Cookies gesendet werden sollen; wenn Sie etwas anderes auf Ihrem Webserver ausführen, sollte dies auf */xwiki* gesetzt werden. |\n| default\\_page | Ja | String | /bin/view/ Main/WebHome | Seite, auf die umgeleitet wird, wenn der xredirect-Parameter nicht gesetzt ist. |\n| encryptionalgorithm | Ja | ? | ? | Legt den Verschlüsselungsalgorithmus fest, der zum Verschlüsseln und Entschlüsseln von Cookies verwendet wird. |\n| encryptionmode | Ja | ? | ? | Legt den Verschlüsselungsmodus fest, der zum Verschlüsseln und Entschlüsseln von Cookies verwendet wird. |\n| encryptionpadding | Ja | ? | ? | Legt das Verschlüsselungspadding fest, das zum Verschlüsseln und Entschlüsseln von Cookies verwendet wird. |\n| errorpage | Ja | String | /bin/loginerror/ XWiki/XWikiLogin | Seite, auf die umgeleitet wird, wenn beim Einloggen ein Fehler auftritt. |\n| loginpage | Ja | String | /bin/login/ XWiki/XWikiLogin | Seite, auf die umgeleitet wird, wenn man nicht eingeloggt ist. |\n| loginsubmitpage | Ja | String | /loginsubmit/ XWiki/XWikiLogin | Die URL, an die der Benutzername und das Passwort beim Einloggen gesendet werden. |\n| logoutpage | Ja | String | /bin/logout/ XWiki/XWikiLogout | Seite, auf die nach dem Ausloggen umgeleitet wird. |\n| realmname | Ja | String | XWiki | Legt den Realm-Namen fest. |\n| protection | Ja | all, validation, encryption, none | all | Schutzstufe für die \"Remember me\"-Cookie-Funktionalität. |\n| useip | Ja | true / false | true | Gibt an, ob die IP-Adresse verwendet werden soll, wenn die Cookie-Daten verschlüsselt werden; wenn sich die IP-Adresse ändert, muss man sich erneut einloggen. |\n\n1. Nur erforderlich, wenn protection = encryption oder all (Standard)\n2. Nur erforderlich, wenn protection = validation oder all (Standard)\n\n## Sicherheit\n\nAb XWiki 11.6RC1 bieten wir einige Authentifizierungsstrategien an, die ausgelöst werden, wenn ein Benutzer mehrmals hintereinander fehlschlägt, sich einzuloggen.  \nSie können diese Strategien und deren Auslöser auf der Seite Administration > Authentifizierung konfigurieren.\n\n![authentication-security-administration.png](https://www.xwiki.org/xwiki/bin/download/Documentation/AdminGuide/Authentication/WebHome/authentication-security-administration.png?rev=1.1)\n\nWeitere Informationen finden Sie in der [Dokumentation des Authentifizierungs-Sicherheitsmoduls](https://extensions.xwiki.org/xwiki/bin/view/Extension/Authentication%20Security%20Module/).\n\n# Kerberos SSO-Authentifizierung\n\nDiese Implementierung von SSO wird derzeit überprüft, siehe: <https://jira.xwiki.org/browse/XWIKI-2496>. Die in diesem Dokumentationsabschnitt beschriebene Klasse AppServerTrustedKerberosAuthServiceImpl ist nicht Teil der Standard-XWiki-Distribution!\n\nDas folgende ist ein Beispiel für **mod\\_auth\\_kerb** für Apache, das verwendet wird, um die XWiki-Authentifizierung von Benutzern über HTTP Negotiate auf einem Linux-Server einfach zu implementieren. Dieses Beispiel geht davon aus, dass Sie bereits eine funktionierende Apache2 HTTPD- und Apache Tomcat-Installation mit mod\\_jk haben.\n\nZuerst müssen Sie ein Principal und ein Keytab für den Webserver erstellen:\n\n# kadmin  \nkadmin> addprinc -randkey HTTP/wiki.example.com  \nkadmin> ktadd -k /etc/apache2/ssl/wiki.keytab HTTP/wiki.example.com  \nkadmin> quit\n\nStellen Sie sicher, dass das Keytab die richtigen Berechtigungen und Eigentümer hat:\n\nchown www-data:www-data /etc/apache2/ssl/wiki.keytab  \nchmod 400 /etc/apache2/ssl/wiki.keytab\n\nInstallieren Sie **mod\\_auth\\_kerb** in Ihrer Linux-Installation. Unter Debian oder Ubuntu würde dies durch Ausführen von:\n\naptitude install libapache2-mod-auth-kerb\n\nNatürlich variiert das Installationsverfahren je nach Linux-Distribution.\n\nWenn Ihre XWiki-Installation in Apache HTTPD unter /xwiki eingebunden ist, fügen Sie Folgendes zur Konfiguration des virtuellen Hosts hinzu:\n\n<Location \"/xwiki\">  \n  AuthType Kerberos  \n  AuthName \"Kerberos Login\"  \n  KrbAuthRealms EXAMPLE.COM  \n  Krb5Keytab \"/etc/apache2/ssl/wiki.keytab\"  \n  KrbMethodK5Passwd off  \n  KrbMethodNegotiate on  \n  KrbSaveCredentials on  \n  require valid-user  \n</Location>\n\nStellen Sie sicher, dass Apache Tomcat die von Apache HTTPD durchgeführte Authentifizierung mit der Eigenschaft \"tomcatAuthentication\" in der Connector-Beschreibung (die sich in der **server.xml**-Datei von Apache Tomcat befindet) verwendet:\n\n<Connector port=\"8009\" address=\"127.0.0.1\" enableLookups=\"false\" tomcatAuthentication=\"false\" redirectPort=\"8443\" protocol=\"AJP/1.3\" ></Connector>\n\nPlatzieren Sie das **authkerb.jar**-Jar im WEB-INF/lib-Verzeichnis von XWiki in Apache Tomcat.\n\nLassen Sie XWiki das Authentifizierungsmodul verwenden, indem Sie die Eigenschaft \"xwiki.authentication.authclass\" in der Datei WEB-INF/lib/xwiki.cfg ändern.\n\nxwiki.authentication.authclass=com.xpn.xwiki.user.impl.xwiki.AppServerTrustedKerberosAuthServiceImpl\n\nWenn Sie Firefox verwenden, vergessen Sie nicht, die XWiki-URL für HTTP Negotiate in about:config mit der Eigenschaft \"network.negotiate-auth.trusted-uris\" auf die Whitelist zu setzen. Mögliche Werte für diese Eigenschaft sind: *https://* für alle gesicherten Verbindungen oder **example.com** für alle Subdomains von example.com.\n\nAls ich JBoss SPNEGO (Kerberos in Kombination mit LDAP) verwendete, änderte ich den Code der **XWikiLDAPAuthServiceImpl**, um den SSO-Benutzer erkennen zu können. Die Authentifizierung erfolgte bereits durch das SPNEGO-Modul (JAAS). Danach verwende ich die LDAP-Synchronisationsfunktion, um sicherzustellen, dass der Benutzer auf dem neuesten Stand ist. Die Kombination führt zu einem automatischen Login in XWiki und die Benutzerrechte werden im Active Directory-Server kontrolliert. Ich hoffe, Sie können diesen Code übernehmen oder für Ihre eigenen Projekte verwenden.\n\nDie Konfiguration von LDAP:\n\nxwiki.authentication.authclass=com.wiki.sso.SSOLdapAuthenicationImpl  \nxwiki.authentication.ldap=1  \nxwiki.authentication.ldap.server=<ad-server>  \nxwiki.authentication.ldap.port=389  \nxwiki.authentication.ldap.base\\_DN=<OU=Users,...............>  \n# Verwenden Sie einen festen Benutzer, um sich mit der LDAP-Datenbank zu verbinden,  \n# das Passwort wird nicht mit der SSOLdapAuthenicationImpl bereitgestellt  \nxwiki.authentication.ldap.bind\\_DN=<domain>\\\\<user>  \nxwiki.authentication.ldap.bind\\_pass=<password>  \n# Microsoft AD-Konfiguration  \nxwiki.authentication.ldap.UID\\_attr=sAMAccountName  \nxwiki.authentication.ldap.fields\\_mapping=name=sAMAccountName,last\\_name=sn,first\\_name=givenName,fullname=displayName,mail=mail,ldap\\_dn=dn  \nxwiki.authentication.ldap.group\\_memberfields=member,uniqueMember  \n# LDAP-Gruppen-Mapping  \nxwiki.authentication.ldap.group\\_mapping=XWiki.XWikiAdminGroup=CN=WIKI\\_Admin,............|\\  \n                                        XWiki.XWikiAllGroup=CN=WIKI\\_User,...........\n\nDer Java-Code:\n\n```java\npackage com.wiki.sso;  \n  \nimport org.apache.commons.logging.Log;  \nimport org.apache.commons.logging.LogFactory;  \n  \nimport com.xpn.xwiki.XWikiContext;  \nimport com.xpn.xwiki.XWikiException;  \nimport com.xpn.xwiki.user.api.XWikiUser;  \nimport com.xpn.xwiki.user.impl.LDAP.XWikiLDAPAuthServiceImpl;  \n  \nimport java.security.Principal;  \n  \npublic class SSOLdapAuthenicationImpl extends XWikiLDAPAuthServiceImpl {  \n    /**  \n     * Logging tool.  \n     */  \n    private static final Log LOG = LogFactory.getLog(SSOLdapAuthenicationImpl.class);  \n  \n  \n public XWikiUser checkAuth(XWikiContext context) throws XWikiException {  \n  String user = getRemoteUser(context);  \n  if ((user != null) || !user.equals(\"\")) {  \n   if (LOG.isInfoEnabled())  \n    LOG.info(\"Launching create user for \" + user);  \n   if ( authenticate(user, context) != null ) {  \n    if (LOG.isInfoEnabled())  \n     LOG.info(\"Create user done for \" + user);  \n    user = \"XWiki.\" + user;  \n    context.setUser(user);  \n    System.out.println(\"User is set to:\" + user);  \n    return new XWikiUser(user);  \n   } else {  \n    LOG.error( \"User \" + user + \" can't be authenticated against ldap\" );  \n   }  \n  }  \n  return super.checkAuth(context);  \n }  \n  \n /**  \n  * We cannot authenticate locally since we need to trust the app server for  \n  * authentication  \n  *  \n  * @param username  \n  * @param password  \n  * @param context  \n  * @return  \n  * @throws XWikiException  \n  */  \n public XWikiUser checkAuth(String username, String password,  \n   String rememberme, XWikiContext context) throws XWikiException {  \n  String user = getRemoteUser(context);"
}