{"id": "dev:IRC.xwikiArchive20110912", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110912", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:58\u00a0<jvdrean>\u00a0has quit  \n04:06\u00a0<DrLou>\u00a0has quit  \n07:01\u00a0<Denis2>\u00a0has joined #xwiki  \n07:01\u00a0<Denis>\u00a0has quit  \n07:34\u00a0<vmassol>\u00a0has joined #xwiki  \n07:41\u00a0<sdumitriu>\u00a0has quit  \n07:42\u00a0<vmassol>\u00a0good morning  \n07:42\u00a0<vmassol>\u00a0moving adwords & alexa jira projects to retired since they should have been there a long time ago already\u2026.  \n07:48\u00a0<mflorea>\u00a0has joined #xwiki  \n09:16\u00a0<jvdrean>\u00a0has joined #xwiki  \n09:19\u00a0<sburjan>\u00a0has joined #xwiki  \n09:41\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:47\u00a0<evalica>\u00a0has joined #xwiki  \n09:50\u00a0<arkub>\u00a0has joined #xwiki  \n09:55\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:37\u00a0<jvdrean>\u00a0has quit  \n10:45\u00a0<Denis2>\u00a0is now known as <Denis>  \n10:49\u00a0<jvelociter>\u00a0has joined #xwiki  \n10:58\u00a0<+mflorea>\u00a0tmortagne: I see that Include macro sets XDOM metadata by wrapping it with a MetaDataBlock, while in XWikiDocument, when the content is rendered, the metadata is simply set with xdom.getMetaData().addMetaData(...). See XWikiDocument#performSyntaxConversion. Is the MetaDataBlock wrapping needed?  \n10:59\u00a0<+tmortagne>\u00a0depends  \n10:59\u00a0<+tmortagne>\u00a0it's needed only if you have something to put in it  \n11:00\u00a0<+tmortagne>\u00a0include provide the real name and syntaxe of the source document for example  \n11:00\u00a0<+tmortagne>\u00a0which is then use to properly resolve relative document references  \n11:01\u00a0<+mflorea>\u00a0my question is: do I have to wrap with MetaDataBlock or can I simply do xdom.getMetaData().addMetaData() without wrapping?  \n11:01\u00a0<+tmortagne>\u00a0XDOM is a MetaDataBlock and you can use it directly as such yes  \n11:01\u00a0<+tmortagne>\u00a0see it's definition  \n11:01\u00a0<+mflorea>\u00a0ok, good, then why is include macro wrapping with a new MetaDataBlock?  \n11:02\u00a0<+mflorea>\u00a0leftover maybe?  \n11:02\u00a0<+tmortagne>\u00a0c'est des methodes priv\u00e9e  \n11:03\u00a0<vmassol>\u00a0hehe  \n11:03\u00a0<+mflorea>\u00a0:)  \n11:03\u00a0<+tmortagne>\u00a0\u00e7a n'apporte pas grand chose de le g\u00e9n\u00e9rifier  \n11:03\u00a0<+tmortagne>\u00a0haa  \n11:03\u00a0<+tmortagne>\u00a0sorry  \n11:08\u00a0<jvdrean>\u00a0has joined #xwiki  \n11:09\u00a0<+tmortagne>\u00a0mflorea: includemacro does not insert a XDOM  \n11:09\u00a0<+tmortagne>\u00a0XDOM is only used for tree root block  \n11:09\u00a0<+tmortagne>\u00a0but is never inserted  \n11:09\u00a0<+mflorea>\u00a0I see  \n11:09\u00a0<+tmortagne>\u00a0so it's wrapping a MetaDataBlock to replace the XDOM actually  \n11:28\u00a0<arkub>\u00a0has quit  \n11:33\u00a0<arkub>\u00a0has joined #xwiki  \n11:37\u00a0<arkub>\u00a0has quit  \n11:38\u00a0<arkub>\u00a0has joined #xwiki  \n13:09\u00a0<mflorea>\u00a0has quit  \n13:26\u00a0<arkub>\u00a0has quit  \n13:35\u00a0<DrLou>\u00a0has joined #xwiki  \n13:37\u00a0<arkub>\u00a0has joined #xwiki  \n13:43\u00a0<pturcotte>\u00a0has quit  \n13:46\u00a0<mflorea>\u00a0has joined #xwiki  \n14:07\u00a0<arkub>\u00a0has quit  \n14:29\u00a0<vmassol>\u00a0tmortagne: can you do http://jira.xwiki.org/browse/XRENDERING-46 for 3.2M3? If not I'll do it, we need it for be able to put commons on maven central  \n14:32\u00a0<+tmortagne>\u00a0vmassol: I'm not sure I'm +1 to loose CDATA  \n14:33\u00a0<pturcotte>\u00a0has joined #xwiki  \n14:33\u00a0<vmassol>\u00a0IMO it's ok, it's not us  \n14:33\u00a0<vmassol>\u00a0we just need to open an issue for them  \n14:33\u00a0<vmassol>\u00a0to have an official answer  \n14:33\u00a0<vmassol>\u00a0and if it's a bug so that it's in the next version  \n14:34\u00a0<vmassol>\u00a0it's not a bug deal really  \n14:34\u00a0<vmassol>\u00a0s/bug/big/  \n14:34\u00a0<vmassol>\u00a0the pros are a lot more than the cons  \n14:34\u00a0<+tmortagne>\u00a0well it's us when suddenly you loose content in the html macro  \n14:34\u00a0<vmassol>\u00a0sure you loose a comment  \n14:35\u00a0<vmassol>\u00a0but using cdata for comments is well  \n14:35\u00a0<vmassol>\u00a0pretty exotic  \n14:36\u00a0<vmassol>\u00a0tmortagne: you can also look at http://htmlcleaner.sourceforge.net/release.php  \n14:36\u00a0<vmassol>\u00a0you'll see it fixes real issues  \n14:36\u00a0<vmassol>\u00a0which you won't have fixed if you don't upgrade  \n14:37\u00a0<vmassol>\u00a0(a lot of them are way worse than loosing a comment)  \n14:41\u00a0<arkub>\u00a0has joined #xwiki  \n14:44\u00a0<+tmortagne>\u00a0vmassol: it's not about CDATA as comment actually, as I said in the jira issue that's what it mean in html. In XHTML it's real content, meaning that it's displayed as far as we could see with mflorea.  \n14:45\u00a0<vmassol>\u00a0still  \n14:45\u00a0<+tmortagne>\u00a0and it's not a htmlcleaner bug they will never fix it  \n14:45\u00a0<vmassol>\u00a0CDATA is usually used within script elemetns  \n14:45\u00a0<vmassol>\u00a0it's a minor thing compared to other stuff we gain by uprading  \n14:45\u00a0<+tmortagne>\u00a0they are supposed to clean HTML not XHTML so the 2.2 behavior is perfectly valid, the real issue is that we are using it on XHTML sometimes  \n14:46\u00a0<+tmortagne>\u00a0as you want I'm not -1, just don't know enough to take the responsability to apply it  \n14:46\u00a0<vmassol>\u00a0tmortagne: have you logged an issue on their side?  \n14:47\u00a0<+tmortagne>\u00a0vmassol: again it's not a bug from html cleaning POV  \n14:47\u00a0<pgmjsd>\u00a0has joined #xwiki  \n14:47\u00a0<+tmortagne>\u00a0and they already answered us in the past that all they do is parsing HTML and nothing else  \n14:47\u00a0<vmassol>\u00a0then it's ok I don't understand the issue  \n14:47\u00a0<vmassol>\u00a0when our user paste xhtml then we don't have to clean anything  \n14:47\u00a0<vmassol>\u00a0it's only when they paste html that we do  \n14:48\u00a0<+tmortagne>\u00a0vmassol: how do you know that ?  \n14:48\u00a0<+tmortagne>\u00a0if they don't use clean=false we clean  \n14:48\u00a0<vmassol>\u00a0by having 2 macros or y having a parameter  \n14:48\u00a0<+tmortagne>\u00a0we have only one macro  \n14:48\u00a0<vmassol>\u00a0sure  \n14:48\u00a0<vmassol>\u00a0but it's easy to add one  \n14:48\u00a0<vmassol>\u00a0if that fixes the issue  \n14:48\u00a0<+tmortagne>\u00a0and we decided so because it was not dangerous to use xhtml in the html macro  \n14:49\u00a0<vmassol>\u00a0well we didn't see this use case  \n14:49\u00a0<vmassol>\u00a0html and xhtml are not completely similar apparently  \n14:49\u00a0<vmassol>\u00a0but we could keep the same macro  \n14:49\u00a0<vmassol>\u00a0and instead have a compatibiltiy param  \n14:49\u00a0<vmassol>\u00a0compatibilty=xhtml or html for ex  \n14:49\u00a0<vmassol>\u00a0default being html  \n14:50\u00a0<+tmortagne>\u00a0that would duplicate clean=false  \n14:50\u00a0<+tmortagne>\u00a0and anyway it's not the real issue  \n14:50\u00a0<+tmortagne>\u00a0the issue is mostly for people who upgrade  \n14:50\u00a0<+tmortagne>\u00a0that's all  \n14:50\u00a0<vmassol>\u00a0ok then it's easy, we can put that in the release notes  \n14:50\u00a0<+tmortagne>\u00a0when you write your stuff and it does not work then you try with clean=false  \n14:50\u00a0<vmassol>\u00a0it's not a major issue and putting it in the release sounds good to me  \n14:51\u00a0<+tmortagne>\u00a0as you want  \n14:51\u00a0<vmassol>\u00a0ok I'll do it because I'd really like that we publish our stuff on central for 3.2M3 to be ready for 3.2 final  \n14:52\u00a0<vmassol>\u00a0(and uphrading htmlcleaner is a lot cleaner than staying on 2.1 IMO)  \n14:56\u00a0<vmassol>\u00a0tmortagne: do you know why we have htmlcleaner 2.2 on our remote repo?  \n14:57\u00a0<vmassol>\u00a0(maybe someone put it there to perform the upgrade)  \n14:57\u00a0<+tmortagne>\u00a0vmassol: because it was not on central when I started working on it  \n14:57\u00a0<vmassol>\u00a0(I wonder if we should remove it now that it's on central)  \n14:57\u00a0<+tmortagne>\u00a0yes we should  \n14:57\u00a0<+tmortagne>\u00a0we don't use it anyway  \n14:57\u00a0<vmassol>\u00a0ok I'll do that too  \n14:59\u00a0<vmassol>\u00a0done (through nexus)  \n15:10\u00a0<sdumitriu>\u00a0has joined #xwiki  \n15:10\u00a0<@sdumitriu>\u00a0Good morning  \n15:11\u00a0<@sdumitriu>\u00a0Who wants to be BM this week?  \n15:11\u00a0<vmassol>\u00a0jvelociter: you want to go?  \n15:13\u00a0<+jvelociter>\u00a0why not, yes  \n15:13\u00a0<+jvelociter>\u00a0I won't be too much available tomorrow, but rest of the week is ok  \n15:13\u00a0<vmassol>\u00a0jvdrean: cool, I'm adding you (I have a lock on the page now)  \n15:13\u00a0<vmassol>\u00a0s/jvdrean/jvelociter/  \n15:14\u00a0<vmassol>\u00a0thanks  \n15:41\u00a0<arkub>\u00a0has quit  \n15:50\u00a0<+sburjan>\u00a0tmortagne: http://l3dwiki.cs.colorado.edu/bin/view/XWiki/ExtensionManager :)  \n15:52\u00a0<+tmortagne>\u00a0sburjan: not sure what I should see  \n15:54\u00a0<+sburjan>\u00a0Extension Manager :)  \n15:54\u00a0<+sburjan>\u00a0do we have any documentation on Extension Manager ?  \n15:55\u00a0<+sburjan>\u00a0I'd like to start testing it  \n15:56\u00a0<+tmortagne>\u00a0well we don't have much documentation but we don't have much UI either :)  \n15:57\u00a0<+tmortagne>\u00a0extensions.xwiki.org/xwiki/bin/view/Extension/Extension+Module  \n15:57\u00a0<+tmortagne>\u00a0http://extensions.xwiki.org/xwiki/bin/view/Extension/Extension+Module  \n15:57\u00a0<+sburjan>\u00a0xwiki.org seems down  \n15:57\u00a0<+tmortagne>\u00a0not for me  \n15:58\u00a0<vmassol>\u00a0sburjan: you could try installing various extensions from extensions.xwiki.org and then performing some upgrades with and without local changes to test conflicts  \n15:58\u00a0<+tmortagne>\u00a0it's mostly a technical documentation for now since the UI is a demo one and very different from what we want in the future  \n15:59\u00a0<+sburjan>\u00a0vmassol: upgrades on xwiki ? something like a migration ?  \n15:59\u00a0<vmassol>\u00a0extension upgrade  \n15:59\u00a0<+sburjan>\u00a0ok  \n15:59\u00a0<vmassol>\u00a0install v1.0 of extension, then modify some pages of that extension, upgrade to v1.1  \n15:59\u00a0<vmassol>\u00a0(with an without conflicts)  \n15:59\u00a0<vmassol>\u00a0s/an/and/  \n16:05\u00a0<evalica1>\u00a0has joined #xwiki  \n16:06\u00a0<Enygma`>\u00a0has quit  \n16:06\u00a0<evalica>\u00a0has quit  \n16:07\u00a0<sburjan>\u00a0has quit  \n16:10\u00a0<mflorea>\u00a0has quit  \n16:10\u00a0<@sdumitriu>\u00a0vmassol: Should we delay the release by three days so that mflorea can finish the work on sheets?  \n16:12\u00a0<sburjan>\u00a0has joined #xwiki  \n16:12\u00a0<evalica>\u00a0has joined #xwiki  \n16:12\u00a0<evalica1>\u00a0has quit  \n16:13\u00a0<vmassol>\u00a0just put some stats on http://dev.xwiki.org/xwiki/bin/view/Community/BuildManagerRoster  \n16:13\u00a0<vmassol>\u00a0:)  \n16:18\u00a0<mflorea>\u00a0has joined #xwiki  \n16:19\u00a0<Enygma`>\u00a0has joined #xwiki  \n16:20\u00a0<@sdumitriu>\u00a0vmassol: Should we delay the release by three days so that mflorea can finish the work on sheets?  \n16:20\u00a0<vmassol>\u00a0who's the RM?  \n16:20\u00a0<@sdumitriu>\u00a0M  \n16:20\u00a0<@sdumitriu>\u00a0Me  \n16:20\u00a0<@sdumitriu>\u00a0I'm +1 for it  \n16:20\u00a0<vmassol>\u00a0well I don't think we have much choice.. :( mflorea: how much time do you need?  \n16:20\u00a0<vmassol>\u00a0it's going to be last minute thing  \n16:21\u00a0<vmassol>\u00a0which I hate  \n16:21\u00a0<vmassol>\u00a0ok people can review the branch  \n16:21\u00a0<vmassol>\u00a0but I doubt a lot of us has done that  \n16:21\u00a0<vmassol>\u00a0(I haven't)  \n16:21\u00a0<vmassol>\u00a0that's why I don't like git btw  \n16:21\u00a0<vmassol>\u00a0it doesn't force you to integrate as you progress....  \n16:22\u00a0<+mflorea>\u00a0as I said, I need up to 3 days  \n16:23\u00a0<vmassol>\u00a0sdumitriu: we need this so I don't see any other way so +1  \n16:24\u00a0<vmassol>\u00a0mflorea: you need to tell us if this changes the Appwithin minute planning for 3.2, i.e. if we need to shift RC and/or final too?  \n16:27\u00a0<+mflorea>\u00a0my plan is to merge the feature-sheets branch before M3, then work on the components needed to automatically generate the page name/title and hopefully push them in platform before 3.2 final. This should be enough to build the App Within Minutes app on top of 3.2, as a XAR  \n16:28\u00a0<vmassol>\u00a0mflorea: so no XAR in 3.2?  \n16:28\u00a0<vmassol>\u00a0ie no app within minute  \n16:28\u00a0<+mflorea>\u00a0I don't think there is time for it  \n16:40\u00a0<+sburjan>\u00a0tmortagne: is the space issue fixed in paths on extension manager ?  \n16:40\u00a0<+sburjan>\u00a0should I download the latest snapshot ?  \n16:40\u00a0<+tmortagne>\u00a0space issue ?  \n16:43\u00a0<+sburjan>\u00a0tmortagne: \u00a0the URL escaping issue  \n16:44\u00a0<+tmortagne>\u00a0sburjan: still don't remember what a URL related bug has to do with Extension Manager  \n16:45\u00a0<+tmortagne>\u00a0what was the exact issue ?  \n16:45\u00a0<+sburjan>\u00a0I don't know if it's related to Extension Manager, but the one I found on friday ... when it was trying to create some folder and the URL contained a space  \n16:46\u00a0<+sburjan>\u00a0XWIKI-6939  \n16:46\u00a0<+sburjan>\u00a0XWIKI-6765  \n16:46\u00a0<+tmortagne>\u00a0ha ok this one, was totally lost with URL  \n16:47\u00a0<+tmortagne>\u00a0well this one is fixed yes  \n16:47\u00a0<+sburjan>\u00a0ok  \n16:52\u00a0<Enygma`>\u00a0has quit  \n16:53\u00a0<Enygma`>\u00a0has joined #xwiki  \n17:01\u00a0<+sburjan>\u00a0tmortagne: so basically I can install using EM any package from Maven Central and XWiki ?  \n17:02\u00a0<+tmortagne>\u00a0sburjan: from any maven (including local repository) or xwiki (see http://maven.xwiki.org/snapshots/org/xwiki/repository/xwiki-repository-jetty-hsqldb/3.2-SNAPSHOT/) repository  \n17:02\u00a0<+tmortagne>\u00a0you an set the list of repositories in xwiki.properties  \n17:03\u00a0<+mflorea>\u00a0tmortagne: considering the way we render the document title currently, would you agree that it could be parsed as a velocity macro with wiki=false? My need is to get an XDOM from the document title, and I was thinking to use the velocity macro. Do you have a better idea?  \n17:04\u00a0<+tmortagne>\u00a0mflorea: no the cleanest way I can think of but you should get the right behavior yes  \n17:05\u00a0<+tmortagne>\u00a0would be better to directly use velocity module and then parse it with plain test parser IMO  \n17:05\u00a0<+tmortagne>\u00a0no need to depends on velocity/script macro  \n17:06\u00a0<+mflorea>\u00a0I see, will try your solution  \n17:07\u00a0<+tmortagne>\u00a0it's not much more that 2 lines of code  \n17:08\u00a0<+tmortagne>\u00a0most of what you have in VelocityMacro class is actually about velocity filter which you don't need in your case  \n17:08\u00a0<sburjan>\u00a0has quit  \n17:11\u00a0<npm\\_>\u00a0is now known as <npm>  \n17:20\u00a0<sburjan>\u00a0has joined #xwiki  \n17:28\u00a0<+sburjan>\u00a0tmortagne: so I am allowed to add multiple repositories ?  \n17:29\u00a0<+tmortagne>\u00a0sburjan: yes  \n17:29\u00a0<+tmortagne>\u00a0as much as you want ;)  \n17:29\u00a0<+tmortagne>\u00a0but only xwiki repositories are searchable  \n17:30\u00a0<+tmortagne>\u00a0there is no way to search directly in a standard maven repository  \n17:30\u00a0<+sburjan>\u00a0not very familiar with these stuff :)  \n17:30\u00a0<+sburjan>\u00a0I'll keep to xwiki repo  \n17:30\u00a0<+tmortagne>\u00a0xwiki reposito != maven.xwiki.org  \n17:30\u00a0<+tmortagne>\u00a0I really mean a xwiki kind of repository  \n17:30\u00a0<+tmortagne>\u00a0(just to make sure)  \n17:32\u00a0<+tmortagne>\u00a0sburjan: note that you can also use yout local maven repository as repository in EM  \n17:32\u00a0<+sburjan>\u00a0how ?  \n17:32\u00a0<+sburjan>\u00a0:)  \n17:32\u00a0<+tmortagne>\u00a0nothing special it's just a maven repository actually  \n17:32\u00a0<+tmortagne>\u00a0just need to add it's URL  \n17:32\u00a0<+tmortagne>\u00a0so file://...  \n17:32\u00a0<+sburjan>\u00a0I mean I don't know exactly the diff between a xwiki repo and maven.xwiki.org  \n17:33\u00a0<+sburjan>\u00a0because afaik they both have artifacts  \n17:33\u00a0<+tmortagne>\u00a0sburjan: http://extensions.xwiki.org/xwiki/bin/view/Extension/Extension+Module+Repository  \n17:34\u00a0<+tmortagne>\u00a0it's two completely different ways or getting extensions  \n17:34\u00a0<+tmortagne>\u00a0maven repository is a plain HTTP server with files and folders  \n17:34\u00a0<+tmortagne>\u00a0xwiki repository is a REST service to deal with extensions  \n17:34\u00a0<+tmortagne>\u00a0so that you can search, etc...  \n17:35\u00a0<+tmortagne>\u00a0you can get a standalone xwiki repository at http://maven.xwiki.org/snapshots/org/xwiki/repository/xwiki-repository-jetty-hsqldb/3.2-SNAPSHOT/  \n17:35\u00a0<+tmortagne>\u00a0there is almost no API for now, mostly required xclasses  \n17:36\u00a0<+tmortagne>\u00a0a minimal extension is a page containing a ExtensionCode.ExtensionClass object and an attachment  \n17:36\u00a0<+tmortagne>\u00a0the plan is to make extension.xwiki.org a xwiki repository  \n17:36\u00a0<+sburjan>\u00a0i see  \n17:36\u00a0<+sburjan>\u00a0so each extension will have to be packaged, versioned, etc  \n17:37\u00a0<+tmortagne>\u00a0if you want it to be installable using EM yes  \n17:37\u00a0<+tmortagne>\u00a0otherwise you don't whatever you want  \n17:37\u00a0<+tmortagne>\u00a0for example it impossible with snippets  \n17:38\u00a0<+tmortagne>\u00a0s/don't/do/  \n17:38\u00a0<+sburjan>\u00a0EM is a nice feature, but very very hard to be used by non devs or persons that are not familiar with the notion of repo  \n17:38\u00a0<+sburjan>\u00a0yes, snippets are another aspect  \n17:38\u00a0<@sdumitriu>\u00a0sburjan: There have been some changes in the distribution build lately, can you check that the zip+installers still work? No deep test, just that there's nothing wrong with them, like missing database, or broken skin  \n17:38\u00a0<+tmortagne>\u00a0sburjan: it's not hard when extension.xwiki.org is a default repository  \n17:39\u00a0<+sburjan>\u00a0sdumitriu: do you want me tot test now ? are we in staging ?  \n17:39\u00a0<@sdumitriu>\u00a0No  \n17:39\u00a0<+sburjan>\u00a0I cna test now if you want to release today  \n17:39\u00a0<@sdumitriu>\u00a0We're delaying the release for 2-3 days  \n17:39\u00a0<vmassol>\u00a0sburjan: the soonest you can test the better  \n17:39\u00a0<+sburjan>\u00a0ok  \n17:39\u00a0<+sburjan>\u00a0ok. testing now then :)  \n17:39\u00a0<+sburjan>\u00a0shouldn't take much time  \n17:39\u00a0<@sdumitriu>\u00a0I trust that tmortagne did some checks on his own before pushing, but it's better to be safe  \n17:39\u00a0<+sburjan>\u00a0sdumitriu: latest snapshot ? if not, give me the link pease  \n17:40\u00a0<@sdumitriu>\u00a0Yes, latest snapshot  \n17:41\u00a0<+tmortagne>\u00a0yep would be nice to validate installer since I change the whole way of building it, did some comparizons and qui tests but not on windows for example  \n17:41\u00a0<+tmortagne>\u00a0s/qui/quick/  \n17:42\u00a0<+sburjan>\u00a0downloading snapshots now  \n17:42\u00a0<+sburjan>\u00a0the zip works well, I'm already using it  \n17:42\u00a0<+tmortagne>\u00a0this one did not changed much  \n17:42\u00a0<+sburjan>\u00a0what are Packages.gz \u00a0\u00a0and archetype-catalog.xml \u00a0. They are for EM or the new Nexus stuff ?  \n17:42\u00a0<+sburjan>\u00a0I see them on maven.xwiki.org  \n17:43\u00a0<+tmortagne>\u00a0that's stuff generated by nexus  \n17:44\u00a0<+tmortagne>\u00a0but it always been generated by nexus  \n17:44\u00a0<+tmortagne>\u00a0nothing to do with EM  \n17:44\u00a0<+tmortagne>\u00a0it contains the list of all artifacts in the repository to create an index on client side  \n17:45\u00a0<+tmortagne>\u00a0that allow debian style search, i.e. have download the index before searching artifacts  \n17:46\u00a0<+sburjan>\u00a0wdym index on the client side ?  \n17:47\u00a0<+tmortagne>\u00a0client as in maven server being the server side and whatever use it on client side  \n17:48\u00a0<+sburjan>\u00a0I see  \n17:48\u00a0<+tmortagne>\u00a0for example when talking about extensions repository EM is on client side  \n17:55\u00a0<+sburjan>\u00a0windows installer works  \n17:55\u00a0<+sburjan>\u00a0testing jar installer  \n18:01\u00a0<+sburjan>\u00a0ok, they both work  \n18:01\u00a0<+sburjan>\u00a0tested them on Windows  \n18:02\u00a0<+sburjan>\u00a0ok, I have to go for now  \n18:02\u00a0<vmassol>\u00a0I broke the build, html macro test, fixing  \n18:02\u00a0<sburjan>\u00a0has quit  \n18:07\u00a0<pturcotte>\u00a0has quit  \n18:07\u00a0<pturcotte>\u00a0has joined #xwiki  \n18:15\u00a0<@sdumitriu>\u00a0tmortagne: I see you already committed XWIKI-6925  \n18:15\u00a0<@sdumitriu>\u00a0Was that intentional?  \n18:23\u00a0<+tmortagne>\u00a0sdumitriu: crap, sorry about that  \n18:23\u00a0<@sdumitriu>\u00a0No problem  \n18:23\u00a0<+tmortagne>\u00a0I probably committed it with my something else for which I needed to create a wiki  \n18:23\u00a0<@sdumitriu>\u00a0Was in:  \n18:23\u00a0<@sdumitriu>\u00a0XWIKI-6947: Add multi levels support to JobProgress system  \n18:24\u00a0<+tmortagne>\u00a0actually it was for XWIKI-6910 but I could not reproduce it and them I worked on \u00a0XWIKI-6947  \n18:25\u00a0<+tmortagne>\u00a0reverting it  \n18:25\u00a0<@sdumitriu>\u00a0I was just wondering why Jerome's file didn't have any diffs in it  \n18:26\u00a0<@sdumitriu>\u00a0So I was starting to believe that the upgrade problem was caused by an old activitystream file which had already been fixed  \n18:26\u00a0<+tmortagne>\u00a0sdumitriu: did you ever seen xwiki-platform working ?  \n18:26\u00a0<@sdumitriu>\u00a0Until I did a blame and saw that it has been committed a few days ago  \n18:26\u00a0<+tmortagne>\u00a0I just created XWIKI-6959  \n18:27\u00a0<@sdumitriu>\u00a0tmortagne: Can you repeat that question? I don't understand it  \n18:27\u00a0<+tmortagne>\u00a0in xwiki.cfg there is a xwiki.work.dir \u00a0property to setup the work directory  \n18:27\u00a0<+tmortagne>\u00a0used by lucene etc...  \n18:28\u00a0<@sdumitriu>\u00a0tmortagne: Is the question supposed to be \"did you ever see xwiki.work.dir working\"?  \n18:28\u00a0<+tmortagne>\u00a0but as far as I can see in the code and in debug there is no way this property is ever taken into account unless xwiki.temp.dir is set  \n18:28\u00a0<@sdumitriu>\u00a0You asked if xwiki-platform was ever working  \n18:29\u00a0<+tmortagne>\u00a0ha yes wrong copy/past sorry  \n18:29\u00a0<+tmortagne>\u00a0so here it is: did you ever see xwiki.work.dir working ?  \n18:29\u00a0<+tmortagne>\u00a0:)  \n18:29\u00a0<@sdumitriu>\u00a0It's supposed to be working  \n18:29\u00a0<@sdumitriu>\u00a0Checking the code  \n18:29\u00a0<+tmortagne>\u00a0seems it's pretty old code looks like there is no way it ever worked  \n18:29\u00a0<+tmortagne>\u00a0unless it has been refactored recently but I doubt that  \n18:30\u00a0<+tmortagne>\u00a0as far as I can see getTempDirectory simply initialize the wrong variable  \n18:32\u00a0<@sdumitriu>\u00a0Indeed, the code in getTempDirectory seems wrong  \n18:32\u00a0<@sdumitriu>\u00a0If it gets called first  \n18:32\u00a0<+tmortagne>\u00a0even in second actually  \n18:32\u00a0<@sdumitriu>\u00a0Actually it depends on which one is called first  \n18:32\u00a0<+tmortagne>\u00a0it will otherwrite the variable  \n18:32\u00a0<@sdumitriu>\u00a0Really?  \n18:32\u00a0<+tmortagne>\u00a0overwrite  \n18:32\u00a0<@sdumitriu>\u00a0Yes, indeed  \n18:33\u00a0<@sdumitriu>\u00a0I meant that it will return the correct variable if it gets called before calling getTempDir  \n18:33\u00a0<+tmortagne>\u00a0unless you are the lucky one who called first the right one :)  \n18:33\u00a0<+tmortagne>\u00a0yep  \n18:33\u00a0<@sdumitriu>\u00a0But indeed, as soon as getTempDir is called and it goes down, it will overwrite workDir  \n18:33\u00a0<+tmortagne>\u00a0in any case as far as I can see in debug, theses days the temp one is called first  \n18:34\u00a0<+tmortagne>\u00a0thing is that mean we are using a temporary directory for lucene et attachment store...  \n18:34\u00a0<@sdumitriu>\u00a0Yes  \n18:35\u00a0<+tmortagne>\u00a0so now I'm even less sure why this property is set in XE :)  \n18:36\u00a0<@sdumitriu>\u00a0Well, it IS supposed to work and act as intended  \n18:36\u00a0<@sdumitriu>\u00a0It's a bug  \n18:36\u00a0<@sdumitriu>\u00a0getTempDir should only change the tempDir variable  \n18:37\u00a0<amon\\_\\_>\u00a0has joined #xwiki  \n18:38\u00a0<+tmortagne>\u00a0yes but it does not seems very recent  \n18:39\u00a0<+tmortagne>\u00a0even if it should be fixed for sure  \n18:40\u00a0<@sdumitriu>\u00a0We never saw this bug since the containers we use don't clean the workdir between restarts  \n18:40\u00a0<amon\\_\\_>\u00a0Sergiu, just dropped in with a few comments on the UI. I think it is really going to be necessary at some point to get cut and paste actually working. I'm doing post-grant proposal clean up and the actual task should take about 10 seconds; select the sections of a page that have all the links, pointers, other wiki pages etc; create a new wiki page for an archive of it; go into that page; cut all the now obsolete stuff into it... But it doesn'  \n18:41\u00a0<amon\\_\\_>\u00a0It's going to be a long and painful process and I'm doing it. Just sayin'...  \n18:44\u00a0<+mflorea>\u00a0tmortagne: is the parser for the XWiki 1.0 syntax generating a complete XDOM? I'm asking because I see in XWikiDocument code that does this:  \n18:44\u00a0<+mflorea>\u00a0if syntax is 1.0 {  \n18:44\u00a0<+mflorea>\u00a0\u00a0\u00a0// use regex on the XWiki 1.0 content  \n18:44\u00a0<+mflorea>\u00a0} else {  \n18:44\u00a0<+mflorea>\u00a0\u00a0\u00a0// call getXDOM()  \n18:44\u00a0<+mflorea>\u00a0}  \n18:45\u00a0<evalica>\u00a0has quit  \n18:45\u00a0<+mflorea>\u00a0I'm looking for instance at the code that extract the title from the content (when the title field is empty)  \n18:45\u00a0<+tmortagne>\u00a0mflorea: yes it generate a complete XDOM, but the various if you see are here to be sure we don't break \u00a0any behavior  \n18:46\u00a0<+tmortagne>\u00a0converting 1.0 -> 2.0 \u00a0and then parsing the 2.0 cannot produce the exact same result  \n18:46\u00a0<+tmortagne>\u00a0it's mostly retro-compatibility if  \n18:47\u00a0<+mflorea>\u00a0is this what the XWiki 1.0 parser does? converts the 1.0 content to 2.0?  \n18:47\u00a0<+tmortagne>\u00a0yep  \n18:47\u00a0<+mflorea>\u00a0so it doesn't generate XDOM directly from 1.0  \n18:47\u00a0<+tmortagne>\u00a0no  \n18:47\u00a0<+tmortagne>\u00a0xwiki/1.0 is pretty hard to parse with a real parser  \n18:47\u00a0<+mflorea>\u00a0yep  \n18:47\u00a0<+tmortagne>\u00a0it's has been designed to work with regexp  \n18:48\u00a0<+tmortagne>\u00a0so I use regexp to produce something I can parse  \n18:48\u00a0<+tmortagne>\u00a0it also allows me to use the exact same regexp used in real 1.0 parser for closer behavior  \n18:48\u00a0<+mflorea>\u00a0I see  \n18:48\u00a0<+tmortagne>\u00a0instead of trying to translate it in javacc  \n18:49\u00a0<+tmortagne>\u00a0it's already very different without that :)  \n18:49\u00a0<+tmortagne>\u00a0but at least pure syntaxe should be ok  \n18:49\u00a0<+tmortagne>\u00a0I mean exactly the same  \n18:50\u00a0<+tmortagne>\u00a0that's when there is velocity that it's starting to be tricky  \n18:50\u00a0<+mflorea>\u00a0the problem I have is that following your advice I designed the DocumentDisplayer interface to return an XDOM and right now I'm working only with getXDOM, but it seems I have to checks the syntax.  \n18:50\u00a0<Enygma`>\u00a0has quit  \n18:51\u00a0<+tmortagne>\u00a0hmm  \n18:51\u00a0<+mflorea>\u00a0and for 1.0 syntax and I don't have an XDOM, i.e. all the methods from XWikiDocument work with strings when the syntax is 1.0  \n18:52\u00a0<+tmortagne>\u00a0what you could do with 1.0 is to produce a XDOM with a html RawBlock  \n18:53\u00a0<+tmortagne>\u00a0so that you can still use the old 1.0 parser  \n18:53\u00a0<+mflorea>\u00a0I don't understand  \n18:54\u00a0<+tmortagne>\u00a0you can put the result of the 1.0 rendering execution in \u00a0a RawBlock if you want to produce a XDOM out of 1.0 document content  \n18:54\u00a0<+tmortagne>\u00a0basically I'm saying to continue handling 1.0 syntax as a special use case behind the scene  \n18:55\u00a0<+mflorea>\u00a0ok  \n18:55\u00a0<+tmortagne>\u00a0but it should not prevent you from having a XDOM based API  \n18:55\u00a0<+mflorea>\u00a0right  \n18:55\u00a0<+tmortagne>\u00a0unless you need to find something in that XDOM I don't remember  \n18:56\u00a0<+tmortagne>\u00a0but we could say 1.0 syntax support is limited if it's only for new stuff  \n18:57\u00a0<+tmortagne>\u00a0hmm another idea could be to parse what has been produced by 1.0 syntax with html parser  \n18:57\u00a0<+tmortagne>\u00a0so that you get HeaderBlock, LinkBlock, etc...  \n18:57\u00a0<+mflorea>\u00a0well, for instance, when the title is displayed, if the title is not explicitly specified then we look in the document content for the first heading. Even if I create a RawBlock, I would still need to use regex to find the first heading (like what is done now)  \n18:57\u00a0<+tmortagne>\u00a0for the title you can deal with it specificcally  \n18:58\u00a0<+tmortagne>\u00a0finding the first heading is implementation details isn't it ?  \n18:58\u00a0<+tmortagne>\u00a0that should not have much to do with the API  \n18:59\u00a0<+tmortagne>\u00a0in your implementation of the title displayer you do two different code depending on the syntax, like it's done in XWikiDocument right now  \n18:59\u00a0<+mflorea>\u00a0yes :) I have the API, now I'm struggling with the implementation.  \n18:59\u00a0<+mflorea>\u00a0yes, I could do that  \n19:01\u00a0<+tmortagne>\u00a0not sure how to do for not making the code too crappy  \n19:01\u00a0<+tmortagne>\u00a0maybe introduce a TitleExtractor component  \n19:01\u00a0<+tmortagne>\u00a0with an implementation having xwiki/1.0 as role hint  \n19:02\u00a0<+tmortagne>\u00a0and the default implementation using the rendering  \n19:02\u00a0<+tmortagne>\u00a0you try to get the extractor for your current syntax and if you can't find one then you ask for the default one which support any rendering syntax  \n19:03\u00a0<+tmortagne>\u00a0that could allow later someone to write an optimized title extractor for some syntax for which he does not want to parse the whole document with the rendering  \n19:03\u00a0<+tmortagne>\u00a0just saying ;)  \n19:04\u00a0<+tmortagne>\u00a0the good thing is that it prevent you from directly depending on xwiki-core to be able to extract the title the old 1.0 way  \n19:04\u00a0<+mflorea>\u00a0I'm not sure that's very useful, but I'll do something similar. Right now my DefaultDocumentDisplayer uses a DocumentContentDisplayer and a DocumentTitleDisplayer. I can add two different impl for when the syntax is 1.0  \n19:05\u00a0<+mflorea>\u00a0it's basically what you say, but for the entire process of displaying the title, not just for extracting it from the content  \n19:06\u00a0<+mflorea>\u00a0and indeed, the impl for 1.0 would probably be in the old core  \n19:08\u00a0<+mflorea>\u00a0tmortagne: one more question: is the VelocityManager enough to evaluate velocity scripts? I'd say so by looking at the velocity macro, but at the same time DefaultXWikiRenderingEngine has a \\_lot\\_ of code and it is called from XWikiDocument to interpret/evaluate velocity code.  \n19:09\u00a0<+tmortagne>\u00a0mflorea: it's suppoosed to be enough yes, pretty sure DefaultXWikiRenderingEngine is called by VelocityManager  \n19:09\u00a0<+mflorea>\u00a0ah :)  \n19:09\u00a0<+mflorea>\u00a0ok then  \n19:09\u00a0<+mflorea>\u00a0thanks  \n19:09\u00a0<+tmortagne>\u00a0your's welcome  \n19:09\u00a0<+tmortagne>\u00a0you'r  \n19:18\u00a0<amon\\_\\_>\u00a0The only way I have found to move content containing links so far is to recreate them from scratch. I can't even edit the Source and fix a link to an upload, or at least have not found the magic so far after lots of guessing.  \n19:36\u00a0<amon\\_\\_>\u00a0Might even have to re-upload files that are already uploaded. Link does not seem to have an option to just link to the attached file previously uploaded. Perhaps attach is only meant to mean the file uniquely belongs to that document, but all I want is to delete the old location and reconnect in the new, ie mv mypag1/attach1 mypag1/newpag1/. This should be easy and utterly obvious to accomplish. It is not.  \n19:42\u00a0<mflorea>\u00a0has quit  \n19:53\u00a0<amon\\_\\_>\u00a0Does anyone know the magic for manually re-writing a url in a Source edit to make it work after moving it from one page to another? I'm sure I've done everything that is even vaguely reasonable and no joy.  \n19:58\u00a0<+jvelociter>\u00a0Hi guys  \n19:58\u00a0<+jvelociter>\u00a0I think that has been asked already, I give it a try anyway : can we have parameters on list item elements in syntax 2+ ?  \n19:59\u00a0<+jvelociter>\u00a0hum no  \n19:59\u00a0<+jvelociter>\u00a0XRENDERING-36  \n20:01\u00a0<lpereira>\u00a0has joined #xwiki  \n20:10\u00a0<jvdrean>\u00a0has quit  \n20:25\u00a0<jvelociter>\u00a0has quit  \n20:25\u00a0<jvelociter>\u00a0has joined #xwiki  \n20:46\u00a0<amon\\_\\_>\u00a0Okay, I have figured out what is wrong. There is an error in your re-write rules when you cut and past. Procedure: in WYSYWG on first page, you select and cut or copy a link; you go to the new page, paste it, and then go to Source mode to see it.  \n20:46\u00a0<amon\\_\\_>\u00a0Original page has this:  \n20:46\u00a0<amon\\_\\_>\u00a0[[Appendix: Range Safety Solutions (WYSIS)>>attach:20070906-WYSIS-SpaceportappendixAv.3.pdf||title=\"Additional data for WYSIS proposal\"]]  \n20:46\u00a0<amon\\_\\_>\u00a0When you can and paste you end up with this:  \n20:46\u00a0<amon\\_\\_>\u00a0[[Appendix: Range Safety Solutions (WYSIS)>>../../download/ImmortalData/WebHome/20070906%2DWYSIS%2DSpaceportappendixAv.3.pdf||title=\"Additional data for WYSIS proposal\"]]  \n20:46\u00a0<amon\\_\\_>\u00a0But you need this for it to still work:  \n20:46\u00a0<amon\\_\\_>\u00a0[[Appendix: Range Safety Solutions (WYSIS)>>http://wiki.immortaldata.net/xwiki/bin/download/ImmortalData/WebHome/20070906%2DWYSIS%2DSpaceportappendixAv.3.pdf||title=\"Additional data for WYSIS proposal\"]]  \n20:47\u00a0<amon\\_\\_>\u00a0As you can see, the pasted link uses .. format. It fails.  \n20:48\u00a0<amon\\_\\_>\u00a0The other link is what I reconstructed manually in Source. it works. Ergo, you have a re-write rule problem.  \n20:49\u00a0<amon\\_\\_>\u00a0And now that I have dumped those URL's I certainly hope your security does not have a loophole for url fishing.  \n20:52\u00a0<jvdrean>\u00a0has joined #xwiki  \n21:02\u00a0<tmortagne>\u00a0has quit  \n21:20\u00a0<patrek>\u00a0has joined #xwiki  \n21:21\u00a0<pturcotte>\u00a0has quit  \n21:24\u00a0<xwikibot>\u00a0has joined #xwiki  \n21:57\u00a0<mflorea>\u00a0has joined #xwiki  \n22:31\u00a0<patrek>\u00a0has quit  \n22:31\u00a0<pturcotte>\u00a0has joined #xwiki  \n22:39\u00a0<lpereira>\u00a0has quit  \n22:50\u00a0<pturcotte>\u00a0has quit  \n22:53\u00a0<amon\\_\\_>\u00a0has quit  \n22:59\u00a0<jvelociter\\_>\u00a0has joined #xwiki  \n23:03\u00a0<mflorea>\u00a0has quit  \n23:03\u00a0<jvelociter>\u00a0has quit  \n23:03\u00a0<jvelociter\\_>\u00a0is now known as <jvelociter>  \n23:10\u00a0<pturcotte>\u00a0has joined #xwiki  \n23:18\u00a0<vmassol>\u00a0has quit  \n\n"}