{"id": "dev:IRC.xwikiArchive20110531", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110531", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:05\u00a0<vmassol>\u00a0has joined #xwiki  \n00:14\u00a0<mflorea>\u00a0has quit  \n00:34\u00a0<vmassol>\u00a0has quit  \n00:34\u00a0<Denis>\u00a0has quit  \n01:22\u00a0<qwebirc27664>\u00a0has joined #xwiki  \n01:23\u00a0<qwebirc27664>\u00a0hello room, i have hear that there is a irc jabber bridge and i would like to use it, can anyone point me in the right direction  \n01:24\u00a0<qwebirc27664>\u00a0has quit  \n02:08\u00a0<jvdrean1>\u00a0has quit  \n04:27\u00a0<sdumitriu>\u00a0has quit  \n06:57\u00a0<mflorea>\u00a0has joined #xwiki  \n07:38\u00a0<vmassol>\u00a0has joined #xwiki  \n08:41\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:31\u00a0<Denis>\u00a0has joined #xwiki  \n10:13\u00a0<jvdrean>\u00a0has joined #xwiki  \n10:18\u00a0<vmassol>\u00a0good morning everyone  \n10:18\u00a0<vmassol>\u00a0checking jenkins  \n10:18\u00a0<+mflorea>\u00a0vmassol: is there a way to save an object (string) on a session-like object from a component, without going through the oldcore? I don't think this is possible yet, but I wanted to be sure.  \n10:18\u00a0<vmassol>\u00a0looking at cluster tests: http://ci.xwiki.org/job/xwiki-enterprise-tests-3.1/org.xwiki.enterprise$xwiki-enterprise-test-cluster/8/testReport/org.xwiki.test.cluster/DocumentCacheTest/testDocumentCacheSync/  \n10:19\u00a0<vmassol>\u00a0vmassol: well 2 solutions  \n10:19\u00a0<vmassol>\u00a0(actually 3)  \n10:19\u00a0<+mflorea>\u00a0i.e. I want to save a value that corresponds to the current user  \n10:19\u00a0<vmassol>\u00a0solution 1: application scope through Application container object. But not session it's the whole app lifetime  \n10:20\u00a0<vmassol>\u00a0solution 2: get the original request by casting to ServletRequest, get session  \n10:20\u00a0<vmassol>\u00a0solution 3: use EC (request scope)  \n10:20\u00a0<vmassol>\u00a0so basically for session there's only solution 2  \n10:20\u00a0<vmassol>\u00a0which is environment-dependent  \n10:21\u00a0<+mflorea>\u00a0ok, but that is not a problem for me  \n10:21\u00a0<+mflorea>\u00a0I'll go with solution (2)m thanks  \n10:21\u00a0<vmassol>\u00a0me = ?  \n10:21\u00a0<vmassol>\u00a0wysiwyg?  \n10:21\u00a0<vmassol>\u00a0does this means the wysiwyg cannot be used in a non-servlet environment?  \n10:22\u00a0<+mflorea>\u00a0I'm writing a component that takes data from an Alfresco server  \n10:22\u00a0<+mflorea>\u00a0so it's not for the platform, at least not now  \n10:22\u00a0<vmassol>\u00a0((ServletRequest) container.getRequest()).getHttpServletRequest().getSession()  \n10:22\u00a0<vmassol>\u00a0ok  \n10:23\u00a0<+mflorea>\u00a0I need to store an authentication ticket taken from Alfresco on the session  \n10:23\u00a0<vmassol>\u00a0ok  \n10:36\u00a0<mpaun>\u00a0has joined #xwiki  \n10:55\u00a0<jvelociter>\u00a0has joined #xwiki  \n11:10\u00a0<abusenius>\u00a0has joined #xwiki  \n11:11\u00a0<Enygma`>\u00a0has joined #xwiki  \n11:13\u00a0<evalica>\u00a0has joined #xwiki  \n11:38\u00a0<jvelociter>\u00a0has quit  \n11:38\u00a0<jvelociter>\u00a0has joined #xwiki  \n11:40\u00a0<jvelociter\\_>\u00a0has joined #xwiki  \n11:43\u00a0<jvelociter>\u00a0has quit  \n11:43\u00a0<jvelociter\\_>\u00a0is now known as <jvelociter>  \n11:56\u00a0<vmassol>\u00a0mflorea: there are 11 test failure for wysiwyg: http://ci.xwiki.org/job/xwiki-enterprise-tests-3.1/org.xwiki.enterprise$xwiki-enterprise-test-wysiwyg/8/testReport/  \n11:56\u00a0<vmassol>\u00a0could you have a look?  \n11:58\u00a0<+mflorea>\u00a0vmassol: I will  \n12:19\u00a0<abusenius>\u00a0has quit  \n12:26\u00a0<jvelociter>\u00a0has quit  \n12:26\u00a0<jvelociter>\u00a0has joined #xwiki  \n13:34\u00a0<abusenius>\u00a0has joined #xwiki  \n14:01\u00a0<vmassol>\u00a0cjdelisle: hope I fixed a few flickering  \n14:01\u00a0<vmassol>\u00a0(just committed something)  \n14:06\u00a0<vmassol>\u00a0cjdelisle: that's an interesting one: http://ci.xwiki.org/job/xwiki-enterprise-tests-3.1/org.xwiki.enterprise$xwiki-enterprise-test-storage/8/testReport/org.apache.maven.surefire.junit4/JUnit4Provider/org\\_xwiki\\_test\\_storage\\_AllTests/  \n14:08\u00a0<vmassol>\u00a0could you fix it?  \n14:08\u00a0<vmassol>\u00a0(I don't know these storage tests enough right now)  \n14:12\u00a0<vmassol>\u00a0guys I think I've found a regression  \n14:12\u00a0<vmassol>\u00a0backlinks don't work anymore in xwiki 1.0 syntax  \n14:14\u00a0<vmassol>\u00a0it works in 2.0 syntax though  \n14:15\u00a0<+tmortagne>\u00a0vmassol: that's weird I'm pretty sure there is unit tests even in 1.0 syntax  \n14:15\u00a0<vmassol>\u00a0tmortagne: well the functional test for it fails  \n14:15\u00a0<vmassol>\u00a0and I can reproduce it  \n14:15\u00a0<vmassol>\u00a0BacklinksTest  \n14:15\u00a0<vmassol>\u00a0if someone else could confirm it, it would be great  \n14:15\u00a0<+tmortagne>\u00a0is it very recent ?  \n14:15\u00a0<vmassol>\u00a0maybe, I don't know  \n14:15\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0createPage(\"Test\", \"BacklinkTargetTest\", \"#foreach ($link in $doc.getBacklinks())\\n\"  \n14:15\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ \"$link\\n\"  \n14:15\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0+ \"#end\", SYNTAX);  \n14:15\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Create page pointing to the backlinked page  \n14:15\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0createPage(\"Test\", \"BacklinkSourceTest\", \"[backlink>Test.BacklinkTargetTest]\", SYNTAX);  \n14:15\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0open(\"Test\", \"BacklinkTargetTest\");  \n14:15\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0assertEquals(\"Test.BacklinkSourceTest\", getSelenium().getText(\"xwikicontent\"));  \n14:15\u00a0<vmassol>\u00a0can someone try it?  \n14:16\u00a0<vmassol>\u00a0(just create these 2 pages in 1.0 syntax)  \n14:18\u00a0<@cjdelisle>\u00a0Yes re storage tests, I was looking at it earlier, cannot repeat on local :/  \n14:23\u00a0<vmassol>\u00a0retesting with more recent version from trunk...  \n14:24\u00a0<vmassol>\u00a0ok fails  \n14:24\u00a0<vmassol>\u00a0trynig to debug it  \n14:24\u00a0<vmassol>\u00a0btw I still get the watchlist issue on trunk  \n14:24\u00a0<vmassol>\u00a0(jvelociter)  \n14:25\u00a0<vmassol>\u00a0http://pastebin.com/r8xBpPwe  \n14:26\u00a0<vmassol>\u00a0I'm using a build from today 10:53 paris time  \n14:26\u00a0<+tmortagne>\u00a0vmassol: just reproduced backlink issue  \n14:26\u00a0<vmassol>\u00a0tmortagne: ok, I'm quickly looking at it to see if I can see something  \n14:26\u00a0<vmassol>\u00a0creating jira issue now  \n14:26\u00a0<+tmortagne>\u00a0note that it's working on 3.0RC1 at least (just tested on myxwiki.org)  \n14:27\u00a0<vmassol>\u00a0ok  \n14:27\u00a0<vmassol>\u00a0just created http://jira.xwiki.org/jira/browse/XWIKI-6666  \n14:28\u00a0<vmassol>\u00a0(this issue is a devil issue! ;))  \n14:31\u00a0<vmassol>\u00a0tmortagne: I guess a good git bisect could find the culprit but I'm not git-savvy enough to do that yet...  \n14:32\u00a0<vmassol>\u00a0AFAIU you need something to run on each try to verify if it works or fail  \n14:32\u00a0<+tmortagne>\u00a0vmassol: it's not very important anyway  \n14:32\u00a0<vmassol>\u00a0not very important?  \n14:32\u00a0<+tmortagne>\u00a0finding when it started  \n14:32\u00a0<vmassol>\u00a0it helps understand what changed  \n14:32\u00a0<vmassol>\u00a0now debugging the savexwikidoc  \n14:32\u00a0<+tmortagne>\u00a0sure but should not be hard to find what's wrong, backlink code it's not very complex  \n14:33\u00a0<vmassol>\u00a0I'm going to put a breakping in saveLinks10  \n14:34\u00a0<+jvelociter>\u00a0vmassol: OK, I will check it  \n14:34\u00a0<vmassol>\u00a0jvelociter: thanks  \n14:37\u00a0<vmassol>\u00a0tmortagne: found it  \n14:37\u00a0<vmassol>\u00a0it's this line:  \n14:37\u00a0<vmassol>\u00a0if (doc.getSyntax() == Syntax.XWIKI\\_1\\_0) {  \n14:37\u00a0<vmassol>\u00a0should use equals  \n14:38\u00a0<vmassol>\u00a0we'll need to do something about this, it's a typical error  \n14:38\u00a0<+tmortagne>\u00a0well java devv are used to the same thing with strings  \n14:38\u00a0<vmassol>\u00a0yes but the fact that Syntax.XWIKI\\_1\\_0 is static is misleading  \n14:39\u00a0<vmassol>\u00a0it's sergiu  \n14:39\u00a0<+tmortagne>\u00a0well it's usefull to compare Syntax objects and better having it as static than creating a Syntax object to compare each time  \n14:40\u00a0<vmassol>\u00a0sergiu shoudl stop doing modification at last moment  \n14:40\u00a0<vmassol>\u00a0that's the second bug I find in his \"cleanup\"  \n14:40\u00a0<+tmortagne>\u00a0where is this wrong if btw ?  \n14:41\u00a0<vmassol>\u00a0he's replaced:  \n14:41\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (doc.getSyntaxId().equals(\"xwiki/1.0\")) {  \n14:41\u00a0<vmassol>\u00a0with  \n14:41\u00a0<vmassol>\u00a0if (doc.getSyntax() == Syntax.XWIKI\\_1\\_0) {  \n14:41\u00a0<vmassol>\u00a0grr....  \n14:41\u00a0<vmassol>\u00a0XwikiHibernateStore  \n14:41\u00a0<vmassol>\u00a0line 1981  \n14:42\u00a0<vmassol>\u00a0fixing  \n14:42\u00a0<+tmortagne>\u00a0hmm ok so that's why it's not covered by unit tests I guess  \n14:42\u00a0<vmassol>\u00a0luckily we had functional test  \n14:42\u00a0<+tmortagne>\u00a0yep  \n14:46\u00a0<vmassol>\u00a0here's the commit: https://github.com/xwiki/xwiki-platform/commit/800178146d80613463801705fe692278838cc4a4  \n14:49\u00a0<vmassol>\u00a0cjdelisle: btw this shows why we need to check that the tests are passing before releasing  \n14:50\u00a0<vmassol>\u00a0we released 3.1M2 with this test failing  \n14:50\u00a0<vmassol>\u00a0introducing a very important regression in 3.1M2  \n15:03\u00a0<vmassol>\u00a0mflorea: any news on the 11 failing wysiwyg tests?  \n15:06\u00a0<vmassol>\u00a0we ahve this watchlist test failing too: http://ci.xwiki.org/job/xwiki-enterprise-tests-3.1/org.xwiki.enterprise$xwiki-enterprise-test-selenium/8/testReport/org.xwiki.test.selenium/WatchListTest/testWatchThisPageAndWholeSpace/  \n15:06\u00a0<vmassol>\u00a0will try to reproduce locally  \n15:07\u00a0<vmassol>\u00a0apparently the mail isn't sent  \n15:12\u00a0<+jvelociter>\u00a0vmassol: can't reproduce the watchlist issue  \n15:12\u00a0<+jvelociter>\u00a0just built XE trunk  \n15:13\u00a0<+jvelociter>\u00a0how do you reproduce ? click \"watch this page\" ?  \n15:13\u00a0<vmassol>\u00a0I didn't try to reproduce it. I just started ti and tried to reproduce the issue with backlins in 1.0 syntax  \n15:13\u00a0<vmassol>\u00a0so created 2 pages in syntax 1.0  \n15:13\u00a0<vmassol>\u00a0and when I looked at the console  \n15:13\u00a0<+jvelociter>\u00a0trying on branch stable  \n15:13\u00a0<vmassol>\u00a0\u00a0it was there  \n15:13\u00a0<+jvelociter>\u00a0ok  \n15:14\u00a0<@cjdelisle>\u00a0IIRC that has flickered before.  \n15:14\u00a0<vmassol>\u00a0I downloaded the build from 10:53 of this morning  \n15:14\u00a0<vmassol>\u00a0cjdelisle: talking about http://ci.xwiki.org/job/xwiki-enterprise-tests-3.1/org.xwiki.enterprise$xwiki-enterprise-test-selenium/8/testReport/org.xwiki.test.selenium/WatchListTest/testWatchThisPageAndWholeSpace/ .  \n15:14\u00a0<vmassol>\u00a0?  \n15:14\u00a0<@cjdelisle>\u00a0yes  \n15:15\u00a0<vmassol>\u00a0cjdelisle: I don't get it since there's a large wait  \n15:15\u00a0<+mflorea>\u00a0vmassol: I'll commit in a minute. The failing tests had to be update due to http://jira.xwiki.org/jira/browse/XWIKI-5560  \n15:15\u00a0<vmassol>\u00a0this.greenMail.waitForIncomingEmail(70000, 1);  \n15:15\u00a0<vmassol>\u00a0mflorea: ok thanks  \n15:15\u00a0<vmassol>\u00a0that's 70 seconds  \n15:15\u00a0<vmassol>\u00a0and wait for 1 mail  \n15:15\u00a0<vmassol>\u00a0if it times out I hope it throws an exception  \n15:15\u00a0<@cjdelisle>\u00a0I did not identify the source of the flicker.  \n15:16\u00a0<vmassol>\u00a0the array out of bounds is on the next line  \n15:16\u00a0<vmassol>\u00a0String messageFromXWiki = GreenMailUtil.getBody(this.greenMail.getReceivedMessages()[0]);  \n15:16\u00a0<vmassol>\u00a0so it means getReceivedMessgaes is an emty array  \n15:16\u00a0<vmassol>\u00a0but since there's the wait it should'n't be possible  \n15:16\u00a0<vmassol>\u00a0unless there's no exception thrown  \n15:16\u00a0<vmassol>\u00a0need to check the api javadoc  \n15:17\u00a0<vmassol>\u00a0ahah  \n15:17\u00a0<vmassol>\u00a0Returns false if timeout period was reached, otherwise true.  \n15:17\u00a0<vmassol>\u00a0will fix test  \n15:17\u00a0<vmassol>\u00a0so mail isn't sent  \n15:17\u00a0<@cjdelisle>\u00a0It might be something about it not properly triggering the watchlist  \n15:18\u00a0<@cjdelisle>\u00a0I seem to recall once taking a glance at the code trying to see if it was something obvious but not being able to catch it  \n15:29\u00a0<sdumitriu>\u00a0has joined #xwiki  \n16:03\u00a0<+jvelociter>\u00a0vmassol: I don't get the UnsupportedOperationException  \n16:04\u00a0<vmassol>\u00a0strange, I got it several times again  \n16:04\u00a0<+jvelociter>\u00a0not always ?  \n16:04\u00a0<vmassol>\u00a0I don't know, I'm just using the wiki  \n16:04\u00a0<vmassol>\u00a0and when I look in the console from time to time I see new stack traces  \n16:04\u00a0<+jvelociter>\u00a0aren't you running tests ?  \n16:04\u00a0<+jvelociter>\u00a0(BacklinkTargetTest)  \n16:08\u00a0<@sdumitriu>\u00a0vmassol: I don't get it, why does this work?  \n16:08\u00a0<@sdumitriu>\u00a0- if\u00a0(doc.getSyntax()\u00a0==\u00a0Syntax.XWIKI\\_1\\_0)\u00a0{  \n16:08\u00a0<@sdumitriu>\u00a0+ if\u00a0(doc.getSyntax().equals(Syntax.XWIKI\\_1\\_0))\u00a0{  \n16:08\u00a0<vmassol>\u00a0sdumitriu: because it's not the same reference  \n16:08\u00a0<@sdumitriu>\u00a0Enums should be global, there should never be two instances with the same value  \n16:08\u00a0<vmassol>\u00a0syntaxes can be added dynamically  \n16:08\u00a0<@sdumitriu>\u00a0Aren't syntaxes enums?  \n16:08\u00a0<+tmortagne>\u00a0sdumitriu: it's not enums  \n16:09\u00a0<+tmortagne>\u00a0it's static Syntax object containing several Strings  \n16:09\u00a0<+tmortagne>\u00a0if it was enum it would be impossible to add new syntaxes...  \n16:15\u00a0<DrLou>\u00a0has quit  \n16:15\u00a0<+jvelociter>\u00a0vmassol: I confirm I don't get the error on branch stable-3.1.x  \n16:16\u00a0<+jvelociter>\u00a0I've done several tests in debug mode  \n16:16\u00a0<vmassol>\u00a0jvelociter: you didn't fix it on master?  \n16:16\u00a0<vmassol>\u00a0(that's what I'm testing 3.2-NSAPSHOT)  \n16:16\u00a0<+jvelociter>\u00a0I did, I will verify now  \n16:16\u00a0<vmassol>\u00a0(from 10:45 this morning)  \n16:16\u00a0<vmassol>\u00a0ok  \n16:16\u00a0<vmassol>\u00a0I'll try downloading latest from 3.1 stable  \n16:16\u00a0<vmassol>\u00a0(see if I get it there too  \n16:16\u00a0<vmassol>\u00a0)  \n16:25\u00a0<vmassol>\u00a0cjdelisle: when we @ignore tests we need to be careful that the tests isn't showing a real issue. The problem is that this is hard to ensure since it could the runtime code having a non deterministic issue or it could be the test\u2026 ;)  \n16:26\u00a0<vmassol>\u00a0yeah I fixed the cluser test issues apparently: http://ci.xwiki.org/job/xwiki-enterprise-tests-3.1/lastBuild/testReport/ :)  \n16:26\u00a0<@cjdelisle>\u00a0Yes, unfortunately if we spend the time required to find non-deterministic issues then we will release in august  \n16:26\u00a0<vmassol>\u00a0(and the ldap one)  \n16:27\u00a0<vmassol>\u00a0hopefully several -ui ones will be fixed in the next run  \n16:27\u00a0<vmassol>\u00a0argh +2 webstandards issues  \n16:27\u00a0<vmassol>\u00a0hmmm http://ci.xwiki.org/job/xwiki-enterprise-tests-3.1/org.xwiki.enterprise$xwiki-enterprise-test-webstandards/9/testReport/  \n16:28\u00a0<@cjdelisle>\u00a0I think the reason why we have so much of a testing problem is because the build takes the better part of a day to complete so anyone who commits something doesn't know if it had an effect for a day and has no way of knowing if it was their change or someone elses change on the same day.  \n16:29\u00a0<vmassol>\u00a0yes I agree, it's one of the issues  \n16:29\u00a0<@cjdelisle>\u00a0\\*or a flicker  \n16:29\u00a0<vmassol>\u00a0we could have more agents and split the functional tests across agents  \n16:29\u00a0<florinciu>\u00a0has joined #xwiki  \n16:30\u00a0<@sdumitriu>\u00a0The webstandards tests are a flicker  \n16:30\u00a0<@sdumitriu>\u00a0Connection timed out  \n16:30\u00a0<vmassol>\u00a0they are but we need to fix that  \n16:30\u00a0<vmassol>\u00a0I guess it's becuase we're closing the container and there are still open connections  \n16:30\u00a0<vmassol>\u00a0(or something like that)  \n16:31\u00a0<vmassol>\u00a0open requests (not connections)  \n16:31\u00a0<vmassol>\u00a0like the Livetable one apparently  \n16:35\u00a0<vmassol>\u00a0bb in 10mn  \n16:35\u00a0<+jvelociter>\u00a0vmassol: tested on master too and don't have the issue. Your wiki has been built from the CI or locally ?  \n16:48\u00a0<vmassol>\u00a0by the CI  \n16:55\u00a0<vmassol>\u00a0sent an important vote about stabilizing our build  \n17:07\u00a0<@cjdelisle>\u00a0does anyone know what this is?:  \n17:07\u00a0<@cjdelisle>\u00a0at org.restlet.ext.jaxrs.internal.provider.JsonProvider.writeTo(JsonProvider.java:170)  \n17:08\u00a0<@cjdelisle>\u00a0(IOException)  \n17:08\u00a0<+tmortagne>\u00a0you mean why this exception of what this class \u00a0is ?  \n17:09\u00a0<+tmortagne>\u00a0AFAIK that's what we use to produce json based answer in REST module  \n17:10\u00a0<@cjdelisle>\u00a0It seems to do a lot of blowing up while tests are running  \n17:10\u00a0<vmassol>\u00a0cjdelisle: url?  \n17:10\u00a0<@cjdelisle>\u00a0lol  \n17:10\u00a0<@cjdelisle>\u00a0local hudson instance  \n17:10\u00a0<vmassol>\u00a0:)  \n17:11\u00a0<vmassol>\u00a0ohoho getting better: http://ci.xwiki.org/job/xwiki-enterprise-tests/lastBuild/testReport/  \n17:11\u00a0<vmassol>\u00a0\"only\" 8 failing  \n17:11\u00a0<vmassol>\u00a02 storage now cjdelisle  \n17:12\u00a0<vmassol>\u00a0they're the same apparently  \n17:12\u00a0<@cjdelisle>\u00a0same test failing twice?  \n17:12\u00a0<vmassol>\u00a0maybe you have a suite  \n17:12\u00a0<vmassol>\u00a0ie you run the same test several times  \n17:12\u00a0<vmassol>\u00a0(but you didn't override the test name)  \n17:12\u00a0<vmassol>\u00a0?  \n17:12\u00a0<@cjdelisle>\u00a0That's failing for FS store and default store  \n17:12\u00a0<@sdumitriu>\u00a0vmassol: Checked, no other bugs with == Syntax.XWIKI\\_  \n17:12\u00a0<vmassol>\u00a0yep you should override the etst name  \n17:12\u00a0<vmassol>\u00a0sdumitriu: ok thanks  \n17:12\u00a0<vmassol>\u00a0I did a check a while ago too  \n17:13\u00a0<@cjdelisle>\u00a0Maybe at some point you can take a look and advise me on how to improve that.  \n17:13\u00a0<vmassol>\u00a0cjdelisle: the error looks more real at http://ci.xwiki.org/job/xwiki-enterprise-tests/org.xwiki.enterprise$xwiki-enterprise-test-storage/707/testReport/org.xwiki.test.storage/AttachmentTest/testRollbackAfterSaveDeleteSaveAttachment/  \n17:13\u00a0<vmassol>\u00a0more real than before where it seems it was a server start issue  \n17:14\u00a0<@cjdelisle>\u00a0That fails once out of 20 runs and I really am stumped by it.  \n17:14\u00a0<@sdumitriu>\u00a0Some ui-tests fail strangely, with \"Unable to locate element\" while the element IS in the source  \n17:15\u00a0<@cjdelisle>\u00a0There's an @Ignore I just committed to the branch because of that. I can repeat the flicker very well but I can't for the life of me explain it.  \n17:15\u00a0<@cjdelisle>\u00a0CACHE BUG!  \n17:15\u00a0<@sdumitriu>\u00a0Hm, actually those could be caused by some changes to the WYSIWYG code  \n17:15\u00a0<@cjdelisle>\u00a0(any flicker you can't explain)  \n17:16\u00a0<evalica>\u00a0has quit  \n17:17\u00a0<@cjdelisle>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-tests-3.1/8/consoleFull  \n17:17\u00a0<@cjdelisle>\u00a0search IOException in that text  \n17:17\u00a0<@cjdelisle>\u00a0the rest problem is there  \n17:18\u00a0<vmassol>\u00a0ah yes I noticed those  \n17:18\u00a0<vmassol>\u00a0had planned to look at them but didn't find the time  \n17:18\u00a0<vmassol>\u00a0(had noticed those \"broken pipes\")  \n17:19\u00a0<vmassol>\u00a0tmortagne: could this be caused by your change?  \n17:19\u00a0<vmassol>\u00a0(you removed a dependency and instead we now rely on the jdk version)  \n17:19\u00a0<Chami1>\u00a0has joined #xwiki  \n17:19\u00a0<vmassol>\u00a0(was that for jaxb?)  \n17:19\u00a0<vmassol>\u00a0or maybe it's simply caused by the move to jdk 6  \n17:20\u00a0<vmassol>\u00a0which may contain some classes that weren't in jdk5 before  \n17:20\u00a0<+tmortagne>\u00a0vmassol: yes jaxb among other things but acccording to java 6 doc it was teh exact same version used  \n17:21\u00a0<vmassol>\u00a0the move to jdk6 + this dep change are the only things that comes to my mind for this issue  \n17:31\u00a0<+Denis>\u00a0mflorea: Hi, why is XWIKI-3335 not solved, it seems to me that all macro are at the end of the document when you write it the first time, and so using block macro in WYSIWYG is just impossible ?  \n17:34\u00a0<+mflorea>\u00a0Hi Denis, it is possible, just that for now it's best to leave a blank line after the place where you insert the macro. Alternatively you can switch to source and add the new line. It's not fixed yes because (1) executing code when navigation keys are pressed slows down the editor and determining if there is something visible after the caret is not trivial. (2) it wasn't a priority  \n17:37\u00a0<+Denis>\u00a0mflorea: but I could not expect users to take care of putting a blank line before inserting a macro, and I could not expect them to understand the source. I am telling for myself :)  \n17:37\u00a0<vmassol>\u00a0mflorea: still 2 failing: http://ci.xwiki.org/job/xwiki-enterprise-tests/org.xwiki.enterprise$xwiki-enterprise-test-wysiwyg/707/testReport/  \n17:37\u00a0<+Denis>\u00a0+not  \n17:37\u00a0<+Denis>\u00a0I am not telling for myself  \n17:37\u00a0<+mflorea>\u00a0note that the same issue is when you have an image or a table at the end, or any other block level HTML element, so another reason I didn't fix it was because I was hopping to find a generic solution for all.  \n17:38\u00a0<+mflorea>\u00a0sure, I know it's not nice for the user, but there are workarounds  \n17:38\u00a0<+Denis>\u00a0but everything is at the end the first time it get in  \n17:38\u00a0<+mflorea>\u00a0I would love to fix it if it gets on the roadmap :)  \n17:38\u00a0<+Denis>\u00a0couldn't the editor put the blank line ?  \n17:39\u00a0<+mflorea>\u00a0that's not a solution because you can delete the line and then you have the issue back  \n17:39\u00a0<Chami1>\u00a0has left #xwiki  \n17:39\u00a0<+Denis>\u00a0sure but it would be a better solution then now  \n17:39\u00a0<+mflorea>\u00a0I agree  \n17:40\u00a0<+Denis>\u00a0I means it would be a temporary solution that would help util you have time for something better  \n17:41\u00a0<+mflorea>\u00a0yes, and it's relatively easy to implement, but unfortunately I don't have time to fix it now. I'll try to plan it for 3.2M1  \n17:41\u00a0<+Denis>\u00a0the feedback I get from the WYSIWYG editor is really bad, and users does not understand the difference between what you try to achieve (really ambitious) and a simple HTML editor  \n17:41\u00a0<+Denis>\u00a0since there is many of them, users feels that XWiki is not achieved  \n17:42\u00a0<abusenius>\u00a0has quit  \n17:42\u00a0<+mflorea>\u00a0I'm sorry to hear that, but this bad feedback doesn't get to me..  \n17:43\u00a0<vmassol>\u00a0Denis: would be good if you could post something on the list with details  \n17:43\u00a0<+mflorea>\u00a0if you look at the jira issue opened for the WYSIWYG editor, most of them are opened by me  \n17:43\u00a0<+Denis>\u00a0this means that many are not using it, which is bad  \n17:43\u00a0<+Denis>\u00a0myself, I do not use it either  \n17:43\u00a0<vmassol>\u00a0Denis: this is not enough  \n17:43\u00a0<vmassol>\u00a0we need details  \n17:44\u00a0<+Denis>\u00a0and it is very hard to get detailled feedback from user  \n17:44\u00a0<vmassol>\u00a0so it means you're not asking when they tell you it's bad?  \n17:44\u00a0<+Denis>\u00a0I would be happy when I found sometime to test and report precisely, but what I get from user are not detailled enough for a bug report  \n17:44\u00a0<vmassol>\u00a0because if they can\"'t give examples then it's moot  \n17:45\u00a0<vmassol>\u00a0I can say that our editor is better than all other existing HTML editors  \n17:45\u00a0<vmassol>\u00a0which are full of bugs  \n17:45\u00a0<+Denis>\u00a0it is not moot, it is real problems, the time to explain is lacking  \n17:45\u00a0<vmassol>\u00a0that's easy to say  \n17:45\u00a0<vmassol>\u00a0but it has no value  \n17:45\u00a0<vmassol>\u00a0if not backed by details  \n17:46\u00a0<+Denis>\u00a0do you means that XWIKI-3335 is minor for an editor ?  \n17:46\u00a0<vmassol>\u00a0btw on the XWIKI SAS side we have good feedback about the wysiwyg editor from customers  \n17:46\u00a0<vmassol>\u00a0Denis: I can show way more important bugs with FCK editos or tiny mce  \n17:46\u00a0<vmassol>\u00a0one bug doesn't make an editor bad  \n17:47\u00a0<vmassol>\u00a0s/bug/limitation  \n17:47\u00a0<vmassol>\u00a0have you voted for it?  \n17:47\u00a0<+mflorea>\u00a0Denis, I have tried other HTML editors and they all have this issue: if you don't leave an empty line after the block level element you can't add content after it  \n17:47\u00a0<vmassol>\u00a0(in jira)  \n17:48\u00a0<+Denis>\u00a0Just try Google one, and you know what user expect now  \n17:48\u00a0<vmassol>\u00a0got to go get the kids at school, bb in 30mn  \n17:48\u00a0<+mflorea>\u00a0Denis, that's different..  \n17:48\u00a0<+mflorea>\u00a0don't compare office editor with HTML (web) editor  \n17:48\u00a0<+Denis>\u00a0not for the end user  \n17:48\u00a0<+Denis>\u00a0this is exactly the same for them  \n17:49\u00a0<+mflorea>\u00a0well, web pages are not office documents for sure  \n17:49\u00a0<+Denis>\u00a0I know the challenge, I do not blame anyone here !  \n17:49\u00a0<+mflorea>\u00a0sure  \n17:50\u00a0<+Denis>\u00a0I am not using the WYSIWYG myself, not because it is bad, but because I do not need  \n17:51\u00a0<+Denis>\u00a0so I have myself no real opinion except about the previous bug, and I had not had enough time to make my opinion on the rest  \n17:51\u00a0<+mflorea>\u00a0that's fine, I don't use it myself when writing documentation because I want to fully control the content  \n17:51\u00a0<+Denis>\u00a0I am just reporting what I hear from my end users  \n17:52\u00a0<@cjdelisle>\u00a0I also do not use it and for the same reason as mflorea, I want a low level interface which is as deviod of magic as possible.  \n17:59\u00a0<+Denis>\u00a0we do not use it because we all have that needs  \n18:13\u00a0<vmassol>\u00a0back  \n18:14\u00a0<vmassol>\u00a0trying to understand why http://ci.xwiki.org/job/xwiki-enterprise-tests/org.xwiki.enterprise$xwiki-enterprise-test-ui/707/testReport/org.xwiki.test.ui/BreadcrumbsTest/testBreadcrumbs/ fails  \n18:14\u00a0<vmassol>\u00a0I think I'm going to put back the screenshot feature in se2  \n18:14\u00a0<vmassol>\u00a0that should make it easier to diagnose failing tests  \n18:15\u00a0<vmassol>\u00a0trying it locally first  \n18:17\u00a0<florinciu>\u00a0has quit  \n18:25\u00a0<abusenius>\u00a0has joined #xwiki  \n18:26\u00a0<DrLou>\u00a0has joined #xwiki  \n18:33\u00a0<vmassol>\u00a0jvelociter: I still have the issue  \n18:33\u00a0<vmassol>\u00a0I'm building enterprise tests ui  \n18:33\u00a0<vmassol>\u00a0(with the latest build from ci)  \n18:33\u00a0<vmassol>\u00a0you could try it  \n18:33\u00a0<+jvelociter>\u00a0vmassol: I don't understand  \n18:33\u00a0<+jvelociter>\u00a0I did build it  \n18:33\u00a0<+jvelociter>\u00a0I did download it  \n18:33\u00a0<+jvelociter>\u00a0and I've not seen it :)  \n18:34\u00a0<vmassol>\u00a0and I can see the stack trace in the logs  \n18:34\u00a0<vmassol>\u00a0yes but the tests do exercie xwiki  \n18:34\u00a0<+jvelociter>\u00a0do you build something else ?  \n18:34\u00a0<vmassol>\u00a0so you have more chances of seeing it  \n18:34\u00a0<vmassol>\u00a0nope  \n18:34\u00a0<vmassol>\u00a0I have it all the time  \n18:34\u00a0<+jvelociter>\u00a0any chance you know when it happens ?  \n18:34\u00a0<vmassol>\u00a0every second  \n18:35\u00a0<+jvelociter>\u00a0when running the tests ?  \n18:35\u00a0<vmassol>\u00a0yes  \n18:35\u00a0<+jvelociter>\u00a0each time there is a save ? a view ?  \n18:35\u00a0<+jvelociter>\u00a0you run all tests ?  \n18:35\u00a0<+jvelociter>\u00a0(ui-tests)  \n18:35\u00a0<vmassol>\u00a0yes  \n18:37\u00a0<vmassol>\u00a0I'm going to clean my local repo  \n18:37\u00a0<vmassol>\u00a0and re-run the tests  \n18:39\u00a0<+jvelociter>\u00a0ok  \n18:39\u00a0<vmassol>\u00a0it's downloading xwiki-enterprise-jetty-hsqldb-3.2-20110531.145658-11.zip now  \n18:39\u00a0<+jvelociter>\u00a0I will try it too, just need to finish smthg  \n18:40\u00a0<mpaun>\u00a0has quit  \n18:51\u00a0<vmassol>\u00a0jvelociter: seems better now, I haven't seen the error again yet  \n19:01\u00a0<@cjdelisle>\u00a0mflorea: Why does AddTagsPane#add() stop waiting if the tag input is enabled?  \n19:01\u00a0<+mflorea>\u00a0let me check  \n19:01\u00a0<@cjdelisle>\u00a0It looks to me like it should only wait until the input field disappears  \n19:01\u00a0<+mflorea>\u00a0well  \n19:02\u00a0<+mflorea>\u00a0I think the add form doesn't always close  \n19:02\u00a0<+mflorea>\u00a0e.g. if the tag you enter is already there  \n19:03\u00a0<+jvelociter>\u00a0vmassol: cool  \n19:03\u00a0<@cjdelisle>\u00a0Ahh. There seems to be a problem with the findElements statement still finding the element even though it is detached from the DOM which causes a nasty flicker.  \n19:10\u00a0<vmassol>\u00a0hmm my ui tests seems stuck\u2026. there's a dialog box and the tests doesn't carry on\u2026. even after timeouts....  \n19:10\u00a0<vmassol>\u00a0interesting  \n19:12\u00a0<@cjdelisle>\u00a0It happened before and it froze up the process entirely  \n19:12\u00a0<@cjdelisle>\u00a0froze up as in nothing short of a kill -4 would stop it  \n19:12\u00a0<vmassol>\u00a0I'll wait a few minutes more before stopping the build  \n19:13\u00a0<vmassol>\u00a0actually I'll click on the dialog box  \n19:13\u00a0<vmassol>\u00a0we'll need to fix this obviously  \n19:14\u00a0<vmassol>\u00a0hmm test doesn't continue after dmissing the dialog box....  \n19:14\u00a0<vmassol>\u00a0ok stopped FF  \n19:15\u00a0<+tmortagne>\u00a0vmassol: are you using FF4 ?  \n19:15\u00a0<vmassol>\u00a044 test errors locally!  \n19:15\u00a0<vmassol>\u00a0nope FF 3.6.17  \n19:15\u00a0<+tmortagne>\u00a0ok so it's not selenium bug with FF4 then  \n19:16\u00a0<@cjdelisle>\u00a0selenium2 is unable to dismiss dialogs in FF4 at all  \n19:22\u00a0<sburjan\\_>\u00a0has joined #xwiki  \n19:23\u00a0<mflorea>\u00a0has quit  \n19:23\u00a0<mflorea>\u00a0has joined #xwiki  \n19:23\u00a0<sburjan`>\u00a0has quit  \n19:23\u00a0<sburjan\\_>\u00a0is now known as <sburjan`>  \n19:26\u00a0<tmortagne>\u00a0has quit  \n19:36\u00a0<@cjdelisle>\u00a0vmassol: XE-935 what do you think of the proposal?  \n19:37\u00a0<@cjdelisle>\u00a0mflorea too  \n19:44\u00a0<jvdrean>\u00a0has quit  \n19:47\u00a0<jvdrean>\u00a0has joined #xwiki  \n19:58\u00a0<+mflorea>\u00a0cjdelisle: I'm ok with removing the addEmptyTagTest and changing the add() to only wait for the form to disappear.  \n19:59\u00a0<@sdumitriu>\u00a0vmassol: So you're the new CEO now? http://www.xwiki.com/xwiki/bin/view/Blog/WhatsNext2011  \n19:59\u00a0<@cjdelisle>\u00a0you also have to wait for a possible error message right?  \n20:00\u00a0<vmassol>\u00a0sdumitriu: eheh nice\u2026 apparently I got promoted! :)  \n20:00\u00a0<@sdumitriu>\u00a0Does the old CEO know?  \n20:01\u00a0<vmassol>\u00a0nope  \n20:01\u00a0<vmassol>\u00a0thanks for pointing it out, asking for it to be fixed  \n20:02\u00a0<+mflorea>\u00a0cjdelisle: I don't think there are cases where the form remains visible besides the empty tag case  \n20:03\u00a0<@cjdelisle>\u00a0Are we going to modify the empty tag case in the long run to not keep the form visible?  \n20:04\u00a0<@cjdelisle>\u00a0or should we simply accept not testing that?  \n20:05\u00a0<@cjdelisle>\u00a0it's a trivial function so I'm satisfied that it is not tested.  \n20:06\u00a0<+mflorea>\u00a0IMO the form should remain visible, but we should display a hint that the tag can't be empty  \n20:06\u00a0<+mflorea>\u00a0and then we can wait for the hint  \n20:06\u00a0<jvdrean>\u00a0has quit  \n20:07\u00a0<@cjdelisle>\u00a0Ok but that sounds out of scope for a generic add() method  \n20:07\u00a0<+mflorea>\u00a0not necessarily for that particular hint, but for a hit in general (another hint could be that the inputted tag is already present)  \n20:08\u00a0<@cjdelisle>\u00a0Ok, anyway I modified it to wait for either the error or the forum disappearing and it has passed 8 times in a loop so I'm happy that the problem is solved.  \n20:08\u00a0<+mflorea>\u00a0so IMO the add method should wait for (1) either the form disappears (tags added) or (2) form remains but there is a visual clue that something went wrong  \n20:09\u00a0<+mflorea>\u00a0wait  \n20:09\u00a0<+mflorea>\u00a0wdym by error?  \n20:09\u00a0<@cjdelisle>\u00a0getDriver().findElements(By.className(\"xnotification-error\")).size() > 0;  \n20:10\u00a0<+mflorea>\u00a0I remember I had a very good reason not to do this, but I don't remember the reason  \n20:10\u00a0<+mflorea>\u00a0anyway, we'll see if it passes on CI  \n20:10\u00a0<@cjdelisle>\u00a0server not available error?  \n20:11\u00a0<@cjdelisle>\u00a0if you get that then it should stop and the test needs to handle that case anyway  \n20:11\u00a0<@cjdelisle>\u00a0or we have to accept a flicker if the server is not there...  \n20:11\u00a0<+mflorea>\u00a0no, I think there are cases when the error container is hidden but present in the dom, but I'm not sure  \n20:12\u00a0<+mflorea>\u00a0ah, no, I think because you can't know if the error is coming from the add form.  \n20:12\u00a0<@cjdelisle>\u00a0If nothing else is happening st the same time then you can be reasonably sure.  \n20:13\u00a0<+mflorea>\u00a0during a test you can do multiple ajax operations and the error messages are dispayed for a few seconds, and there can be many displayed at the same time  \n20:13\u00a0<+mflorea>\u00a0well, the add method doesn't know that the add operation is the only operation  \n20:14\u00a0<@cjdelisle>\u00a0I really don't understand your use of isEnabled()  \n20:14\u00a0<+mflorea>\u00a0the main problem is that you can't connect the error message to the source  \n20:14\u00a0<@cjdelisle>\u00a0Is it ever disabled?  \n20:14\u00a0<+mflorea>\u00a0no, but I though it is, that was IMO the right behavior: disable the input  \n20:15\u00a0<@cjdelisle>\u00a0I don't see anything in the js which actually disables the form and the form doesn't seem to flicker grey so it appears to always be enabled.  \n20:16\u00a0<@cjdelisle>\u00a0At any rate, how do you know that the forum ever was disabled? what if the wait statement checks if it's disabled before the click event completes the action of disabling it?  \n20:16\u00a0<+mflorea>\u00a0https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-web/src/main/webapp/resources/uicomponents/viewers/tags.js  \n20:16\u00a0<+mflorea>\u00a0line 115  \n20:17\u00a0<+mflorea>\u00a0I don't think this is possible due to the single threaded nature of JS  \n20:18\u00a0<@cjdelisle>\u00a0yes but java is a seperate process  \n20:18\u00a0<@cjdelisle>\u00a0(from the browser)  \n20:19\u00a0<+mflorea>\u00a0the browser is not responding when the JS is execute  \n20:19\u00a0<+mflorea>\u00a0executed  \n20:20\u00a0<+mflorea>\u00a0so if you click a button, you can do something else before the JS listenes are fully executed  \n20:21\u00a0<@cjdelisle>\u00a0So you can click() then observe the DOM through the selenium2 plugin and be assured that the DOM is at it's completed state and all JS is finished running?  \n20:22\u00a0<+mflorea>\u00a0yes, that is what I know and what I expect  \n20:23\u00a0<@cjdelisle>\u00a0Well, we can solve this with 2 wait events, we'll wait until there are no more error notifications displayed then we will do the wait we were talking about.  \n20:25\u00a0<+mflorea>\u00a0this is a d\u00e9j\u00e0 vu :) I remember I wanted to do this before going with the (wrong) isEnabled solution  \n20:26\u00a0<@cjdelisle>\u00a0I still want to prove that the DOM is locked until there is no js left running...  \n20:27\u00a0<+mflorea>\u00a0it should be easy  \n20:27\u00a0<@cjdelisle>\u00a0create an infiniloop...  \n20:28\u00a0<+mflorea>\u00a0with a click listener that (1) changes some state, then (2) execute a loooong loop and finally (3) changes some state again. You shouldn't be able to notice the first state change  \n20:29\u00a0<+mflorea>\u00a0of course, the second state change overwrite the first  \n20:29\u00a0<@cjdelisle>\u00a0heh maven is using guice  \n20:41\u00a0<vmassol>\u00a0has quit  \n21:16\u00a0<jvdrean>\u00a0has joined #xwiki  \n22:03\u00a0<jvelociter\\_>\u00a0has joined #xwiki  \n22:06\u00a0<jvelociter>\u00a0has quit  \n22:06\u00a0<jvelociter\\_>\u00a0is now known as <jvelociter>  \n23:42\u00a0<mflorea>\u00a0has quit  \n\n"}