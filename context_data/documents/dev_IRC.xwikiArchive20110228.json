{"id": "dev:IRC.xwikiArchive20110228", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110228", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n02:51\u00a0<DrLou>\u00a0has quit  \n03:21\u00a0<abusenius>\u00a0has quit  \n05:23\u00a0<venkatesh>\u00a0has joined #xwiki  \n05:24\u00a0<venkatesh>\u00a0has quit  \n05:25\u00a0<venkatesh>\u00a0has joined #xwiki  \n06:11\u00a0<jvdrean>\u00a0has quit  \n07:05\u00a0<venkatesh>\u00a0has quit  \n07:21\u00a0<venkatesh>\u00a0has joined #xwiki  \n07:44\u00a0<npm\\_>\u00a0has joined #xwiki  \n07:47\u00a0<venkatesh>\u00a0has quit  \n07:48\u00a0<npm>\u00a0has quit  \n07:58\u00a0<sdumitriu>\u00a0has quit  \n08:03\u00a0<venkatesh>\u00a0has joined #xwiki  \n08:16\u00a0<mflorea>\u00a0has joined #xwiki  \n08:25\u00a0<tmortagne>\u00a0has joined #xwiki  \n08:36\u00a0<vmassol>\u00a0has joined #xwiki  \n08:54\u00a0<sburjan>\u00a0has joined #xwiki  \n08:58\u00a0<npm\\_\\_>\u00a0has joined #xwiki  \n09:03\u00a0<npm\\_>\u00a0has quit  \n09:10\u00a0<vmassol>\u00a0moving jira issues related to rendering to new jira project\u2026. not sending notif mails  \n09:11\u00a0<vmassol>\u00a0(fyi)  \n09:16\u00a0<vmassol>\u00a0and good morning!  \n09:21\u00a0<DrLou>\u00a0has joined #xwiki  \n09:22\u00a0<+tmortagne>\u00a0are you sure you are not sending notif mails ? ;)  \n09:22\u00a0<vmassol>\u00a0well I checked the \"don't send emails\" button ;)  \n09:22\u00a0<+tmortagne>\u00a0does not seems to work  \n09:23\u00a0<vmassol>\u00a0well we only received 20 so far  \n09:23\u00a0<vmassol>\u00a0I moved over 100  \n09:23\u00a0<+tmortagne>\u00a0or it's because i'm warching most of theses issues  \n09:23\u00a0<+tmortagne>\u00a0i received more than 20  \n09:23\u00a0<+tmortagne>\u00a0a lot more actually  \n09:24\u00a0<vmassol>\u00a0tmortagne: for http://jira.xwiki.org/jira/browse/XWIKI-1689 should it stay where it is or be moved to the new rendering jira  \n09:24\u00a0<vmassol>\u00a0tmortagne: btw we'll need to do cleanup on issues, I did a builk move without looking at each issue in detail  \n09:24\u00a0<vmassol>\u00a0I guess some will need to stay in the platform  \n09:24\u00a0<+tmortagne>\u00a0vmassol: yes was planning to look all that after you finish  \n09:25\u00a0<vmassol>\u00a0lightbox might be too related to platform to be moved maybe  \n09:25\u00a0<vmassol>\u00a0wdyt?  \n09:25\u00a0<+tmortagne>\u00a0for XWIKI-1689 i'm not sure  \n09:25\u00a0<+tmortagne>\u00a0i would say move  \n09:25\u00a0<+tmortagne>\u00a0it does not seems related to xwiki  \n09:25\u00a0<vmassol>\u00a0ok  \n09:25\u00a0<vmassol>\u00a0moving  \n09:25\u00a0<vmassol>\u00a0it's going to be a pain for users to know where to log a jira issue :)  \n09:25\u00a0<+tmortagne>\u00a0yep  \n09:25\u00a0<vmassol>\u00a0s/a pain/even more of a pain/  \n09:25\u00a0<+tmortagne>\u00a0but not worst than with plugins  \n09:26\u00a0<jvelociter>\u00a0has quit  \n09:26\u00a0<+tmortagne>\u00a0we will move issue as we do right now  \n09:26\u00a0<vmassol>\u00a0tmortagne: could you look at the components I created for the new jira project?  \n09:26\u00a0<vmassol>\u00a0I was wondering if we wanted more details or not  \n09:26\u00a0<+tmortagne>\u00a0ok  \n09:26\u00a0<vmassol>\u00a0I put only Syntax for ex  \n09:26\u00a0<vmassol>\u00a0without listing all syntaxes  \n09:26\u00a0<vmassol>\u00a0same for macros, transformations  \n09:28\u00a0<+tmortagne>\u00a0yes i think I would prefer having a component by syntax/macro or group of macros (grouping info/error/etc. macro and things like that)  \n09:29\u00a0<@cjdelisle>\u00a0Good morning, I think I'm going to remove RegisterTest since all of it's tests except for liveValidation are tested by RegisterWithoutLiveValidationTest and it has proven too fragile and prone to race conditions.  \n09:30\u00a0<@cjdelisle>\u00a0\\*and every time I turn around, it is failing.  \n09:32\u00a0<vmassol>\u00a0tmortagne: I'm neutral on this so go ahead if you want to create more components (I don't mind)  \n09:32\u00a0<+tmortagne>\u00a0vmassol: btw there is thing depending on platform in projects you moved like xwiki1.0 syntax parser  \n09:32\u00a0<+tmortagne>\u00a0vmassol: i will  \n09:32\u00a0<vmassol>\u00a0sure there are errors  \n09:32\u00a0<vmassol>\u00a0xwiki10 syntax parser is in the new rendering though  \n09:33\u00a0<+tmortagne>\u00a0i'm not saying it depens on xwiki stuff exactly  \n09:33\u00a0<+tmortagne>\u00a0but we should define how we do with dependency from the platform  \n09:33\u00a0<+tmortagne>\u00a0like velocity  \n09:33\u00a0<+tmortagne>\u00a0do we move them in some other project too  \n09:33\u00a0<+tmortagne>\u00a0etc...  \n09:34\u00a0<vmassol>\u00a0what we do usually  \n09:34\u00a0<vmassol>\u00a0is either keep one issue in the jira project that seems the most appropriate  \n09:34\u00a0<vmassol>\u00a0and then when you imple\u00f9ent  \n09:34\u00a0<vmassol>\u00a0you create another issue in other projects if they are impcted  \n09:34\u00a0<+tmortagne>\u00a0i'm not talking about jira  \n09:34\u00a0<vmassol>\u00a0ah  \n09:34\u00a0<+tmortagne>\u00a0i'm talking about real dependencies here  \n09:35\u00a0<+tmortagne>\u00a0we have platform depending of rendering and rendering depending on platform currently  \n09:35\u00a0<+tmortagne>\u00a0which could make it very hard to release  \n09:35\u00a0<arkub>\u00a0has joined #xwiki  \n09:35\u00a0<vmassol>\u00a0ok yes we need to define precisely what deps we allow  \n09:35\u00a0<vmassol>\u00a0right now  \n09:36\u00a0<vmassol>\u00a0the definition is:  \n09:36\u00a0<vmassol>\u00a0rendering can depend on anything in platform except the model  \n09:36\u00a0<vmassol>\u00a0but we need to refine this  \n09:36\u00a0<vmassol>\u00a0and add it to our enforcer  \n09:36\u00a0<@cjdelisle>\u00a0+1  \n09:36\u00a0<+tmortagne>\u00a0yes since that rule is already creating dependencies issue  \n09:37\u00a0<vmassol>\u00a0yes we have a problem for releasing\u2026. don't know how to solve this right now....  \n09:37\u00a0<vmassol>\u00a0problem = not impossible but tedious to do (cannot release all core at once)  \n09:38\u00a0<+tmortagne>\u00a0ideally we should have at least three projects (rendering, something depending on rendering and something rendering depends on) but not easy  \n09:38\u00a0<vmassol>\u00a0looks like we'll need to break core into 2 parts or something  \n09:38\u00a0<vmassol>\u00a0the core modules that are not tied to xwiki , i.e. \"independent\" and the modules tied to the xwiki business  \n09:38\u00a0<vmassol>\u00a0or something like this  \n09:38\u00a0<vmassol>\u00a0need to think about it  \n09:39\u00a0<+tmortagne>\u00a0we should define a lists of project that are in some kind of XWiki Commons (all project that are not really Xwiki specifics, xwiki-properties, xwiki-configuration...)  \n09:39\u00a0<vmassol>\u00a0looks like an xwiki common thingie\u2026. caleb will like this\u2026.  \n09:39\u00a0<+tmortagne>\u00a0and then \u00a0rendering can depends on anything which is part of XWiki Commons  \n09:39\u00a0<vmassol>\u00a0yep  \n09:40\u00a0<+tmortagne>\u00a0would also be more clear for rendering contributors (not only a release issue)  \n09:40\u00a0<@cjdelisle>\u00a0XWiki Commons :)  \n09:42\u00a0<+tmortagne>\u00a0in that configuration rendering would be a big XWiki Commons that deserve it's own life basically (like we could do latter of others) ;)  \n09:43\u00a0<vmassol>\u00a0actually that was the reason I mentioned at some point that extracting rendering would need to extract some other modules too but I was told that it wasn't an issue by jerome\u2026. it was an issue actually!  \n09:44\u00a0<@cjdelisle>\u00a0I don't know if you were on holiday at the time but I suggested starting an XWiki Commons project for libraries which have little or no dependencies and are useful in other projects.  \n09:44\u00a0<vmassol>\u00a0(I should have thought more about it)  \n09:44\u00a0<vmassol>\u00a0cjdelisle: I was here  \n09:44\u00a0<vmassol>\u00a0but you talked about it in the context of your transaction module  \n09:44\u00a0<vmassol>\u00a0(AFAIR)  \n09:45\u00a0<@cjdelisle>\u00a0Yes, we talked about it, I was surprised to hear Thomas suggest the same thing today.  \n09:45\u00a0<vmassol>\u00a0we talked about it a long ago too  \n09:45\u00a0<vmassol>\u00a0it's the kind of thing that comes regularly  \n09:45\u00a0<vmassol>\u00a0it's tempting but it's hard to define  \n09:45\u00a0<vmassol>\u00a0you can easily swallow the whole of xwiki with it  \n09:45\u00a0<vmassol>\u00a0which then makes it unneeded  \n09:45\u00a0<vmassol>\u00a0:)  \n09:46\u00a0<@cjdelisle>\u00a0My definition is it is for things which have no dependencies.  \n09:46\u00a0<vmassol>\u00a0no dep on what?  \n09:46\u00a0<vmassol>\u00a0no module has no dep  \n09:46\u00a0<vmassol>\u00a0(in xwiki)  \n09:46\u00a0<vmassol>\u00a0or maybe one  \n09:46\u00a0<vmassol>\u00a0;)  \n09:47\u00a0<@cjdelisle>\u00a0So the logic would be split into a provider and a consumer as I split the logic in storage so that only a attachment storage depends on core.  \n09:48\u00a0<+tmortagne>\u00a0cjdelisle: i was probably not here (1 month seek all that...)  \n09:49\u00a0<+tmortagne>\u00a0s/seek/sick/  \n09:49\u00a0<@cjdelisle>\u00a0IMO dependency is the biggest contributer to code disintegration. Unless dependcies are controlled strictly, everything will soon depend on everything and the code will unmanagable.  \n09:49\u00a0<@cjdelisle>\u00a0ouch, glad you are feeling better now.  \n09:49\u00a0<+tmortagne>\u00a0me too :)  \n09:50\u00a0<@cjdelisle>\u00a0s/will/will become/  \n09:50\u00a0<+tmortagne>\u00a0cjdelisle: I agree that's why I always look at it very closely  \n09:50\u00a0<vmassol>\u00a0cjdelisle: I agree about controlling deps but I don't agree about not depending on external things and especially rewriting stuff and NIH syndrome  \n09:51\u00a0<+tmortagne>\u00a0(I agree about being very careful with dependencies)  \n09:52\u00a0<@cjdelisle>\u00a0I really wish other code conformed to my specifications more but when I go looking for a library I find I am so often disappointed that I do tend to suffer from NIH.  \n09:52\u00a0<+sburjan>\u00a0what is NIH ?  \n09:53\u00a0<@cjdelisle>\u00a0\"Not Invented Here\"  \n09:53\u00a0<@cjdelisle>\u00a0in assembly  \n09:53\u00a0<vmassol>\u00a0:)  \n09:54\u00a0<vmassol>\u00a0actually my direction is the opposite: always try to remove our code in favor or someone's else code  \n09:54\u00a0<vmassol>\u00a0(provided it's good quality, maintained, blah blah)  \n09:54\u00a0<@cjdelisle>\u00a0Re dependencies, a pattern which I have found to work is to divide up the code into providers and glue. The providers should have dependency graphs shaped like tree branches and the glue should be as little as possible.  \n09:54\u00a0<vmassol>\u00a0for ex, as soon as there's component mgmt in the JDK, I'd love to remove our component manager  \n09:55\u00a0<@cjdelisle>\u00a0+1 there  \n09:55\u00a0<@cjdelisle>\u00a0Ofc I will probably look over the JDK dep manager and go D: -30  \n09:55\u00a0<jvdrean>\u00a0has joined #xwiki  \n09:55\u00a0<vmassol>\u00a0hehe  \n09:56\u00a0<vmassol>\u00a0guys if some of you want to help on what remains listed here: http://jira.xwiki.org/jira/browse/XWIKI-6053?page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#issue-tabs  \n09:56\u00a0<vmassol>\u00a0feel free.. that would help me\u2026 still a lot to do  \n09:56\u00a0<vmassol>\u00a0btw tmortagne just seen core build is fialing  \n09:56\u00a0<@cjdelisle>\u00a0Also I have found dep injection to be a peril since it makes it so easy to create horrible unmanagable dependency graphs since everything is effectively global.  \n09:57\u00a0<vmassol>\u00a0seems the ordering thing is not fixed for metadata  \n09:57\u00a0<+tmortagne>\u00a0that would be weird if you used a linkedhashmap  \n09:57\u00a0<vmassol>\u00a0cjdelisle: you're going to have a hard time convincing me \u00a0that IOC/dep ijection isn't good....  \n09:58\u00a0<vmassol>\u00a0tmortagne: you just introduced a checkstyle error in the build ;)  \n09:58\u00a0<@cjdelisle>\u00a0Not that it's not good, as with oop, it is a great power which must be handled very carefully.  \n09:59\u00a0<+tmortagne>\u00a0vmassol: checking  \n10:01\u00a0<+tmortagne>\u00a0\"with great prower comes great responsibilities\" as they say ;)  \n10:01\u00a0<Denis>\u00a0has joined #xwiki  \n10:02\u00a0<vmassol>\u00a0cjdelisle: I don't even see that. For me it's way of passing what you need instead of doing a new yourself. I don't see how that makes things unmanageable. Maybe your concern is the \\*automatic\\* part but not IOC  \n10:03\u00a0<@cjdelisle>\u00a0I have been doing a project in C and I have found that when I start writing in a bad direction, it becomes obvious it much sooner because I do not have the tools to lean on.  \n10:03\u00a0<@cjdelisle>\u00a0\"ut oh, that context is becoming global\" kind of thing.  \n10:06\u00a0<vmassol>\u00a0tmortagne: sergiu introduced a dep on xwiki-core-script in xwiki-core-xml, IMO we need to separate this into another module  \n10:07\u00a0<vmassol>\u00a0otherwise it draws it for rendering-api for ex  \n10:07\u00a0<+tmortagne>\u00a0yep xml depending on script does not seems great  \n10:08\u00a0<+tmortagne>\u00a0there should be xwiki-script module which provide the script service  \n10:08\u00a0<+tmortagne>\u00a0(i guess it's for script service he did that)  \n10:08\u00a0<vmassol>\u00a0xwiki-core-xml-script you mean?  \n10:08\u00a0<+tmortagne>\u00a0s/xwiki-script/xml-script/  \n10:09\u00a0<+tmortagne>\u00a0when i start a work with a \"x\" is usually ends up as xwiki since a while now :)  \n10:10\u00a0<vmassol>\u00a0I need to check if there's an enforcer for the number of drawn deps  \n10:10\u00a0<vmassol>\u00a0I'd love to add it to the rendering modules  \n10:10\u00a0<vmassol>\u00a0so that when someone introduces a new dep we know it  \n10:11\u00a0<vmassol>\u00a0we can write a custom one if one doesn't exist  \n10:12\u00a0<vmassol>\u00a0maybe http://maven.apache.org/enforcer/enforcer-rules/evaluateBeanshell.html is enough somehow  \n10:12\u00a0<+tmortagne>\u00a0there is nothing about dependecies in clirr ?  \n10:12\u00a0<vmassol>\u00a0nope  \n10:12\u00a0<+tmortagne>\u00a0that could be something they handle  \n10:12\u00a0<vmassol>\u00a0it's only about java code  \n10:12\u00a0<+tmortagne>\u00a0ok  \n10:12\u00a0<vmassol>\u00a0and it's a dead project  \n10:12\u00a0<vmassol>\u00a0so it won't be added unless we do it  \n10:12\u00a0<vmassol>\u00a0which is some work  \n10:13\u00a0<+tmortagne>\u00a0yep  \n10:14\u00a0<@cjdelisle>\u00a0hmm todo is write a script to mine the source and make an image of a dependency graph which is hopefully snowflake shaped.  \n10:14\u00a0<vmassol>\u00a0cjdelisle: why code it?  \n10:14\u00a0<vmassol>\u00a0:)  \n10:15\u00a0<vmassol>\u00a0there are already tons of such tools for maven  \n10:15\u00a0<+tmortagne>\u00a0you can get one using m2eclipse  \n10:15\u00a0<vmassol>\u00a0even for java code btw  \n10:15\u00a0<vmassol>\u00a0intellij has very nice dep matrixes  \n10:16\u00a0<@cjdelisle>\u00a0meh, could be done with sed and postgres.  \n10:16\u00a0<vmassol>\u00a0http://www.jetbrains.com/idea/features/dependency\\_analysis.html  \n10:17\u00a0<@cjdelisle>\u00a0hey, minesweeper  \n10:17\u00a0<vmassol>\u00a0:)  \n10:20\u00a0<vmassol>\u00a0wikimodel draws 4 deps now that's a lot (used to draw 2)  \n10:20\u00a0<vmassol>\u00a0cssparser and sac been added  \n10:21\u00a0<vmassol>\u00a014 deps drawn by xwiki-rendering-syntax-wikimodel  \n10:21\u00a0<vmassol>\u00a0jdom, xerces, dom4j could be reduced  \n10:23\u00a0<vmassol>\u00a0I don't see how we could reduce to less than 10 though  \n10:24\u00a0<vmassol>\u00a0maybe 9 if we removed commons-lang  \n10:25\u00a0<+tmortagne>\u00a0most of the dependencies comes from xhtml parser  \n10:25\u00a0<+tmortagne>\u00a0which we are supposed to move  \n10:25\u00a0<vmassol>\u00a0http://tinycoke.com/\\_6rAfu3qTdTaeI/screen\\_shot\\_2011-02-28\\_at\\_10.25.09\\_am.png  \n10:28\u00a0<+tmortagne>\u00a0without xhtml parser we can remove xwiki-core-xml, cssparser  \n10:28\u00a0<+tmortagne>\u00a0plus there is a lot of thing to move from rendering-api  \n10:28\u00a0<vmassol>\u00a0yes would be nice  \n10:29\u00a0<vmassol>\u00a0tmortagne: so are we going to renamed -syntax modules into parser modules?  \n10:29\u00a0<vmassol>\u00a0s/renamed/rename/  \n10:29\u00a0<vmassol>\u00a0parser specific to a syntax that is  \n10:29\u00a0<+tmortagne>\u00a0why ?  \n10:30\u00a0<vmassol>\u00a0xwiki-rendering-syntax-xhtml, -xwiki20, etc  \n10:30\u00a0<vmassol>\u00a0instead of wikimodel, doxia  \n10:30\u00a0<+tmortagne>\u00a0that already exist and what is planned  \n10:30\u00a0<+tmortagne>\u00a0and its not parsers modulees  \n10:30\u00a0<+tmortagne>\u00a0it's syntax modules  \n10:30\u00a0<vmassol>\u00a0yes ok we can keep syntax notion  \n10:30\u00a0<+tmortagne>\u00a0we will have a syntax-xwiki20 that will contains parser and renderer  \n10:31\u00a0<+tmortagne>\u00a0etc...  \n10:31\u00a0<vmassol>\u00a0right  \n10:31\u00a0<+tmortagne>\u00a0like the xmlxdom one (which is not yet in platfor ok ;))  \n10:31\u00a0<+tmortagne>\u00a0s/platform/rendring/  \n10:31\u00a0<vmassol>\u00a0in rendering you mean :)  \n10:31\u00a0<vmassol>\u00a0yep  \n10:31\u00a0<+tmortagne>\u00a0need to change reflex :)  \n10:33\u00a0<vmassol>\u00a0wow xwiki-core-velocity draws a \\*lot\\* of deps  \n10:33\u00a0<+tmortagne>\u00a0yes and it's pretty xwiki specific too  \n10:34\u00a0<+tmortagne>\u00a0skins etc...  \n10:34\u00a0<+tmortagne>\u00a0we need to separate things a bit more in this project  \n10:34\u00a0<vmassol>\u00a0http://tinycoke.com/\\_6r6Z53EvIX7RA/screen\\_shot\\_2011-02-28\\_at\\_10.33.51\\_am.png  \n10:34\u00a0<vmassol>\u00a0I don't tink we need all of those in syntax-xwiki10  \n10:34\u00a0<+tmortagne>\u00a0no we don't  \n10:34\u00a0<+tmortagne>\u00a0we just need the velocity parser  \n10:35\u00a0<+tmortagne>\u00a0which is located in this project  \n10:36\u00a0<+tmortagne>\u00a0same thing for velocity macro which should only use \"velocity\" implementation of JSR223 it can find and not depends on all that  \n10:38\u00a0<+tmortagne>\u00a0(but it also directly depends on velocity parser for \"html\" filter)  \n10:44\u00a0<vmassol>\u00a0jstoldt: good morning, feel like documenting transformations on the syntax page?  \n10:44\u00a0<vmassol>\u00a0we need to find a way to document the icon and wikiword transformations  \n10:45\u00a0<vmassol>\u00a0and have that linked (or documented inline) from the syntax page  \n10:45\u00a0<vmassol>\u00a0icon tx == emoticons  \n10:45\u00a0<vmassol>\u00a0emoticons is a nice feature that we need to document  \n10:48\u00a0<vmassol>\u00a0tmortagne: so maybe it's time to define a real core and separate platform from core\u2026. ie have platform/core and platform/modules for ex  \n10:49\u00a0<+tmortagne>\u00a0vmassol: what are you calling platform/core and platform/modules ?  \n10:49\u00a0<vmassol>\u00a0hmm maybe core is too coarse grained  \n10:49\u00a0<vmassol>\u00a0I was thinking about foundations  \n10:49\u00a0<vmassol>\u00a0foundation modules  \n10:49\u00a0<vmassol>\u00a0basically all modules required by rendering  \n10:50\u00a0<vmassol>\u00a0(after we've removed the unnecessary deps)  \n10:50\u00a0<vmassol>\u00a0we could keep them in platform/ for now  \n10:50\u00a0<+tmortagne>\u00a0ok, i like better the \"commons\" idea (apache style) ;)  \n10:50\u00a0<@cjdelisle>\u00a0+1  \n10:50\u00a0<vmassol>\u00a0but grouped together  \n10:50\u00a0<+tmortagne>\u00a0sure  \n10:50\u00a0<+tmortagne>\u00a0of course  \n10:50\u00a0<+tmortagne>\u00a0not exactly apache style  \n10:50\u00a0<+tmortagne>\u00a0but same vocalbulary I mean  \n10:51\u00a0<vmassol>\u00a0we'd need an enforcer definition in them  \n10:51\u00a0<vmassol>\u00a0so that they can only depend on each another  \n10:51\u00a0<vmassol>\u00a0+ external deps  \n10:51\u00a0<+tmortagne>\u00a0yep  \n10:51\u00a0<+tmortagne>\u00a0and when a commons project is too big like rendering is it get it's own top project  \n10:52\u00a0<vmassol>\u00a0yes  \n10:52\u00a0<mflorea>\u00a0has quit  \n10:52\u00a0<vmassol>\u00a0let's keep the notion of core jsut for now  \n10:52\u00a0<vmassol>\u00a0(since it's in artifactid)  \n10:52\u00a0<vmassol>\u00a0and introduce a commons notion under it  \n10:52\u00a0<vmassol>\u00a0that would give:  \n10:52\u00a0<+tmortagne>\u00a0and yes it's time i think since it's the \"easiest\" way to handle issue we have right now with rendering project  \n10:53\u00a0<vmassol>\u00a0platform/core/commons/\\*, platform/core/\\* ?  \n10:53\u00a0<vmassol>\u00a0or plarform/core/modules/\\*  \n10:53\u00a0<+tmortagne>\u00a0hmm it's the same issue here  \n10:53\u00a0<+tmortagne>\u00a0we sill have rendering depending on core  \n10:53\u00a0<+tmortagne>\u00a0if you make commons a subporject of core  \n10:53\u00a0<vmassol>\u00a0sure  \n10:54\u00a0<+tmortagne>\u00a0it has to be independent  \n10:54\u00a0<vmassol>\u00a0but that's 2 maven commands  \n10:54\u00a0<vmassol>\u00a0you want to do a top level commons project now?  \n10:55\u00a0<@cjdelisle>\u00a0I have a fix that should stabilize the registration test but it kind of abuses js.  \n10:55\u00a0<@cjdelisle>\u00a0executeJavascript(\"try{ document.getElementById('register').onsubmit(null); }catch(err){}\");  \n10:55\u00a0<@cjdelisle>\u00a0\u00a0// input, it encounters an error which keeps the next page from loading.  \n10:55\u00a0<@cjdelisle>\u00a0Is that too evil?  \n10:55\u00a0<+tmortagne>\u00a0vmassol: yep  \n10:55\u00a0<+tmortagne>\u00a0that or do nothing for now  \n10:56\u00a0<+tmortagne>\u00a0since that does not change anything  \n10:56\u00a0<+tmortagne>\u00a0but i would prefer doing it now  \n10:56\u00a0<+tmortagne>\u00a0so that rendering is clean  \n10:56\u00a0<vmassol>\u00a0all these top level moves will make life a bit harder  \n10:56\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:56\u00a0<vmassol>\u00a0for jira reporters, for release managers  \n10:56\u00a0<vmassol>\u00a0(for developers who need to create separate jiras)  \n10:57\u00a0<vmassol>\u00a0we need to find some easy way  \n10:57\u00a0<vmassol>\u00a0we often have to change common modules  \n10:57\u00a0<vmassol>\u00a0when working on something else  \n10:57\u00a0<vmassol>\u00a0it's already true for rendering but even more true for commons modules  \n10:57\u00a0<Denis>\u00a0has quit  \n10:57\u00a0<Denis2>\u00a0has joined #xwiki  \n10:57\u00a0<+tmortagne>\u00a0for jira reporters it does not change that much, most of the time we have to move them because they created on XE or it's actually a plugin issue  \n10:58\u00a0<Denis2>\u00a0is now known as <Denis>  \n10:58\u00a0<vmassol>\u00a0yes but  \n10:58\u00a0<vmassol>\u00a0if developers have to create 2 issues instead of one  \n10:58\u00a0<vmassol>\u00a0it's a bit of a pain  \n10:58\u00a0<vmassol>\u00a0developers are jira reporters  \n10:59\u00a0<@cjdelisle>\u00a0woo registration test is quick. I'm going to hold my nose and commit. I don't see any other way to trigger liveValidation.  \n10:59\u00a0<vmassol>\u00a0cjdelisle: sorry no time to look right now, sounds too hacky and complex to look at right now for me;)  \n11:00\u00a0<+tmortagne>\u00a0for release manager it's harder when dependencies are a mess than when project are properly separated IMO  \n11:00\u00a0<@cjdelisle>\u00a0IMO it's nicer than what was there before (certainly more stable) it just causes an intentional error to block a page load.  \n11:01\u00a0<+tmortagne>\u00a0i'm not sure yo ualways need to create several issue btw  \n11:01\u00a0<+tmortagne>\u00a0s/ualways/always/  \n11:01\u00a0<+tmortagne>\u00a0if you fix somethingon commons there is no reason to create a duplicate on platform  \n11:02\u00a0<+tmortagne>\u00a0we don't create a duplicate on XE each time we fix something on core  \n11:03\u00a0<+tmortagne>\u00a0commons -> platform is exactly the same thing than current platform -> XE  \n11:03\u00a0<@cjdelisle>\u00a0What will the dependency rule be for commons? Clearly they aren't commons if commons depend on other xwiki projects but how much is too much dependency on other commons projects or outside projects?  \n11:05\u00a0<+tmortagne>\u00a0cjdelisle: commons is one project and it would not have the right to depends on any other xwiki project  \n11:05\u00a0<+tmortagne>\u00a0s/project/top project/  \n11:06\u00a0<+tmortagne>\u00a0i don't see why they could not depends on each others  \n11:06\u00a0<evalica>\u00a0has joined #xwiki  \n11:06\u00a0<+tmortagne>\u00a0or why we should have some outside project limitation  \n11:07\u00a0<@cjdelisle>\u00a0Well there must be some idea of \"too much\" dependency between the commons subprojects otherwise they will become the same as core.  \n11:08\u00a0<+tmortagne>\u00a0cjdelisle: what i mean is that it's not a rule IMO it's just commons sense, when a project contains too much concept you separate it is several like we do all the time in core currently  \n11:08\u00a0<@cjdelisle>\u00a0As far as outside projects I suppose it is alright not to impose any limit since outside projects are often what the commons projects are wrapping.  \n11:08\u00a0<mflorea>\u00a0has joined #xwiki  \n11:09\u00a0<@cjdelisle>\u00a0I suppose that is good enough. Maybe we should put something in writing that dependencies are supposed to be minimal?  \n11:10\u00a0<+tmortagne>\u00a0we can  \n11:11\u00a0<jstoldt>\u00a0vmassol: good morning to you, too  \n11:11\u00a0<jstoldt>\u00a0what do you mean in detail?  \n11:12\u00a0<jstoldt>\u00a0i already started to document the image syntax last week and i was going to include the icons  \n11:12\u00a0<jstoldt>\u00a0but what about document something transformation?  \n11:13\u00a0<jstoldt>\u00a0i might have a couple of minutes in the afternoon, no promise, though  \n11:20\u00a0<jstoldt|Notebook>\u00a0has joined #xwiki  \n11:21\u00a0<sburjan\\_>\u00a0has joined #xwiki  \n11:21\u00a0<sburjan>\u00a0has quit  \n11:22\u00a0<sburjan\\_>\u00a0has quit  \n11:22\u00a0<sburjan\\_>\u00a0has joined #xwiki  \n11:23\u00a0<sburjan\\_>\u00a0has quit  \n11:24\u00a0<sburjan>\u00a0has joined #xwiki  \n11:34\u00a0<tcamberlin>\u00a0has joined #xwiki  \n11:35\u00a0<vmassol>\u00a0back (reading)  \n11:36\u00a0<vmassol>\u00a0tmortagne: the issue is when you fix something in platform and you have to also fix something in commons (this happens very frequently IMO)  \n11:36\u00a0<vmassol>\u00a0you need 2 jira issues for this  \n11:36\u00a0<vmassol>\u00a0(instead of one now)  \n11:37\u00a0<vmassol>\u00a0I'm not against it, I'm just saying it's going to be a little bit more difficult to commit  \n11:37\u00a0<@cjdelisle>\u00a0perhaps the need to make changes to the both at the same time suggests that the api provided by the commons module is not generic enough.  \n11:38\u00a0<vmassol>\u00a0it means the commons api is not stable yet  \n11:38\u00a0<vmassol>\u00a0I don't see it about genericity  \n11:38\u00a0<vmassol>\u00a0for me it's more about refactoring stuff  \n11:39\u00a0<vmassol>\u00a0would need to check svn history to see how frequently we touch at common modules  \n11:39\u00a0<vmassol>\u00a0there are some modules we don't touch often for sure  \n11:39\u00a0<@cjdelisle>\u00a0I would think a good measure of an api is that is is altered less and less as it gets older.  \n11:40\u00a0<vmassol>\u00a0so who wants to lead the xwiki commons proposal and move?  \n11:40\u00a0<vmassol>\u00a0:)  \n11:40\u00a0<vmassol>\u00a0I guess I could do it  \n11:40\u00a0<vmassol>\u00a0but would need help  \n11:40\u00a0<@cjdelisle>\u00a0What can I do.  \n11:40\u00a0<@cjdelisle>\u00a0?  \n11:40\u00a0<+tmortagne>\u00a0vmassol: sure sometimes there is several but IMO it's not that much a pain  \n11:41\u00a0<vmassol>\u00a0tmortagne: if you want to lead it, I can help too, your choice  \n11:41\u00a0<tcamberlin1>\u00a0has joined #xwiki  \n11:41\u00a0<+tmortagne>\u00a0at least it's not enough to not do it IMO  \n11:43\u00a0<vmassol>\u00a0yes I agree about that  \n11:43\u00a0<+tmortagne>\u00a0i would be glad to help but I still not finished the UI refactoring of extension manager (actually i did not even started with all other things i had to take care) :(  \n11:43\u00a0<+tmortagne>\u00a0depends when we can report release  \n11:43\u00a0<vmassol>\u00a0report?  \n11:43\u00a0<vmassol>\u00a0postpone?  \n11:43\u00a0<+tmortagne>\u00a0postpone yes  \n11:43\u00a0<vmassol>\u00a0right now it's still planned for today  \n11:43\u00a0<vmassol>\u00a0who's the RM?  \n11:43\u00a0<vmassol>\u00a0sergiu?  \n11:43\u00a0<+tmortagne>\u00a0no idea  \n11:44\u00a0<vmassol>\u00a0who did M2?  \n11:44\u00a0<+tmortagne>\u00a0mflorea IIRW  \n11:44\u00a0<vmassol>\u00a0mflorea: ping  \n11:44\u00a0<vmassol>\u00a0mflorea: are you the RM for 3.0?  \n11:44\u00a0<vmassol>\u00a0(epecially 3.0M3)  \n11:44\u00a0<+tmortagne>\u00a0unless it was something else, i'm a bit lost with RM theses days :)  \n11:45\u00a0<tcamberlin>\u00a0has quit  \n11:45\u00a0<+tmortagne>\u00a0we need to keep the old one branch one RM rule I think  \n11:45\u00a0<vmassol>\u00a0at least one release one RM  \n11:45\u00a0<vmassol>\u00a0I don't agree about branch  \n11:45\u00a0<vmassol>\u00a0it's too much  \n11:46\u00a0<vmassol>\u00a0release being a main release  \n11:46\u00a0<vmassol>\u00a0like denis did a 2.5.1 at some point which was fine  \n11:46\u00a0<vmassol>\u00a0it didn't have to be the RM that did the 2.5  \n11:46\u00a0<vmassol>\u00a0same if some committer wants to do a bug fix release  \n11:54\u00a0<+mflorea>\u00a0vmassol: I can do 3.0M3 but I need time to fix the WYSIWYG tests  \n11:54\u00a0<vmassol>\u00a0mflorea: ok thanks. I'll let you handle the preparation for it then and make sure everyoen is ready  \n11:55\u00a0<vmassol>\u00a0we need to evaulate when we can start the release  \n11:55\u00a0<+mflorea>\u00a0not today anyway  \n11:55\u00a0<vmassol>\u00a0with what we discussed this morning with cjdelisle and tmortagne, we might need 1-2 more days  \n11:55\u00a0<vmassol>\u00a0if we're to implement the xwiki commons idea  \n11:56\u00a0<vmassol>\u00a0so we might want to postpone the release to wednesday morning  \n11:56\u00a0<vmassol>\u00a0could you handle that?  \n11:56\u00a0<+mflorea>\u00a0yes  \n11:56\u00a0<vmassol>\u00a0(verify if the idea floats, send vote mail, etc)  \n11:56\u00a0<+mflorea>\u00a0that is fine with me too because the issue that makes selenium tests fails is tricky  \n11:57\u00a0<vmassol>\u00a0(recompute release dates without changing the final date)  \n12:02\u00a0<venkatesh>\u00a0has quit  \n12:03\u00a0<venkatesh>\u00a0has joined #xwiki  \n12:04\u00a0<venkatesh>\u00a0has quit  \n12:09\u00a0<tcamberlin1>\u00a0has quit  \n12:14\u00a0<abusenius>\u00a0has joined #xwiki  \n12:14\u00a0<vmassol>\u00a0tmortagne, cjdelisle: can you look at http://tinypaste.com/a5b89 and tell me what you think/if I've forgotten something?  \n12:19\u00a0<vmassol>\u00a0cjdelisle: what's the ETA of the attachment FS storgae for 3.0 final?  \n12:24\u00a0<jstoldt>\u00a0vmassol: i'll be afk here for a while. if i have some time i'll message you later on, okay?  \n12:25\u00a0<vmassol>\u00a0jstoldt: fine  \n12:25\u00a0<vmassol>\u00a0I'm going for lunch now  \n12:26\u00a0<vmassol>\u00a0tmortagne, cjdelisle: I'd like to send the mail now, is it ok for you?  \n12:26\u00a0<vmassol>\u00a0I'd like a confirmation of the modules  \n12:26\u00a0<vmassol>\u00a0the modules I listed  \n12:26\u00a0<vmassol>\u00a0ok sending, you can reply to the mail  \n12:31\u00a0<vmassol>\u00a0lunch, bb in 1 hour  \n12:33\u00a0<jstoldt|Notebook>\u00a0has quit  \n12:37\u00a0<@cjdelisle>\u00a0vmassol: I can get the recycle bin written in a day or two, I just have to stop doing other things.  \n12:47\u00a0<@cjdelisle>\u00a0WDYT about dependency of one module in commons on another module in commons? I am leaning thward saying it should be unallowable since it is a slippery sloap.  \n12:50\u00a0<@cjdelisle>\u00a0hmm apache commons does have inter commons module dependencies.  \n12:55\u00a0<@cjdelisle>\u00a0vmassol: I don't like the list of things to move to commons. They all depend on our dependency injection system so IMO they are too tight knit to be considered commons.  \n12:56\u00a0<@cjdelisle>\u00a0If there is no limit on dependencies then we could as well rename core to commons.  \n12:56\u00a0<abusenius>\u00a0has quit  \n12:57\u00a0<oanat>\u00a0has joined #xwiki  \n13:13\u00a0<@cjdelisle>\u00a0why does rendering depend on xwiki-core-bridge?  \n13:29\u00a0<vmassol>\u00a0cjdelisle: where do you see that in rendering/? (It's not supposed to be possible, there's a check)  \n13:29\u00a0<vmassol>\u00a0cjdelisle: commons is about stuff not related to wikis  \n13:29\u00a0<vmassol>\u00a0(ie modules that can be reused in other projects)  \n13:31\u00a0<vmassol>\u00a0platofrm is about common stuff related to the wiki/xwiki domain  \n13:32\u00a0<vmassol>\u00a0not depending on anything doesn't exist btw  \n13:32\u00a0<vmassol>\u00a0(and would be very bad IMO)  \n13:32\u00a0<vmassol>\u00a0(since it would mean reinventing everything)  \n13:32\u00a0<vmassol>\u00a0(logging, configuration, IOC, etc)  \n13:33\u00a0<vmassol>\u00a0we're not recreatinf apache comons  \n13:33\u00a0<vmassol>\u00a0it already exists  \n13:33\u00a0<vmassol>\u00a0if you don't watn a relationship on xwiki compnent module  \n13:33\u00a0<vmassol>\u00a0then I would suggest that your code doesn't belong to the xwiki project  \n13:33\u00a0<vmassol>\u00a0and should be proposed to another forge  \n13:34\u00a0<vmassol>\u00a0if you're in xwiki you have to use component, xwiki logging, xwiki configuration, etc  \n13:57\u00a0<@cjdelisle>\u00a0hehe you're going to have to throw out crypto and most of store.  \n13:58\u00a0<vmassol>\u00a0crypto will need to use xwiki logging too  \n13:58\u00a0<vmassol>\u00a0and probably other services  \n13:59\u00a0<vmassol>\u00a0store will need a lot of services (cache, lgging, component, etc)  \n13:59\u00a0<@cjdelisle>\u00a0Yes, I have been meaning to fix that logging service so that it doesn't require everyone to extend it.  \n13:59\u00a0<@cjdelisle>\u00a0\u00a0\u00a0<description>XWiki Platform - Core - Rendering - XWiki-specific implementation</description>  \n13:59\u00a0<@cjdelisle>\u00a0\u00a0\u00a0<dependencies>  \n13:59\u00a0<@cjdelisle>\u00a0\u00a0\u00a0\u00a0\u00a0<dependency>  \n13:59\u00a0<@cjdelisle>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<groupId>org.xwiki.platform</groupId>  \n13:59\u00a0<@cjdelisle>\u00a0^that's what I saw  \n13:59\u00a0<@cjdelisle>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<artifactId>xwiki-core-bridge</artifactId>  \n13:59\u00a0<vmassol>\u00a0yes  \n14:00\u00a0<@cjdelisle>\u00a0Is that different?  \n14:00\u00a0<vmassol>\u00a0that's not in rendering/  \n14:00\u00a0<vmassol>\u00a0it's in platform  \n14:00\u00a0<vmassol>\u00a0and it's \"XWiki-specific implementation\"  \n14:00\u00a0<@cjdelisle>\u00a0ok, looking again.  \n14:00\u00a0<vmassol>\u00a0it implements WikiModel using the DAB  \n14:01\u00a0<@cjdelisle>\u00a0I didn't realize I had git svn rebase'd  \n14:02\u00a0<@cjdelisle>\u00a0These are a lot of dependencies. Do you expect anyone to use our code if it demands that they install a separate componant manager from what they are using?  \n14:02\u00a0<+sburjan>\u00a0@devs. I found some issues like this. http://jira.xwiki.org/jira/browse/XWIKI-5764 .This issue was not fixed but wasn't moved to 2.5.2 because I guess we're dropping 2.5 and 2.6. But what if this issue is present in 2.6, 2.7 or even 3.0 ?  \n14:02\u00a0<vmassol>\u00a0why a separate one?  \n14:02\u00a0<vmassol>\u00a0and yes  \n14:03\u00a0<vmassol>\u00a0and they do  \n14:03\u00a0<vmassol>\u00a0:)  \n14:03\u00a0<@cjdelisle>\u00a0If someone is using guice or jsr299 then you want them to install ecm next to that?  \n14:03\u00a0<vmassol>\u00a0and they don't need to care  \n14:03\u00a0<abusenius>\u00a0has joined #xwiki  \n14:03\u00a0<vmassol>\u00a0it's the same thing as saying:  \n14:03\u00a0<vmassol>\u00a0becuase I use guice I disallow anyone use the new java keyword  \n14:03\u00a0<vmassol>\u00a0you can have both next to each other  \n14:04\u00a0<@cjdelisle>\u00a0\"it's the same thing\" ay?  \n14:04\u00a0<vmassol>\u00a0to use the rendering module you use lookup(Parser.class, \"xwiki/2.0) instead of new XWiki20Parser()  \n14:04\u00a0<vmassol>\u00a0it's just an api thing  \n14:04\u00a0<vmassol>\u00a0as a user you don't need to care  \n14:04\u00a0<vmassol>\u00a0how it's implemented  \n14:05\u00a0<vmassol>\u00a0now the good part  \n14:05\u00a0<vmassol>\u00a0is that if you do care  \n14:05\u00a0<@cjdelisle>\u00a0If you are a developer of a project and you don't care then you deserve whatever happens to you.  \n14:05\u00a0<vmassol>\u00a0you can bridge it to your component system  \n14:05\u00a0<vmassol>\u00a0you're not stuck  \n14:05\u00a0<vmassol>\u00a0which you'd be if we were using new instead  \n14:06\u00a0<vmassol>\u00a0cjdelisle: nobody is forced to use xwiki's rendering. If you use it it's because you see pros  \n14:07\u00a0<vmassol>\u00a0we thought agrout this at length already  \n14:07\u00a0<vmassol>\u00a0about  \n14:07\u00a0<@cjdelisle>\u00a0Well then I guess my input is not needed.  \n14:07\u00a0<vmassol>\u00a0unless you make a proposal  \n14:07\u00a0<vmassol>\u00a0no  \n14:07\u00a0<vmassol>\u00a0if you make a proposal that works  \n14:07\u00a0<@cjdelisle>\u00a0Cool. I'll get deleted attachments done then.  \n14:08\u00a0<vmassol>\u00a0then yes  \n14:08\u00a0<vmassol>\u00a0:)  \n14:08\u00a0<vmassol>\u00a0ah yes  \n14:08\u00a0<vmassol>\u00a0that would be cool  \n14:08\u00a0<vmassol>\u00a0would be great to have a fully working attachment store but 3.0  \n14:08\u00a0<vmassol>\u00a0will 2 days be enough?  \n14:08\u00a0<vmassol>\u00a0(we're released on wednesday)  \n14:08\u00a0<vmassol>\u00a0s/released/releasing/  \n14:09\u00a0<vmassol>\u00a0well you'd still have several days more to fix issues  \n14:09\u00a0<vmassol>\u00a0but it would be good to have the base feature for 3.0M3  \n14:09\u00a0<vmassol>\u00a0since thereafter it's RC  \n14:09\u00a0<@cjdelisle>\u00a0Should be. I don't expect any surprises now. The hardest part is dealing with an api which allows deleting or restoring them by a db id #.  \n14:10\u00a0<@cjdelisle>\u00a0So I have to add a file which maps numbers to paths :(  \n14:10\u00a0<vmassol>\u00a0cjdelisle: btw not putting component module in commons won't help at all for teh dep issue  \n14:10\u00a0<vmassol>\u00a0between rendering and platform  \n14:11\u00a0<@cjdelisle>\u00a0I gather you have this all sorted out but I sense the deaggregation monster is beginning to eat the new core like it did the old.  \n14:13\u00a0<vmassol>\u00a0I don't feel it like this for lots of reasons (unit tests, clear separation of concerns, components)  \n14:13\u00a0<vmassol>\u00a0problems of old core were: hard to understand/maintain, hard to extend, no tests to prove it works  \n14:14\u00a0<@cjdelisle>\u00a0everything depended on everything  \n14:15\u00a0<vmassol>\u00a0we now have clean APIs (through interfaces), separated by domain  \n14:15\u00a0<@cjdelisle>\u00a0\\*depends  \n14:15\u00a0<vmassol>\u00a0eveyrtihng depended on everyghin wasn't the issue  \n14:15\u00a0<vmassol>\u00a0the issue is that it caused  \n14:15\u00a0<vmassol>\u00a0- hard to extend  \n14:15\u00a0<vmassol>\u00a0-hard to maintain  \n14:16\u00a0<vmassol>\u00a0we have separated them  \n14:16\u00a0<@cjdelisle>\u00a0I know it well. I make a tiney change here and 50 miles away in some other code something breaks.  \n14:16\u00a0<vmassol>\u00a0they're no longer hard dependencies  \n14:16\u00a0<vmassol>\u00a0they're interface dependencies  \n14:16\u00a0<vmassol>\u00a0implementation have been separated  \n14:17\u00a0<vmassol>\u00a0dependencies are normal and cannot be avoided  \n14:17\u00a0<vmassol>\u00a0how would you prevent for ex wiki pages to not depend on storage  \n14:17\u00a0<@cjdelisle>\u00a0I have to commit a couple test changes and get into store. Anyway, something to keep in mind re that long list of dependencies.  \n14:17\u00a0<vmassol>\u00a0?  \n14:18\u00a0<@cjdelisle>\u00a0I'll write up a essay/thesis type thing at some point with dependency graphs. I promise ;)  \n14:30\u00a0<vmassol>\u00a0guys can you please reply to evalica's mail about the new download page please  \n14:30\u00a0<vmassol>\u00a0we need a few more votes/feedback  \n14:30\u00a0<vmassol>\u00a0evalica is ready to implement it  \n14:30\u00a0<vmassol>\u00a0so far we have denis, caty and me I think  \n14:31\u00a0<vmassol>\u00a0actually just caty and me  \n14:31\u00a0<vmassol>\u00a0I mean people agreed on the textual proposal  \n14:32\u00a0<vmassol>\u00a0evalica: IMO you can go ahead  \n14:32\u00a0<vmassol>\u00a0since everyone agreed on the proposal  \n14:32\u00a0<vmassol>\u00a0(the textual one)  \n14:32\u00a0<vmassol>\u00a0and your proposal was an implementation of it  \n14:33\u00a0<+evalica>\u00a0k  \n14:35\u00a0<sdumitriu>\u00a0has joined #xwiki  \n14:42\u00a0<jvdrean>\u00a0has quit  \n14:43\u00a0<vmassol>\u00a0quick poll: should I create a xwiki-xml-script module to put the XMLScriptService component impl or should we instead put all script services in a common place. I \u00a0prefer the former (ie grouping code by domain rather than by technical feature). wdyt?  \n14:45\u00a0<jvdrean>\u00a0has joined #xwiki  \n14:46\u00a0<+tmortagne>\u00a0+1 for xwiki-xml-script, a big project will all script services (and it could never be all) is very bad  \n14:46\u00a0<vmassol>\u00a0ok good  \n14:46\u00a0<vmassol>\u00a0I'll do that one now  \n14:47\u00a0<vmassol>\u00a0a pity is that it'll have to be moved later on if we do the xwiki commons thing ....  \n14:47\u00a0<vmassol>\u00a0tmortagne: so moving current xwiki-xml to xwiki-xml-api is ok to you?  \n14:47\u00a0<vmassol>\u00a0hmm api or default?  \n14:47\u00a0<vmassol>\u00a0or something else  \n14:48\u00a0<vmassol>\u00a0default is better probably  \n14:48\u00a0<vmassol>\u00a0(I'm not sure we want both -api and -default right now)  \n14:51\u00a0<@sdumitriu>\u00a0vmassol: +1  \n14:52\u00a0<vmassol>\u00a0ok thanks, doing it  \n14:52\u00a0<+tmortagne>\u00a0-default kind of imply there is a -api somewhere, maybe tool or util but i'm +0 for default anyway  \n14:52\u00a0<vmassol>\u00a0IMO default is ok even without api it means default impl  \n14:52\u00a0<vmassol>\u00a0(having an api is not mandatory)  \n14:53\u00a0<vmassol>\u00a0api = separated interfaces  \n14:53\u00a0<+tmortagne>\u00a0ok as you want  \n14:53\u00a0<vmassol>\u00a0I can't think of a better name  \n14:53\u00a0<vmassol>\u00a0right now  \n14:53\u00a0<vmassol>\u00a0:)  \n14:53\u00a0<+tmortagne>\u00a0me neither  \n14:53\u00a0<vmassol>\u00a0ok using default for now  \n14:53\u00a0<+tmortagne>\u00a0reading your mail  \n14:54\u00a0<@sdumitriu>\u00a0There's a problem with myxwiki, and a lot of the stacktraces are like this:  \n14:54\u00a0<@sdumitriu>\u00a0- almost all threads locked on org.jboss.cache.RegionImpl.registerEvictionEvent  \n14:54\u00a0<@sdumitriu>\u00a0- one thread is inside it  \n14:55\u00a0<@sdumitriu>\u00a0So it's a JBossCache congestion  \n14:55\u00a0<@sdumitriu>\u00a0tmortagne: Any ideas how to fix it?  \n14:55\u00a0<+tmortagne>\u00a0sdumitriu: not really no  \n14:56\u00a0<@sdumitriu>\u00a0The memory seems full as well  \n14:57\u00a0<@sdumitriu>\u00a0Might be just a slowdown caused by swap thrashing  \n14:57\u00a0<@sdumitriu>\u00a0In which case we should reduce the size of the cache  \n14:57\u00a0<@sdumitriu>\u00a0I'll try that  \n14:58\u00a0<@sdumitriu>\u00a0Done, let's see the results  \n15:37\u00a0<+sburjan>\u00a0it seems that these issues have not been moved for 2.7.1, and now they will remain isolated there: http://jira.xwiki.org/jira/secure/IssueNavigator.jspa?reset=true&jqlQuery=project+%3D+XWIKI+AND+affectedVersion+%3D+%222.7%22+AND+status+%3Dopen  \n15:38\u00a0<+tmortagne>\u00a0indeed that's not very clean  \n15:39\u00a0<+sburjan>\u00a0it creates noise in my reports :)  \n15:39\u00a0<+tmortagne>\u00a0hmm wait  \n15:39\u00a0<+tmortagne>\u00a0i was reading it the overway around  \n15:39\u00a0<+tmortagne>\u00a0tough is was fix for 2.7  \n15:39\u00a0<+tmortagne>\u00a0was is wrong here  \n15:39\u00a0<+tmortagne>\u00a0?  \n15:40\u00a0<+tmortagne>\u00a0s/was/what/  \n15:40\u00a0<+sburjan>\u00a0well they weren't fixed for 2.7, but they weren't moved to \"affects\" to 2.7.1  \n15:40\u00a0<+tmortagne>\u00a0they are not supposed to  \n15:41\u00a0<+sburjan>\u00a0why ?  \n15:41\u00a0<+tmortagne>\u00a0affects has nothing to do with fix for  \n15:41\u00a0<+tmortagne>\u00a0affect is where you foud this issue  \n15:41\u00a0<+tmortagne>\u00a0found  \n15:41\u00a0<+tmortagne>\u00a0we never change  \n15:43\u00a0<+tmortagne>\u00a0it  \n15:43\u00a0<+tmortagne>\u00a0theses issue has been found in 2.7 so the affects is 2.7  \n15:43\u00a0<+tmortagne>\u00a0since it's not fixed in 2.7.1 it's obviously affecting 2.7.1 too  \n15:43\u00a0<+sburjan>\u00a0I see.  \n15:43\u00a0<+tmortagne>\u00a0I hope you did not changed affects in issues  \n15:43\u00a0<+sburjan>\u00a0so you only migrate the \"Fixed for\" version ? (increment)  \n15:43\u00a0<+sburjan>\u00a0nope  \n15:43\u00a0<+tmortagne>\u00a0keeping a fix for a released version when the issue is not fixed does not really make sense so yes we move it  \n15:43\u00a0<+tmortagne>\u00a0either we move it or we change for future when it's not critical and nobody is planning to work on it soon  \n15:44\u00a0<+sburjan>\u00a0so in theory a issue could have 2.7 in Affects and 3.5 Fix for ?  \n15:44\u00a0<@sdumitriu>\u00a0Yep  \n15:44\u00a0<+sburjan>\u00a0understood  \n15:44\u00a0<+tmortagne>\u00a0yep if 2.7 branch is abandonned when the issue is fixed  \n15:45\u00a0<+sburjan>\u00a0understood  \n15:47\u00a0<+sburjan>\u00a0thanks  \n15:47\u00a0<+sburjan>\u00a0laters  \n15:47\u00a0<sburjan>\u00a0has quit  \n16:23\u00a0<cjdelisle>\u00a0has quit  \n16:25\u00a0<cjdelisle>\u00a0has joined #xwiki  \n16:26\u00a0<vmassol>\u00a0has quit  \n16:52\u00a0<npm>\u00a0has joined #xwiki  \n16:54\u00a0<abusenius>\u00a0has quit  \n16:56\u00a0<npm\\_\\_>\u00a0has quit  \n17:04\u00a0<abusenius>\u00a0has joined #xwiki  \n17:21\u00a0<oanat>\u00a0has left #xwiki  \n18:10\u00a0<abusenius>\u00a0has quit  \n18:17\u00a0<+tmortagne>\u00a0sdumitriu: any idea why some xwiki-core-xml-script test are failing ? as far as I can see DOMImplementationRegistry.newInstance().getDOMImplementation(\"LS 3.0\"); is returning null  \n18:17\u00a0<+tmortagne>\u00a0I guess there is a missing dependency or something  \n18:17\u00a0<@sdumitriu>\u00a0Xalan  \n18:17\u00a0<@sdumitriu>\u00a0Or Xerces  \n18:17\u00a0<@sdumitriu>\u00a0I keep confusing these two  \n18:17\u00a0<@sdumitriu>\u00a0Xerces  \n18:18\u00a0<+tmortagne>\u00a0what's weird is that it does have a transitive dependency on xerces  \n18:18\u00a0<+tmortagne>\u00a0through xwiki-core-xml-default  \n18:19\u00a0<@sdumitriu>\u00a0Maybe there's an older version pulled in by a higher dependency  \n18:19\u00a0<@sdumitriu>\u00a0JDOM?  \n18:19\u00a0<@sdumitriu>\u00a0Try a dependency:tree to see what version ends up in the build  \n18:20\u00a0<+tmortagne>\u00a0actually vmassol forgot something I think  \n18:20\u00a0<+tmortagne>\u00a0checking something  \n18:20\u00a0<+tmortagne>\u00a0looks like xml-script does not depends on xml-default  \n18:21\u00a0<+tmortagne>\u00a0but it still build  \n18:21\u00a0<+tmortagne>\u00a0sdumitriu: \u00a0is that normal that script service doe snot use anything in xml-default ?  \n18:22\u00a0<@sdumitriu>\u00a0Currently yes  \n18:22\u00a0<@sdumitriu>\u00a0The script service is the API as well  \n18:23\u00a0<+tmortagne>\u00a0should i put a dependency for later ?  \n18:23\u00a0<+tmortagne>\u00a0otherwise i put a direct dependency on xerces  \n18:24\u00a0<@sdumitriu>\u00a0Yes, add one for later  \n18:24\u00a0<+tmortagne>\u00a0ok thanks  \n18:27\u00a0<@sdumitriu>\u00a0tmortagne: hudson fails, missing dependency: org.xwiki.platform:xwiki-core-extension-handler-xar:jar:3.0-SNAPSHOT  \n18:27\u00a0<@sdumitriu>\u00a0Did you add it to the parent pom as a submodule?  \n18:27\u00a0<+tmortagne>\u00a0sdumitriu: yes i know  \n18:27\u00a0<+tmortagne>\u00a0should be ok now  \n18:27\u00a0<+tmortagne>\u00a0need core to rebuild  \n18:28\u00a0<+tmortagne>\u00a0xar was not built because there was some half refactoring in jar  \n18:56\u00a0<tmortagne>\u00a0has left #xwiki  \n18:59\u00a0<arkub>\u00a0has quit  \n19:28\u00a0<jvdrean>\u00a0has quit  \n20:50\u00a0<sburjan`>\u00a0has quit  \n21:54\u00a0<abusenius>\u00a0has joined #xwiki  \n23:08\u00a0<jvdrean>\u00a0has joined #xwiki  \n23:12\u00a0<jvdrean>\u00a0has quit  \n23:34\u00a0<mflorea>\u00a0has quit  \n\n"}