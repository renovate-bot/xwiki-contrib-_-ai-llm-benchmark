{"id": "dev:IRC.xwikiArchive20110429", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110429", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:01\u00a0<kutuzovas>\u00a0has quit  \n00:33\u00a0<lucaa>\u00a0has joined #xwiki  \n02:00\u00a0<jvdrean>\u00a0has quit  \n02:30\u00a0<lucaa>\u00a0has quit  \n03:16\u00a0<SvenDowideit>\u00a0has quit  \n03:20\u00a0<SvenDowideit>\u00a0has joined #xwiki  \n05:35\u00a0<DrLou>\u00a0has quit  \n07:01\u00a0<Denis>\u00a0has quit  \n07:06\u00a0<venkatesh>\u00a0has joined #xwiki  \n07:07\u00a0<venkatesh>\u00a0has quit  \n07:09\u00a0<Denis>\u00a0has joined #xwiki  \n07:11\u00a0<jvelociter>\u00a0has quit  \n07:16\u00a0<venkatesh>\u00a0has joined #xwiki  \n07:17\u00a0<sburjan\\_>\u00a0has joined #xwiki  \n07:20\u00a0<sburjan`>\u00a0has quit  \n07:20\u00a0<sburjan\\_>\u00a0is now known as <sburjan`>  \n07:32\u00a0<vmassol>\u00a0has joined #xwiki  \n08:37\u00a0<sbose78>\u00a0has joined #xwiki  \n08:38\u00a0<sbose78>\u00a0Hello, I need to ask regarding a project.  \n08:51\u00a0<jvelociter>\u00a0has joined #xwiki  \n08:52\u00a0<sbose78>\u00a0has quit  \n08:58\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:00\u00a0<vmassol>\u00a0has quit  \n09:02\u00a0<Enygma`>\u00a0has quit  \n09:04\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:30\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:40\u00a0<arkub>\u00a0has joined #xwiki  \n09:40\u00a0<sburjan>\u00a0has joined #xwiki  \n09:53\u00a0<evalica>\u00a0has joined #xwiki  \n10:24\u00a0<sdumitriu>\u00a0has joined #xwiki  \n10:45\u00a0<jvdrean>\u00a0has joined #xwiki  \n10:49\u00a0<@sdumitriu>\u00a0cjdelisle: Hi  \n10:50\u00a0<@cjdelisle>\u00a0good morning  \n10:50\u00a0<@sdumitriu>\u00a0Are you working on the escaping tests?  \n10:51\u00a0<@cjdelisle>\u00a0I agreed to but if you'd like them then feel free to take my name off of them  \n10:52\u00a0<@sdumitriu>\u00a0K, then I'll do them  \n11:05\u00a0<@sdumitriu>\u00a0cjdelisle: After fixing tests, do I remove them from the release plan? Or mark them as fixed?  \n11:06\u00a0<@cjdelisle>\u00a0Just add a note next to your name I think.  \n11:07\u00a0<@cjdelisle>\u00a0They're really only there so I can keep track of which tests are still 'orphans'  \n11:09\u00a0<@sdumitriu>\u00a0I'm moving to validation tests  \n11:10\u00a0<@cjdelisle>\u00a0great, thanks  \n11:13\u00a0<tmortagne>\u00a0has quit  \n11:14\u00a0<tmortagne>\u00a0has joined #xwiki  \n11:17\u00a0<+tmortagne>\u00a0cjdelisle: will take a look at XEM (already did but could not find what was the issue last time)  \n11:18\u00a0<fmancinelli>\u00a0has joined #xwiki  \n11:18\u00a0<@cjdelisle>\u00a0Thanks, I'll put you down for that.  \n11:26\u00a0<@cjdelisle>\u00a0Why do we have hudson builds for commons and commons-pom?  \n11:27\u00a0<lucaa>\u00a0has joined #xwiki  \n11:53\u00a0<@sdumitriu>\u00a0tmortagne: I can't make the extension manager to work properly, I get an error:  \n11:53\u00a0<@sdumitriu>\u00a0Caused by: java.lang.NoSuchMethodError: org.codehaus.plexus.classworlds.realm.ClassRealm.display(Ljava/io/PrintStream;)V  \n11:55\u00a0<+tmortagne>\u00a0sdumitriu: I don't have this using xwiki-debug-eclipse, what do you use to reproduce ? last ci build ?  \n11:55\u00a0<@sdumitriu>\u00a0Yes  \n11:55\u00a0<@sdumitriu>\u00a0The one from yesterday  \n11:55\u00a0<+tmortagne>\u00a0probably some dependencies incompatibilities  \n11:56\u00a0<+tmortagne>\u00a0checking  \n11:56\u00a0<@sdumitriu>\u00a0cjdelisle: ui tests are false negatives, right?  \n11:57\u00a0<@cjdelisle>\u00a0I opened an issue on them, they are failing when run all together but not when run individually  \n11:58\u00a0<@cjdelisle>\u00a0I take it the \"Programming\" section was intentionally removed from the administration interface.  \n11:58\u00a0<@sdumitriu>\u00a0I'll try to take a look at WYSIWYG tests, but it's not my domain; mflorea will get back on Monday  \n11:58\u00a0<@sdumitriu>\u00a0lucaa: Still on vacation?  \n11:59\u00a0<@cjdelisle>\u00a0He said yesterday that the change was something to do with an html change and they should all be false positives.  \n12:00\u00a0<@sdumitriu>\u00a0OK, I'll take a look though  \n12:00\u00a0<@cjdelisle>\u00a0He also said that he could look at them Monday. Ofc by then it will be more a matter of validating that there are no blockers than actually fixing the tests on the 3.1M1 branch  \n12:01\u00a0<+lucaa>\u00a0sdumitriu: yes  \n12:01\u00a0<@sdumitriu>\u00a0lucaa: K, have fun then  \n12:01\u00a0<+lucaa>\u00a0sdumitriu: I'll be back tomorrow afternoon / evening  \n12:13\u00a0<vmassol>\u00a0has joined #xwiki  \n12:17\u00a0<SvenDowideit>\u00a0has quit  \n12:18\u00a0<SvenDowideit>\u00a0has joined #xwiki  \n12:28\u00a0<+tmortagne>\u00a0hmm just found duplicated jar in XE distribution on plexus, trying to find where it come from  \n12:28\u00a0<+tmortagne>\u00a0that's weird since no plugin use plexus AFAIK  \n12:29\u00a0<@sdumitriu>\u00a0Plugins use core; does core use plexus, or the extension manager?  \n12:29\u00a0<+tmortagne>\u00a0well plugins use the same core version as the one in web now  \n12:30\u00a0<lucaa>\u00a0has quit  \n12:30\u00a0<+tmortagne>\u00a0so that should no produce several different version of dependencies  \n12:30\u00a0<+tmortagne>\u00a0will check pom files  \n12:32\u00a0<@cjdelisle>\u00a0We were talking about reletive paths being used to pull in repositories in a cleaner way. How about for versioning, would that work?  \n12:33\u00a0<@cjdelisle>\u00a0It would be very nice to have 4 locations where version numbers have to be changed for a release.  \n12:35\u00a0<@cjdelisle>\u00a0Also what version number should I use, I would like to get hudson building the 3.1M1 branch so we can see the tests pass. Does 3.1M1-SNAPSHOT sound good?  \n12:36\u00a0<+tmortagne>\u00a0cjdelisle: \u00a0not sure I understand what you are asking, the version of what ?  \n12:37\u00a0<+tmortagne>\u00a0you mean changing the version in the pom ?  \n12:38\u00a0<+tmortagne>\u00a0how did you created the branch ? if you did a direct git branch then you scm configuration is wrong now  \n12:38\u00a0<tmortagne>\u00a0has quit  \n12:38\u00a0<tmortagne>\u00a0has joined #xwiki  \n12:38\u00a0<+tmortagne>\u00a0maven would have done it for you  \n12:38\u00a0<@cjdelisle>\u00a0yes I did a direct git branch  \n12:39\u00a0<+tmortagne>\u00a0unless maven branch does not support git but i think they do now  \n12:40\u00a0<@cjdelisle>\u00a0Is git branch then sed to change version numbers not going to get me to the same place?  \n12:41\u00a0<+tmortagne>\u00a0cjdelisle: sure with potential errors, of course you will not use maven branch now it's too late but better use it next time  \n12:42\u00a0<+tmortagne>\u00a0lunch time I have to go, I found the what is the issue with plexus will fix it when i come back  \n12:55\u00a0<@sdumitriu>\u00a0The problem with the WYSIWYG tests is that the attachment tree doesn't scroll to the selected attachment anymore  \n12:55\u00a0<@sdumitriu>\u00a0I'll try a workaround  \n13:07\u00a0<evalica>\u00a0has quit  \n13:08\u00a0<Enygma`>\u00a0has quit  \n13:08\u00a0<sdumitriu>\u00a0has quit  \n13:08\u00a0<sburjan>\u00a0has quit  \n13:09\u00a0<vmassol>\u00a0cjdelisle: this https://github.com/xwiki/xwiki-commons/commit/73e6418fab5dcb5f236dc279d40092dd6d09204c doesn't look right  \n13:09\u00a0<vmassol>\u00a0(just catching up, no idea if it's been reported already)  \n13:10\u00a0<vmassol>\u00a0this is done by the release plugin normally  \n13:11\u00a0<evalica>\u00a0has joined #xwiki  \n13:11\u00a0<Enygma`>\u00a0has joined #xwiki  \n13:11\u00a0<vmassol>\u00a0ah you want to differentiate etween trunk and the branch I guess  \n13:11\u00a0<vmassol>\u00a0so that artifacts produced by the ci don't clash  \n13:11\u00a0<vmassol>\u00a0s/clash/mix up/  \n13:12\u00a0<vmassol>\u00a0we'll need to add this to the general process. A better name is 3.1-milestone-1-SNAPSHOT  \n13:13\u00a0<vmassol>\u00a0btw you shoud be able to use the versions maven plugin to do it easily  \n13:13\u00a0<vmassol>\u00a0http://mojo.codehaus.org/versions-maven-plugin/  \n13:19\u00a0<@cjdelisle>\u00a0I was reading about the release plugin. I will have to take time to get comfortable with that or anything that does commits on my behalf.  \n13:20\u00a0<vmassol>\u00a0cjdelisle: the steps are highlighted in our release process  \n13:20\u00a0<vmassol>\u00a0if you need full details they are explained here:  \n13:20\u00a0<vmassol>\u00a0http://maven.apache.org/plugins/maven-release-plugin/examples/prepare-release.html  \n13:20\u00a0<@cjdelisle>\u00a0With branching and with git?  \n13:21\u00a0<vmassol>\u00a0http://maven.apache.org/plugins/maven-release-plugin/examples/perform-release.html  \n13:21\u00a0<vmassol>\u00a0it's independent of git  \n13:21\u00a0<vmassol>\u00a0(provided the SCM info is set right in the pom which it shoudl be)  \n13:21\u00a0<ihalip\\_>\u00a0is now known as <ihalip>  \n13:22\u00a0<sburjan>\u00a0has joined #xwiki  \n13:23\u00a0<@cjdelisle>\u00a0release:prepare says \"Commit the modified POMs\"  \n13:23\u00a0<vmassol>\u00a0yes it does that  \n13:23\u00a0<@cjdelisle>\u00a0Does this mean it is going to push patches without letting me review them first?  \n13:24\u00a0<vmassol>\u00a0yes  \n13:24\u00a0<@cjdelisle>\u00a0haha, I'll run that as a user which doesn't have my ssh key  \n13:24\u00a0<vmassol>\u00a0you can do a dryrun if you want to cehck tinhgs  \n13:25\u00a0<@cjdelisle>\u00a0modify files is best IMO, commit is okay, commit and push I don't like.  \n13:25\u00a0<vmassol>\u00a0I don't know if it's going to push or not  \n13:26\u00a0<@cjdelisle>\u00a0I'll have to read more about it before I feel comfortable letting a strange program loose on the repo.  \n13:27\u00a0<vmassol>\u00a0http://www.sonatype.com/people/2009/09/maven-tips-and-tricks-using-github/  \n13:28\u00a0<vmassol>\u00a0missing info at the end though....  \n13:28\u00a0<vmassol>\u00a0reading http://stackoverflow.com/questions/2730319/does-maven-release-plugin-push-tags-to-remote-git-repository  \n13:29\u00a0<@cjdelisle>\u00a0that's a lot of magic  \n13:30\u00a0<vmassol>\u00a0that's the point of the release plugin :)  \n13:30\u00a0<vmassol>\u00a0to automate everything  \n13:30\u00a0<vmassol>\u00a0now I'm not sure how \"stable\" it is for git, never used it with git  \n13:31\u00a0<@cjdelisle>\u00a0automation is fine but let me read what I'm about to push before pushing it on my behalf.  \n13:31\u00a0<vmassol>\u00a0(with svn it was working well)  \n13:31\u00a0<vmassol>\u00a0some other info here: http://stackoverflow.com/questions/1877027/cant-get-automated-release-working-with-hudson-git-maven-release-plugin  \n13:31\u00a0<@cjdelisle>\u00a0It reeks of \"just sign here and I'll fill it out back at the office\"  \n13:33\u00a0<vmassol>\u00a0interesting too: http://pettermahlen.com/2010/02/20/git-and-maven/  \n13:34\u00a0<vmassol>\u00a0nice too: http://blog.cedarsoft.com/2010/08/maven-git-relasing-and-branching-done-right/  \n13:35\u00a0<vmassol>\u00a0git publish-branch looks nice too  \n13:35\u00a0<vmassol>\u00a0(not sure exactly what it does yet)  \n13:35\u00a0<vmassol>\u00a0they use the versions plugin  \n13:37\u00a0<@cjdelisle>\u00a0I'm going to get a cup of coffee, be back soon.  \n13:37\u00a0<lucaa>\u00a0has joined #xwiki  \n13:38\u00a0<sdumitriu>\u00a0has joined #xwiki  \n13:43\u00a0<+tmortagne>\u00a0cjdelisle: what is the process for test fixing ? I commit on M1 branch and then merge M1 to master ?  \n14:01\u00a0<@cjdelisle>\u00a0tmortagne: that makes the most sense. We need it in the M1 branch and there are some good arguments for doing it in that order.  \n14:02\u00a0<+tmortagne>\u00a0yep I agree  \n14:02\u00a0<+tmortagne>\u00a0easier that way  \n14:06\u00a0<DrLou>\u00a0has joined #xwiki  \n14:18\u00a0<+tmortagne>\u00a0cjdelisle: there is something weird, i can't find the 3.1M1 branch on xwiki-platform repository on github anymore  \n14:19\u00a0<@cjdelisle>\u00a0looking...  \n14:20\u00a0<@cjdelisle>\u00a0hmm indeed  \n14:23\u00a0<@cjdelisle>\u00a0did someone git push :origin/xwiki-3.1M1?  \n14:23\u00a0<@sdumitriu>\u00a0Not me  \n14:23\u00a0<@sdumitriu>\u00a0But it seems to be there  \n14:24\u00a0<vmassol>\u00a0tmortagne removed a branch :)  \n14:24\u00a0<vmassol>\u00a0https://github.com/organizations/xwiki  \n14:24\u00a0<vmassol>\u00a0\"https://github.com/tmortagne deleted branch xwiki-3.1M1 at https://github.com/xwiki/xwiki-platform 7 minutes ago  \n14:24\u00a0<vmassol>\u00a0Deleted branch was at /xwiki/xwiki-platform/tree/xwiki-3.1M1  \n14:24\u00a0<vmassol>\u00a0\"  \n14:24\u00a0<+tmortagne>\u00a0di I ?  \n14:24\u00a0<+tmortagne>\u00a0I just did a push after my commit  \n14:24\u00a0<@cjdelisle>\u00a0git push :origin/xwiki-3.1M1 \u00a0\u00a0<-- that does a delete, that : is a killer.  \n14:25\u00a0<+tmortagne>\u00a0ok not very intuitive...  \n14:25\u00a0<+tmortagne>\u00a0so how do i push a commit done on a branch then ?  \n14:25\u00a0<@sdumitriu>\u00a0https://github.com/xwiki/xwiki-enterprise/commits/xwiki-3.1M1  \n14:25\u00a0<@cjdelisle>\u00a0git push  \n14:25\u00a0<@cjdelisle>\u00a0that should be enough  \n14:26\u00a0<@cjdelisle>\u00a0when you checkout you do:  \n14:26\u00a0<@cjdelisle>\u00a0git co -b xwiki-3.1M1 --track origin/xwiki-3.1M1  \n14:26\u00a0<+tmortagne>\u00a0but i don't want to push the whole repo, just a branch  \n14:26\u00a0<@sdumitriu>\u00a0git push origin xwiki-3.1M1  \n14:27\u00a0<@sdumitriu>\u00a0Without :  \n14:27\u00a0<+tmortagne>\u00a0ok thanks  \n14:27\u00a0<@cjdelisle>\u00a0Compiling permutation 25  \n14:28\u00a0<@cjdelisle>\u00a026  \n14:28\u00a0<@cjdelisle>\u00a027  \n14:28\u00a0<@cjdelisle>\u00a0Loves muh opteron :)  \n14:31\u00a0<@cjdelisle>\u00a0did someone put the platform branch back?  \n14:32\u00a0<@cjdelisle>\u00a0Or should I?  \n14:32\u00a0<@sdumitriu>\u00a0Go on  \n14:32\u00a0<+tmortagne>\u00a0better you than me :)  \n14:33\u00a0<@cjdelisle>\u00a0heh  \n14:34\u00a0<@cjdelisle>\u00a0I really love git, once you get the hang of it, it makes making mistakes nearly impossible  \n14:34\u00a0<@sdumitriu>\u00a0+1  \n14:34\u00a0<@sdumitriu>\u00a0irreversible mistakes :)  \n14:34\u00a0<@sdumitriu>\u00a0It's still easy to do mistakes  \n14:38\u00a0<@cjdelisle>\u00a0yes, traps, not mistakes. I'm forever spelling things wrong. see also: cjdelisle has added branch xwiki-3.0M1....  \n14:50\u00a0<@cjdelisle>\u00a0\"If left blank, all branches will be examined for changes and built.\"  \n14:50\u00a0<@cjdelisle>\u00a0Should we use that on hudson rather than setting up jobs each time?  \n14:50\u00a0<@sdumitriu>\u00a0Nice  \n14:50\u00a0<@sdumitriu>\u00a0+1  \n14:50\u00a0<@cjdelisle>\u00a0sold  \n14:50\u00a0<@sdumitriu>\u00a0But I'm not sure we'll easily identify them  \n14:51\u00a0<+tmortagne>\u00a0when i fixed something on \u00a0xwiki-3.1M1 and committed I do a simple merge from master or do I need to specifically merge this commit only ?  \n14:51\u00a0<@sdumitriu>\u00a0You can try on one thing first  \n14:51\u00a0<@sdumitriu>\u00a0merge = merge whole branch  \n14:51\u00a0<@sdumitriu>\u00a0You can cherry-pick one commit  \n14:51\u00a0<+tmortagne>\u00a0but is it really needed ?  \n14:51\u00a0<+tmortagne>\u00a0I mean all we commit on the branch we want to merge them  \n14:52\u00a0<+tmortagne>\u00a0don't we ?  \n14:52\u00a0<@sdumitriu>\u00a0Yes  \n14:52\u00a0<@sdumitriu>\u00a0But not the other way around  \n14:52\u00a0<+tmortagne>\u00a0I know  \n14:52\u00a0<+tmortagne>\u00a0but i did my commit on the branch  \n14:52\u00a0<+tmortagne>\u00a0especially for that  \n14:53\u00a0<+tmortagne>\u00a0then i just need to merge the branch to master, so no need to cherry-pick  \n14:53\u00a0<@cjdelisle>\u00a0so git co master ; git merge <sha1 of commit on branch> merges that commit and all before it?  \n14:53\u00a0<+tmortagne>\u00a0or there is something i don't understand  \n14:53\u00a0<@cjdelisle>\u00a0but that's okay as long as you commit on the stable branch and merge back to the trunk  \n14:53\u00a0<+tmortagne>\u00a0I should just do a simple merge no need to target one specific commit  \n14:54\u00a0<@cjdelisle>\u00a0IMO yes  \n14:54\u00a0<@cjdelisle>\u00a0Does abyone know why we have both xwiki-commons and xwiki-commons-pom on hudson?  \n14:54\u00a0<+tmortagne>\u00a0ok doing that then  \n14:56\u00a0<@sdumitriu>\u00a0cjdelisle: Yes  \n14:56\u00a0<@sdumitriu>\u00a0cjdelisle: Yes, git merge SHA -> all before it  \n14:56\u00a0<@sdumitriu>\u00a0cjdelisle: xwiki-commons-pom is deprecated, it was before the three repos for commons were merged into one  \n14:57\u00a0<@sdumitriu>\u00a0That job can be removed  \n14:57\u00a0<@cjdelisle>\u00a0Ok, cool so I can remove it?  \n14:58\u00a0<@cjdelisle>\u00a0Also this business of tieing jobs to nodes, I would like to stop that until we see performance degradation.  \n14:58\u00a0<@cjdelisle>\u00a0perhaps the problem was fixed in a later version of hudson.  \n14:58\u00a0<@cjdelisle>\u00a0Continuing it because it was once a problem seems a bit too supersticious to me.  \n14:58\u00a0<lucaa>\u00a0has quit  \n14:58\u00a0<+tmortagne>\u00a0was not a hudson problem  \n14:59\u00a0<@sdumitriu>\u00a0cjdelisle: The problem was that it ended up on the Windows machine, and the build was broken on it  \n14:59\u00a0<@sdumitriu>\u00a0But the Win machine has been down a lot  \n14:59\u00a0<@sdumitriu>\u00a0IIRC  \n14:59\u00a0<@cjdelisle>\u00a0Then we can tie it to the group instead  \n15:00\u00a0<+tmortagne>\u00a0tests were separated because they where constently blocking all the agents since they are very slow  \n15:00\u00a0<@cjdelisle>\u00a0When was this?  \n15:00\u00a0<+tmortagne>\u00a0you would have the same issue now too, XE test take a long time to run  \n15:01\u00a0<+tmortagne>\u00a0so any \"normal\" build would have to wait for XE tests to finish  \n15:01\u00a0<@cjdelisle>\u00a0It doesn't matter if on one node or 2, the same number of tests have to run, correct?  \n15:02\u00a0<+tmortagne>\u00a0sure but the idea is that they don't have priority  \n15:02\u00a0<+tmortagne>\u00a0it's ok if you have 1 test build for several normal build  \n15:03\u00a0<@cjdelisle>\u00a0Ok, when was the last time this was observed causing a problem?  \n15:04\u00a0<+tmortagne>\u00a0you don't need to observe it: test are long to run and each time to do a modification it ends up executing XE test  \n15:04\u00a0<+tmortagne>\u00a0it's not a bug or something, just a simple fact  \n15:04\u00a0<@cjdelisle>\u00a0I see all of the tests are tied to agent 1 and everything else is tied to agent 2.  \n15:05\u00a0<+tmortagne>\u00a0yes that's what I explain to you  \n15:05\u00a0<@cjdelisle>\u00a0To solve the problem you claim was happening, it makes sense to tie tests to agent 1 but why must everythign else be tied to agent 2?  \n15:05\u00a0<+tmortagne>\u00a0if test can run on any agent then you will have both agent stuck with stable and trunk branch tests  \n15:05\u00a0<+tmortagne>\u00a0you said yo uwanted to remove all tied  \n15:06\u00a0<@cjdelisle>\u00a0I want to make sure there really is a problem because my understanding is it was last actually seen some number of years ago.  \n15:06\u00a0<+tmortagne>\u00a0I just explaining to you why we did that and why you still can't remove them for tests  \n15:07\u00a0<@cjdelisle>\u00a0But that aside, tieing things which are not tests to an agent makes no sense to me even to solve the problem you are talking about.  \n15:07\u00a0<+tmortagne>\u00a0you can remove tied for normal build if you want  \n15:07\u00a0<@cjdelisle>\u00a0Sounds good. If anything goes wrong we can always change it back  \n15:07\u00a0<+tmortagne>\u00a0I only talked about tests  \n15:08\u00a0<@cjdelisle>\u00a0Another idea to make things faster would be to use threading for snapshot builds.  \n15:08\u00a0<+tmortagne>\u00a0hmm when i do \"git merge xwiki-3.1M1\" from master i get a long list of modifications  \n15:08\u00a0<+tmortagne>\u00a0is that expected ?  \n15:09\u00a0<@cjdelisle>\u00a0I think that merges master on 3.1M1 sdumitriu is that correct?  \n15:09\u00a0<@sdumitriu>\u00a0No  \n15:09\u00a0<+tmortagne>\u00a0no it's doing the opposite  \n15:09\u00a0<+tmortagne>\u00a0that i'm sure  \n15:09\u00a0<@sdumitriu>\u00a0Anyway, the two are in sync, so either way there shouldn't be a long list  \n15:10\u00a0<+tmortagne>\u00a0but what i'm not sure is why i get this long list  \n15:10\u00a0<@sdumitriu>\u00a0tmortagne: git cherry origin/master  \n15:10\u00a0<@sdumitriu>\u00a0What does it say  \n15:10\u00a0<@sdumitriu>\u00a0(while on master)  \n15:10\u00a0<+tmortagne>\u00a0http://pastebin.com/XzFLaTny  \n15:10\u00a0<+tmortagne>\u00a0here is the list  \n15:11\u00a0<+tmortagne>\u00a0trying  \n15:11\u00a0<vmassol>\u00a0week end reading: http://martinfowler.com/articles/nonDeterminism.html  \n15:11\u00a0<+tmortagne>\u00a0note that I forgot to do a pull just before but my last pull was not very old  \n15:12\u00a0<+tmortagne>\u00a0tuska@asus-tuska:/media/data/projets/xwiki/src/git/xwiki-platform$ git cherry origin/master  \n15:12\u00a0<+tmortagne>\u00a0+ e57d278bc0809d7c1190f4514a81b469a6fb176f  \n15:12\u00a0<+tmortagne>\u00a0+ bc2b7be060b846a7c914545bfe30f15550161847  \n15:12\u00a0<@sdumitriu>\u00a0tmortagne: AH, those aren't commits, those are changes  \n15:12\u00a0<@sdumitriu>\u00a0And are normal, cjdelisle changed all the poms  \n15:12\u00a0<+tmortagne>\u00a0sure but that's a lots of changes  \n15:12\u00a0<@sdumitriu>\u00a0Well, we do have a lot of poms  \n15:12\u00a0<+tmortagne>\u00a0hmm so I just merged bad pom versions  \n15:13\u00a0<@sdumitriu>\u00a0Right :D  \n15:13\u00a0<@sdumitriu>\u00a0Don't push  \n15:13\u00a0<+tmortagne>\u00a0sure  \n15:13\u00a0<@sdumitriu>\u00a0git reset --hard orinig/master  \n15:13\u00a0<@sdumitriu>\u00a0git reset --hard origin/master  \n15:13\u00a0<+tmortagne>\u00a0ok thanks, was just about a=to ask :)  \n15:14\u00a0<+tmortagne>\u00a0so cherry-pick it is  \n15:17\u00a0<@cjdelisle>\u00a0If no complaints I'm going to set enterprise-tests to build all branches and remove enterprise-tests-2.7, enterprise-tests-3.0  \n15:17\u00a0<@cjdelisle>\u00a0and same for the other projects which have 2.7 and 3.0 builds  \n15:18\u00a0<+tmortagne>\u00a0ok this time it should be ok (O:-))  \n15:19\u00a0<@cjdelisle>\u00a0xwiki-commons-tool-license-resources && xwiki-commons-tool-validation-resources \u00a0remove?  \n15:19\u00a0<@sdumitriu>\u00a0cjdelisle: -1 for \"all the others\"  \n15:19\u00a0<@sdumitriu>\u00a0Let's do it for one only  \n15:19\u00a0<@sdumitriu>\u00a0As a test  \n15:20\u00a0<+tmortagne>\u00a0cjdelisle: for the two tools yes they are not needed anymore since they are part of commons build  \n15:20\u00a0<@sdumitriu>\u00a0As i said, I'm not sure the different branches will be easy to identify in the build output  \n15:20\u00a0<@cjdelisle>\u00a0ok, so I should leave 2.7 and 3.0 but set the latest version to build all branches so I don't have to add a 3.1M1 correct?  \n15:20\u00a0<+tmortagne>\u00a0about the all branch in one job I'm also -1, will be too hard to follow IMO  \n15:21\u00a0<@sdumitriu>\u00a0tmortagne: I don't know if it will be hard to follow  \n15:21\u00a0<@sdumitriu>\u00a0That's why I said to do it for one project only, to see how it looks  \n15:21\u00a0<@sdumitriu>\u00a0If it's OK, we can do it for the others  \n15:21\u00a0<@sdumitriu>\u00a0If not, we can revert it  \n15:21\u00a0<@cjdelisle>\u00a0You say one project, by project do you mean only try it for commons or you mean everything for 3.1M1?  \n15:22\u00a0<+tmortagne>\u00a0sdumitriu: it will if jenkins does not make a clear visual difference between branches builds  \n15:22\u00a0<+tmortagne>\u00a0but I agree lets see first  \n15:23\u00a0<@sdumitriu>\u00a0cjdelisle: I mean try it on one build job  \n15:24\u00a0<@cjdelisle>\u00a0well you won't get any useful information out of commons, it never changes  \n15:25\u00a0<@sdumitriu>\u00a0enterprise-tests  \n15:26\u00a0<@cjdelisle>\u00a0How about I just switch commons, rendering, platform, enterprise, enterprise-test, manager, manager-test to build all branches but not delete the old branch builds.  \n15:26\u00a0<@sdumitriu>\u00a0K  \n15:26\u00a0<@cjdelisle>\u00a0Then if we don't like it there are 7 fields to change back  \n15:30\u00a0<abusenius\\_>\u00a0has joined #xwiki  \n15:30\u00a0<abusenius\\_>\u00a0is now known as <abusenius>  \n16:01\u00a0<+tmortagne>\u00a0cjdelisle: I think I found the issue \u00a0with XEM  \n16:01\u00a0<+tmortagne>\u00a0should not be too long to fix  \n16:02\u00a0<@cjdelisle>\u00a0awesome. I just noticed that platform:origin/feature-extensionmanager is building. I'm not sure if we want this or not  \n16:02\u00a0<+tmortagne>\u00a0cjdelisle: well this branch does not exists anymore so I don't see why it's building  \n16:02\u00a0<@cjdelisle>\u00a0hmm if that branch has the same versioning scheme then we indeed do not want it.  \n16:04\u00a0<@cjdelisle>\u00a0\"build all branches\" will kind of prevent us doing feature branches but on the other hand it makes release branching so trivial that it's hard to tell which way we should take it  \n16:06\u00a0<@sdumitriu>\u00a0git pull does not remove branches removed from the server  \n16:09\u00a0<@sdumitriu>\u00a0git remote prune origin  \n16:10\u00a0<@sdumitriu>\u00a0Let's see if we can configure jenkins to run that before fetching  \n16:11\u00a0<@cjdelisle>\u00a0\"Prune remote branches before build\"  \n16:11\u00a0<@cjdelisle>\u00a0checking  \n16:12\u00a0<@cjdelisle>\u00a0but the problem remains that branches with colliding version numbers are going to poison the maven snapshots repo  \n16:13\u00a0<fmancinelli>\u00a0has left #xwiki  \n16:14\u00a0<+tmortagne>\u00a0what would be a cool is a regexp filter on branches names to filter \"feature-.\\*\"  \n16:15\u00a0<+tmortagne>\u00a0we can probably request it to jenkins ;)  \n16:15\u00a0<@cjdelisle>\u00a0I think it's there  \n16:16\u00a0<@sdumitriu>\u00a0Hm, I broke the build  \n16:16\u00a0<@cjdelisle>\u00a0what makes you so sure it was you?  \n16:17\u00a0<@sdumitriu>\u00a0100% sure  \n16:17\u00a0<@sdumitriu>\u00a0compilation error  \n16:17\u00a0<@sdumitriu>\u00a0Editing code at the command line without building is baaad  \n16:17\u00a0<+tmortagne>\u00a0hmm there is a test falling in platform build  \n16:17\u00a0<+tmortagne>\u00a0org.xwiki.crypto.x509.X509KeyServiceTest.newPrivateKeyWrongPassword  \n16:26\u00a0<+tmortagne>\u00a0cjdelisle: XEM should be fixed now, waiting for jenkins build  \n16:27\u00a0<+tmortagne>\u00a0at least I fixed something, maybe there is more after that  \n16:32\u00a0<venkatesh>\u00a0has quit  \n16:33\u00a0<+tmortagne>\u00a0when I look at http://ci.xwiki.org/job/xwiki-manager/ it's not super clear it's actually the 3.0 branch which is broken  \n16:33\u00a0<+tmortagne>\u00a0the only thing is \"Upstream Projects\" but that's not direct information  \n16:34\u00a0<+tmortagne>\u00a0there is origin/xwiki-3.0 is small in http://ci.xwiki.org/job/xwiki-manager/3237/ at least but well it's samll  \n16:34\u00a0<+tmortagne>\u00a0did not looked at the mail  \n16:35\u00a0<+tmortagne>\u00a0plus \"xwiki-3.0\" is not the right name for the branch  \n16:35\u00a0<+tmortagne>\u00a0should be xwiki-manager-3.0  \n16:35\u00a0<+tmortagne>\u00a0looks like there is the same issue in XE repository with branch names  \n16:36\u00a0<+tmortagne>\u00a0either \"xwiki-manager-3.0\" or \"3.0\" since it's for the whole repository but \"xwiki-3.0\" does not make much sense  \n16:36\u00a0<@cjdelisle>\u00a0I followed the standard that was already defined.  \n16:36\u00a0<+tmortagne>\u00a0defined where ?  \n16:36\u00a0<+tmortagne>\u00a0that's not the svn standard  \n16:37\u00a0<@sdumitriu>\u00a0tmortagne: xwiki-manager-3.0 conflicts with the tag name  \n16:37\u00a0<@cjdelisle>\u00a0On github where there are xwiki-2.7 and xwiki-3.0 branches  \n16:37\u00a0<@sdumitriu>\u00a0I renamed the branches explicitly  \n16:37\u00a0<+tmortagne>\u00a0cjdelisle: that's the branches i'm talking about not your branch of course you did the same thing  \n16:38\u00a0<@cjdelisle>\u00a0I like it better anyway, I always know that if I want 3.0 I just co origin/xwiki-3.0  \n16:38\u00a0<+tmortagne>\u00a0sdumitriu: could be xwiki-manager-3.0-SNAPSHOT  \n16:38\u00a0<+tmortagne>\u00a0that does not conflict with tag  \n16:39\u00a0<+tmortagne>\u00a0in any case i don't see the logic in \"xwiki\" as branch name, could be stable-3.0 if we want the same thing in all rerpositories  \n16:45\u00a0<@sdumitriu>\u00a0tmortagne: OK to change the branch name, I jkust quickly tried to resolve the name conflict  \n16:46\u00a0<@cjdelisle>\u00a0I'd like it to be short and the same for each project.  \n16:46\u00a0<+tmortagne>\u00a0should probably be a mail vote or at least a proposal to gather names idea unless you already have one, I can send it if you want  \n16:46\u00a0<@cjdelisle>\u00a0xwiki-manager-3.0-SNAPSHOT is not fun to type or to remember  \n16:47\u00a0<+tmortagne>\u00a0cjdelisle: sure  \n16:47\u00a0<vmassol>\u00a0cjdelisle: btw you don't need to type it!  \n16:47\u00a0<vmassol>\u00a0just use auto complete  \n16:47\u00a0<vmassol>\u00a0(that's what I do)  \n16:48\u00a0<vmassol>\u00a0I'm using http://incubator.myxwiki.org/xwiki/bin/view/Main/UsingGitHub#HConfigureShell  \n16:49\u00a0<@cjdelisle>\u00a0That reminds me, requiring potential contributers to install a settings.xml in their ~/.m2/ directory is an obstruction to contributing.  \n16:50\u00a0<@sdumitriu>\u00a0Gentoo has very good bash completion for git  \n16:50\u00a0<@sdumitriu>\u00a0It does autocomplete on most commands, and their parameters  \n16:50\u00a0<@sdumitriu>\u00a0Ubuntu just knows to complete some command names  \n16:51\u00a0<@sdumitriu>\u00a0Ubuntu doesn't rule  \n16:51\u00a0<@sdumitriu>\u00a0Gentoo rulz  \n16:51\u00a0<@sdumitriu>\u00a0:)  \n16:51\u00a0<vmassol>\u00a0cjdelisle: regarding that the solution is simple: publish to the central repo (that won't solve snapshot artifacts though). Only issue is that publishing will take time, there are prereqs, we want to do it though  \n16:51\u00a0<@cjdelisle>\u00a0-1 to let's make it unnecessarily hard so we can show off our awesome os.  \n16:51\u00a0<@sdumitriu>\u00a0I'd be +1 for \"stable-3.0\" as a branch name on all repos  \n16:52\u00a0<@cjdelisle>\u00a0Everyone who contributes wants to build trunk so snapshost is what we really need.  \n16:52\u00a0<vmassol>\u00a0there's no solution  \n16:53\u00a0<@cjdelisle>\u00a0Other than adding a repo to the pom files.  \n16:53\u00a0<+tmortagne>\u00a0sending a mail with some proposals, feel free to add others  \n16:53\u00a0<vmassol>\u00a0cjdelisle: if we do that btw we cannot publish to the central repo  \n16:55\u00a0<@cjdelisle>\u00a0It is against their rules?  \n16:55\u00a0<vmassol>\u00a0yes  \n16:56\u00a0<@cjdelisle>\u00a0What does publishing in central give us?  \n16:56\u00a0<vmassol>\u00a0the ability for people to not have to modify their settings.xml :)  \n16:56\u00a0<+tmortagne>\u00a0mail sent  \n16:56\u00a0<vmassol>\u00a0but more importantly  \n16:56\u00a0<@cjdelisle>\u00a0Not if they want to build trunk  \n16:56\u00a0<vmassol>\u00a0the ability for them to publish their work depending on xwiki in the central repo  \n16:57\u00a0<vmassol>\u00a0for ex exo cannot publish some of their artifacts to the central repo right now  \n16:57\u00a0<vmassol>\u00a0because they depend on xwiki which isn't in the central repo  \n16:57\u00a0<vmassol>\u00a0cjdelisle: people who use xwik as dep don't want to build trunk in general  \n16:57\u00a0<vmassol>\u00a0this is for the majority of users  \n16:58\u00a0<vmassol>\u00a0for ex we always depend on released version of all our third party apps  \n16:58\u00a0<@cjdelisle>\u00a0People using it as a dep can paste the repo into their <repositories> section. That's easy enough.  \n16:58\u00a0<vmassol>\u00a0cjdelisle: errr?  \n16:58\u00a0<+tmortagne>\u00a0vmassol: cjdelisle started the discussion as contributor wanting to build xwiki so it was not really about people having xwiki as dependency actually  \n16:58\u00a0<vmassol>\u00a0we alreayd have a remote repo  \n16:58\u00a0<+tmortagne>\u00a0build a sub project I mean  \n16:58\u00a0<vmassol>\u00a0tmortagne: yes but when you contribute about xwiki you don't care  \n16:59\u00a0<+tmortagne>\u00a0why ?  \n16:59\u00a0<vmassol>\u00a0(don't care about adding a settings.xml)  \n16:59\u00a0<+tmortagne>\u00a0how do you build one of the macro without settings.xml ?  \n16:59\u00a0<vmassol>\u00a0becuase that's part of the rules for building xwiki, it's a small one  \n16:59\u00a0<vmassol>\u00a0whereas users  \n16:59\u00a0<vmassol>\u00a0are expecting it to work as is  \n16:59\u00a0<vmassol>\u00a0so users >> devs  \n16:59\u00a0<@cjdelisle>\u00a0So you don't want contributers to submit patches?  \n17:00\u00a0<+tmortagne>\u00a0vmassol: sure and IMO it's ok like that but that one the subject of the discussion  \n17:00\u00a0<vmassol>\u00a0IMO you're not right in assuming people don't submit partches because they have to edit their settings.xml  \n17:00\u00a0<vmassol>\u00a0it's like saying  \n17:00\u00a0<vmassol>\u00a0oh people won't submit patches because htey have to use maven  \n17:00\u00a0<vmassol>\u00a0so let's remove the need to have maven for them  \n17:00\u00a0<+tmortagne>\u00a0s/one/was/  \n17:00\u00a0<vmassol>\u00a0oh and let's remove the need for them to follow best pracitces  \n17:00\u00a0<vmassol>\u00a0and let's allow them not to add tests too  \n17:01\u00a0<vmassol>\u00a0oh and let me submit code that doesn't even build  \n17:01\u00a0<vmassol>\u00a0now we're getting somewhere  \n17:01\u00a0<vmassol>\u00a0and it becomes really easy to conribute  \n17:01\u00a0<@cjdelisle>\u00a0Ok, if you like throwing roadblocks up in their way, I can't really argue with you on motive.  \n17:01\u00a0<vmassol>\u00a0we're happy  \n17:01\u00a0<vmassol>\u00a0:)  \n17:01\u00a0<vmassol>\u00a0nope  \n17:01\u00a0<vmassol>\u00a0I'm explaing the pros and cons  \n17:01\u00a0<vmassol>\u00a0of what it means with settings.xml  \n17:02\u00a0<vmassol>\u00a0this is maven  \n17:02\u00a0<vmassol>\u00a0it's a tradeoff  \n17:02\u00a0<vmassol>\u00a0AFAIK there's no hardcoded central snapshot repo  \n17:03\u00a0<vmassol>\u00a0(that we could use)  \n17:03\u00a0<vmassol>\u00a0we coudl package a special maven distro but I'm not sure it's easier  \n17:04\u00a0<+tmortagne>\u00a0I agree with cjdelisle that it would be nice to not need setting.xml file but my only cons is that the possible solutions I see are too expensive  \n17:04\u00a0<@cjdelisle>\u00a0Every step you add to the contribution process is a step that will cause \\_someone\\_ to be turned away. If you make it hard enough then nobody will ever submit patches.  \n17:04\u00a0<vmassol>\u00a0ofc I agree too tmortagne  \n17:04\u00a0<vmassol>\u00a0who prefers complex things?  \n17:04\u00a0<vmassol>\u00a0:)  \n17:04\u00a0<vmassol>\u00a0cjdelisle: \u00a0I agree  \n17:04\u00a0<vmassol>\u00a0what's your solution?  \n17:04\u00a0<@cjdelisle>\u00a0I think it's worth it to add the repo to the pom files.  \n17:04\u00a0<+tmortagne>\u00a0I don't  \n17:04\u00a0<vmassol>\u00a0I don't  \n17:04\u00a0<vmassol>\u00a0because again you're removing the ability to spread xwiki everywhere  \n17:04\u00a0<+tmortagne>\u00a0and there is less painful that this solution  \n17:05\u00a0<vmassol>\u00a0and btw I think there's an issue with that to  \n17:05\u00a0<vmassol>\u00a0too  \n17:05\u00a0<vmassol>\u00a0some chicken and egg issue  \n17:05\u00a0<+tmortagne>\u00a0but even the other is too much IMO (setting relative parent in all pom and have repository in each repository root pom)  \n17:05\u00a0<vmassol>\u00a0I don't remember the details but I remember it wasn't fully working last time I tried a few years ago  \n17:06\u00a0<@cjdelisle>\u00a0What exactly is horrible about repos in pom files?  \n17:06\u00a0<vmassol>\u00a0yep maybe that's what you mention tmortagne  \n17:06\u00a0<vmassol>\u00a0(must be)  \n17:06\u00a0<vmassol>\u00a0cjdelisle: checkout (svn talk) a module, try to build it  \n17:07\u00a0<vmassol>\u00a0it won't work  \n17:07\u00a0<vmassol>\u00a0since it'll try to ftech the parent pom from the remote repo...  \n17:07\u00a0<vmassol>\u00a0ie from central  \n17:07\u00a0<+tmortagne>\u00a0vmassol: parent pom is never taken from repository listed in the pom itself ?  \n17:08\u00a0<vmassol>\u00a0tmortagne: you'd need to copy/paste the remote repo in all poms  \n17:08\u00a0<vmassol>\u00a0(and not even sure it works)  \n17:08\u00a0<+tmortagne>\u00a0vmassol: that's what cjdelisle propose  \n17:08\u00a0<+tmortagne>\u00a0and what i don't like  \n17:09\u00a0<pulasthi>\u00a0has joined #xwiki  \n17:09\u00a0<@cjdelisle>\u00a0If there is an easier way then I'm all ears but if that is the only way I still think the benefits outweigh the costs.  \n17:09\u00a0<vmassol>\u00a0cjdelisle: why do'nt you care about xwiki being used?  \n17:09\u00a0<vmassol>\u00a0:)  \n17:09\u00a0<vmassol>\u00a0since this means we won't be able to spread xwiki in all worldwide repos  \n17:09\u00a0<@cjdelisle>\u00a0why would it not be used?  \n17:10\u00a0<@cjdelisle>\u00a0do we now?  \n17:10\u00a0<+tmortagne>\u00a0cjdelisle: I explained to you several time an easier way that what you proposed bu even this one i don't like much  \n17:10\u00a0<vmassol>\u00a0cjdelisle: no but we're trying and several users have asked about it  \n17:10\u00a0<@cjdelisle>\u00a0How long have we been trying?  \n17:11\u00a0<+tmortagne>\u00a0cjdelisle: puting rendering and commons in central is already the plan  \n17:12\u00a0<@cjdelisle>\u00a0Ahh, then rendering and commons do not need to have repos in the poms :)  \n17:12\u00a0<+tmortagne>\u00a0except for snapshot  \n17:12\u00a0<+tmortagne>\u00a0central does not fix this use case  \n17:13\u00a0<@cjdelisle>\u00a0indeed. This will be a pain as they will have to be switched in and out.  \n17:14\u00a0<@cjdelisle>\u00a0How long has the idea of getting xwiki modules into central been talked about? If it has been on the todo list for years then we shouldn't expect it to happen tomorrow.  \n17:15\u00a0<+tmortagne>\u00a0re multi branch jobs, for now I don't like it too much: I can't find a way to easily see anymore if XEM 3.0 branch is building fine or not  \n17:15\u00a0<+tmortagne>\u00a0for this I have to check all builds and see if the branch I'm interested in or not to have its last state  \n17:16\u00a0<evalica>\u00a0has quit  \n17:16\u00a0<+tmortagne>\u00a0cjdelisle: commons and rendering don't exist for years and theses has been created specifically to be used outside of XWiki which means being in central repository  \n17:17\u00a0<+tmortagne>\u00a0so it's not something we push for years just something to do as soon as we are stable with big refactoring  \n17:17\u00a0<vmassol>\u00a0we've been wanting to have since day one, ie since we moved to maven  \n17:18\u00a0<vmassol>\u00a0since that's part of the way maven works and a way to expose your work  \n17:18\u00a0<vmassol>\u00a0we didn't do it before because we had no control over stats  \n17:18\u00a0<vmassol>\u00a0which we have on ow2  \n17:18\u00a0<vmassol>\u00a0but the stats are no longer an issue since we can now have them  \n17:18\u00a0<vmassol>\u00a0(now = since a few months ago)  \n17:19\u00a0<+tmortagne>\u00a0and we put only distributions on ow2 anyway  \n17:19\u00a0<+tmortagne>\u00a0not library that others could usee  \n17:19\u00a0<vmassol>\u00a0right now the easiest solution to go to central is to publish on sonatype's oss repo  \n17:19\u00a0<vmassol>\u00a0I wonder if their snapshot repo is by default in the list of maven's remote repos\u2026 ;) prolly not  \n17:19\u00a0<@cjdelisle>\u00a0Does every project demand that contributers paste repos into their settings.xml?  \n17:19\u00a0<vmassol>\u00a0yes  \n17:20\u00a0<vmassol>\u00a0that's the standard  \n17:26\u00a0<Enygma`>\u00a0has quit  \n17:26\u00a0<+tmortagne>\u00a0sburjan: would be nicer the full name of \"GA\" it's not clear what you are talking about except if you can make the relating between \"analytics.vm\" from the description and Google Analytics ;)  \n17:27\u00a0<vmassol>\u00a0re central, they say they \"discourage\" it, not sure if this means they'll still accept artifacts with repos in them or not  \n17:27\u00a0<vmassol>\u00a0https://docs.sonatype.org/display/Repository/Central+Sync+Requirements  \n17:27\u00a0<vmassol>\u00a0http://www.sonatype.com/people/2010/03/why-external-repos-are-being-phased-out-of-central/  \n17:28\u00a0<+tmortagne>\u00a0someone who is just using xwiki rendering will ends up with a useless repository in his build reactor  \n17:29\u00a0<vmassol>\u00a0https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide  \n17:29\u00a0<+sburjan>\u00a0tmortagne: ok, gonna rename the issue  \n17:32\u00a0<@cjdelisle>\u00a0it's too bad that \"build all branches\" isn't nicer. It's really hard to justify automating anything if you have to manually setup 7 hudson jobs per branch  \n17:33\u00a0<vmassol>\u00a0btw I remember this discussion on maven list a few years ago about adding the notion of workspace to make it easy for devs to get onboard  \n17:33\u00a0<vmassol>\u00a0actually sontatype developed some eclipse tools for that  \n17:33\u00a0<vmassol>\u00a0they called it developer onboarding I think  \n17:34\u00a0<vmassol>\u00a0http://www.sonatype.com/books/m2eclipse-book/reference/mse-intro-devonboard.html  \n17:35\u00a0<@cjdelisle>\u00a0meh if that's the way everyone works with maven then there's nothing we can really do.  \n17:35\u00a0<vmassol>\u00a0I don't think it's ready yet (there were demos I saw at some point): http://www.sonatype.com/maven-studio-for-eclipse.html  \n17:36\u00a0<vmassol>\u00a0ah yes the preview was here: http://www.sonatype.com/people/2010/06/ready-click-code-with-maven-studio-for-eclipse/  \n17:37\u00a0<vmassol>\u00a0asking jason  \n17:39\u00a0<vmassol>\u00a0cjdelisle: settings.xml could be shared (in git for ex) but it's not better I think since devs will need to run mvn -s path/to/settings.xml  \n17:41\u00a0<@cjdelisle>\u00a0If the repos were added to xwiki-trunks/pom.xml and the other poms tried looking for a pom in the directory above them? I don't know if that would be workable  \n17:41\u00a0<@sdumitriu>\u00a0https://issues.apache.org/jira/browse/VELOCITY-801  \n17:42\u00a0<vmassol>\u00a0sdumitriu: do you understand why string interning is an issue? it's used under the hood, you don't even need to call String.intern() to use it  \n17:42\u00a0<vmassol>\u00a0(like when you write: String value = \"a\";)  \n17:43\u00a0<vmassol>\u00a0cjdelisle: IMO having to check out xwiki-trunks is a \u00a0worse solution than having to copy a settings.xml  \n17:44\u00a0<vmassol>\u00a0s/cehckout/clone/  \n17:44\u00a0<sburjan>\u00a0has quit  \n17:44\u00a0<vmassol>\u00a0(takes longer and you get things you don't need)  \n17:44\u00a0<Mondstrahl>\u00a0has joined #xwiki  \n17:44\u00a0<@cjdelisle>\u00a0I suppose so  \n17:45\u00a0<Mondstrahl>\u00a0Hi - do you see any problems in updateing from xwiki 1.8 to 3.0 using oracle as db?  \n17:45\u00a0<vmassol>\u00a0cjdelisle: we can propose a VM set up for xwiki dev\u2026. ;)  \n17:45\u00a0<Mondstrahl>\u00a0And how would i do it? Using the export import feature?  \n17:46\u00a0<vmassol>\u00a0Mondstrahl: hi, yes using export (you might need the large xar export application on extensions.xwiki.org if your wiki is large)  \n17:47\u00a0<vmassol>\u00a0re problems I don't know, it's a pretty important upgrade so you'll need to update your config files probably  \n17:47\u00a0<@sdumitriu>\u00a0vmassol: The problem with interning is that the pool does not GC  \n17:47\u00a0<vmassol>\u00a0(ideally you'll need to read all release notes)  \n17:47\u00a0<Mondstrahl>\u00a0Thank you!  \n17:47\u00a0<@sdumitriu>\u00a0So if you read a String from a file, you get a non-interned string  \n17:47\u00a0<vmassol>\u00a0sdumitriu: but then that's true for all java code  \n17:47\u00a0<@sdumitriu>\u00a0If you call intern() on it, the read string is added to the pool, forever  \n17:48\u00a0<@sdumitriu>\u00a0vmassol: Why?  \n17:48\u00a0<vmassol>\u00a0the compiler does interning autoamtically  \n17:48\u00a0<vmassol>\u00a0wherever it can  \n17:48\u00a0<@sdumitriu>\u00a0Yes  \n17:48\u00a0<@sdumitriu>\u00a0\"All literal strings and string-valued constant expressions are \u00a0interned.\"  \n17:48\u00a0<vmassol>\u00a0for ex:  \n17:48\u00a0<@sdumitriu>\u00a0But not for strings read from other sources  \n17:48\u00a0<vmassol>\u00a0String a = \"a\"  \n17:48\u00a0<vmassol>\u00a0String b = \"b\"  \n17:48\u00a0<@sdumitriu>\u00a0yes, that's normal  \n17:48\u00a0<@sdumitriu>\u00a0That's not a dynamic string  \n17:49\u00a0<vmassol>\u00a0string c \u00a0= a + b  \n17:49\u00a0<vmassol>\u00a0yes for static  \n17:49\u00a0<vmassol>\u00a0c is interned in my example  \n17:49\u00a0<vmassol>\u00a0because it can be resolved statically  \n17:49\u00a0<vmassol>\u00a0ok so velocity is calling intern() explicitely?  \n17:49\u00a0<@sdumitriu>\u00a0Stop giving such examples  \n17:49\u00a0<@sdumitriu>\u00a0Yes, strings known at compile time are interned  \n17:50\u00a0<@sdumitriu>\u00a0Strings read from files at runtime are not automatically interned  \n17:50\u00a0<@sdumitriu>\u00a0For example the contents of macros.vm  \n17:50\u00a0<@sdumitriu>\u00a0But if Velocity reads macros.vm and calls intern(), then you add a huge String to the read-only pool  \n17:50\u00a0<@sdumitriu>\u00a0Same for all the dynamic scripts encountered in {{velocity}} blocks  \n17:51\u00a0<vmassol>\u00a0indeed  \n17:51\u00a0<vmassol>\u00a0vmassol@vincent-massols-macbook-pro ~/dev/velocity/engine $ find . -name \"\\*.java\" -exec grep -H \"intern(\" {} \\;  \n17:51\u00a0<vmassol>\u00a0./src/java/org/apache/velocity/context/AbstractContext.java: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return internalPut(key.intern(), value);  \n17:51\u00a0<vmassol>\u00a0./src/java/org/apache/velocity/runtime/directive/Macro.java: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0argArray[i] = argArray[i].intern();  \n17:51\u00a0<vmassol>\u00a0./src/java/org/apache/velocity/runtime/directive/RuntimeMacro.java: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.macroName = macroName.intern();  \n17:51\u00a0<vmassol>\u00a0./src/java/org/apache/velocity/runtime/parser/node/ASTIdentifier.java: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0identifier = getFirstToken().image.intern();  \n17:51\u00a0<vmassol>\u00a0./src/java/org/apache/velocity/runtime/parser/node/ASTReference.java: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0rootString = getRoot().intern();  \n17:51\u00a0<vmassol>\u00a0./src/java/org/apache/velocity/runtime/RuntimeInstance.java: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return vmFactory.addVelocimacro(name.intern(), macro, \u00a0argArray, \u00a0sourceTemplate);  \n17:51\u00a0<vmassol>\u00a0./src/java/org/apache/velocity/runtime/RuntimeInstance.java: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return vmFactory.addVelocimacro(name.intern(), macro, \u00a0argArray, \u00a0sourceTemplate);  \n17:51\u00a0<vmassol>\u00a0./src/java/org/apache/velocity/runtime/RuntimeInstance.java: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return vmFactory.isVelocimacro(vmName.intern(), templateName);  \n17:51\u00a0<vmassol>\u00a0I wonder why they wanted to be that clever\u2026.  \n17:52\u00a0<@cjdelisle>\u00a0hrm  \n17:52\u00a0<venkatesh>\u00a0has joined #xwiki  \n17:53\u00a0<@sdumitriu>\u00a0cjdelisle: With edit access, I guess one can generate random strings and #evaluate them  \n17:54\u00a0<@sdumitriu>\u00a0#foreach (too much) #evaluate($xwiki.generateRandomString(1000))  \n17:56\u00a0<vmassol>\u00a0is there proof that interned string memory cannot be reclaimed?  \n17:56\u00a0<vmassol>\u00a0(may depend on jvm)  \n17:56\u00a0<@cjdelisle>\u00a0#set($code = '#foreach(a lot) #evaluate($code + \"#set($x = $xwiki.getRandom(1000))\")') #evaluate($code)  \n17:57\u00a0<@cjdelisle>\u00a0something almost like that written in js causes firefox to just segfault  \n17:57\u00a0<vmassol>\u00a0ahah myth 3: http://www.codeinstructions.com/2009/01/busting-javalangstringintern-myths.html  \n18:05\u00a0<@sdumitriu>\u00a0So one possible cause of permgen errors is not classloader leaks, but actually velocity interning too much  \n18:06\u00a0<vmassol>\u00a0has quit  \n18:07\u00a0<@sdumitriu>\u00a0vmassol, come back  \n18:07\u00a0<@sdumitriu>\u00a0myth3 has one important if: \"the internalized strings are garbage collected if there are no more references to them.\"  \n18:08\u00a0<@sdumitriu>\u00a0IIRC, Velocity also caches the parsed templates  \n18:08\u00a0<@sdumitriu>\u00a0So there will continue to be references  \n18:08\u00a0<@sdumitriu>\u00a0But then again, this is not exact science  \n18:09\u00a0<@sdumitriu>\u00a0Without deep investigation, we don't know how much is interned, how long refererences to those strings are kept in memory, how many references are there, and whether they are discardable references or not  \n18:10\u00a0<@sdumitriu>\u00a0We didn't die so far, we'll wait and see  \n18:10\u00a0<@sdumitriu>\u00a0I trust Nathan with that issue  \n18:18\u00a0<tmortagne>\u00a0has quit  \n18:28\u00a0<Mondstrahl>\u00a0has quit  \n18:36\u00a0<@sdumitriu>\u00a0cjdelisle: When branching for a release, you should also create the JIRA versions for the next release (3.1M2)  \n18:36\u00a0<@cjdelisle>\u00a0will do  \n18:37\u00a0<abusenius>\u00a0has quit  \n18:39\u00a0<florinciu>\u00a0has joined #xwiki  \n18:51\u00a0<@cjdelisle>\u00a0Looks like I'm going to need some permissions magic to add the version to jira  \n18:52\u00a0<@sdumitriu>\u00a0Do you have a static IP?  \n18:52\u00a0<@cjdelisle>\u00a0somewhat, why?  \n18:52\u00a0<@sdumitriu>\u00a0(I added M2 already)  \n18:53\u00a0<@cjdelisle>\u00a0I mean static until the router restarts  \n18:53\u00a0<@sdumitriu>\u00a0Because the administration is also restricted by IP, not just username  \n18:54\u00a0<@cjdelisle>\u00a0I could just ssh -D and the ip will be 127.0.0.1  \n18:56\u00a0<@cjdelisle>\u00a0Can't you allow 0.0.0.0/0? I mean adding versions to jira isn't like controlling the floodgates on a dam and even so, ip based rules are not a very good security feature  \n19:00\u00a0<@sdumitriu>\u00a0Not me, I don't control the firewall  \n19:00\u00a0<@cjdelisle>\u00a0ahh firewall. that's on the maven box though right?  \n19:01\u00a0<@sdumitriu>\u00a0No idea  \n19:02\u00a0<jvdrean>\u00a0has quit  \n19:03\u00a0<@cjdelisle>\u00a0I'm not sure I follow. Do you need to use a different port to reach jira for admin?  \n19:04\u00a0<@sdumitriu>\u00a0No  \n19:04\u00a0<@cjdelisle>\u00a0so the firewall is part of jira?  \n19:04\u00a0<@sdumitriu>\u00a0No, it's part of Debian  \n19:05\u00a0<@sdumitriu>\u00a0:D  \n19:05\u00a0<@sdumitriu>\u00a0Or the Apache HTTPD daemon in front of Jira  \n19:05\u00a0<@sdumitriu>\u00a0I don't know much, I'm not sysadmin on the servers  \n19:06\u00a0<@cjdelisle>\u00a0Sure but I can connect to jira just fine now.  \n19:06\u00a0<@sdumitriu>\u00a0The build is too slow...  \n19:06\u00a0<@cjdelisle>\u00a0Unless you're saying the firewall somehow detects that I am doing jira admin and changes it's rules which makes no sense  \n19:06\u00a0<@sdumitriu>\u00a0Too many permutations  \n19:06\u00a0<@cjdelisle>\u00a0-T4 is you have enough ram  \n19:15\u00a0<arkub>\u00a0has quit  \n19:16\u00a0<arkub>\u00a0has joined #xwiki  \n19:18\u00a0<@cjdelisle>\u00a0Well, if you want me to add versions to jira you have to give me permission. You can have my ip and it might be the same for months, or I might lose power in a thunderstorm tomorrow. I'm really in the dark about it since I have no idea how iptables could have anything to do with jira administration.  \n19:19\u00a0<arkub>\u00a0has quit  \n19:20\u00a0<@cjdelisle>\u00a0Oh you could also add anything that I have ssh access to if you want me to tunnel.  \n19:26\u00a0<sdumitriu>\u00a0has quit  \n19:28\u00a0<ihalip>\u00a0has quit  \n19:29\u00a0<ihalip>\u00a0has joined #xwiki  \n19:43\u00a0<evalica>\u00a0has joined #xwiki  \n19:43\u00a0<evalica>\u00a0has quit  \n19:54\u00a0<venkatesh>\u00a0has quit  \n20:22\u00a0<ihalip>\u00a0has quit  \n20:26\u00a0<florinciu>\u00a0has quit  \n20:27\u00a0<ihalip>\u00a0has joined #xwiki  \n20:27\u00a0<ihalip>\u00a0has quit  \n20:27\u00a0<ihalip>\u00a0has joined #xwiki  \n20:31\u00a0<vmassol>\u00a0has joined #xwiki  \n20:40\u00a0<pulasthi>\u00a0has left #xwiki  \n21:00\u00a0<ihalip>\u00a0has quit  \n21:39\u00a0<vmassol>\u00a0has quit  \n21:45\u00a0<sdumitriu>\u00a0has joined #xwiki  \n22:02\u00a0<sdumitriu>\u00a0has quit  \n22:21\u00a0<vmassol>\u00a0has joined #xwiki  \n22:23\u00a0<arkub>\u00a0has joined #xwiki  \n22:29\u00a0<vmassol>\u00a0has quit  \n22:49\u00a0<sdumitriu>\u00a0has joined #xwiki  \n\n"}