{
  "id": "xwiki:Documentation.UserGuide.Features.ContentOrganization.WikiVsNestedPages.WebHome",
  "url": "https://www.xwiki.org/xwiki/bin/view/Documentation/UserGuide/Features/ContentOrganization/WikiVsNestedPages/",
  "title": "Wiki vs Nested Pages",
  "collection": "Eval_fr",
  "mimetype": "text/markdown",
  "language": "fr",
  "content": "XWiki 7.2 a introduit le concept des Espaces imbriqués. Avec ce nouveau concept, il est légitime de se demander quelles sont les différences entre l'utilisation d'un (sous)wiki ou l'utilisation de Pages imbriquées.\n\n# Résumé\n\nIl y a 2 cas d'utilisation principaux pour lesquels vous utiliseriez un Wiki au lieu de Pages imbriquées :\n\n* Vous souhaitez fournir des Applications/Extensions personnalisées à un groupe d'utilisateurs de votre wiki\n* Vous souhaitez implémenter une Ferme XWiki où chaque wiki est vu comme une île (utilisateurs propres, etc.)\n\n# Fonctionnalités\n\n| Fonctionnalité | Supportée par Wiki ? | Supportée par Pages imbriquées ? | Notes/Idées |\n| --- | --- | --- | --- |\n| Définir un thème de peau/couleur/icone personnalisé | accept | accept |  |\n| Définir des panneaux personnalisés | accept | accept |  |\n| Déléguer l'administration/la gestion des droits | accept | accept\\* | En 7.2, un Admin peut décider qu'un tel utilisateur ou groupe a des droits d'Admin sur une Page et ses enfants. [\\*] Il est beaucoup plus difficile de mettre en œuvre les droits pour un Mode Ferme en utilisant des Pages imbriquées qu'en utilisant un Wiki, mais c'est possible. |\n| Utilisateurs et groupes dédiés | accept | cancel | Fournit une isolation, à la fois en termes de visibilité et de sécurité. |\n| Notion de Propriétaire | accept | cancel | Le Propriétaire a tous les droits dans un wiki |\n| Capacité d'installer des extensions JAR | accept | cancel | Actuellement, lors de l'installation avec l'interface EM, vous ne pouvez pas décider d'installer une Extension uniquement pour une Page imbriquée bien que cela soit pris en charge dans le Core |\n| Capacité d'installer des Applications/Flavors | accept | cancel | Actuellement, lors de l'importation ou de l'utilisation de l'interface EM pour installer une Application (XAR), il n'est pas possible de la rooter sous une certaine Page imbriquée (c'est-à-dire de l'installer relativement à une Page imbriquée). Il n'est également pas possible d'installer un Flavor dans une Page imbriquée. |\n| Capacité d'avoir un nom de domaine dédié/schéma d'URL propre et fil d'Ariane | accept | error\\* | [\\*] Possible mais avec une certaine configuration : configuration au niveau Apache ou configuration URLRewriteFilter |\n| Capacité de maintenir facilement la base de données | accept | cancel | Les sous-wikis utilisent des schémas différents et cela rend très facile la maintenance par wiki (pour les cas d'utilisation de Ferme par ex). Les sauvegardes et restaurations de base de données peuvent être effectuées sur une base par wiki. Un wiki peut être déplacé indépendamment vers un autre serveur (certains liens peuvent être cassés, cela dépend de l'utilisation), fournissant une solution aux problèmes de scalabilité. Les extensions peuvent créer des tables spéciales dans le schéma d'un wiki donné (nécessite encore une certaine configuration manuelle). Les schémas peuvent également être optimisés pour des objectifs spécifiques tels que le mappage personnalisé. |\n| Capacité de requêter facilement des données à travers les instances | cancel\\* | accept | [\\*] Parce que les wikis sont stockés dans des schémas indépendants, vous ne pouvez pas effectuer une seule requête DB à travers plusieurs schémas. Cependant, vous pouvez interroger le contenu en utilisant la syntaxe Solr du Query Manager qui fonctionne à travers les schémas. Les Pages imbriquées, en revanche, sont dans le même wiki, donc dans le même schéma ; il est possible de couvrir les données stockées dans plusieurs Pages imbriquées avec une seule requête de base de données. Par exemple, afficher des données provenant de différents wikis dans une LiveTable n'est pas facile et nécessite d'écrire du JSON personnalisé. |\n| Capacité de rechercher dans plusieurs instances | accept | accept | Solr indexe les données indépendamment du stockage de la base de données, donc la recherche fonctionne à la fois à travers les wikis et les Pages imbriquées. |\n| Capacité de créer à partir d'un modèle avec plusieurs Pages | accept | cancel | Les modèles de Page sont actuellement uniquement une seule Page. |\n| Création/Suppression de Wiki ou de Page imbriquée | accept\\* | accept | [\\*] La suppression d'une Page imbriquée avertira des liens cassés, ce qui n'est pas le cas lors de la suppression d'un wiki. De plus, vous ne pouvez pas annuler une suppression de wiki, donc à moins d'avoir une sauvegarde, vous avez perdu vos données. Vous ne pouvez pas non plus restaurer une Page supprimée d'un simple clic depuis l'interface, mais au moins vous pouvez restaurer chaque Page enfant sous une Page imbriquée depuis l'interface, ou utiliser un script. En d'autres termes, il n'y a pas de Corbeille pour les wikis. |\n| Renommer un Wiki ou une Page | cancel | accept | Le renommage de Page met automatiquement à jour les backlinks |\n| Inviter des utilisateurs | accept | cancel | Vous ne pouvez pas inviter des utilisateurs uniquement pour une Page |\n| Implémenter un \"terrain de jeu\" | accept | cancel | Les Pages imbriquées partagent les XClasses. Si vous modifiez une XClass (par exemple XWiki.JavaScriptExtension), vous affectez toutes les Pages qui l'utilisent. Les wikis doivent dupliquer les XClasses, mais cela signifie que les modifications sont isolées. En conséquence, il est beaucoup plus difficile (sinon impossible) d'implémenter un \"terrain de jeu\" en utilisant une Page imbriquée qu'en utilisant un wiki. |\n| Facilité des mises à jour | cancel | accept | Plus difficile de mettre à jour XWiki : chaque wiki doit être mis à jour individuellement, même si c'est seulement 1 clic dans l'interface. De plus, il est plus lent de mettre à jour plusieurs wikis (par exemple lors de l'exécution de migrations de base de données puisque chaque wiki est une base de données). |"
}