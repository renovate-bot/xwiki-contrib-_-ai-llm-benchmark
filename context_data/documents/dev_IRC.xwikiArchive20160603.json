{"id": "dev:IRC.xwikiArchive20160603", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20160603", "title": "IRC Archive for channel #xwiki on 03 June 2016 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<vmassol>\u00a0has quit  \n01:53\u00a0<abusenius>\u00a0has quit  \n03:08\u00a0<Denis1>\u00a0has joined #xwiki  \n03:11\u00a0<Denis>\u00a0has quit  \n07:00\u00a0<mflorea>\u00a0has joined #xwiki  \n07:08\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n07:27\u00a0<msmeria>\u00a0has joined #xwiki  \n08:17\u00a0<msmeria>\u00a0has quit  \n08:21\u00a0<msmeria>\u00a0has joined #xwiki  \n08:28\u00a0<vmassol>\u00a0has joined #xwiki  \n08:56\u00a0<msmeria1>\u00a0has joined #xwiki  \n08:58\u00a0<msmeria>\u00a0has quit  \n09:01\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:03\u00a0<msmeria1>\u00a0has quit  \n09:04\u00a0<msmeria>\u00a0has joined #xwiki  \n09:05\u00a0<msmeria>\u00a0has quit  \n09:10\u00a0<msmeria>\u00a0has joined #xwiki  \n09:25\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:38\u00a0<vmassol>\u00a0tmortagne: good morning  \n09:39\u00a0<ClemensR>\u00a0has joined #xwiki  \n09:39\u00a0<vmassol>\u00a0I've created a converter but it doesn't seem to be called. I don't remember if there's a restriction on the type. I have:  \n09:39\u00a0<vmassol>\u00a0public class FieldConverter extends AbstractConverter<List<JIRAField>>  \n09:39\u00a0<vmassol>\u00a0ie List<JIRAField>  \n09:39\u00a0<vmassol>\u00a0that should work right  \n09:39\u00a0<vmassol>\u00a0?  \n09:39\u00a0<vmassol>\u00a0(note that I depend on XWiki 6.4)  \n09:40\u00a0<vmassol>\u00a0I'll start debugging  \n09:40\u00a0<vmassol>\u00a0comons-propertiies  \n09:42\u00a0<tmortagne>\u00a0vmassol: why did you implemented a List<JIRAField> converter ? You could have implemented a JIRAField converter and let the existing List converter do the list part  \n09:43\u00a0<tmortagne>\u00a0anyway if you want a converter to convert to List<JIRAField> class looks right  \n09:43\u00a0<tmortagne>\u00a0s/class/your class/  \n09:45\u00a0<vmassol>\u00a0the problem is elsewhere  \n09:45\u00a0<vmassol>\u00a0it's just that I'm missing some mock for the ContextCM used by the ConverterManager  \n09:45\u00a0<vmassol>\u00a0I need a list tmortagne  \n09:45\u00a0<vmassol>\u00a0because I'm doing the full parsing  \n09:50\u00a0<vmassol>\u00a0hmmm no it's not that  \n09:50\u00a0<vmassol>\u00a0the issue seems that my component is not properly registered in the ECM for some reason  \n09:52\u00a0<vmassol>\u00a0ah no it's there, it just can't be looked up it seems  \n09:52\u00a0<vmassol>\u00a0wait  \n09:55\u00a0<vmassol>\u00a0the convertermanager returns the wrong converter apparently :) it returns ListConverter instead of my converter  \n09:55\u00a0<vmassol>\u00a0ah yes I know the problem  \n09:56\u00a0<vmassol>\u00a0convertermanager.convert() is called with a Type being a class instead of a type\u2026. :(  \n09:56\u00a0<vmassol>\u00a0populateBeans does that apparently:  \n09:56\u00a0<vmassol>\u00a0Object e = this.converterManager.convert(propertyDescriptor1.getPropertyClass(), value);  \n09:57\u00a0<vmassol>\u00a0so it passes a class, not a type  \n09:57\u00a0<vmassol>\u00a0so it seems we don't support converters with a nested type....  \n09:58\u00a0<vmassol>\u00a0at least in 6.4  \n09:58\u00a0<vmassol>\u00a0checking recent code now  \n09:58\u00a0<vmassol>\u00a0doesn't seem better  \n09:59\u00a0<vmassol>\u00a0still using Object convertedValue = this.converterManager.convert(propertyDescriptor.getPropertyClass(), value);  \n09:59\u00a0<tmortagne>\u00a0we are supposed to support type, are you sure you are not looking at the fallback code  \n09:59\u00a0<tmortagne>\u00a0we fallback on the class when we don't find the Type  \n10:00\u00a0<vmassol>\u00a0I% don't know the code well. What I know is that we call \"Object convertedValue = this.converterManager.convert(propertyDescriptor.getPropertyClass(), value);\" which generates the problem  \n10:00\u00a0<ClemensR>\u00a0has quit  \n10:00\u00a0<vmassol>\u00a0MacroTx calls populate()  \n10:00\u00a0<vmassol>\u00a0which calls populateBean()  \n10:01\u00a0<tmortagne>\u00a0in any case it looks like a bug, should not be hard to fix  \n10:01\u00a0<vmassol>\u00a0which calls .converterManager.convert  \n10:01\u00a0<vmassol>\u00a0so I don't see it as a fallback  \n10:01\u00a0<vmassol>\u00a0yeah but it means I need to undo all I've done :(  \n10:02\u00a0<vmassol>\u00a0(for the jira macro)  \n10:02\u00a0<tmortagne>\u00a0actually it looks like the fallback is in converter manager, not beanmanager  \n10:02\u00a0<tmortagne>\u00a0so the beanmanager was probably forgotten when we moved to Type for the converters  \n10:03\u00a0<tmortagne>\u00a0vmassol: no you could have a custom type which is a list  \n10:03\u00a0<tmortagne>\u00a0i.e. JIRAFields  \n10:03\u00a0<vmassol>\u00a0yes I could  \n10:03\u00a0<vmassol>\u00a0indeed  \n10:04\u00a0<vmassol>\u00a0I wanted to avoid this initially  \n10:04\u00a0<vmassol>\u00a0but I guess I don't have much choice now so it's probably the best for me at this stafe  \n10:04\u00a0<vmassol>\u00a0\\*stage  \n10:04\u00a0<vmassol>\u00a0btw I have coded a PropetiesConverter  \n10:04\u00a0<vmassol>\u00a0I'll send a mail to move it to commons once I'm done  \n10:05\u00a0<vmassol>\u00a0we do have one issue though  \n10:05\u00a0<vmassol>\u00a0is that we can support only 1 converter per string format  \n10:05\u00a0<vmassol>\u00a0and there could be several string formats all leading up to a Properties object  \n10:05\u00a0<tmortagne>\u00a0the only way for you to be able to use it is for this converter to be in a contrib extension and not in commons but it's such a common type that it would be a pity  \n10:05\u00a0<vmassol>\u00a0for example my format is a=b,c=d  \n10:05\u00a0<vmassol>\u00a0for another format is:  \n10:05\u00a0<vmassol>\u00a0a=b\\nc=d  \n10:06\u00a0<tmortagne>\u00a0depends  \n10:06\u00a0<vmassol>\u00a0s/for another/but another  \n10:06\u00a0<tmortagne>\u00a0we could introduce hints for properties  \n10:06\u00a0<vmassol>\u00a0yes but it's complex  \n10:06\u00a0<tmortagne>\u00a0i.e. you indicate that you want the \"singleline\" converter or the \"multiline\" one  \n10:07\u00a0<vmassol>\u00a0hmm  \n10:07\u00a0<tmortagne>\u00a0not that complex no, just need an annotation you put on your bean method  \n10:07\u00a0<vmassol>\u00a0you mean finding a way to define this in the macro desqcriptor  \n10:07\u00a0<vmassol>\u00a0\\*descriptor  \n10:07\u00a0<vmassol>\u00a0to know which one to use  \n10:07\u00a0<tmortagne>\u00a0@PropertyConerterHint  \n10:07\u00a0<vmassol>\u00a0indeed  \n10:07\u00a0<vmassol>\u00a0yes  \n10:07\u00a0<tmortagne>\u00a0@PropertyConverterHint  \n10:07\u00a0<tmortagne>\u00a0and the default should probably be the actual Properties format  \n10:07\u00a0<tmortagne>\u00a0makes more sense  \n10:08\u00a0<tmortagne>\u00a0so yours would be \"line\" hint or something like this  \n10:08\u00a0<vmassol>\u00a0yep  \n10:09\u00a0<ClemensR>\u00a0has joined #xwiki  \n10:09\u00a0<vmassol>\u00a0in my case it means making JIRAFields public though (this is what I wanted to avoid) but so be it!  \n10:10\u00a0<tmortagne>\u00a0should not be such a big deal, it's just a list of JIRAField  \n10:11\u00a0<tmortagne>\u00a0(don't forget to report the issue about Type vs class in bean manager, will look at it when I'm done with OIDC)  \n10:11\u00a0<vmassol>\u00a0yep finishing first my stuff  \n10:17\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n10:22\u00a0<vmassol>\u00a0tmortagne: http://jira.xwiki.org/browse/XCOMMONS-994  \n10:26\u00a0<tmortagne>\u00a0vmassol: thanks  \n10:26\u00a0<vmassol>\u00a0haha leas to ugly code like: List<JIRAField> fields = parameters.getFields().getFields();  \n10:26\u00a0<vmassol>\u00a0;)  \n10:26\u00a0<vmassol>\u00a0\\*leads  \n10:35\u00a0<tmortagne>\u00a0vmassol: why don't you make JIRAFields a list ?  \n10:35\u00a0<tmortagne>\u00a0just extends ArrayList or something like this  \n10:40\u00a0<vmassol>\u00a0tmortagne: that's way more complex  \n10:41\u00a0<vmassol>\u00a0it's possible but not by extending ArrayList, I recall issues with that  \n10:41\u00a0<evalica>\u00a0has joined #xwiki  \n10:41\u00a0<vmassol>\u00a0there's some internal class AFAIR to go this  \n10:41\u00a0<vmassol>\u00a0would need to research it  \n10:41\u00a0<tmortagne>\u00a0don't really see why  \n10:43\u00a0<tmortagne>\u00a0if you don't want to directly extend the list you could extends org.apache.commons.collections.list.AbstractListDecorator to at least be usable as a list  \n10:43\u00a0<vmassol>\u00a0yes that seems like a better idea to me  \n10:45\u00a0<vmassol>\u00a0although it adds one more dep to the jira macro ;)  \n10:46\u00a0<vmassol>\u00a0I think I'll go with public class JIRAFields extends ArrayList<JIRAField>  \n10:46\u00a0<vmassol>\u00a0I don't have much time to research it now  \n10:46\u00a0<vmassol>\u00a0so I hope ther's no negative issue with it  \n10:46\u00a0<vmassol>\u00a0there used to be for sure  \n10:46\u00a0<vmassol>\u00a0but it's possible it's no longer the case  \n10:54\u00a0<moep>\u00a0has joined #xwiki  \n10:54\u00a0<tmortagne>\u00a0vmassol: we really need to Deprection Fixing Day :)  \n10:54\u00a0<vmassol>\u00a0yup  \n10:55\u00a0<vmassol>\u00a0we also need to fix the 134 bugs over 1 year...  \n10:55\u00a0<Slashman>\u00a0has joined #xwiki  \n12:16\u00a0<Slashman>\u00a0has quit  \n12:16\u00a0<M-cjd>\u00a0has quit  \n12:49\u00a0<Slashman>\u00a0has joined #xwiki  \n13:48\u00a0<tmortagne>\u00a0vmassol: many ui tests are failing because they can't find the syntax selector anymore, see http://ci.xwiki.org/view/Failed%20Builds/job/xwiki-enterprise-test-selenium/lastBuild/org.xwiki.enterprise$xwiki-enterprise-test-selenium/testReport/org.xwiki.test.selenium/WikiEditorTest/testItalicsButton/  \n13:48\u00a0<tmortagne>\u00a0is this expected ?  \n13:48\u00a0<tmortagne>\u00a0I don't remember if we decided to hide it for basic user or something like this  \n14:26\u00a0<vmassol>\u00a0back  \n14:26\u00a0<flashdel>\u00a0has joined #xwiki  \n14:27\u00a0<vmassol>\u00a0tmortagne: hmmm I thought I had fixed this, mflorea already pinged me about it  \n14:27\u00a0<vmassol>\u00a0do you know of a functional test in platform that I can test locally?  \n14:28\u00a0<flashdel>\u00a0hi folks, i got a question, i would like to have a panel on the right side of my wiki, which shows me the recent changes which where made in the space i am currently in. I tried to look it up in the documentation, but couldnt find it, normally the docs are really good :) I guess i just have to adjust the \"Recently modified documents\" which is already there, but i dont know how.. Can somebody help me?  \n14:28\u00a0<flashdel>\u00a0I am using xwiki 8.0 btw  \n14:30\u00a0<vmassol>\u00a0flashdel: yes you'll need to copy the recent changes panel to another page and edit it  \n14:31\u00a0<vmassol>\u00a0(bit busy right now on other stuff can't help you much more right now, hope it's enough to get you started ;))  \n14:36\u00a0<msmeria>\u00a0has quit  \n14:36\u00a0<DarkKnightCZ>\u00a0has quit  \n14:36\u00a0<flashdel>\u00a0vmassol: yes, thats the thing i know and the thing i am trying to adjust, but i dont know where and what to alter :S this is the original: http://pastebin.com/SsQjEFVA  \n14:39\u00a0<vmassol>\u00a0flashdel: the query  \n14:40\u00a0<vmassol>\u00a0just add a where clause  \n14:40\u00a0<vmassol>\u00a0see http://extensions.xwiki.org/xwiki/bin/view/Extension/Query+Module  \n14:40\u00a0<vmassol>\u00a0(there are XWQL examples there)  \n14:42\u00a0<flashdel>\u00a0ah ok, makes sense, i will try it  \n15:16\u00a0<flashdel>\u00a0vmassol: i dont get it, i am trying to di somehting like that: #set ($query = $services.query.xwql('order by doc.date desc where doc.space = $doc.space')) \u00a0but that doesnt work, i am not able to find out how to dertermine the space i am currently in :(  \n15:17\u00a0<vmassol>\u00a0the where should be before  \n15:17\u00a0<vmassol>\u00a0you can check examples on the page I gave you  \n15:17\u00a0<vmassol>\u00a0order by is at the end  \n15:18\u00a0<vmassol>\u00a0$doc.space is also not the way to do it  \n15:18\u00a0<vmassol>\u00a0again there are example on how to pass variables on that page  \n15:18\u00a0<vmassol>\u00a0bbl  \n15:37\u00a0<vmassol>\u00a0tmortagne: starting debug of WikiEditorTest  \n15:39\u00a0<tmortagne>\u00a0vmassol: ok great  \n15:47\u00a0<marcules>\u00a0has joined #xwiki  \n15:47\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n15:47\u00a0<moep>\u00a0has quit  \n15:53\u00a0<vmassol>\u00a0ok I undesrstand the problem  \n15:54\u00a0<vmassol>\u00a0before we had to 2 syntaxes by default: xwiki/2.0 and 2.1. Now we have only 2.1 by default (I've removed 2.0)  \n15:54\u00a0<vmassol>\u00a0so in edit mode there's no syntax select since there's only 1 syntax  \n15:54\u00a0<vmassol>\u00a0so we could:  \n15:55\u00a0<vmassol>\u00a01) display a select even there's only 1 option  \n15:55\u00a0<vmassol>\u00a02) fix the test fwk  \n15:55\u00a0<vmassol>\u00a0(ie. editInWikiEditor() impl)  \n15:55\u00a0<tmortagne>\u00a0we should at least indicate what is the syntax even if it's not a selector because there is no way to know  \n15:55\u00a0<vmassol>\u00a0hmm good point  \n15:55\u00a0<marcules>\u00a0has quit  \n15:56\u00a0<vmassol>\u00a0I guess the simplest is to show the select  \n15:56\u00a0<vmassol>\u00a0but maybe it's going to be weird for the user  \n15:56\u00a0<vmassol>\u00a0evalica: wdyt?  \n15:56\u00a0<tmortagne>\u00a0we should show the select always right now and discuss improvement later  \n15:56\u00a0<vmassol>\u00a0ok I'll do that  \n15:56\u00a0<vmassol>\u00a0it's also better for the user for autodiscovery  \n16:16\u00a0<sagarhani>\u00a0has quit  \n16:39\u00a0<vmassol>\u00a0tmortagne: hopefully should be better now, retesting locally  \n16:39\u00a0<tmortagne>\u00a0vmassol: ok  \n16:56\u00a0<vmassol>\u00a0ah no  \n16:56\u00a0<vmassol>\u00a0still needs to make the test use xwiki/2.1 syntax instead of 2.0!  \n16:59\u00a0<vmassol>\u00a0hmm no the syntax is 2.1 for WikiEditorTest, debugging  \n17:06\u00a0<vmassol>\u00a0might be an issue only locally because I'm on mac...  \n17:06\u00a0<vmassol>\u00a0checking ci  \n17:29\u00a0<KermitTheFragger>\u00a0has quit  \n17:32\u00a0<Denis1>\u00a0has quit  \n17:37\u00a0<ClemensR>\u00a0has quit  \n17:55\u00a0<evalica>\u00a0has quit  \n18:06\u00a0<DarkKnightCZ>\u00a0has quit  \n18:18\u00a0<tmortagne>\u00a0mflorea: \"[ERROR] src/main/java/com/xpn/xwiki/web/CreateActionRequestHandler.java:[124,50] (coding) MultipleStringLiterals: The String \"XWiki\" appears 2 times in the file.\"  \n18:40\u00a0<mflorea>\u00a0tmortagne: right, fixing it, sorry  \n18:42\u00a0<tmortagne>\u00a0has quit  \n19:31\u00a0<Pbas>\u00a0has quit  \n20:16\u00a0<Enygma`>\u00a0has quit  \n20:24\u00a0<Slashman>\u00a0has quit  \n20:25\u00a0<edvorg>\u00a0has joined #xwiki  \n20:35\u00a0<abusenius>\u00a0has joined #xwiki  \n20:37\u00a0<mflorea>\u00a0has quit  \n20:57\u00a0<edvorg>\u00a0has quit  \n21:42\u00a0<seanw\\_>\u00a0has joined #xwiki  \n21:42\u00a0<seanw\\_>\u00a0is now known as <Guest39386>  \n21:43\u00a0<Guest39386>\u00a0Hi all, after using the deb package repo to upgrade from xwiki 8.0 to 8.1 I'm getting HTTP Status 500 - Failed to locate an ExtendedURL Resource Type Resolver component  \n21:43\u00a0<Guest39386>\u00a0Any ideas on how to fix this?  \n22:35\u00a0<xwikibot>\u00a0has joined #xwiki\n"}