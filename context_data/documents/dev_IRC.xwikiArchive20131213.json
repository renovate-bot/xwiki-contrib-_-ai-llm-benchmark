{"id": "dev:IRC.xwikiArchive20131213", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20131213", "title": "IRC Archive for channel #xwiki on 13 December 2013 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<abusenius>\u00a0has quit  \n00:38\u00a0<vrachieru>\u00a0has quit  \n00:52\u00a0<sburjan>\u00a0has quit  \n01:13\u00a0<Slashman>\u00a0has quit  \n01:15\u00a0<sdumitriu>\u00a0has quit  \n01:17\u00a0<sdumitriu>\u00a0has joined #xwiki  \n01:25\u00a0<ekarlso>\u00a0has joined #xwiki  \n02:03\u00a0<GuillaumeF>\u00a0has quit  \n02:13\u00a0<Denis>\u00a0has quit  \n04:30\u00a0<Denis>\u00a0has joined #xwiki  \n06:04\u00a0<Denis>\u00a0has quit  \n07:05\u00a0<camil7>\u00a0has joined #xwiki  \n07:52\u00a0<vmassol>\u00a0has joined #xwiki  \n08:43\u00a0<Denis1>\u00a0has joined #xwiki  \n08:47\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n08:56\u00a0<Denis2>\u00a0has joined #xwiki  \n08:57\u00a0<Denis1>\u00a0has quit  \n09:00\u00a0<cjd>\u00a0has joined #xwiki  \n09:05\u00a0<msmeria>\u00a0has joined #xwiki  \n09:09\u00a0<vrachieru>\u00a0has joined #xwiki  \n09:10\u00a0<Denis2>\u00a0has quit  \n09:16\u00a0<j-simard>\u00a0has joined #xwiki  \n09:42\u00a0<evalica>\u00a0has joined #xwiki  \n10:07\u00a0<mflorea>\u00a0has joined #xwiki  \n10:10\u00a0<evalica1>\u00a0has joined #xwiki  \n10:10\u00a0<evalica>\u00a0has quit  \n10:16\u00a0<sburjan>\u00a0has joined #xwiki  \n10:24\u00a0<Denis1>\u00a0has joined #xwiki  \n10:25\u00a0<Denis1>\u00a0is now known as <Denis>  \n10:28\u00a0<vmassol>\u00a0Denis: what does it mean to check with right = null in AuthorizationException? Is it normal to have a null Right?  \n10:28\u00a0<vmassol>\u00a0(good morning)  \n10:30\u00a0<Denis>\u00a0vmassol: it means a check has been made where the right value was null  \n10:31\u00a0<vmassol>\u00a0which is wrong right?  \n10:31\u00a0<Denis>\u00a0sure  \n10:31\u00a0<vmassol>\u00a0ok  \n10:31\u00a0<Denis>\u00a0user may be null (public access), but not right  \n10:31\u00a0<vmassol>\u00a0and entity can be null too AFAIK ?  \n10:31\u00a0<vmassol>\u00a0for main wiki  \n10:31\u00a0<vmassol>\u00a0?  \n10:33\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n10:36\u00a0<vmassol>\u00a0Denis: then I don't understand why you allow to construct a an exception with a null Right:  \n10:36\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0public AuthorizationException(EntityReference entityReference,  \n10:36\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0String message,  \n10:36\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Throwable cause)  \n10:38\u00a0<vmassol>\u00a0same for \u00a0\u00a0\u00a0\u00a0public AuthorizationException(String message) and all other constructors  \n10:41\u00a0<vmassol>\u00a0ok I understand now (although it's not very nice IMO). You're reusing the same exception for various use cases  \n10:41\u00a0<Denis>\u00a0vmassol: Authorization exception could be thrown for any reason, and may not have pertinent right information, the \"advanced\" construtors are just helpers for building message, there is no getRight()  \n10:42\u00a0<Denis>\u00a0vmassol: do not mismatch with AccessDeniedException  \n10:42\u00a0<vmassol>\u00a0Denis: can you confirm that the following has a bug (which I'm about to fix):  \n10:42\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0public AccessDeniedException(Right right, DocumentReference userReference, EntityReference entityReference,  \n10:42\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Throwable t)  \n10:42\u00a0<vmassol>\u00a0it should call this IMO:  \n10:42\u00a0<vmassol>\u00a0super(right, userReference, entityReference, \"Access denied\", t);  \n10:43\u00a0<vmassol>\u00a0correct?  \n10:44\u00a0<Denis>\u00a0isn't what it does in the end ?  \n10:44\u00a0<tmortagne>\u00a0has joined #xwiki  \n10:45\u00a0<vmassol>\u00a0no it calls:  \n10:45\u00a0<vmassol>\u00a0super(userReference, entityReference, \"Access denied\", t);  \n10:45\u00a0<vmassol>\u00a0ie even if Right is not null it becomes ull!!  \n10:45\u00a0<vmassol>\u00a0\\*null  \n10:47\u00a0<Denis>\u00a0seems to be bug yes  \n10:47\u00a0<vmassol>\u00a0ok fixing  \n11:00\u00a0<j-simard>\u00a0has quit  \n11:02\u00a0<j-simard>\u00a0has joined #xwiki  \n11:07\u00a0<DarkKnightCZ>\u00a0tmortagne: hi, i'm following your advice (jobs), i use DefaultRequest, then i get job instance from componentManager and then run it wrapped in ExecutionContextRunnable, but i keep getting NPE which leads to nowhere - https://ezcrypt.it/jC7n#5DeRexgKBQt5WzAb9XxupyWj , on that line, AbstractJob calls getType(), which is implemented in my job (and returns string - exactly as in IndexerJob), any ideas?  \n11:10\u00a0<tmortagne>\u00a0DarkKnightCZ: actually I don't think it has anything to do with getType(), you would not get the nullpointer in this line  \n11:10\u00a0<tmortagne>\u00a0do you inject a logger in your job ?  \n11:11\u00a0<DarkKnightCZ>\u00a0yes  \n11:11\u00a0<tmortagne>\u00a0by doing that you make the AbstractJob logger null  \n11:11\u00a0<tmortagne>\u00a0that's what gets you a nullpointer  \n11:11\u00a0<tmortagne>\u00a0you should reuse the AbstractJob one instead  \n11:11\u00a0<tmortagne>\u00a0it's actually created with the instance class not with AbstractJob class  \n11:12\u00a0<tmortagne>\u00a0so it's the same thing as you get with your own inject  \n11:12\u00a0<tmortagne>\u00a0that's why it's protected ;)  \n11:12\u00a0<DarkKnightCZ>\u00a0yes, thanks... didn't thought of that :)  \n11:15\u00a0<KermitTheFragger>\u00a0has quit  \n11:16\u00a0<DarkKnightCZ>\u00a0yep, it works :)  \n11:16\u00a0<lucaa>\u00a0has joined #xwiki  \n12:13\u00a0<evalica1>\u00a0has quit  \n12:20\u00a0<tmortagne>\u00a0camil7: XWIKI-9805 fixed, should be a bit nicer to output something now  \n12:20\u00a0<tmortagne>\u00a0and thanks for XWIKI-9803 btw  \n12:25\u00a0<camil7>\u00a0tmortagne: ok thanks - me now untangling git branches, then I will test XWIKI-9805 and send a few other issues I found while converting a big input file. \u00a0XWIKI-9804 is possibly solved then, too?  \n12:26\u00a0<tmortagne>\u00a0camil7: no XWIKI-9804 is something else, XWIKI-9805 is only when you don't put anything as target  \n12:27\u00a0<tmortagne>\u00a0I plan to work on a syntax for XWIKI-9804  \n12:27\u00a0<tmortagne>\u00a0and improve the syntax in the source too (not support only url)  \n12:27\u00a0<camil7>\u00a0ok, good, thanks. I will test XWIKI-9804 next, sure this already helps a lot to see results  \n12:30\u00a0<DarkKnightCZ>\u00a0how to trigger attachment saving? XWikiDocument.addAttachment(name, inputstream, context) creates that attachment, attachment is accessable, but it's not saved into filesystem storage (so after restarting wiki attachment is gone)  \n12:31\u00a0<tmortagne>\u00a0DarkKnightCZ: attachments works like objects basically, you add an attachement to the XWikiDocument and then when you save the XWikiDocument itself objects and attachments are saved too  \n12:31\u00a0<tmortagne>\u00a0same for delete  \n12:32\u00a0<tmortagne>\u00a0in your example you can access the attachment because you directly modify the XWikiDocument instance stored in the cache  \n12:33\u00a0<tmortagne>\u00a0you need to be careful to either clone that instance or saved it when you modify it as otherwise you create make it not in synch with the actual storage anymore  \n12:34\u00a0<DarkKnightCZ>\u00a0oh, ok, thanks  \n12:54\u00a0<evalica>\u00a0has joined #xwiki  \n12:57\u00a0<Slashman>\u00a0has joined #xwiki  \n13:03\u00a0<tmortagne>\u00a0camil7: do you have the right to assign issues to you ? not sure about the configuration on jira  \n13:04\u00a0<camil7>\u00a0tmortagne: no, I cannot (I think) - thats why I usually leave a comment like \"working on a patch\", \"or pull request soon\"  \n13:04\u00a0<tmortagne>\u00a0camil7: ok  \n13:04\u00a0<camil7>\u00a0if after few day nothing happens, of course this probably means it will not happen :-/  \n13:05\u00a0<tmortagne>\u00a0it's ok, I know people with issue applied to them since forever O:-)  \n13:05\u00a0<tmortagne>\u00a0assigned  \n13:06\u00a0<camil7>\u00a0currently I have mostly lunch between me an pull request for XWIKI-9807 ... ah, yes, assigned forever, the improvement you always want to do at some time, I know  \n13:07\u00a0<tmortagne>\u00a0ok, I will leave this one to do and work on XWIKI-9804 after lunch (yes same here :))  \n13:07\u00a0<tmortagne>\u00a0s/do/you/  \n13:08\u00a0<camil7>\u00a0ok, thanks, we got ourself organized, so to say :)  \n13:19\u00a0<evalica1>\u00a0has joined #xwiki  \n13:19\u00a0<evalica>\u00a0has quit  \n13:22\u00a0<vmassol>\u00a0has quit  \n13:23\u00a0<vmassol>\u00a0has joined #xwiki  \n13:23\u00a0<DarkKnightCZ>\u00a0has left #xwiki  \n14:14\u00a0<camil7>\u00a0tmortagne : thanks for accepting the pull request:) ... and even next question: ConfluenceMacro object cannot contain HTML with markup - while actual confluence macros might ... this might make XRENDERING-325 quite tricky ... would an \"incomplete solution\" that at least does not fail to recognize that syntax at all helpful?  \n14:17\u00a0<tmortagne>\u00a0camil7: by \"contain HTML\" you mean that the content of the macro might be blocks and not just some back box string that the macro executor has to parse ?  \n14:18\u00a0<camil7>\u00a0as far as I can see it might contain inline markup.something like \u00a0\"some <b>bold</b> text\"  \n14:20\u00a0<tmortagne>\u00a0XWiki Rendering itself does not support anything that a String as macro content so if there is a macro that can have html content, it's a pity that Confluence does not escape that html when exporting but I think it should still end up as plain string that happen to contain html syntax in it  \n14:20\u00a0<tmortagne>\u00a0what the content mean is up to the macro executor  \n14:21\u00a0<tmortagne>\u00a0all the stuff I tried in 4.3.2 were always put in CDATA  \n14:22\u00a0<camil7>\u00a0well, maybe I can add something like a \"StructuredTextBodyTagHandler\" which makes the macro generate beginMacro / endMacro stuff ... \u00a0hmmm  \n14:22\u00a0<camil7>\u00a0yes, I know, but 5.3 seems to allow markup inside macros  \n14:22\u00a0<tmortagne>\u00a0problem is that there is no such thing beginMacro/endMacro in XWiki Rendering itself, only onMacro  \n14:22\u00a0<tmortagne>\u00a0so we need to end up with a String macro content  \n14:22\u00a0<camil7>\u00a0something link: \u00a0https://confluence.atlassian.com/display/DOC/Confluence+Storage+Format+for+Macros#ConfluenceStorageFormatforMacros-Excerptmacro  \n14:23\u00a0<camil7>\u00a0s/link/like/  \n14:23\u00a0<tmortagne>\u00a0and IMO it mean parsing and serializaing as it is in String whetever is inside the macro block  \n14:23\u00a0<camil7>\u00a0ah, ok, parsing and serializing ... hmmm  \n14:24\u00a0<tmortagne>\u00a0as if it was escaped \u00a0or put in a CDATA from the start basically  \n14:25\u00a0<tmortagne>\u00a0we are stuck with a onMacro with String as content anyway in the whole rendering, no way around it so we need to end up with some String  \n14:26\u00a0<camil7>\u00a0ok, and as we cannot say to the xml parser: \"please stop parsing unless you see the closing tag for \\*this\\* tag, so we can grab the raw text\" - one would need to save the contents in a nested parser and serialize them back when the tag closes  \n14:27\u00a0<camil7>\u00a0ah, uh, I hoped it was much simpler, but then I did not look at what the parser generated, actually, I was just happy it did not fail  \n14:29\u00a0<tmortagne>\u00a0problem is that it's not really right either  \n14:29\u00a0<tmortagne>\u00a0the main issue is that we don't know the syntax we will use to serialize those rendering events and that's the syntaxe the macro content should be using from what I understand  \n14:30\u00a0<tmortagne>\u00a0maybe the only right fix is to support XDOM intead of String in XWiki Rendering macros  \n14:30\u00a0<tmortagne>\u00a0but this is far from a small thing...  \n14:31\u00a0<tmortagne>\u00a0so basically I don't have much idea on how to handler <ac:rich-text-body> properly, except by doing the conversion on confluence parser side and send a document content string instead of rendering events to the wikistream output filter  \n14:32\u00a0<camil7>\u00a0hm, ok, I am somewhat inclined to \"get the darn thing running\" \u00a0to get my pages into xwiki ... hmmm  \n14:33\u00a0<tmortagne>\u00a0the quickest \"make thing work more or less\" I can think of its parser/serialize anygthing inside the <ac:rich-text-body> and send that as content  \n14:33\u00a0<tmortagne>\u00a0we can then create a jira issue about how to properly support this rich macro content  \n14:34\u00a0<camil7>\u00a0would a pull request for soemthing like this be appreciated, or should I keep that to my own ?  \n14:34\u00a0<tmortagne>\u00a0camil7: I would apply it, it's better than having a packer totally impossible to import  \n14:35\u00a0<tmortagne>\u00a0package  \n14:35\u00a0<tmortagne>\u00a0most macro are broken right now anyway since they need to be converter to XWiki equivalent  \n14:35\u00a0<tmortagne>\u00a0so it's not like it was making things worst  \n14:36\u00a0<camil7>\u00a0ah, o, then I will try to see if I can get the minimal support working  \n14:36\u00a0<tmortagne>\u00a0best would probably be to make this parse/serialize tool a method in org.xwiki.xml.stax.StAXUtils  \n14:59\u00a0<camil7>\u00a0ah, someone found the issue with slashes in path elements - which tomcat for the hell does not support :)  \n15:01\u00a0<tmortagne>\u00a0yea tomcat is a pain with that  \n15:01\u00a0<tmortagne>\u00a0we get complain since a while about that issue  \n15:08\u00a0<camil7>\u00a0it is a \"security issue\", so do not expect it to be solved at any time  \n15:10\u00a0<tmortagne>\u00a0yes I guess  \n15:28\u00a0<camil7>\u00a0jenkins seem to have a hangover from yesterdays party ;)  \n15:31\u00a0<camil7>\u00a0ah, now the page loading ...  \n15:38\u00a0<tmortagne>\u00a0jenkins is often is a weird blocked sate since some time now  \n15:38\u00a0<GuillaumeF>\u00a0has joined #xwiki  \n15:45\u00a0<tmortagne>\u00a0camil7: should be a bit easier now to know \"what the hell should I put in that target field\" waiting for a more advanced UI ;)  \n15:45\u00a0<camil7>\u00a0ah, ok, trying ...  \n15:48\u00a0<tmortagne>\u00a0not just yet  \n15:48\u00a0<tmortagne>\u00a0now you can  \n15:49\u00a0<camil7>\u00a0ah, there is UI now, ok  \n15:59\u00a0<camil7>\u00a0ah, yes, it works! I was a bit confused because it now \"downloads\" an empty file, if file: target is given, beside of writing the output to the file - so I first thought I failed to make it working, until I checkd with the file system :)  \n16:14\u00a0<camil7>\u00a0narf, got a \u00a0java.lang.reflect.UndeclaredThrowableException in the converter job, which the UI does not allow be to render \" DefaultVelocityEngine \u00a0- Cannot retrieve method getCause from object of class java.lang.reflect.UndeclaredThrowableException due to security restrictions.\" \u00a0\u00a0Seems I should better build everything from scratch  \n16:16\u00a0<tmortagne>\u00a0camil7: ha wait there is a but it seems  \n16:18\u00a0<camil7>\u00a0I cannot get at the stack trace it seems, but anyway I guess I should not just compile single \\*.jar and copy them in the jetty, does not sound like \"best practice\" \u00a0;)  \n16:22\u00a0<evalica1>\u00a0has quit  \n16:22\u00a0<tmortagne>\u00a0camil7: I use http://dev.xwiki.org/xwiki/bin/edit/Community/DebugXEWithEclipse myself to debug UI  \n16:23\u00a0<tmortagne>\u00a0but this require using Eclipse  \n16:24\u00a0<camil7>\u00a0yes, I have Eclipse here, I just did not set up the debugger (really ...)  \n17:09\u00a0<vrachieru>\u00a0has quit  \n17:24\u00a0<vmassol>\u00a0sburjan/msmeria: could you update the testing section of http://www.xwiki.org/xwiki/bin/view/ReleaseNotes/ReleaseNotesXWiki53 ?  \n17:24\u00a0<vmassol>\u00a0right now it doesn't represent the reality and contains a broken link  \n17:32\u00a0<msmeria>\u00a0has quit  \n17:34\u00a0<tekzilla>\u00a0has quit  \n17:34\u00a0<tekzilla>\u00a0has joined #xwiki  \n17:37\u00a0<Denis>\u00a0has quit  \n17:38\u00a0<Denis>\u00a0has joined #xwiki  \n17:39\u00a0<camil7>\u00a0tmortagne: thanks for the merge, but darn, the fix for XRENDERING-325 breaks the tests in \u00a0xwiki-platform-wikistream .. I forgot about them, tryng to fix now  \n17:40\u00a0<tmortagne>\u00a0right  \n17:41\u00a0<tmortagne>\u00a0camil7: just created XRENDERING-326 for... later  \n17:41\u00a0<camil7>\u00a0ah, yes, ok  \n17:41\u00a0<tmortagne>\u00a0so that I don't forget about this issue  \n17:49\u00a0<Denis>\u00a0has quit  \n17:51\u00a0<j-simard>\u00a0has quit  \n17:53\u00a0<sburjan>\u00a0has quit  \n17:54\u00a0<Denis>\u00a0has joined #xwiki  \n18:04\u00a0<mflorea>\u00a0has quit  \n18:18\u00a0<lucaa1>\u00a0has joined #xwiki  \n18:19\u00a0<lucaa>\u00a0has quit  \n18:29\u00a0<tmortagne>\u00a0has quit  \n18:35\u00a0<GuillaumeF>\u00a0has quit  \n19:10\u00a0<camil7>\u00a0has left #xwiki  \n19:19\u00a0<sdumitriu1>\u00a0has joined #xwiki  \n19:27\u00a0<Slashman>\u00a0has quit  \n20:12\u00a0<vmassol>\u00a0has quit  \n20:22\u00a0<vmassol>\u00a0has joined #xwiki  \n20:26\u00a0<vmassol>\u00a0has quit  \n20:26\u00a0<lucaa1>\u00a0has quit  \n20:27\u00a0<vmassol>\u00a0has joined #xwiki  \n20:47\u00a0<cjd>\u00a0has quit  \n23:30\u00a0<vmassol>\u00a0has quit  \n23:30\u00a0<Denis>\u00a0has quit  \n23:32\u00a0<sdumitriu1>\u00a0has quit  \n23:33\u00a0<GuillaumeF>\u00a0has joined #xwiki  \n23:59\u00a0<vmassol>\u00a0has joined #xwiki\n"}