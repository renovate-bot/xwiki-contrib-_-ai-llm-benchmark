{"id": "dev:IRC.xwikiArchive20100330", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100330", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nCalebJamesDeLisl - (00:00): It seems that if one has the choice of making a proposal or a vote, the proposal is a better idea since they don't block themselves if nobody takes an interest.  \nvmassol left at 00:01 (Quit: Leaving.  \nlucaa - (00:01): yes, but it's about the importance of the changes and how confident you feel about them. I'm not very much pro voting all kind of things, because we endup having a lot of votes that we don't have time to answer  \nCalebJamesDeLisl - (00:03): I think API is the most important thing there is and that's why I kept proposing this since the 15th hoping to get some response.  \nvmassol joined #xwiki at 00:04  \nvmassol - (00:05): CalebJamesDeLisl: back, couldn't resist answering that last comment  \nvmassol - (00:05): :)  \nCalebJamesDeLisl - (00:05): :)  \nCalebJamesDeLisl - (00:05): I know the feeling.  \nvmassol - (00:05): a vote shouldn't be considered as something blocking you  \nvmassol - (00:05): it's quite the opposite  \nlucaa - (00:05): \"somebody's wrong on the internet\"  \nvmassol - (00:05): when you do a vote it's because you're asking for advice from people  \nvmassol - (00:06): you want to be sure you're doing it right  \nvmassol - (00:06): since if you don't you'll have to suffer the consequences (and the others too)  \nCalebJamesDeLisl - (00:07): That makes sense, perhaps this should be codified in the committership page. You can send the vote for that one ;)  \nvmassol - (00:07): ;)  \nCalebJamesDeLisl - (00:07): You have my +1  \nCalebJamesDeLisl - (00:07): So (in my understanding) it's committed as a proposal if the vote is ignored.  \nvmassol - (00:07): ok really going to be now  \nvmassol - (00:08): I'll let you guys figure out the solution to all this!  \nCalebJamesDeLisl - (00:08): Good night.  \nvmassol left at 00:08 (Client Quit  \nCalebJamesDeLisl - (00:16): going to make pizza...  \nlucaa - (00:16): have fun Caleb  \nDV left at 00:17 (Ping timeout: 276 seconds  \nCalebJamesDeLisl - (00:34): Back. In the common law there is a term called acquiescence. When one notices a potential infringement of their rights and remains silent for a given amount of time, they lose their right to challenge it. ( http://en.wikipedia.org/wiki/Acquiescence )  \nCalebJamesDeLisl - (00:36): An analogy to this would be to say if one does not reply to a vote in a reasonable amount of time (does not even ask for more information), then they cannot ask for the change to be removed later on.  \nCalebJamesDeLisl - (00:38): Where lazy consensus does not specify that the lazy consentors must have notice of the pending change and they retain the right to demand that the change is removed.  \nCalebJamesDeLisl - (00:41): In the doctrine of acquiescence, it is central that the \"lazy consentors\" must have notice of the pending change and be given reasonable time to request further information or give their -1. But once the change is made, they give up their right to demand it's removal.  \nCalebJamesDeLisl - (00:43): I don't see other committors having trouble getting things passed so this is probably not useful in our case, but it's something to consider.  \nsdumitriu - (00:50): Caleb, but another committer can raise a problem that convinces you to revert  \nsdumitriu - (00:51): Like, if somebody were to come in two weeks and say Stop, this change is a major security hole, you would revert it, right?  \nCalebJamesDeLisl - (00:51): Of course, but the implied right which comes with lazy consensus would not be there.  \nCalebJamesDeLisl - (00:53): And nothing is ever above another vote, so even if our rogue committor felt attached to his security hole, he could be overridden by a vote :)  \nCalebJamesDeLisl - (00:56): Pizza's ready.  \nsdumitriu - (00:56): Share?  \njvelociter joined #xwiki at 01:18  \nanamarias left at 02:08 (Quit: anamarias  \nnickless joined #xwiki at 02:14  \nnickless left at 02:42 (Ping timeout: 264 seconds  \nbbc581 left #xwiki at 03:03  \ncypromis left at 03:56 (Remote host closed the connection  \ncypromis joined #xwiki at 03:56  \nDV joined #xwiki at 04:23  \nDV left at 04:24 (Read error: Connection reset by peer  \nsdumitriu left at 04:39 (Ping timeout: 246 seconds  \nDenis left at 07:01 (Read error: Connection reset by peer  \nmflorea joined #xwiki at 07:01  \nDenis joined #xwiki at 07:08  \nplunden left at 07:38 (Ping timeout: 276 seconds  \nplunden joined #xwiki at 07:46  \nvmassol joined #xwiki at 07:58  \nDV joined #xwiki at 07:59  \nDV\\_ joined #xwiki at 08:04  \nCalebJamesDeLisl - (08:05): Good morning, I found I can add some protection to the mail server by storing the smtp username and password in FriendInviterConfig which can be set only viewable by admins but it will duplicate the smtp username and password fields in XWikiPreferences.  \nDV left at 08:05 (Ping timeout: 260 seconds  \nDenis - (08:15): Hi Caleb, ?1, this have to a done in a global way, I see no point to have separate settings. The global settings should be improved however.  \nDenis - (08:15): s/to a done/to be done/  \nCalebJamesDeLisl - (08:16): The pb is that XWikiPreferences has to be visible to everyone, so that username and password is public.  \nCalebJamesDeLisl - (08:17): I do see a use case for having a different from address for the inviter even if it is required to use the same relay.  \nDenis - (08:18): for the from adresse I agree, this has nothing to do with the username/password securing the server  \nCalebJamesDeLisl - (08:18): How about if the fields are there but if not filled they default to the global values?  \nDenis - (08:19): to stay secure, the best is to not have to use one, and to secure the access to the smtp server using other methods  \nDenis - (08:20): IMHO, I see no point to have more than one  \nDenis - (08:20): if you want, these could be also in xwiki.cfg AFAIK  \nCalebJamesDeLisl - (08:21): see: http://jira.xwiki.org/jira/browse/XPMAIL-7  \nDenis - (08:22): currently, I cannot get at it, sorry, thomas has not finish the work on JIRA for my access I think  \nCalebJamesDeLisl - (08:27): Suppose the admins are using an external mail service and want to send from different addresses depending on the type of mail, in that case the username and password would have to be different.  \nplunden1 joined #xwiki at 08:56  \nDenis - (08:57): that makes sense, but then it should be an override of the default global settings  \nCalebJamesDeLisl - (09:02): That's what I was thinking, maybe I can hide the fields in the configuration page then scroll them into view when an \"advanced\" tab is clicked.  \nCalebJamesDeLisl - (09:04): Something else I thought of re configuration, There are things other than configuration which we want to save on upgrade eg: the document containing all of the stored email objects.  \nDenis - (09:05): but is that one installed ?  \nCalebJamesDeLisl - (09:06): I suppose ot could be created on the fly, it's rights would have to be set so only admins could view.  \nCalebJamesDeLisl - (09:06): s/ot/it  \nCalebJamesDeLisl - (09:07): I think it would be nice to be able to tag different documents with group names then export all document in a given group to xar.  \nDenis - (09:11): grouping documents for export is currently a function of the appmanager, but it could be improved, I feel this is something that should be in the new one  \nCalebJamesDeLisl - (09:11): The new one?  \nDenis - (09:12): http://dev.xwiki.org/xwiki/bin/view/Design/ExtensionManager  \nCalebJamesDeLisl - (09:14): Ahh yes, RedHat package manager for XWiki.  \nCalebJamesDeLisl - (09:16): RPM supports the idea that a package can list itself as an upgrade for another package and if it isn't an upgrade but they have files by the same name, it won't let you install both at once.  \nsilviar joined #xwiki at 09:23  \nanamarias joined #xwiki at 09:31  \nvmassol left at 09:39 (Quit: Leaving.  \nvmassol joined #xwiki at 09:42  \nDV\\_ left at 09:46 (Quit: Leaving  \nDV joined #xwiki at 09:47  \narkub joined #xwiki at 10:02  \nDenis left at 10:05 (Quit: Leaving.  \nlucaa left at 10:10 (Quit: Leaving.  \nflorinciu joined #xwiki at 10:15  \njvdrean joined #xwiki at 10:16  \nkibahop left #xwiki at 10:18  \ngvallarelli joined #xwiki at 10:27  \ngvallarelli - (10:27): hello and good morning  \nglerouge joined #xwiki at 10:28  \nglerouge left at 10:34 (Quit: Leaving.  \njvelociter - (10:37): good morning  \nDenis joined #xwiki at 10:37  \nlucaa joined #xwiki at 10:45  \nplunden left at 10:47 (Ping timeout: 258 seconds  \nmflorea left at 10:48 (Quit: Leaving.  \nanamarias - (10:54): hi  \nanamarias - (10:54): I have a question concerning user rights  \nanamarias - (10:54): so, I have:  \nanamarias - (10:54): - a livetable with pages in space X  \nanamarias - (10:54): - user U which belongs to XWikiAllGroup  \nanamarias - (10:54): Question:  \nanamarias - (10:54): - what rights should user U have to see the actions column for each of the pages in the livetable?  \nvmassol - (10:56): anamarias: hi, no idea but have you checked the code ?  \nvmassol - (10:57): should be either in Livetable\\*Result or in macros.vm  \nanamarias - (10:57): code where?  \nanamarias - (10:57): ah  \nanamarias - (10:57): I know it should be admin, but I can't remember on what exactly  \nvmassol - (10:59): http://localhost:8080/xwiki/bin/edit/XWiki/LiveTableResultsMacros?&editor=wiki  \ntmortagne joined #xwiki at 11:00  \nvmassol - (11:01): anamarias: actualy I think the checks are in macros.vm  \nvmassol - (11:01): search for livetable in macros.vm  \nanamarias - (11:03): thanks, anyways, I'm sure it's not a problem from our side  \nlucaa - (11:03): anamarias: you can only be admin on a wiki  \nlucaa - (11:03): not on space or doc  \nvmassol - (11:04): tmortagne: I'm not super happy with my code for LinkReferenceSerializer but I don't see a solution apart from a big refactoring to make renderers components  \nvmassol - (11:04): actually I could pass a component manager instance around too  \ntmortagne - (11:04): vmassol: well renderer are components :) i mean sub renderer ?  \nvmassol - (11:04): a bit heavy but offers CI  \nvmassol - (11:05): tmortagne: for ex XWikiSyntaxChainingRenderer is not a component  \nanamarias - (11:06): lucaa: can't you administer just a particular space or page :( ?  \nanamarias - (11:06): I need to give users ability to delete or rename just some of the pages in particular spaces  \nanamarias - (11:06): isn't this possbile?  \nvmassol - (11:06): tmortagne: passing a CM is probably the best solution unless we make them components  \nlucaa - (11:07): anamarias: you can give the delete right to the users on that space  \nlucaa - (11:07): and edit I think, to rename (i'm not sure)  \nlucaa - (11:07): admin is to be interpreted as administration in general, not only the sum of delete & edit & all  \nanamarias - (11:08): ah :(  \nlucaa - (11:08): that's why it's a global right, not a space or page one  \nlucaa - (11:08): what would administer page mean?  \ntmortagne - (11:08): vmassol: passing CM seems ok  \nvmassol - (11:08): tmortagne: ok doing it  \nnickless joined #xwiki at 11:09  \nlucaa - (11:10): CalebJamesDeLisl: this should have a fix version set \u00a0XWIKI-5041  \nCalebJamesDeLisl - (11:11): Thanks, I forgot.  \nvmassol - (11:11): tmortagne: only issue is handling exceptions when doing a lookup from CM\u2026 hmmm\u2026. I'll pass the looked up instance instead of the CM I think  \ntmortagne - (11:13): if you want to fail lookup the renderer when one of its requirement s not found indeed  \nnickless left at 11:15 (Read error: Operation timed out  \nflorinciu left at 11:19 (Read error: Connection reset by peer  \nEnygma` joined #xwiki at 11:31  \nanamarias - (11:34): can special characters be used in document names? like \\*gar\u00e7on or \u00e9talage\\* ?  \nlucaa - (11:36): anamarias: yes, they should. However the number of bugs could depend on the version you are  \njvelociter - (11:36): tmortagne: the hot database re-connect is very pleasant, kudos !  \ntmortagne - (11:36): jvelociter: you mean vmassol  \njvelociter - (11:37): ah right, vmassol, sorry  \nanamarias - (11:37): lucaa: it's 2.0.2. how many :P ?  \njvelociter - (11:37): kudos vmassol :)  \nvmassol - (11:37): jvelociter: hehe cool, glad you like it ;)  \nlucaa - (11:38): anamarias: :) I couldn't tell you an exact number but probably more than in the recent versions  \nlucaa - (11:38): however a lot better than older version iirc. Now, are you having problems with that or you just asked to make sure?  \nanamarias - (11:38): how can I identify those bugs on jira? (what filters)  \nlucaa - (11:39): you can do a search  \nanamarias - (11:39): there are problems, but not sure exactly which yet, as they're not completely specified :p  \nlucaa - (11:39): right  \nlucaa - (11:40): well, rule is it should work, unless you hit a bug  \nflorinciu joined #xwiki at 11:40  \nlucaa - (11:41): I'd say the right approach is to identify bugs you have and then try to see if they're reported and fixed in recent versions rather than the other way around  \nanamarias - (11:43): yup, you're right, better this way  \nanamarias left at 11:48 (Quit: anamarias  \nCalebJamesDeLisl - (11:52): Nap time, need rest before trying to install qmail.  \nmflorea joined #xwiki at 11:54  \nevalica joined #xwiki at 11:54  \nanamarias joined #xwiki at 12:02  \nsdumitriu joined #xwiki at 12:10  \ntmortagne - (12:11): I'm starting to prepare the release plan and will start the 2.2.4 release soon  \nvmassol - (12:12): tmortagne: fyi what I committed doesn't fix the wysiwyg issue re special chars  \nvmassol - (12:12): mflorea or lucaa still need to call it  \ntmortagne - (12:12): hmm  \nvmassol - (12:12): it's not much, probably a 2 lines change  \ntmortagne - (12:12): we could loose things if the WYSIWYG does not use it  \nvmassol - (12:13): it's generating invalid links  \nvmassol - (12:13): for example for a page named \"page.\" it will generate  \nvmassol - (12:13): [[label>>space.page.]]  \nvmassol - (12:13): instead of [[label>>space.page\\.]]  \nvmassol - (12:14): actually I think the pb is that anca isn't calling the server  \ntmortagne - (12:14): WYSIWYG does no already suport the document reference escaping ?  \ntmortagne - (12:14): you just added escaping support for link reference chars like @/?/&  \nvmassol - (12:14): she's recoded reference handlung  \nvmassol - (12:14): so this would need to be removed and the real code called  \nvmassol - (12:14): lucaa: can you confirm?  \nvmassol - (12:14): (I talked to mflorea yesterday; he was supposed to talk to you)  \nvmassol - (12:15): tmortagne: yes there were 2 problems  \nlucaa - (12:15): vmassol: yes I did recode it, client side  \nlucaa - (12:15): and so yes, it need to be updated to handle these cases  \nvmassol - (12:15): (actually 4 in total but the other 2 are minor compared to this)  \nmflorea - (12:15): vmassol, tmortagne: yes, it's not that easy to fix this (not two lines anyway)  \nvmassol - (12:15): lucaa: I'd rather we don't recode stuff  \nvmassol - (12:15): since it causes these kinds of issues  \nvmassol - (12:16): (the wysiwyg editor is now broken because of duplicate code)  \nlucaa - (12:16): vmassol: if it was only a matter of preference I wouldn't have done it either  \ntmortagne - (12:16): so we already have escaping issue compared to rendering in 2.2.3 ?  \nvmassol - (12:16): yes  \ntmortagne - (12:16): ok so less critical to suport what you just added then  \ntmortagne - (12:17): but still not very nice, i did not know we had this issue  \nvmassol - (12:17): sure, there are now 2 bugs instead of one ;)  \nvmassol - (12:17): I didn't either know either  \nvmassol - (12:17): I was suprised to discover it  \nlucaa - (12:17): mflorea: you want to talk about it?  \njvdrean left at 12:18 (Quit: Leaving.  \nmflorea - (12:19): vmassol: it can't be fix for 2.2.4.  \nmflorea - (12:19): lucaa: wdym?  \nlucaa - (12:19): if you want to talk about how to go to fix this thing, with client side references for the wysiwyg  \nvmassol - (12:19): tmortagne: should I still merged my code? hmmm  \nvmassol - (12:20): I guess we might still have a 2.2.5  \ntmortagne - (12:20): vmassol: i already committed the escaping handling so better merge the rest of the code  \nmflorea - (12:20): lucaa: not now. I'd have to look over the code first  \nvmassol - (12:21): I'll merge against the issue but it won't be closed since marius won't have the time to fix it  \nvmassol - (12:21): I think it's ok since it doesn't add anything user-related  \nlucaa - (12:21): mflorea: ok, how you want. I could tell you some stuff about it  \ntmortagne - (12:21): vmassol: and yes the WYSIWYG part should be fixed in 2.2.5 if possible  \nvmassol - (12:21): (otherwise we need a new issue but it's probably overkill)  \ntmortagne - (12:22): it change the way the source is parsed, it's pretty user related to me  \ntmortagne - (12:22): IMO there should be another issue for the WYSIWYG  \nvmassol - (12:22): I'm talking about the new internal link reference serialize  \nvmassol - (12:22): this is not user related  \nvmassol - (12:22): it's an internal refactoring  \ntmortagne - (12:22): sure this one is part of the existing issue  \nvmassol - (12:22): (except for the little detail that since it's a component the interface is exposed)  \ntmortagne - (12:22): but the issue should then be closed  \nvmassol - (12:23): err?  \nmflorea - (12:23): tmortagne: sure, we need a new issue for handling the escape on the wysiwyg side  \nmflorea - (12:23): I'll handle that  \nvmassol - (12:23): mflorea, tmortagne: the issue is ther already  \nvmassol - (12:23): marius I4v epinged you on skype this morning  \nmflorea - (12:23): where?  \ntmortagne - (12:23): vmassol: you commmitted stuff for 2.2.4 et 2.3M2 i don't see why it should not be closed  \nvmassol - (12:23): because we don't need issues for internal refactorings  \nmflorea - (12:23): vmassol: right, sorry  \nvmassol - (12:24): now ther's the exception of the new interface  \nvmassol - (12:24): but it's technical  \nvmassol - (12:24): so we can choose not to create a new issue or we can create one  \ntmortagne - (12:24): vmassol: your issue is not only about link reference serialize  \nvmassol - (12:24): (I can do it although it's a bit overkill)  \ntmortagne - (12:24): you change the way syntaxe is parsede  \ntmortagne - (12:24): again  \nvmassol - (12:24): errr?  \nvmassol - (12:24): I didn't  \nvmassol - (12:24): you're mixing issues  \ntmortagne - (12:24): you added escaping support  \nvmassol - (12:24): nope  \nvmassol - (12:24): I only introduced a serialize  \nvmassol - (12:24): serializer  \ntmortagne - (12:25): XWIKI-4957: Allow entering @, ? and # characters in link references  \ntmortagne - (12:25): this is committed in 2.2.4  \nvmassol - (12:25): this one is old  \nvmassol - (12:25): and closed  \ntmortagne - (12:25): that's the one i'm talking about  \nvmassol - (12:25): why would you want to reopne it?  \ntmortagne - (12:25): it's you that dont want to close it...  \nvmassol - (12:25): it's ALREADY \u00a0closed  \nvmassol - (12:25): wy would I want to reopne it?  \nvmassol - (12:26): mix up  \nvmassol - (12:26): apparently  \nvmassol - (12:26): I'm talking about the wysiwyg issue  \nvmassol - (12:26): from the beginning  \nvmassol - (12:26): the one I created this morning  \nvmassol - (12:26): against which I committed my code this morning  \ntmortagne - (12:26): vmassol: for me the link refactoring was part of the same issue  \nvmassol - (12:26): and against which I'll commit in a few seconds in the 2.2. branch  \nmflorea - (12:26): http://jira.xwiki.org/jira/browse/XWIKI-5066  \ntmortagne - (12:26): you created an new issue whcih is useless  \ntmortagne - (12:26): i did not seen that  \nvmassol - (12:27): ok  \nvmassol - (12:27): it's good I did that  \nvmassol - (12:27): since we cannot close that new issue  \ntmortagne - (12:27): you committed stuff for it so we ill have to close it...  \nvmassol - (12:27): (which is for wysiwyg btw)  \nvmassol - (12:27): nope  \nvmassol - (12:27): this is what I explained above  \nvmassol - (12:28): it's a choice  \nvmassol - (12:28): I could have put no issues at all  \nvmassol - (12:28): (in other words)  \nvmassol - (12:28): depedns if we want to be 100% strict or not  \nvmassol - (12:29): I could svn edit the commit message  \nvmassol - (12:30): and put it against 4957  \nvmassol - (12:30): ok I'll do that  \nvmassol - (12:33): tmortagne: done  \ntmortagne - (12:38): ok  \nbbc581 joined #xwiki at 12:43  \ntmortagne - (12:43): is anyone has something to commit before 2.2.4 ? If not i'm starting  \nvmassol - (12:44): npm: were you able to test 2.2.4 in the end?  \nvmassol - (12:44): tmortagne: nothing from me  \nvmassol - (12:44): tmortagne: there are pb with renames and special chars but that'll be in 2.2.5  \ntmortagne - (12:44): all: don't forget to close issues you already commmitted  \nsdumitriu - (12:48): tmortagne: I would like to commit something, but I won't have time until tonight  \nsdumitriu - (12:48): So, if you're in a hurry, go ahead with the release  \ntmortagne - (12:48): sdumitriu: is it critical ? Otherwise we already know we will release a 2.0.5  \ntmortagne - (12:48): 2.2.5  \nvmassol - (12:48): 2.2.5  \nsdumitriu - (12:48): Well, Ludo needs it before the end of the month  \nsdumitriu - (12:49): (The upgrade for css4j)  \nvmassol - (12:49): nope  \nvmassol - (12:49): well  \nvmassol - (12:49): he also needs 2.2.4 before tomorrow  \nvmassol - (12:49): so indeed that could go in a 2.2.5  \nvmassol - (12:50): err  \nvmassol - (12:50): you mean end of march or april?  \nvmassol - (12:50): because we're already at end of march :)  \nvmassol - (12:50): so we need to talk to him then  \njvdrean joined #xwiki at 12:54  \nbbc581 left at 12:58 (Ping timeout: 264 seconds  \nsdumitriu - (12:59): Actually I don't remember which month  \ntmortagne - (13:07): sdumitriu, vmassol: ludo said it was just a nice to have  \ntmortagne - (13:08): (he patched for his needs)  \ntmortagne - (13:08): so i'm starting the release  \nvmassol - (13:15): ok  \nflorinciu left at 13:21 (Read error: Connection reset by peer  \nflorinciu joined #xwiki at 13:29  \nvmassol left at 13:31 (Quit: Leaving.  \nvmassol joined #xwiki at 13:31  \nvmassol - (14:04): sdumitriu: shouldn't proposal 12A for the logo be discarded since it's very close to the xwiki.com logo?  \nsdumitriu - (14:05): Maybe  \nvmassol - (14:05): re proposal Y I'm not sure we should discard it  \nvmassol - (14:06): (we have an X in our name which justifies it)  \nshelan\\_ joined #xwiki at 14:19  \nDV left at 14:31 (Read error: Connection reset by peer  \njvdrean left at 14:37 (Ping timeout: 268 seconds  \narkub left at 14:37 (Ping timeout: 268 seconds  \nanamarias - (14:40): is there a way to handle exceptions thrown from components and scripts, like for example: by configuration a global exception handler in struts or so to send email when exceptions are thrown?  \njvdrean joined #xwiki at 14:43  \nKermitTheFragger joined #xwiki at 14:57  \nEnygma` left at 14:59 (Quit: Leaving.  \nsdumitriu - (15:02): \"description\" : \"\", \"description\\_value\" : \"${fieldvalue}\",  \nsdumitriu - (15:02): Sorry, wrong window  \narkub joined #xwiki at 15:03  \nshelan\\_ left at 15:08 (Quit: Leaving  \nKermitTheFragger left at 15:16 (Quit: Leaving  \nflorinciu left at 15:21 (Read error: Connection reset by peer  \nxwikibot joined #xwiki at 18:07  \nvmassol - (18:07): we just fixed a bug  \nlucaa - (18:07): http://jira.xwiki.org/jira/browse/XE-632  \nvmassol - (18:07): standalone/inline macros  \njvelociter - (18:07): ok, it's a bug  \nDV left at 18:09 (Ping timeout: 260 seconds  \ngvallarelli joined #xwiki at 18:11  \nDV joined #xwiki at 18:12  \njvelociter - (18:14): I think I'll need some assistance from a rendering wizzard  \njvelociter - (18:15): when I write http://pastebin.com/XZeDhgTt  \njvelociter - (18:15): the only column is a standalone direct children of the section macro  \njvelociter - (18:17): and if I write http://pastebin.com/eQBtZBU4  \njvelociter - (18:18): I have a paragraph as direct children of section, then a macro block, followed by a new line block, then followed by the second macro block  \njvelociter - (18:19): Is this the expected result ?  \nlucaa - (18:19): well I guess wjhat you want is 2 columns in a section, right?  \nlucaa - (18:19): try with an empty line between the 2 column macors  \nlucaa - (18:20): </guessing>  \njvelociter - (18:20): what my macro expected so far, was standalone macro blocks (column) as direct children of the section macro  \nlucaa - (18:20): ok, then try with the empty line  \njvelociter - (18:21): now I have a paragraph that comes in-between, so the macro fails  \njvelociter - (18:21): right, it works  \njvelociter - (18:21): cool  \nlucaa - (18:21): they're not standalone as you pasted because you need an empty line to say that the first unit ends, imagine they were 2 paragraphs, you'd need to have an empty line in between  \njvelociter - (18:22): yep I think I get it  \nlucaa - (18:22): I know it's hard :)  \nlucaa - (18:22): (I was as lost myself too)  \nnpm joined #xwiki at 18:24  \njvelociter - (18:32): hmm. should the new lines be needed after a block that is at the end of the document to make it standalone ?  \njvelociter - (18:32): If I have {{/section}}\\n -> it's inline  \njvelociter - (18:32): I need {{/section}}\\n\\n  \njvelociter - (18:32): to have it standalone, when at the end of the doc  \njvelociter - (18:32): it feels weird  \njvelociter - (18:32): (vmassol lucaa )  \nvmassol - (18:33): anthing that doesn't have 2 NL is inline  \nlucaa - (18:33): it only depends what's before him  \nlucaa - (18:33): it  \nvmassol - (18:33): (2 consecutive NLs that is)  \nvmassol - (18:33): it's a pretty simple rule actually :)  \njvelociter - (18:33): yes the rule is simple  \njvelociter - (18:34): just feels a bit odd at the end of the doc, but that's probably some getting use to needed  \nvmassol - (18:34): oh the end of the doc is causing pb?  \nvmassol - (18:34): if you have:  \njvelociter - (18:34): no, it works, but it feels odd to be forced to have 2 NL when at the end of the doc  \nlucaa - (18:34): well the end of the doc should be a bug. What's before the macro?  \nvmassol - (18:34): this is a bug for me  \nvmassol - (18:34): if the following doesn't work it's a bug for me  \njvelociter - (18:34): yes, it feels like a bug  \nvmassol - (18:35): NL + NL + {{macro/}} + EOF  \nvmassol - (18:35): in this ex the macro is standalone  \njvelociter - (18:35): yes that's what I have  \nvmassol - (18:35): now for NL + NL + {{macro/}} + NL + EOF is questionable  \nvmassol - (18:35): tmortagne: ping  \njvelociter - (18:36): test a wait  \nvmassol - (18:36): (he's in a meeting)  \njvelociter - (18:36): I have a NL before EOF indeed  \njvelociter - (18:36): let me test w/o  \nvmassol - (18:36): we can ask him when h'es back  \njvelociter - (18:36): yers he's busy, I have him on the screen :D  \nvmassol - (18:36): :)  \njvelociter - (18:37): vmassol: OK with NL before EOF it works fine  \njvelociter - (18:37): it makes sense actually  \nvmassol - (18:37): err?  \njvelociter - (18:38): I don't think one NL then EOF should be correct  \nvmassol - (18:38): with no new line you mean?  \njvelociter - (18:38): s/with/without/  \njvelociter - (18:38): yes  \nvmassol - (18:38): ok  \nvmassol - (18:38): indeed  \nlucaa - (18:38): huh?  \nvmassol - (18:38): it's still questionable I think  \nvmassol - (18:38): we need to check with thomas to be sure that's what we wantr  \nvmassol - (18:38): want  \njvelociter - (18:38): yes the thing is leaving one NL is a natural thing  \nsdumitriu - (18:38): IMO, the syntax is getting too fragile  \nlucaa - (18:39): you mean I need to do  \nlucaa - (18:39): {{thml}}myhtml{{/html}}NL EOF to have that html as standalone?  \nvmassol - (18:39): it's \\*\\*always\\*\\* been like this  \nvmassol - (18:39): it has not changed a bit  \nvmassol - (18:39): (in xwiki/2.0 that is)  \nsdumitriu - (18:39): Then why is it that I've seen tens of commits with \"bad usage of macros\"?  \nvmassol - (18:40): because all code was buggy  \nsdumitriu - (18:40): Nobody really knowh how to write a \"good\" usage of macro?  \nvmassol - (18:40): if you look at the syntax definition  \nvmassol - (18:40): it has not changed at all  \nvmassol - (18:40): I don't agree with you sergiu  \nsdumitriu - (18:40): If not even we, hard core developers, know how to use a macro, how can we expect simple users to know this?  \nvmassol - (18:40): sdumitriu: it's been \"fragile\" the moment we decided NL are significant  \nvmassol - (18:41): all this is only the consequence  \nvmassol - (18:41): and I still think significant NL is good  \nlucaa - (18:42): vmassol: you have to admit it's a bit strange we have to explain this new line thingy to all developers trying to write a macro, though we believe we know our syntax  \nlucaa - (18:42): it might be that because of the bug we got bad habits, but it's still strange  \nvmassol - (18:42): lucaa: developers are the worse kind  \nvmassol - (18:42): :)  \nvmassol - (18:42): they never read doc  \nvmassol - (18:42): if you read the syntax doc you should know ;)  \nlucaa - (18:42): I know the syntax, that is why I understand what needs to be done when I'm being explained  \nvmassol - (18:43): the only reason it's complex  \nvmassol - (18:43): is because we want to be able to enter all use cases  \nvmassol - (18:43): if for ex we say that we never want two inline macros following each other  \nvmassol - (18:43): then it's easy to cut corners  \nvmassol - (18:43): but I can bet you we'll want it  \nlucaa - (18:43): which is why sergiu calls it fragile: it's complex with hard rules, which makes mistakes easy to make  \nvmassol - (18:43): no  \nvmassol - (18:44): the rule is SIMPL  \nlucaa - (18:44): the good part is that we have a good wysiwyg :)  \nvmassol - (18:44): it cannot be more simple  \nvmassol - (18:44): syntax 1.0 rules were hard  \nvmassol - (18:44): but 2.0 rules are simple  \nvmassol - (18:44): repeat after me!  \nvmassol - (18:44): :)  \nvmassol - (18:44): the only pb is that people are not logical  \nvmassol - (18:44): so they can't apply a simple rule  \nvmassol - (18:44): but it's hard to fix this  \nvmassol - (18:44): anyway  \nlucaa - (18:45): vmassol: we're talking about myself and jvelociter now  \nlucaa - (18:45): who couldn't understand how this works  \nvmassol - (18:45): if one of you has a solution please let me know  \njvelociter - (18:45): lol vmassol  \nlucaa - (18:45): from the jira issue  \nvmassol - (18:45): lucaa: it's only because you got a bad habit  \nvmassol - (18:45): IMO  \nvmassol - (18:45): dunno why you got that habit btw :)  \nvmassol - (18:46): the syntax is fragile indeed int he sense  \nvmassol - (18:46): that every NL counts  \nsdumitriu - (18:46): Maybe it was a bug, but I couldn't make out a logical rule for WHEN is a macro considered inline and when not  \njvelociter - (18:46): well I think the rules are simple, but not easy to guess  \njvelociter - (18:46): once you know them it's ok  \nvmassol - (18:46): but that's the choice we made  \nvmassol - (18:46): we cannot change it  \nvmassol - (18:46): sdumitriu: it's simple  \nvmassol - (18:46): 2 consecutive NLs makes stuff standalone  \nvmassol - (18:46): that's all there is  \nsdumitriu - (18:47): A velocity macro was considered inline or block depending on some content it had inside, not related to newlines before or after  \nvmassol - (18:47): nope  \nvmassol - (18:47): never  \nsdumitriu - (18:47): EVER  \nsdumitriu - (18:47): It happened to me more than once  \nvmassol - (18:47): that would be simply impossible to implement  \nsdumitriu - (18:47): I know  \nsdumitriu - (18:47): It's illogical  \nsdumitriu - (18:47): But it happens  \nvmassol - (18:47): it's impossible to write a XDOM parser with that  \nsdumitriu - (18:47): As I said, \"Maybe it was a bug\"  \nvmassol - (18:47): yes  \nvmassol - (18:48): we actually raised it from the beginning  \nvmassol - (18:48): but the pb is that neither thomas nor I were good enough at javacc to fix it  \nvmassol - (18:48): and andreas rewrote our javacc grammar thus fixing the bug  \nvmassol - (18:48): so the real issue is that we waited too much to fix this  \nsdumitriu - (18:48): And it was completely illogical, replacing the order of the #if #else branches solved the problem  \nsdumitriu - (18:49): Which didn't actually change anything in the output, except that an extra paragraph was generated around the velocity output  \nvmassol - (18:50): but  \nvmassol - (18:50): normally, even before, you should always have put 2 NLs to make macros standalone  \nsdumitriu - (18:50): So, when logic fails, what was a simple developer like me to do? Apply some random changes until it works, and leave it like that  \nvmassol - (18:50): the issue was when people didn't the second macro (after the single NL) was considered standalone  \nlucaa - (18:50): sdumitriu: read the doc, find the bug (anormal behaviour), report it, workaround it  \nlucaa - (18:50): but that's a problem of time  \nsdumitriu - (18:51): Yes, I did forward the problem to Thomas, but stuff needed to be done  \ntmortagne - (19:11): jvelociter: you don't need to have two NL after a macro, just put nothing after a macro  \ntmortagne - (19:11): if it's at the end of the content  \njvelociter - (19:11): tmortagne: yes seen  \nvmassol - (19:11): tmortagne: the question  \nvmassol - (19:11): is  \nvmassol - (19:11): {{macro/}} + NL + EOF  \nvmassol - (19:12): in this case IMO the macro should be considered standalone  \nvmassol - (19:12): (assuming there are 2 NLs before it)  \ntmortagne - (19:12): vmassol: as you said yourself new line are content, the block is not broken because there is only one NL so your have a NEWLINE, it's working excatly the same with  \ntmortagne - (19:12): paragraph<NL>  \ntmortagne - (19:12): it has nothing to do with macros  \nvmassol - (19:12): I know but the end of the doc is special  \nvmassol - (19:13): we could make it a bit easier for users  \ntmortagne - (19:13): you just explain that we used simple rules that are the same for everything and now you propose we introduce a special case for macros ?  \nvmassol - (19:13): since I doubt there are use cases when {{macro/}} + NL + EOF should be considered inline  \nvmassol - (19:14): tmortagne: it's not for macros actually  \nvmassol - (19:14): didn't we use to strip NL at beignning and end of doc?  \nvmassol - (19:14): was this modified too?  \ntmortagne - (19:15): no whe never did that, wikimodel commons strop first two NL  \ntmortagne - (19:15): but not the end  \ntmortagne - (19:16): s/strop/strip/  \ntmortagne - (19:18): (but that strip first new lines is wrong IMO)  \nvmassol - (19:18): brb  \nvmassol left at 19:18 (Quit: Leaving.  \nvmassol joined #xwiki at 19:19  \nmflorea left at 19:19 (Quit: Leaving.  \nDV left at 19:20 (Read error: Connection reset by peer  \nvmassol - (19:21): back  \nvmassol - (19:21): personally I'm fine with simple rule  \nvmassol - (19:21): we can wait and see if we get remarks from users  \nDV joined #xwiki at 19:21  \nvmassol - (19:21): jvelociter: wdyt?  \nvmassol - (19:21): (since you were the one to raise it)  \njvelociter - (19:22): I understand tmortagne point of not having an exception for that case  \njvdrean1 - (19:23): We've received a new variant for the 19/ proposal for the logo challenge  \njvdrean1 - (19:23): http://dev.xwiki.org/xwiki/bin/download/Community/LogoChallenge/planchelogosOKvect4.jpg  \ntmortagne - (19:23): vmassol: now this rule is written nowhere and the xwiki/2.0 renderer use paragraph\\\\ (to support all cases like when there is a paragraph after this paragraph ending with a newline)  \njvdrean1 - (19:23): I'd like to add it to the page and send an email, WDYT ?  \njvelociter - (19:23): in my opinion it's OK to have this behavior, but I start thinking we should have a special \"new line behavior summary\" documentation page, intended mainly to developers  \njvelociter - (19:24): (by this behavior I mean that we don't tolerate one single NL then EOF as standalone block)  \ntmortagne - (19:24): jvelociter: add a newline handling section in the XWikiSyntax page ?  \njvelociter - (19:25): yes for example  \njvelociter - (19:25): maybe a distinct page and a include from xwikisyntax could be good too, wdyt ?  \njvelociter - (19:25): both would be fine in my opinion  \ntmortagne - (19:25): yes make sense to have explicit example even if the rule is simple to make sure common uses cases are covered  \ntmortagne - (19:26): (in any case whatever the place +1 for this section)  \njvelociter - (19:26): great  \nvmassol - (19:26): I think there's a NL section already  \nvmassol - (19:26): let me chec  \nvmassol - (19:26): k  \njvelociter - (19:26): got to go now, bbl  \nvmassol - (19:26): http://platform.xwiki.org/xwiki/bin/view/Main/XWikiSyntax#HNewLineLinebreaks  \nvmassol - (19:27): we can enrich it a bit more  \ntmortagne - (19:27): yes there is nothing about inline/standalone  \nvmassol - (19:28): right this should be added  \nvmassol - (19:28): there's only for paragrpahs actually  \ntmortagne - (19:28): there is some in http://platform.xwiki.org/xwiki/bin/view/Main/XWikiSyntax#HParagraphs  \nvmassol - (19:29): yes and this need to be generalized  \ntmortagne - (19:29): yep  \ntmortagne - (19:30): we don't speak about inline/standalone in the macro section at all  \ntmortagne - (19:31): have to go  \njvdrean1 left at 19:31 (Quit: Leaving.  \ntmortagne left at 19:31 (Quit: Leaving.  \nlucaa left #xwiki at 19:37  \nplunden left at 19:38 (Ping timeout: 248 seconds  \narkub left at 19:52 (Ping timeout: 246 seconds  \narkub joined #xwiki at 19:53  \nsdumitriu left at 19:58 (Ping timeout: 265 seconds  \nnuvolari joined #xwiki at 20:19  \nnuvolari - (20:19): :>  \nDV left at 20:34 (Read error: Connection reset by peer  \nDV joined #xwiki at 20:35  \nsdumitriu joined #xwiki at 20:38  \narkub left at 20:50 (Ping timeout: 258 seconds  \nDV left at 21:17 (Read error: Connection reset by peer  \nDV joined #xwiki at 21:17  \ngvallarelli left at 21:26 (Remote host closed the connection  \nlucaa joined #xwiki at 21:32  \nmflorea joined #xwiki at 21:34  \nDV left at 22:01 (Read error: Connection reset by peer  \nDV joined #xwiki at 22:01  \nplunden joined #xwiki at 22:13  \nCalebJamesDeLisl - (22:24): I agree with sdumitriu, maybe the \\n macro behavior was a bug but if it breaks XE in 20 places then it's going to wreak havoc on everyone who upgrades.  \nvmassol - (22:26): what's your conclusion?  \nCalebJamesDeLisl - (22:26): It's tough, but I would be thinking about a config parameter.  \nvmassol - (22:26): ah no please  \nsdumitriu - (22:26): No  \nsdumitriu - (22:27): It's painful, but we have to live with our mistakes  \nCalebJamesDeLisl - (22:27): and the users?  \nvmassol - (22:27): there are about 30 known bugs in the rendering  \nvmassol - (22:28): I don't think we shouldn't fix them because some people may be relying on them  \nvmassol - (22:28): (or have found workarounds)  \nvmassol - (22:28): if someone is using:  \nvmassol - (22:28): {{macro/}}{{macro2/}}  \nvmassol - (22:28): and consider the second macro as standalone  \nvmassol - (22:28): then obviously that person is making a mistake  \nCalebJamesDeLisl - (22:29): I guess it's a question of \"do we trust the behavior or the documentation?\"  \nCalebJamesDeLisl - (22:30): Maybe we could do a searchDocuments on xwiki.org or each of the subwikis on myxwiki and see how much will be changed.  \nvmassol - (22:30): it's not representative  \nvmassol - (22:30): if you have a document wiki then it's not going to be a pb  \nDV left at 22:30 (Read error: Connection reset by peer  \nvmassol - (22:30): if your wiki is full of applications in 2.0 syntax you' re likely to have the pb in some pages  \nvmassol - (22:31): see the changes we've made to the default XE XAR  \nvmassol - (22:31): AFAICS thomas fixed about 10 places  \nvmassol - (22:31): (roughly)  \nvmassol - (22:31): so yes  \nvmassol - (22:31): it'll cause pb  \nCalebJamesDeLisl - (22:31): I still have to fix Registration, it didn't throw an error but the behavior is wrong.  \nvmassol - (22:31): but no I don't agree we should refrain from doing it  \nvmassol - (22:32): even if it's painful and we'll suffer on the list for a while  \nCalebJamesDeLisl - (22:33): I think where we suffer is that people learn not to upgrade.  \nCalebJamesDeLisl - (22:33): Ancient security issues remain exposed forever.  \nvmassol - (22:33): yes upgrades are painful and will continue to be till we have automated upgrades for documents  \nCalebJamesDeLisl - (22:34): Like modifying the documents to add the \\n if there is one above?  \nvmassol - (22:34): I was talking generally  \nvmassol - (22:35): we cannot do what you suggest  \nvmassol - (22:35): it's impossible  \nCalebJamesDeLisl - (22:35): I can imagine a change like that causing a lot of it's own trouble.  \nvmassol - (22:35): it's simply impossible from a logical POV  \nvmassol - (22:36): (well not impossible but real hard - you'd need to have the 2 rendering engine running side by side, check the output of each and if there's a difference, make the change\u2026 ;))  \nvmassol - (22:37): (and that's discarding other fixes that we have fixed since the last releases....)  \nvmassol - (22:37): (so close to impossible)  \nCalebJamesDeLisl - (22:37): So it's not as easy as checking for a \\n above the macro.  \nvmassol - (22:37): errr?  \nCalebJamesDeLisl - (22:38): I guess that's a no.  \nvmassol - (22:38): how do you put 2 inline macros separated by NL ?  \njvdrean joined #xwiki at 22:38  \nvmassol - (22:38): if you add another NL then you get 2 standalone macros  \nvmassol - (22:38): very different  \nvmassol - (22:39): to summarize: you can't guess what was on the mind of the user  \nCalebJamesDeLisl - (22:39): I guess I was thinking look for \\n\\n{{mcaro}}......{{/macro}}\\n[^\\n]  \nmflorea left at 22:39 (Quit: Leaving.  \nCalebJamesDeLisl - (22:40): But that will of course break other things if it is modified.  \nvmassol - (22:40): yes  \nCalebJamesDeLisl - (22:40): Something I admire about MS is that they have a 20 year old API which remains unbroken (dos programs still run) I think it has been the key to their success.  \nvmassol - (22:40): that's easy to do  \nvmassol - (22:40): provided you want a suboptimal system in the end  \nvmassol - (22:40): I personally don't admire that  \nvmassol - (22:41): you just need to keep adding stuff on top of exsiting stuff  \nCalebJamesDeLisl - (22:41): Of course to get there it is horrible, I imagine there is still dos inside of win7.  \nvmassol - (22:41): never modify existing stuff  \nvmassol - (22:41): like:  \nvmassol - (22:41): rename()  \nvmassol - (22:41): then  \nvmassol - (22:41): rename2()  \nvmassol - (22:41): rename3()  \nvmassol - (22:41): etc  \nvmassol - (22:41): if you've coded with MS api you'll know what I mean  \nvmassol - (22:41): ;)  \nCalebJamesDeLisl - (22:42): I have never looked at it but I can only imagine.  \nvmassol - (22:42): success or downfall?  \nvmassol - (22:42): when your system get heavy you can't innovate anymore  \nvmassol - (22:42): and you slow down  \nCalebJamesDeLisl - (22:43): Well, I think their downfall is that they are forcing the vista kernel on everyone (now through win7)  \nCalebJamesDeLisl - (22:43): So everyone keeps XP which is funny.  \nvmassol - (22:44): btw this is why xwiki dev is slow to improve  \nvmassol - (22:44): (on the core side)  \nvmassol - (22:44): we have a heavy cruft of old things  \nvmassol - (22:44): that's why we still have important issues that date back from 5 years ago....  \nvmassol - (22:44): it's just hard to make any modification  \nvmassol - (22:45): and when you do you break stuff for 4 releases\u2026 like 2.2, 2.2.1, 2.2.2, 2.2.3, 2.2.4 and probably 2.2.5  \nanamarias joined #xwiki at 22:45  \nvmassol - (22:45): and that was only a small change  \nvmassol - (22:46): and it took so many men/days just for it  \nvmassol - (22:46): so the only soltuino I know in software development  \nvmassol - (22:46): is to constantly refactor code  \nCalebJamesDeLisl - (22:46): I agree, and I think it's time to begin thinking about a new api with a focus on security.  \nvmassol - (22:46): and to do this confidently there's only one solution: a good automated test suite  \nvmassol - (22:48): for ex that allowed us to completely rewrite the syntax 2.0 parsing a few days ago  \nvmassol - (22:48): and barely anyone noticed  \nCalebJamesDeLisl - (22:48): It was completely rewritten?!  \nvmassol - (22:48): yes  \nvmassol - (22:48): see, case in point :)  \nCalebJamesDeLisl - (22:49): And that -broke- changed, the macros/newline issue?  \nvmassol - (22:49): nope, that fixed it ;)  \nCalebJamesDeLisl - (22:49): Ok Ok :)  \nvmassol - (22:49): and tests were broken becuase of it  \nvmassol - (22:49): so they caught the change  \nCalebJamesDeLisl - (22:49): Is it faster?  \nvmassol - (22:50): but since it was a bug, we fixed the tests  \nvmassol - (22:50): it's supposed to be but since it was alreayd very fast we don't really know yet  \nvmassol - (22:50): we'd need some specific perf tests to prove it's faster  \nCalebJamesDeLisl - (22:51): It seems that the page load issue is mainly in the templates now.  \nvmassol - (22:51): as I said earlier we'd know this rndering bug for ever  \nvmassol - (22:51): s/know/known/  \nCalebJamesDeLisl - (22:51): s/page load/page loading speed  \nvmassol - (22:52): except that we didn't know how to fix it since our javacc knowledge wasn't good enough to fix it  \nvmassol - (22:52): luckily andreas was an expert in javacc and rewrote the parser for us  \nCalebJamesDeLisl - (22:52): So the parser is a java compiler?  \nvmassol - (22:52): so that allowed us to fix about 6 issues quickly  \nvmassol - (22:53): (that we had postponed for a long tlme)  \nvmassol - (22:53): this standalone/inline was only one of them  \nvmassol - (22:53): yes it's a javacc grammar  \nCalebJamesDeLisl - (22:53): Ok, just read the wiki, \"parser generator\".  \nCalebJamesDeLisl - (22:54): This is on the parsing side though right?  \nCalebJamesDeLisl - (22:54): Because my tests showed that most of the expense was in rendering.  \nvmassol - (22:55): most of the expense?  \nvmassol - (22:55): most of the expense is in the db  \nCalebJamesDeLisl - (22:55): Time cost.  \nvmassol - (22:55): so removing db cost?  \nCalebJamesDeLisl - (22:56): I remember when writing my doc loader I found the page speed improvements were not that great.  \nvmassol - (22:56): if you remove db cost then most of the cost is in clientserver communicztion  \nvmassol - (22:56): (actually that's probably #1)  \nvmassol - (22:56): (db being second)  \nCalebJamesDeLisl - (22:56): However it was more of a dumptruck than a racecar.  \nvmassol - (22:57): skin displaying is the main cost I think  \nvmassol - (22:57): but maybe because of client/server comm  \nvmassol - (22:57): anyway  \nCalebJamesDeLisl - (22:57): I was discounting the js and css load time.  \nvmassol - (22:58): I doubt code in xwiki-rendering cost much in the general request processing  \nCalebJamesDeLisl - (22:59): 1.08 seconds for loading the html. Not too bad.  \nvmassol - (22:59): and IMO it's definitely not the place to look for for perf improvements  \nvmassol - (22:59): we need to fix DB, client/server comm, object scaling, etc  \nvmassol - (22:59): these are the low hanging fruits  \nCalebJamesDeLisl - (23:00): Or use a cache to hide the issue :)  \nvmassol - (23:00): caches are not so easy in dynamic systems  \nvmassol - (23:00): you loose features  \nCalebJamesDeLisl - (23:00): Really combining the js is the cheapest IMO, but I would like to see xwiki-action working first.  \nvmassol - (23:00): it's impossible to know the graph of changes  \nCalebJamesDeLisl - (23:01): Graph of changes? like page load statistics?  \nvmassol - (23:01): for a given page  \nvmassol - (23:01): you can't know if a change in another page affects it or ot  \nvmassol - (23:01): s/ot/not/  \nvmassol - (23:02): there are too many ways they can affect each other  \nCalebJamesDeLisl - (23:02): Yes, so you use a short cache time and fake it ;)  \nvmassol - (23:02): yes but you loose the biggest feature  \nvmassol - (23:02): freshness of information  \nvmassol - (23:03): it's not the real soltuion  \nvmassol - (23:03): it's a poor-man's solution  \nCalebJamesDeLisl - (23:03): If the cache loads the page from the core after serving the request then it always seems fast but stays (near) up to date.  \nvmassol - (23:03): since it's only going to work for a small portion of use cases  \nvmassol - (23:03): near is not good enough for lots of cases  \nvmassol - (23:03): so you can't consider it a general solution  \nCalebJamesDeLisl - (23:03): I agree it is a hack, but for people who are just going to use nginx it is a useful hack.  \nvmassol - (23:04): it's ok for static web sites  \nvmassol - (23:04): but not for a dynamic system like xwiki  \nvmassol - (23:04): unless you use it as a static site  \nvmassol - (23:04): but then you loose its advantage  \nCalebJamesDeLisl - (23:05): Well I don't see harm in xwiki.org (for example) having a 3 minute delay for guest users.  \nCalebJamesDeLisl - (23:05): (pages 3 minutes old)  \nvmassol - (23:05): it's a pb in some parts of xwiki.org  \nvmassol - (23:05): not for static pages  \nvmassol - (23:05): but for dynamic ones it is  \nCalebJamesDeLisl - (23:06): Like the search app?  \nvmassol - (23:06): the only good solution is what we have in 1.0  \nvmassol - (23:06): you leave it to the user to decide what to cache  \nvmassol - (23:06): he's the only one who can know that  \nvmassol - (23:06): (know for sure that is)  \nCalebJamesDeLisl - (23:07): +1 but I'd like to extend the user's ability to cache the templates as well if they should so choose.  \nCalebJamesDeLisl - (23:07): templates meaning the panels, top bar, etc.  \nCalebJamesDeLisl - (23:08): But I don't think we should worry about speed much until the security is bulletproof.  \nvmassol - (23:08): I don't agree  \nvmassol - (23:08): for me the most important is refactoring to introduce new architecutre first  \nvmassol - (23:09): and to build on that  \nvmassol - (23:09): for ex template system is bad and old  \nvmassol - (23:09): and should be redesigned  \nCalebJamesDeLisl - (23:09): Is the new architecture outlined on a design page?  \nvmassol - (23:09): no  \nvmassol - (23:09): not for templates  \nvmassol - (23:09): well  \nvmassol - (23:10): it was part of the plans for the new rendering arhcitecture  \nvmassol - (23:10): but not defined precisely  \nvmassol - (23:10): so no, nobody has started tackling this yet  \nCalebJamesDeLisl - (23:11): Here's a problem I see, every line of code in platform is able to access HibernateStore.  \nCalebJamesDeLisl - (23:11): Any security bug anywhere == database access.  \nCalebJamesDeLisl - (23:12): After reading DJ Bernstein's paper I am now an even bigger fan of sandboxing :)  \nvmassol - (23:12): sandboxing is not the isseu IMO  \nvmassol - (23:12): it's where you define the sandbox's boundaries  \nvmassol - (23:13): we are already sandboxed  \nCalebJamesDeLisl - (23:13): In the vm?  \nvmassol - (23:13): (since we don't allow code to call the DB directly)  \nvmassol - (23:13): yes that too but that's a different level  \nCalebJamesDeLisl - (23:14): Can't call the DB directly?  \nvmassol - (23:14): you have to go through HibenrateStore  \nCalebJamesDeLisl - (23:14): You mean code can't get hold of the jdbc connection?  \nvmassol - (23:14): well you can but it's not done anywhere, and it would be easy to prevent physically  \nvmassol - (23:14): right now it's done by best practices  \nvmassol - (23:15): (fy the way I've done it in the past was by writing a build time check as pattern test written in aspectj)  \nvmassol - (23:15): s/fy/fyi/  \nCalebJamesDeLisl - (23:16): I wonder if code flaws can be exploited and made to do such a thing?  \nvmassol - (23:17): it's not possible for a generic coding platform to guarantee anything like that  \nvmassol - (23:17): it would mean removing features  \nvmassol - (23:17): so it woudn't be a generic platform  \nCalebJamesDeLisl - (23:17): Clearly the script engines need to be separated from the store because they can be easily made to get the jdbc.  \nvmassol - (23:18): what if I want to write a macro that access the db through jdbc?  \nCalebJamesDeLisl - (23:18): Should that be allowed?  \nvmassol - (23:18): for a generic platform yes of course  \nvmassol - (23:18): I know lots of use cases for this$  \nvmassol - (23:19): we can't control security on behalf of developers  \nvmassol - (23:19): developers that develop on top of the xwiki platform  \nvmassol - (23:19): all we can control is what we write and provide  \nCalebJamesDeLisl - (23:19): So maybe code which has PR should be able to run in the same place as the HibernateStore.  \nCalebJamesDeLisl - (23:20): I think it would be nice to see code separated into two groups: \"code which helps the user\" and \"code which protects the system from the user\"  \nCalebJamesDeLisl - (23:20): code which protects the system == Storage, Authentication, and Rights.  \nvmassol - (23:20): we had discussed a bit the notion of trusted code  \nvmassol - (23:21): for me trusted code = code that is located in WEB-INF/lib  \nCalebJamesDeLisl - (23:21): Everything.  \nCalebJamesDeLisl - (23:22): My thinking is that we should trust as little as possible.  \nvmassol - (23:22): I don't like this too much  \nvmassol - (23:22): since this leads to bloated code in general  \nvmassol - (23:22): slow and bloated  \nvmassol - (23:22): since every single method will perform rechecks  \nvmassol - (23:23): I prefer to defined a safe zone  \nCalebJamesDeLisl - (23:23): Safe meaning trusted?  \nvmassol - (23:23): the best safe zone we have is java server code in web-inf/lib  \nvmassol - (23:23): since this has to be manually installed  \nvmassol - (23:23): you need access to the server  \nCalebJamesDeLisl - (23:23): Then where do we put java code which is not to be considered safe?  \nvmassol - (23:23): physical access  \nvmassol - (23:23): these are extensions  \nvmassol - (23:24): loaded from our extension repository by using the extension manager  \nCalebJamesDeLisl - (23:24): I see. This makes sense.  \nvmassol - (23:24): it's basically the same as our velocity api  \nvmassol - (23:24): this is where security checks happen  \nvmassol - (23:25): it's when \"external code\" calls \"inner code\"  \nvmassol - (23:25): (ie safe zone code)  \nvmassol - (23:25): this allows all checks to be done at one level and not done and redone everywhere  \nCalebJamesDeLisl - (23:26): Another way to achieve this is by having trusted and untrusted threads.  \nvmassol - (23:26): yes  \nvmassol - (23:26): that could an extension mechanism  \nvmassol - (23:26): to allow external code the same privileges as trusted code  \nvmassol - (23:26): (ie safe zone code)  \nvmassol - (23:27): by using signatures for ex  \nCalebJamesDeLisl - (23:27): What I like about threads is that if we are careful then the admin may choose to put them is seperate vm's  \nCalebJamesDeLisl - (23:27): Or on seperate machines if they like.  \nvmassol - (23:27): how do you do inter thread communication?  \nvmassol - (23:27): that's awfully slow  \nCalebJamesDeLisl - (23:28): I don't think it has to be slow.  \nvmassol - (23:29): inter process is always slow except when you use shared memory  \nCalebJamesDeLisl - (23:29): Well there is stdin and stdout, but I think it makes more sense to use http connections.  \nvmassol - (23:29): wow that's definitely slow  \nvmassol - (23:29): about 100000 times slower than code running at the same place  \nCalebJamesDeLisl - (23:30): Well you can keep a connection open over time.  \nvmassol - (23:30): (potentially missing some zeros... ;))  \nvmassol - (23:30): it's still 1000000 times slower  \nCalebJamesDeLisl - (23:30): Isn't that how the db connection works?  \nvmassol - (23:30): yes that's why DB connection is very very slow  \nvmassol - (23:31): and that's why you always want to reduce requests to the db  \nvmassol - (23:31): and that's why you always end up introducing caches  \nvmassol - (23:31): second level cache, etc  \nCalebJamesDeLisl - (23:31): So that's why I had better luck with fewer queries.  \nCalebJamesDeLisl - (23:31): (document loader)  \nvmassol - (23:31): try something  \nvmassol - (23:31): turn on hibernate request loading for xwiki  \nvmassol - (23:32): and see how many requetss are sent to the db  \nvmassol - (23:32): you'll be amazed  \nvmassol - (23:32): there are hundreds for a single request  \nCalebJamesDeLisl - (23:32): s/loading/logging?  \nvmassol - (23:32): logging  \nvmassol - (23:32): yes  \nCalebJamesDeLisl - (23:32): Yes I have postgres doing logging, it's ugly  \nvmassol - (23:32): when I was coding performant systems in the past we were reducing to 2-3 request to the DB max per request  \nvmassol - (23:33): and that allowed us to scale to 700TPS on transcational systems  \nvmassol - (23:33): (in test labs)  \nCalebJamesDeLisl - (23:33): That's mostly rights checking am I wrong?  \nvmassol - (23:33): don'tknow, maybe  \nCalebJamesDeLisl - (23:34): One thing I think would speed up the system (for 2.0 api) is to have getObjects(List<EntityReference>)  \nvmassol - (23:34): object hanlding needs to be reworked yes  \nCalebJamesDeLisl - (23:34): So lots of things can be loaded at once (one query)  \nCalebJamesDeLisl - (23:36): One thing I liked about Bernstein's paper was the concept that all code contains bugs and some are security issues so making the smallest amount of trusted code is the best.  \nvmassol - (23:36): I think you need to take that with a pinch of salt  \nvmassol - (23:37): it's not the same thing to develop code that controls a space shuttle  \nvmassol - (23:37): and code that controls editing a wiki document  \nvmassol - (23:37): becauase there's an associated cost  \nCalebJamesDeLisl - (23:38): But I see no reason why code that controls editing a wiki document should be allowed to access the database.  \nCalebJamesDeLisl - (23:38): Perhaps if we sandbox everything then one day they will use it on the shuttle ;)  \nvmassol - (23:39): it's not whether we want it again  \nvmassol - (23:39): it's the cost associated  \nvmassol - (23:39): we should do things that don't cost much and provide good enough securiyt  \nvmassol - (23:40): but no need for ex to develop 3 versions of xwiki  \nCalebJamesDeLisl - (23:40): Well Bernstein seemed to suggest that every function should be a separate process running under a separate user name. I disagree with this level of security.  \nvmassol - (23:40): and then control the output of the systems that would run in parallel  \nvmassol - (23:40): to veirfy they reutrn the same result  \nvmassol - (23:40): and if not, throw an error  \nCalebJamesDeLisl - (23:40): Like a raid device :)  \nvmassol - (23:41): like software in airplanes  \nCalebJamesDeLisl - (23:41): Sure, but I think it would be easier to use signatures and checksums and if something failed then try again.  \nvmassol - (23:42): right now we have a simpler solution to this  \nvmassol - (23:43): safe code needs to be installed through physical access to the server  \nCalebJamesDeLisl - (23:43): But on the topic of sandboxing, I don't see the threat being that code will be injected into /WEB-INF/lib/ but rather code in there will be exploited to do arbitrary things.  \nvmassol - (23:43): yes but there's no way to control this  \nvmassol - (23:43): since it would mean developing bug free software  \nCalebJamesDeLisl - (23:43): Threads?  \nvmassol - (23:43): in some specific cases we can try to reduce the risk I agree  \nvmassol - (23:44): anyway we're talking too generally here....  \nCalebJamesDeLisl - (23:44): I would like to have a system where bugs in most of the code have no security implications.  \nvmassol - (23:44): I'm open to anything on my side  \nvmassol - (23:44): make a proposal  \nvmassol - (23:44): :)  \nvmassol - (23:45): if we want to progress on this we need to discuss on something tangible  \nCalebJamesDeLisl - (23:45): Well I need to work on the idea so it doesn't make XWiki slower than a commidor 64  \nCalebJamesDeLisl - (23:46): My current thinking is separate into threads, maybe shared memory is necessary, java provides nice synchronization.  \nvmassol - (23:46): you can look at osgi  \nvmassol - (23:46): too  \nCalebJamesDeLisl - (23:46): I will.  \nvmassol - (23:46): basically each module needs to explicitely declare its dependencies  \nvmassol - (23:46): otehrwise they're not visible  \nCalebJamesDeLisl - (23:46): Hmmm +1  \nCalebJamesDeLisl - (23:47): Still there is the issue of a bad thread overflowing the garbage collector or eating up all of the heap.  \nCalebJamesDeLisl - (23:48): Overflowing the GC = segfault. http://stackoverflow.com/questions/65200/how-do-you-crash-a-jvm  \nCalebJamesDeLisl - (23:49): So I think it would be awesome to have the \\_option\\_ of running untrusted code in a different vm, different username, different computer.  \nCalebJamesDeLisl - (23:49): Http connections are slow but if the api is http accessable, then it's available to client side javascript which would be cool.  \nvmassol - (23:50): well best would be to use oracle's VM  \nvmassol - (23:50): they had the ability to do this  \nCalebJamesDeLisl - (23:50): Oracle prevents too much memory allocation.  \nCalebJamesDeLisl - (23:50): ?  \nCalebJamesDeLisl - (23:51): Or allows a vm to run in a cluster?  \nvmassol - (23:51): AFAIR they had the ability to have app server incoming requests to run in their own VM  \nvmassol - (23:52): basically they could share VM code between sub VMs  \nvmassol - (23:52): and thus spawn lots of VMs  \nvmassol - (23:52): VM = JVM  \nvmassol - (23:52): I dno't recall the details  \nvmassol - (23:52): but I remember reading a paper on this  \nCalebJamesDeLisl - (23:52): I'll have to look in to this.  \nvmassol - (23:53): maybe this: http://download-uk.oracle.com/docs/cd/B14099\\_14/web.1012/b14032/jvm.htm  \nCalebJamesDeLisl - (23:53): Do you know how slow stdin/stdout are?  \nCalebJamesDeLisl - (23:53): probably not windows compatible :(  \nCalebJamesDeLisl - (23:54): Anyway where my proposal hits a wall is in serializing and unserializing everything all of the time which will take all day.  \nvmassol - (23:55): marshalling/unmarshalling is costly  \nvmassol - (23:55): but #1 cost is network  \nvmassol - (23:55): this is cost #2  \nCalebJamesDeLisl - (23:55): loopback shouldn't be that expensive right?  \nvmassol - (23:55): unless you have very specific network  \nvmassol - (23:56): loopback is expensive I think  \nvmassol - (23:56): it has to go through the IP layers no?  \nvmassol - (23:56): anyway not sure here  \nvmassol - (23:56): it's been a long time...  \nCalebJamesDeLisl - (23:56): I have to read up on it.  \nvmassol - (23:56): anyway it seems to me this is a bit beyond xwiki  \nvmassol - (23:57): looks like some research project :)  \nCalebJamesDeLisl - (23:57): It's true we are trying to fix shortcomings of the sun jvm.  \nvmassol - (23:58): yes that's what oracle did  \nvmassol - (23:58): from what I remember  \nvmassol - (23:58): but I don't know how successful they were  \nvmassol - (23:58): since we haven't heard too much about it, probably not that successful  \nvmassol - (23:58): my guess is that perf is bad  \nvmassol - (23:58): you trade safety for perf  \nvmassol - (23:58): (probably)  \nCalebJamesDeLisl - (23:58): I still like the idea of exposing the api to javascript via http.  \nvmassol - (23:59): sure  \nvmassol - (23:59): we do that already  \nvmassol - (23:59): GWT is that AFAIK, no?  \nvmassol - (23:59): we have a xwiki GWT api already  \nCalebJamesDeLisl - (23:59): Hmm, must take a look, getDocument would be nice.  \nCalebJamesDeLisl - (23:59): Then we need a js version of Document.  \n\n"}