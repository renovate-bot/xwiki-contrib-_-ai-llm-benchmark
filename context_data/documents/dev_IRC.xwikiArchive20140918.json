{"id": "dev:IRC.xwikiArchive20140918", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20140918", "title": "IRC Archive for channel #xwiki on 18 September 2014 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<Chuguniy|2>\u00a0has quit  \n01:35\u00a0<Enygma`>\u00a0has quit  \n01:54\u00a0<xwikibot>\u00a0has joined #xwiki  \n03:50\u00a0<Denis>\u00a0has joined #xwiki  \n04:05\u00a0<Denis>\u00a0has quit  \n07:19\u00a0<evalica>\u00a0has joined #xwiki  \n07:19\u00a0<msmeria>\u00a0has joined #xwiki  \n08:21\u00a0<vmassol>\u00a0has joined #xwiki  \n08:29\u00a0<Denis>\u00a0has joined #xwiki  \n08:37\u00a0<polx>\u00a0has joined #xwiki  \n08:57\u00a0<vmassol>\u00a0good morning  \n08:57\u00a0<vmassol>\u00a0seems like Edy didn't release lat night  \n08:57\u00a0<vmassol>\u00a0going to check agent3-3 this morning  \n09:02\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:09\u00a0<cjd>\u00a0has joined #xwiki  \n09:10\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n09:12\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:14\u00a0<woshilapin>\u00a0has joined #xwiki  \n09:18\u00a0<Emenems>\u00a0has quit  \n09:18\u00a0<Emenems\\_>\u00a0has joined #xwiki  \n09:18\u00a0<Emenems\\_>\u00a0is now known as <Emenems>  \n09:23\u00a0<cjd>\u00a0has quit  \n09:24\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n09:27\u00a0<polx>\u00a0has quit  \n09:27\u00a0<polx>\u00a0has joined #xwiki  \n09:27\u00a0<cjd>\u00a0has joined #xwiki  \n09:29\u00a0<Emenems>\u00a0has quit  \n09:35\u00a0<cjd>\u00a0has quit  \n09:39\u00a0<DuFFo>\u00a0has quit  \n09:40\u00a0<cjd>\u00a0has joined #xwiki  \n09:44\u00a0<mflorea>\u00a0has joined #xwiki  \n09:52\u00a0<vmassol>\u00a0has quit  \n09:52\u00a0<vmassol>\u00a0has joined #xwiki  \n09:56\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n10:00\u00a0<DuFFo>\u00a0has joined #xwiki  \n10:00\u00a0<Emenems>\u00a0has joined #xwiki  \n10:02\u00a0<cjd>\u00a0has quit  \n10:03\u00a0<cjd>\u00a0has joined #xwiki  \n10:07\u00a0<andreeapopescu>\u00a0has joined #xwiki  \n10:08\u00a0<vmassol>\u00a0good news, I've found why we had these issues with the port on ci ;)  \n10:10\u00a0<Enygma`>\u00a0yep, that`s awesome if we`ve finally managed to nail it down!  \n10:11\u00a0<Enygma`>\u00a0I have a selenium question for you guys for fixing http://ci.xwiki.org/job/xwiki-enterprise-test-ui-6.2.x/36/org.xwiki.enterprise$xwiki-enterprise-test-ui/testReport/org.xwiki.test.ui/CreatePageTest/testCreatePageWhenNoTemplateAvailable/ ...  \n10:11\u00a0<Enygma`>\u00a0I`m on this ViewPage: http://localhost:8080/xwiki/bin/view/Dashboard/SpaceDashboardTemplateProvider  \n10:11\u00a0<Enygma`>\u00a0and going into edit>inline fails  \n10:11\u00a0<vmassol>\u00a0reenabling a3-3 now  \n10:12\u00a0<Enygma`>\u00a0BasePage.clickEditSubMenuEntry(String id) is the one that fails, right after clicking the arrow button on the edit link to obtain the drop-down menu.  \n10:13\u00a0<Enygma`>\u00a0I don`t understand the reason why it would fail to get the dropdown since it is in a view page and nothing (no js) should be stealing the focus or anything  \n10:13\u00a0<Enygma`>\u00a0only fails occasionally, so it`s a flicker  \n10:18\u00a0<Enygma`>\u00a0basic stuff like this fails:  \n10:18\u00a0<Enygma`>\u00a0templateViewPage.editInline();  \n10:20\u00a0<Enygma`>\u00a0here's a screenshot from another failing test that seems to fail for the same reason:  \n10:20\u00a0<Enygma`>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-test-ui/ws/xwiki-enterprise-test/xwiki-enterprise-test-ui/target/screenshots/ClassEditorTest-testDeleteField.png  \n10:20\u00a0<Enygma`>\u00a0mflorea, gdelhumeau, sdumitriu, anyone, any idea?  \n10:21\u00a0<Enygma`>\u00a0notice the arrow button is clicked, but nothing happens.  \n10:21\u00a0<Enygma`>\u00a0could it be a bootstrap js problem?  \n10:22\u00a0<gdelhumeau>\u00a0the screenshot has been taken 10seconds after the click?  \n10:23\u00a0<vmassol>\u00a0Enygma`: you didn't release yesterday in the end right?  \n10:23\u00a0<Enygma`>\u00a0vmassol: yes, I continued fixing tests and it was too late for the release anyway. Either last night at 1am or today... it's the same date :)  \n10:24\u00a0<vmassol>\u00a0hehe  \n10:24\u00a0<Enygma`>\u00a0gdelhumeau: probably yes. I have noticed it locally as well, the button is clicked and our tests then wait for the dropdown to come, but it never comes so the test fails  \n10:25\u00a0<gdelhumeau>\u00a0do you have any log in firefox?  \n10:25\u00a0<mflorea>\u00a0could be that the button is clicked before bootstrap js adds its click listener?  \n10:25\u00a0<Enygma`>\u00a0mflorea: was just thinking of that... maybe the js/css is not loaded at the right time  \n10:25\u00a0<Enygma`>\u00a0how could we wait for that in our tests?  \n10:26\u00a0<mflorea>\u00a0bootstrap needs jquery, and jquery is not loaded on page load but after, through require  \n10:26\u00a0<Enygma`>\u00a0and it should be a general wait in all our tests, now that the skin uses it  \n10:26\u00a0<gdelhumeau>\u00a0hmm, when we click on a dropdown-menu, we can retry once again if it fails after 10seconds  \n10:27\u00a0<gdelhumeau>\u00a0not the cleanest solution  \n10:27\u00a0<Enygma`>\u00a0on a similar note, I do kind of feel the need for waiting for js events in selenium tests, but right now all we do is wait for elements in the dom, which is not always possible.  \n10:28\u00a0<Enygma`>\u00a0gdelhumeau: yes, but we`d have to do this hack for other stuff in the futures, so a cleaner solution is what mflorea suggests, to wait for the js stack to load.  \n10:28\u00a0<Enygma`>\u00a0we have BasePage.waitUntilPageIsLoaded() that checks that the html (initial dom) was served.  \n10:28\u00a0<mflorea>\u00a0or maybe load jquery on page load like prototype, but we're adding time to the page load  \n10:29\u00a0<Enygma`>\u00a0maybe we can have something similar to that, but that should wait for the js to execute as well and then put something in the dom  \n10:30\u00a0<Slashman>\u00a0has joined #xwiki  \n10:33\u00a0<vmassol>\u00a0\"hmm, when we click on a dropdown-menu, we can retry once again if it fails after 10seconds\" not that's bad  \n10:34\u00a0<vmassol>\u00a0\\*no  \n10:34\u00a0<vmassol>\u00a0makes tests too long  \n10:35\u00a0<vmassol>\u00a0Enygma`: you can wait on anything  \n10:35\u00a0<vmassol>\u00a0when jquery is loaded I'm sure there are some var defined  \n10:35\u00a0<Adwolgan>\u00a0has joined #xwiki  \n10:35\u00a0<vmassol>\u00a0so you can wait till such var is defined  \n10:36\u00a0<vmassol>\u00a0we have some examples of watiing on some js evaluation  \n10:36\u00a0<vmassol>\u00a0(I coded one for the LT AFAIR)  \n10:36\u00a0<Adwolgan>\u00a0Hi everybody, is it possible to manage files rights ?  \n10:36\u00a0<vmassol>\u00a0the LT wait that is  \n10:36\u00a0<vmassol>\u00a0Adwolgan: files?  \n10:36\u00a0<vmassol>\u00a0attachments?  \n10:37\u00a0<Adwolgan>\u00a0by space or wiki  \n10:37\u00a0<vmassol>\u00a0attachment rights are those of the page they are attached to  \n10:37\u00a0<tmortagne>\u00a0you mean a special right to download attachments ?  \n10:37\u00a0<Adwolgan>\u00a0mhh i'lll explain what i want  \n10:39\u00a0<Adwolgan>\u00a0if a user wanted to edit a wiki this sends an email to an administrator  \n10:40\u00a0<Adwolgan>\u00a0and the administrator must approve the amendment for it occurs  \n10:41\u00a0<Enygma`>\u00a0vmassol: but what \\*do\\* we wait for? Just jquery, or some bootstrap specific stuff?  \n10:42\u00a0<cjd>\u00a0Adwolgan: so you mean rights on wiki \"pages\" or \"documents\" (as opposed to files like pdf or jpeg which might be attached to those pages)  \n10:43\u00a0<Adwolgan>\u00a0Rights on wiki 'pages' yes  \n10:44\u00a0<cjd>\u00a0there is a good system of rights but we do not currently support sending an automated email to an admin to approve proposed changes  \n10:45\u00a0<Adwolgan>\u00a0I didn't find the system of rights on pages, can you tell me how set it ?  \n10:46\u00a0<cjd>\u00a0http://platform.xwiki.org/xwiki/bin/view/AdminGuide/Access+Rights  \n10:46\u00a0<Adwolgan>\u00a0Thank you  \n10:48\u00a0<gdelhumeau>\u00a0I am looking at http://getbootstrap.com/javascript/  \n10:49\u00a0<Enygma`>\u00a0heh...  \n10:49\u00a0<Enygma`>\u00a0\"No special fallbacks when JavaScript is disabled \u00a0\u00a0Bootstrap's plugins don't fall back particularly gracefully when \u00a0JavaScript is disabled. If you care about the user experience in this \u00a0case, use <noscript> to explain the situation (and how to re-enable JavaScript) to your users, and/or add your own custom fallbacks.\"  \n10:50\u00a0<Enygma`>\u00a0this pretty much seals the deal with supporting no-javascript interfaces in XWiki :)  \n10:50\u00a0<Enygma`>\u00a0back to the problem we have...  \n10:50\u00a0<Enygma`>\u00a0for this particular situation we`d want for dropdown.js to be loaded before we click the menu  \n10:51\u00a0<Adwolgan>\u00a0Mhh this is not i what i want to do :/  \n10:51\u00a0<Adwolgan>\u00a0Is it possible to pending modification ?  \n10:52\u00a0<cjd>\u00a0Adwolgan: there are a few reasons why that doesn't exist, #1 is that two people can create conflicting modification requests and the admin would need to merge them and the other is that the main benefit of a wiki is to reduce the amount of bearuacracy by giving everyone decision making power but with history and accountability  \n10:53\u00a0<cjd>\u00a0If your use case is, for example: a public page, you might consider having a private version which people can collaborate on and a public version which the admin signs off on (basically copying the private version into the public space)  \n10:53\u00a0<Enygma`>\u00a0Adwolgan: we don`t support this \"moderator\" feature right now. The only remotely-similar thing we have for your case is http://extensions.xwiki.org/xwiki/bin/view/Extension/XWiki+Publication+Workflow+Application  \n10:56\u00a0<Adwolgan>\u00a0Ok thank you for your help  \n10:57\u00a0<Adwolgan>\u00a0has quit  \n11:04\u00a0<Enygma`>\u00a0http://stackoverflow.com/questions/400916/how-can-i-check-if-a-jquery-plugin-is-loaded  \n11:04\u00a0<Enygma`>\u00a0basically \"window.jQuery().dropdown\" returns the dropdown plugin if it's loaded  \n11:05\u00a0<Enygma`>\u00a0we could wait on that, at least for the edit button dropdown  \n11:06\u00a0<gdelhumeau>\u00a0indeed, good ide  \n11:06\u00a0<gdelhumeau>\u00a0idea  \n11:06\u00a0<gdelhumeau>\u00a0I was looking at the button object itself to see if it has some handlers or something  \n11:06\u00a0<gdelhumeau>\u00a0but your solution sounds better  \n11:06\u00a0<Enygma`>\u00a0not sure, but maybe we can have a BasePage.waitUntilJSIsLoaded() and each page object could add its specific javascript requirements there  \n11:07\u00a0<Enygma`>\u00a0and the default implementation in BasePage.waitUntilJSIsLoaded() could be to wait for a list of plugins that we know we need  \n11:07\u00a0<Enygma`>\u00a0subclasses could wait for more or other js libraries  \n11:07\u00a0<cjd>\u00a0jquery is loaded in every page in flamingo?  \n11:07\u00a0<gdelhumeau>\u00a0cjd: yes  \n11:08\u00a0<cjd>\u00a0lots of problems with prototype holding the $ variable?  \n11:08\u00a0<gdelhumeau>\u00a0not really  \n11:08\u00a0<Enygma`>\u00a0now, the question is: should we add this BasePage.waitUntilJSIsLoaded() to BasePage.waitUntilPageIsLoaded()'s code?  \n11:09\u00a0<Enygma`>\u00a0so that BasePage.waitUntilPageIsLoaded() also waits for JS dependencies?  \n11:09\u00a0<gdelhumeau>\u00a0boostrap is called through a require() script  \n11:09\u00a0<Enygma`>\u00a0asking because waitUntilPageIsLoaded is already used in a lot of places.  \n11:09\u00a0<cjd>\u00a0oh? so bootstrap requires() jquery?  \n11:09\u00a0<gdelhumeau>\u00a0to me it sounds good Enygma`  \n11:10\u00a0<cjd>\u00a0in colibri, window.jQuery is not guaranteed to be defined (ever)  \n11:10\u00a0<gdelhumeau>\u00a0cjd: https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/src/main/resources/flamingo/javascript.vm#L77  \n11:10\u00a0<gdelhumeau>\u00a0cjd: the tests are executed on flamingo now  \n11:11\u00a0<Enygma`>\u00a0gdelhumeau: don`t we have a couple of tests that are switching the skin to colibri?  \n11:11\u00a0<Enygma`>\u00a0would those tests still work if I extend waitUntilPageIsLoaded with waitUntilJSIsLoaded ?  \n11:12\u00a0<cjd>\u00a0## isn't the CPP primitive and silly?  \n11:12\u00a0<cjd>\u00a0$goodThing.we.do.not(do.that(), 'anymore')  \n11:13\u00a0<Enygma`>\u00a0cjd: what is CPP?  \n11:13\u00a0<cjd>\u00a0the C preprocessor  \n11:14\u00a0<gdelhumeau>\u00a0Enygma`: a grep to search \"colibri\" in xwiki-enterprise does not return something relevant  \n11:19\u00a0<gdelhumeau>\u00a0I have noticed https://github.com/xwiki/xwiki-enterprise/blob/master/xwiki-enterprise-test/xwiki-enterprise-test-escaping/src/test/it/org/xwiki/test/escaping/ApplicationTest.java#L105 that does not look good  \n11:20\u00a0<Enygma`>\u00a0right, so maybe it's not a good idea to modify waitUntilPageIsLoaded since it is intended to load only the html and it is used as such in certain places. I`ll just add the new waitUntilPageIsLoaded method and start using it where js is needed  \n11:21\u00a0<Enygma`>\u00a0safer that way  \n11:21\u00a0<Enygma`>\u00a0the new waitUntilPageIsLoaded = the new waitUntilPageJSIsLoaded  \n11:23\u00a0<lucaa>\u00a0has joined #xwiki  \n11:27\u00a0<Enygma`>\u00a0vmassol: where did you say you`ve implemented a \"wait for javascript condition\" in the tests?  \n11:28\u00a0<vmassol>\u00a0LT wait  \n11:28\u00a0<vmassol>\u00a0LiveTableElement  \n11:28\u00a0<vmassol>\u00a0waitUntilReady()  \n11:29\u00a0<Enygma`>\u00a0vmassol: I see.. thought I wanted to implement it using Wait.until, instead of doing that Thread.sleep stuff  \n11:29\u00a0<vmassol>\u00a0note: we could add a method waitUntilJavascriptEvaluation or something like that in BaseElement  \n11:29\u00a0<Enygma`>\u00a0right  \n11:30\u00a0<Enygma`>\u00a0what I was about to do :)  \n11:30\u00a0<vmassol>\u00a0:)  \n11:31\u00a0<Enygma`>\u00a0was thinking of waitUntilJavascriptCondition that accepts only a boolean javascript expression  \n11:31\u00a0<Enygma`>\u00a0since a general evaluation is already done through executeJavascript  \n11:38\u00a0<vmassol>\u00a0ok  \n11:47\u00a0<ClemensR>\u00a0has joined #xwiki  \n12:34\u00a0<lucaa>\u00a0has quit  \n12:38\u00a0<lucaa>\u00a0has joined #xwiki  \n13:07\u00a0<Enygma`>\u00a0oh snap, I forgot about BFD today :|  \n13:07\u00a0<vmassol>\u00a0welcome to the club  \n13:07\u00a0<vmassol>\u00a0:)  \n13:19\u00a0<Enygma`>\u00a0:)  \n13:34\u00a0<vmassol>\u00a0guys, ok for me to add $exceptiontool as a velocity tool, using commons lang3's ExceptionUtils?  \n13:37\u00a0<vmassol>\u00a0http://jira.xwiki.org/browse/XCOMMONS-650  \n13:41\u00a0<Enygma`>\u00a0would have been better to be handled by the script service, maybe through an abstract class... and to have something like catch (Exception e) { handleException(e); } in the script service...  \n13:43\u00a0<Enygma`>\u00a0and handleException would put some more details in the context, like stacktrace string, root cause, etc... maybe through a detailed object exposed through something like $xcontext.lastException (i.e. not send the exception to velocity directly/unprocessed)  \n13:49\u00a0<vmassol>\u00a0I don't agree  \n13:49\u00a0<vmassol>\u00a0see my description  \n13:50\u00a0<vmassol>\u00a0how something is going to be displayd is up to the View part of the MVC model  \n13:50\u00a0<vmassol>\u00a0also asbtract classes are better to be avoided as much as possible (inheritance is a pain)  \n13:50\u00a0<vmassol>\u00a0now  \n13:51\u00a0<vmassol>\u00a0in some future, I'd like that script services throw exception  \n13:51\u00a0<vmassol>\u00a0and that it's caught by an uberspector  \n13:51\u00a0<vmassol>\u00a0which would put the exception in the context and then have some other script service to retreive it  \n13:52\u00a0<vmassol>\u00a0but that wouldn't change the need for $exceptiontool  \n14:01\u00a0<Slashman\\_>\u00a0has joined #xwiki  \n14:03\u00a0<Slashman>\u00a0has quit  \n14:19\u00a0<cjd>\u00a013:50 < vmassol> also asbtract classes are better to be avoided as much as possible (inheritance is a pain) \u00a0<-- +1000  \n14:19\u00a0<vmassol>\u00a0it's pain for backward compatibility especially  \n14:19\u00a0<cjd>\u00a0ahh indeed since you give everyone access to all of your internals  \n14:22\u00a0<Denis>\u00a0has quit  \n14:25\u00a0<lucaa>\u00a0has quit  \n14:31\u00a0<Enygma`>\u00a0so yeah, then use an ubserspector instead of an abstract class to perform the conversion from Exception to a property in the context, but I`m not exactly keen on exposing Exception logic/handling in velocity  \n14:32\u00a0<Enygma`>\u00a0we`re supposed to make it lighter, not the other way around  \n14:32\u00a0<vmassol>\u00a0I don't agree  \n14:32\u00a0<vmassol>\u00a0the goal is not to make it lighter  \n14:32\u00a0<vmassol>\u00a0quite the opposite  \n14:32\u00a0<vmassol>\u00a0if you want better visuals it's going to be heavier not lighter  \n14:33\u00a0<vmassol>\u00a0and we're working on adding visuals not removing it  \n14:33\u00a0<vmassol>\u00a0the velocity is for the display  \n14:33\u00a0<vmassol>\u00a0UI display  \n14:33\u00a0<vmassol>\u00a0actually I'd be a lot more concerned about API such as urltool  \n14:34\u00a0<vmassol>\u00a0for which it's less obivous that it's for display  \n14:34\u00a0<Enygma`>\u00a0agreed, but in this case there are a handful of information that we need to extract from an exception. Why risk seeing this logic everywhere in velocity pages, instead of having it already served in the context ?  \n14:34\u00a0<vmassol>\u00a0but anything that is usefiul for displaying is good  \n14:34\u00a0<cjd>\u00a0IMO there's no reason to throw an exception into a velocity script  \n14:34\u00a0<cjd>\u00a0or maybe there is, maybe we want to halt the script :)  \n14:34\u00a0<vmassol>\u00a0there is but that's another story  \n14:34\u00a0<cjd>\u00a0hehe  \n14:34\u00a0<vmassol>\u00a0yes for that reason  \n14:35\u00a0<cjd>\u00a0lets see here...  \n14:35\u00a0<vmassol>\u00a0but that's not my point  \n14:35\u00a0<cjd>\u00a0$services.err.try()  \n14:35\u00a0<Enygma`>\u00a0I thought there was a #stop or something in velocity for that  \n14:35\u00a0<cjd>\u00a0$dangerousCall()  \n14:35\u00a0<cjd>\u00a0or  \n14:35\u00a0<tmortagne>\u00a0yes it would not be hard to add some king of try/catch in velocity  \n14:35\u00a0<cjd>\u00a0$services.err.catchErrors()  \n14:35\u00a0<vmassol>\u00a0stop won't buble up the excpetion at all  \n14:35\u00a0<tmortagne>\u00a0s/king/kind/  \n14:35\u00a0<Enygma`>\u00a0cjd: the discussion was about exceptions thrown in a service, how to display them in velocity  \n14:36\u00a0<vmassol>\u00a0no  \n14:36\u00a0<vmassol>\u00a0exceptions are not thrown  \n14:36\u00a0<vmassol>\u00a0it's about when no throwing excpetion  \n14:36\u00a0<vmassol>\u00a0and the velocity wants to decide how to display the error  \n14:36\u00a0<cjd>\u00a0yeah but then writing script services is crap  \n14:36\u00a0<vmassol>\u00a0which is what we've been doing for a long time already  \n14:36\u00a0<vmassol>\u00a0in script sercices  \n14:36\u00a0<cjd>\u00a0you need to wrap all of your calls in try/catch and report errno  \n14:37\u00a0<cjd>\u00a0$services.myscriptservice.errno :)  \n14:37\u00a0<vmassol>\u00a0yes for that part I have proposed a long time ago to use an ubersepctor  \n14:37\u00a0<vmassol>\u00a0but that's not the point here  \n14:37\u00a0<vmassol>\u00a0:)  \n14:37\u00a0<tmortagne>\u00a0but that's hack because velocity don't have try catch, if we add try/catch then we don't need that anymore  \n14:37\u00a0<tmortagne>\u00a0so this is linked  \n14:37\u00a0<cjd>\u00a0vmassol: and you decided it's kind of crap to do that?  \n14:37\u00a0<Enygma`>\u00a0I thought we were using script services to restrict access to lower levels, more or less like programming rights does.  \n14:37\u00a0<vmassol>\u00a0how do add try/catch tmortagne?  \n14:38\u00a0<Enygma`>\u00a0if we add try/catch, we might as well drop velocity and use groovy instead  \n14:38\u00a0<vmassol>\u00a0(not convinced \u00a0we want that TBH but curious how you'd do it)  \n14:38\u00a0<tmortagne>\u00a0you use an ubersepctor and you enable it with a class (the try) and get the exception with another call (the catch)  \n14:38\u00a0<tmortagne>\u00a0not very hard  \n14:38\u00a0<cjd>\u00a0vmassol: b/c if you've thought about it and decided that myscriptservice.errno is better, I defer to you  \n14:38\u00a0<tmortagne>\u00a0it's just about putting a marcjer in the Execution context that basically say \"starting now catch exception and store them\"  \n14:38\u00a0<vmassol>\u00a0ok so it's the same as what we're doing in practice  \n14:39\u00a0<tmortagne>\u00a0not really  \n14:39\u00a0<tmortagne>\u00a0here its the script that decide  \n14:39\u00a0<tmortagne>\u00a0you don't have the pain of doing that in all APIs  \n14:39\u00a0<vmassol>\u00a0yes but if you have an uberspector as I suggested  \n14:39\u00a0<vmassol>\u00a0you don't even need to call the start  \n14:39\u00a0<tmortagne>\u00a0uberspector alone is not enough IMO  \n14:39\u00a0<cjd>\u00a0don't need it but you want it  \n14:40\u00a0<tmortagne>\u00a0sometimes you don't want to catch everything  \n14:40\u00a0<cjd>\u00a0b/c otherwise all exceptions are eaten and everything steams along nomatter what :D  \n14:40\u00a0<tmortagne>\u00a0so IMO it should be enabled  \n14:40\u00a0<vmassol>\u00a0you can have #throw() too  \n14:40\u00a0<vmassol>\u00a0instead  \n14:40\u00a0<Denis>\u00a0has joined #xwiki  \n14:40\u00a0<vmassol>\u00a0for the rare cases you want it rethrown  \n14:40\u00a0<vmassol>\u00a0my point is that you want to try/carch all the time by default  \n14:41\u00a0<vmassol>\u00a0and maybe in some rare cases you want it to bubble up  \n14:41\u00a0<vmassol>\u00a0for this you can have this #throw()  \n14:41\u00a0<tmortagne>\u00a0I don't like it, if the method you call failed you will not notice unless you do special handling and then you will continue as if everything was ok  \n14:41\u00a0<vmassol>\u00a0otherwise you're going to have #try() calls everywhere you call java  \n14:41\u00a0<cjd>\u00a0php does this  \n14:41\u00a0<tmortagne>\u00a0it's better to have special error handling when you want to have it and not have to do it all the time even when you don't care about exceptions  \n14:42\u00a0<cjd>\u00a0so far blowing up the script has been fine  \n14:42\u00a0<vmassol>\u00a0nope  \n14:42\u00a0<vmassol>\u00a0it's not  \n14:42\u00a0<vmassol>\u00a0actually  \n14:42\u00a0<vmassol>\u00a0that's what I'm fixing  \n14:42\u00a0<vmassol>\u00a0:)  \n14:42\u00a0<cjd>\u00a0xwiki.php  \n14:42\u00a0<tmortagne>\u00a0you will have to get the exception to see if anything wrong happen anyway so it' not like you were not going to do anything  \n14:42\u00a0<vmassol>\u00a0with http://jira.xwiki.org/browse/XWIKI-11050  \n14:42\u00a0<cjd>\u00a0#notjudging  \n14:43\u00a0<cjd>\u00a0yeah php does that  \n14:43\u00a0<cjd>\u00a0report a little error in the top of the screen and keep doing \\*something\\*  \n14:43\u00a0<cjd>\u00a0what it keeps doing, who knows :D  \n14:56\u00a0<andreeapopescu>\u00a0has quit  \n15:02\u00a0<polx>\u00a0has quit  \n15:02\u00a0<msmeria>\u00a0has quit  \n15:04\u00a0<polx>\u00a0has joined #xwiki  \n15:09\u00a0<lucaa>\u00a0has joined #xwiki  \n15:13\u00a0<DarkKnightCZ>\u00a0hi, $xwiki.getUserName link creation is handled where?  \n15:15\u00a0<cjd>\u00a0mmm in a .java file iirc  \n15:16\u00a0<cjd>\u00a0either com/xpn/xwiki/api/XWiki.java or in com/xpn/xwiki/XWiki.java  \n15:16\u00a0<tmortagne>\u00a0DarkKnightCZ: https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/XWiki.java#L4926  \n15:17\u00a0<DarkKnightCZ>\u00a0ok, so it's not easily modifiable :) i will modify it in template then  \n15:23\u00a0<tmortagne>\u00a0if what you want to modify is \"firstname lastname\" then indeed you can't do it  \n15:24\u00a0<DarkKnightCZ>\u00a0actually i want to modify the url, so it's not such problem  \n15:26\u00a0<tmortagne>\u00a0ok  \n15:27\u00a0<gdelhumeau>\u00a0I don't know what happens there: http://ci.xwiki.org/job/xwiki-enterprise-test-wysiwyg/65/org.xwiki.enterprise$xwiki-enterprise-test-wysiwyg/testReport/org.xwiki.test.wysiwyg/MacroTest/testDoubleClickToEditMacro/  \n15:27\u00a0<gdelhumeau>\u00a0I do not reproduce locally, even by running it 100times  \n15:28\u00a0<vmassol>\u00a0mail sent concerning try/catch  \n15:44\u00a0<polx>\u00a0has quit  \n15:49\u00a0<Enygma`>\u00a0gdelhumeau: see http://jira.xwiki.org/browse/XWIKI-11057 about that test  \n15:49\u00a0<Enygma`>\u00a0it seems to be a real problem  \n15:51\u00a0<momomomomo>\u00a0has joined #xwiki  \n15:51\u00a0<Enygma`>\u00a0I`m starting the 6.2 release  \n15:53\u00a0<gdelhumeau>\u00a0good  \n15:53\u00a0<Enygma`>\u00a0http://ci.xwiki.org/ is looking good enough for me for now  \n15:56\u00a0<polx>\u00a0has joined #xwiki  \n16:01\u00a0<tmortagne>\u00a0Enygma`: Denis has just found something that look like a blocker in 6.2M2  \n16:02\u00a0<tmortagne>\u00a0did anyone tried DW very recently ?  \n16:02\u00a0<vmassol>\u00a0Enygma`: http://ci.xwiki.org/job/xwiki-enterprise-test-wysiwyg-6.2.x/ has never passed, how could we know there's no real error in there? it doesn't seem to be flickering  \n16:03\u00a0<tmortagne>\u00a0the bug he have is that DW report step does not list documents  \n16:03\u00a0<vmassol>\u00a0oh it's testDoubleClickToEditMacro you mentioned yesteday  \n16:03\u00a0<Enygma`>\u00a0vmassol: please see my reply above to gdelhumeau  \n16:03\u00a0<Enygma`>\u00a0yes  \n16:03\u00a0<tmortagne>\u00a0I let you give more technical details Denis  \n16:03\u00a0<tmortagne>\u00a0downloading the latest SNAPSHOT  \n16:04\u00a0<tmortagne>\u00a0gdelhumeau: the issue seems to be require.js not loaded for some reason, does this ring a bell ?  \n16:05\u00a0<polx>\u00a0has quit  \n16:05\u00a0<gdelhumeau>\u00a0on DW?  \n16:05\u00a0<gdelhumeau>\u00a0never seen that  \n16:06\u00a0<Denis>\u00a0actually, the final report step does not work for me  \n16:06\u00a0<Denis>\u00a0I got a list of spaces, but now way to extend them  \n16:06\u00a0<Denis>\u00a0in the JS console, I saw \"require is not defined\" errors  \n16:07\u00a0<Denis>\u00a0BTW, the DW is not bootstrap relooked, this is the first thing everyone see, it would be nice to have some improvement there  \n16:08\u00a0<Denis>\u00a0s/but now way/but no way/  \n16:11\u00a0<tmortagne>\u00a0Denis, Enygma, gdelhumeau: I can't reproduce on xwiki-enterprise-jetty-hsqldb-6.2-20140918.094302-206  \n16:11\u00a0<Enygma`>\u00a0tmortagne: me neither  \n16:11\u00a0<Enygma`>\u00a0just tried it  \n16:11\u00a0<Enygma`>\u00a0I can successfully expand the directories in the report  \n16:11\u00a0<Enygma`>\u00a0I`ve used \u00a0\u00a0p, li { white-space: pre-wrap; } \u00a0xwiki-enterprise-jetty-hsqldb-6.2-20140917.175807-204  \n16:12\u00a0<gdelhumeau>\u00a0Denis: is it during an upgrade?  \n16:13\u00a0<Enygma`>\u00a0browser cache issue maybe?  \n16:16\u00a0<gdelhumeau>\u00a0cannot reproduce after the creation of a subwiki  \n16:16\u00a0<tmortagne>\u00a0gdelhumeau: is it possible there is some related things you fixed since 6.2M2 ?  \n16:17\u00a0<gdelhumeau>\u00a0I don't see  \n16:18\u00a0<Enygma`>\u00a0guys, I get stuff like this when releasing the translations:  \n16:18\u00a0<Enygma`>\u00a0http://hastebin.com/huyilahufu.tex  \n16:18\u00a0<Enygma`>\u00a0for commons for example  \n16:18\u00a0<Enygma`>\u00a0there are these ApplicationResources.properties files modified and are removing some translation keys  \n16:19\u00a0<Enygma`>\u00a0in another case, I have xwiki-commons-extension-api/src/main/resources/ApplicationResources\\_lv.properties  \n16:19\u00a0<Enygma`>\u00a0where git reports a couple of lines modified but with the same content  \n16:19\u00a0<Enygma`>\u00a0tmortagne: any idea here?  \n16:19\u00a0<Denis>\u00a0gdelhumeau: yes, it was  \n16:19\u00a0<gdelhumeau>\u00a0then maybe a cache issue  \n16:20\u00a0<tmortagne>\u00a0Enygma`: looking  \n16:20\u00a0<gdelhumeau>\u00a0can you try to refresh the cache of your browser?  \n16:21\u00a0<Enygma`>\u00a0tmortagne: complete git diff log for xwiki-commons: http://hastebin.com/obajozicad.avrasm  \n16:21\u00a0<tmortagne>\u00a0Enygma`: thoses property don't exist in the default language, I gues I introduce then in a milestone and removed them before the final  \n16:21\u00a0<Denis>\u00a0not a cache issue, already tried (it was an upgrade, but I never run the initial version on that server AFAIR)  \n16:21\u00a0<Enygma`>\u00a0so safe to ignore?  \n16:22\u00a0<gdelhumeau>\u00a0Denis: I did some upgrade to test, and the last step was looking like flamingo  \n16:22\u00a0<tmortagne>\u00a0they don't exist in the default language so it means they are not used anyway so yes it's safe  \n16:23\u00a0<Denis>\u00a0gdelhumeau: it was 6.2M2  \n16:23\u00a0<Enygma`>\u00a0thx  \n16:24\u00a0<Denis>\u00a0I saw nothing changed in DW compare to 5.x  \n16:27\u00a0<vmassol>\u00a0wow seems we have some other regrssion  \n16:27\u00a0<vmassol>\u00a0look at this:  \n16:27\u00a0<vmassol>\u00a0http://playground.xwiki.org/xwiki/bin/view/Main/VMA  \n16:27\u00a0<vmassol>\u00a0it's doing:  \n16:27\u00a0<vmassol>\u00a0$services.query.xwql(\"where doc.creationDate > '2008-01-01'\").execute()  \n16:28\u00a0<vmassol>\u00a0when I execute this locally on a 6.3-SNAPSHOT I get an error  \n16:28\u00a0<vmassol>\u00a0need to check if we've changed anything in the JPQL parser\u2026 any idea?  \n16:28\u00a0<tmortagne>\u00a0I think we fixed some bug in the parser yes  \n16:29\u00a0<tmortagne>\u00a0XWIKI-10217  \n16:30\u00a0<tmortagne>\u00a0XWIKI-10189  \n16:31\u00a0<vmassol>\u00a03 commits done by gdelhumeau on the grammar indeed  \n16:31\u00a0<vmassol>\u00a08455, 10189, 10217  \n16:31\u00a0<gdelhumeau>\u00a0Denis: ah yes, I have changed that in 6.2 final  \n16:32\u00a0<Denis>\u00a0ok, not an issue than  \n16:32\u00a0<gdelhumeau>\u00a0my changes have nothing to do with the dates or the comparision  \n16:33\u00a0<vmassol>\u00a0it's not 10189  \n16:33\u00a0<vmassol>\u00a0errr 8455 I mean  \n16:33\u00a0<tmortagne>\u00a0\u00a0XWIKI-8455 is older than xwiki.org  \n16:34\u00a0<vmassol>\u00a0yep  \n16:34\u00a0<tmortagne>\u00a0the 2 I lested are the only one after xwiki.org  \n16:34\u00a0<vmassol>\u00a0thats why I say it's not this one  \n16:34\u00a0<tmortagne>\u00a0listed  \n16:34\u00a0<tmortagne>\u00a0there was one from you after XWIKI-8455 ;)  \n16:34\u00a0<vmassol>\u00a0downloading 6.0M2  \n16:34\u00a0<tmortagne>\u00a0but not really in the parser itself  \n16:35\u00a0<tmortagne>\u00a0anyway whatever is the cause if you have an error for something that was working it's a regression that should be fixed  \n16:35\u00a0<vmassol>\u00a0creating jira  \n16:38\u00a0<polx>\u00a0has joined #xwiki  \n16:41\u00a0<vmassol>\u00a0ah no  \n16:41\u00a0<vmassol>\u00a0I know  \n16:41\u00a0<vmassol>\u00a0playground is on mysql and I tested on hsqldb  \n16:41\u00a0<vmassol>\u00a0:)  \n16:41\u00a0<vmassol>\u00a0checking what SQL is generated  \n16:42\u00a0<tmortagne>\u00a0might be hsqldb limitation indeed  \n16:46\u00a0<vmassol>\u00a0ok going to close the issue  \n16:46\u00a0<vmassol>\u00a0and fix the doc  \n16:49\u00a0<Denis>\u00a0has quit  \n16:52\u00a0<ClemensR>\u00a0has quit  \n16:55\u00a0<polx>\u00a0has quit  \n16:57\u00a0<vmassol>\u00a0gdelhumeau: I'm sure your hearbeat had increased, no? :)  \n16:57\u00a0<gdelhumeau>\u00a0actually I am pretty confident about my changes in that grammar :)  \n16:57\u00a0<vmassol>\u00a0ahah  \n16:57\u00a0<vmassol>\u00a0good  \n17:06\u00a0<polx>\u00a0has joined #xwiki  \n17:09\u00a0<evalica>\u00a0has quit  \n17:12\u00a0<KermitTheFragger>\u00a0has quit  \n17:14\u00a0<polx>\u00a0has quit  \n17:16\u00a0<vmassol>\u00a0has quit  \n17:16\u00a0<vmassol>\u00a0has joined #xwiki  \n18:03\u00a0<cjd>\u00a0has quit  \n18:05\u00a0<gdelhumeau>\u00a0has quit  \n18:10\u00a0<polx>\u00a0has joined #xwiki  \n18:20\u00a0<DarkKnightCZ>\u00a0has quit  \n18:29\u00a0<mflorea>\u00a0has quit  \n18:29\u00a0<polx>\u00a0has quit  \n18:31\u00a0<momomomomo>\u00a0has quit  \n18:42\u00a0<tmortagne>\u00a0has quit  \n18:45\u00a0<momomomomo>\u00a0has joined #xwiki  \n18:47\u00a0<woshilapin>\u00a0has quit  \n19:09\u00a0<momomomomo>\u00a0has quit  \n19:18\u00a0<lucaa>\u00a0has quit  \n19:31\u00a0<Slashman\\_>\u00a0has quit  \n19:37\u00a0<D-Spair>\u00a0has joined #xwiki  \n19:40\u00a0<polx>\u00a0has joined #xwiki  \n19:45\u00a0<vmassol>\u00a0Enygma`: how is it going?  \n19:59\u00a0<Enygma`>\u00a0only enterprise left to build  \n20:00\u00a0<Enygma`>\u00a0I had to pause the build for about 2 hours to go to an event  \n20:04\u00a0<Slashman>\u00a0has joined #xwiki  \n20:13\u00a0<Enygma`>\u00a0There we go. The release is built.  \n20:19\u00a0<Slashman>\u00a0has quit  \n20:37\u00a0<vmassol>\u00a0cool  \n20:42\u00a0<sdumitriu1>\u00a0vmassol: I wonder if you can help me with a component manager question  \n20:43\u00a0<sdumitriu1>\u00a0I have <typed> role, but I don't care about the type  \n20:44\u00a0<sdumitriu1>\u00a0By default, the CM registers components with the exact type  \n20:44\u00a0<sdumitriu1>\u00a0So asking for all implementations of that role will fail  \n20:45\u00a0<sdumitriu1>\u00a01. I can explicitly override the implemented role for each component, as in https://github.com/phenotips/phenotips/blob/master/components/patient-data/impl/src/main/java/org/phenotips/data/internal/controller/DatesController.java#L59  \n20:45\u00a0<momomomomo>\u00a0has joined #xwiki  \n20:45\u00a0<momomomomo>\u00a0has quit  \n20:46\u00a0<sdumitriu1>\u00a0But this means that I can't ask for @Inject List<Controller<?>> allControllers, I have to invoke the ComponentManager manually  \n20:46\u00a0<sdumitriu1>\u00a0And having to manually override the role in each implementation means that I have a hidden code requirement that impementors must remember to use  \n20:46\u00a0<sdumitriu1>\u00a0So this is ugly  \n20:47\u00a0<sdumitriu1>\u00a0Any suggestions?  \n20:50\u00a0<momomomomo>\u00a0has joined #xwiki  \n20:57\u00a0<momomomomo>\u00a0has quit  \n20:57\u00a0<polx>\u00a0has quit  \n21:07\u00a0<momomomomo>\u00a0has joined #xwiki  \n21:15\u00a0<momomomomo>\u00a0has quit  \n21:18\u00a0<abusenius>\u00a0has joined #xwiki  \n22:35\u00a0<polx>\u00a0has joined #xwiki  \n22:57\u00a0<abusenius>\u00a0has quit  \n23:06\u00a0<polx>\u00a0has quit  \n23:09\u00a0<polx>\u00a0has joined #xwiki\n"}