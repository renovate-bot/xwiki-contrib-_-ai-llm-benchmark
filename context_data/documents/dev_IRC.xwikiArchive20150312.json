{"id": "dev:IRC.xwikiArchive20150312", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20150312", "title": "IRC Archive for channel #xwiki on 12 March 2015 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<sburjan>\u00a0has quit  \n06:01\u00a0<Denis1>\u00a0has joined #xwiki  \n06:03\u00a0<Denis>\u00a0has quit  \n06:07\u00a0<FUF\\_>\u00a0has joined #xwiki  \n06:09\u00a0<D-Spair>\u00a0has quit  \n06:09\u00a0<FUF>\u00a0has quit  \n06:10\u00a0<D-Spair>\u00a0has joined #xwiki  \n07:15\u00a0<mflorea>\u00a0has joined #xwiki  \n07:36\u00a0<msmeria>\u00a0has joined #xwiki  \n07:44\u00a0<sburjan>\u00a0has joined #xwiki  \n08:14\u00a0<gsmeria>\u00a0has joined #xwiki  \n08:17\u00a0<cjd>\u00a0has quit  \n08:19\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n08:24\u00a0<vmassol>\u00a0has joined #xwiki  \n08:42\u00a0<woshilapin>\u00a0has quit  \n08:51\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:05\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n09:07\u00a0<DarkKnightCZ>\u00a0Hi, is it possible to have dynamic list field in class?  \n09:07\u00a0<vmassol>\u00a0good morning eveyrone  \n09:14\u00a0<tmortagne>\u00a0DarkKnightCZ: as in http://www.xwiki.org/xwiki/bin/view/FAQ/HowToCreateAOneToManyRelationshipInXWiki ?  \n09:17\u00a0<cjd>\u00a0has joined #xwiki  \n09:22\u00a0<gsmeria>\u00a0has quit  \n09:24\u00a0<DarkKnightCZ>\u00a0tmortagne: not exactly, i need string list with dynamic data (so just like static list, but with undefined values -> insterted on object creation)... I know it's possible to create simple textarea and chose my own separator and do the logic, but then searching by those values will be slow  \n09:25\u00a0<tmortagne>\u00a0so some kind of virtual list ?  \n09:25\u00a0<tmortagne>\u00a0nothing really stored in the document itself  \n09:26\u00a0<DarkKnightCZ>\u00a0yes... I guess another possibility would be to have multiple instances of the class with simple string (so couple of objects would give me the list), is the performance somehow decreased when there are hundreds/thousands objects on one page (and possibly similar number of attachments)?  \n09:28\u00a0<tmortagne>\u00a0what is important is what you want to store exactly  \n09:28\u00a0<tmortagne>\u00a0then you can customize the displayer of pretty much any field  \n09:29\u00a0<gsmeria>\u00a0has joined #xwiki  \n09:29\u00a0<DarkKnightCZ>\u00a0the functionality i need to create is tagged attachments... since it's not OTB functionality, without any crucial modifications i can think of few possiblities  \n09:31\u00a0<DarkKnightCZ>\u00a01) one page where objects would correspond to attachments (one object - one attachment, object would store list of tags), 2) one page where objects would be for attachment+tag (multiple objects for one attachment), 3) one page - one attachment and do it the same as tag class does it right now  \n09:32\u00a0<tmortagne>\u00a0in 3) you mean use document tags as the attachment tags ?  \n09:33\u00a0<tmortagne>\u00a0I guess the most natural one is 1) but the good thing with 3) is that you can reuse existing tags tools  \n09:35\u00a0<DarkKnightCZ>\u00a0well in 3. i would possibly duplicate the tag class, so it will be separated (so different view logic for attachment tags), and implementation of 1. is the thing i'm little worried about (since i cannot find this kind of virtual list and i guess query search for values could be optimized by index, if you're search for the whole value, not just the part)  \n09:37\u00a0<lucaa>\u00a0has joined #xwiki  \n09:37\u00a0<tmortagne>\u00a0I guess for 1) the cleanest would be to introduce a new tag property (so that it can be reuse elsewhere since it's quite a generic feature) and the quickest would be to use a dblist field in which you can put a hql query  \n09:39\u00a0<tmortagne>\u00a0in static list you can say that you want real list storage and not having all the elements stored in the same string  \n09:39\u00a0<tmortagne>\u00a0(static list and dblist too)  \n09:42\u00a0<tmortagne>\u00a0other subject, I just discovered http://zeroturnaround.com/free/optimizer-for-eclipse/ that might interest Eclipse devs  \n09:43\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:50\u00a0<woshilapin>\u00a0has joined #xwiki  \n09:54\u00a0<lucaa>\u00a0has quit  \n09:55\u00a0<lucaa>\u00a0has joined #xwiki  \n09:59\u00a0<evalica>\u00a0has joined #xwiki  \n10:01\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n10:10\u00a0<gsmeria>\u00a0has quit  \n10:10\u00a0<DarkKnightCZ>\u00a0tmortagne: thanks... so static list can be used for this ($doc.getObject(\"XWiki.TaggedAttachmentClass\").getProperty(\"tags\").getValue() to obtain those values)  \n10:12\u00a0<tmortagne>\u00a0getValue() is supposed to always return a list for static list whatever way is used to actually store it (real list or everything in the same string) behind the scene if that's the question  \n10:13\u00a0<tmortagne>\u00a0if it's a multiselect list  \n10:13\u00a0<tmortagne>\u00a0if it's a single value list then you get a single string  \n10:14\u00a0<tmortagne>\u00a0but in your case you want multiselect anyway  \n10:14\u00a0<DarkKnightCZ>\u00a0yup, thanks  \n10:14\u00a0<tmortagne>\u00a0(and probably also Relational storage)  \n10:14\u00a0<gsmeria>\u00a0has joined #xwiki  \n10:16\u00a0<DarkKnightCZ>\u00a0already selected :) i guess it will use xwikistrings table, right?  \n10:17\u00a0<Denis1>\u00a0is now known as <Denis>  \n10:34\u00a0<tmortagne>\u00a0DarkKnightCZ: not sure but I think it may actually be xwikilistitems table  \n10:34\u00a0<tmortagne>\u00a0xwikistrings table is where string properties are stored  \n10:36\u00a0<DarkKnightCZ>\u00a0tmortagne: yup... in both tables the XWL\\_VALUE is indexed, so searching should be optimized  \n10:59\u00a0<xwikibot>\u00a0has joined #xwiki  \n11:06\u00a0<woshilapin>\u00a0has quit  \n11:06\u00a0<woshilapin>\u00a0has joined #xwiki  \n11:21\u00a0<Denis1>\u00a0has joined #xwiki  \n11:22\u00a0<Denis2>\u00a0has joined #xwiki  \n11:22\u00a0<Denis>\u00a0has quit  \n11:23\u00a0<Denis2>\u00a0is now known as <Denis>  \n11:23\u00a0<Denis1>\u00a0has quit  \n12:05\u00a0<Trefex>\u00a0has joined #xwiki  \n12:05\u00a0<gsmeria>\u00a0has quit  \n12:10\u00a0<ClemensR>\u00a0has joined #xwiki  \n12:47\u00a0<OSIMasson>\u00a0has quit  \n12:49\u00a0<gsmeria>\u00a0has joined #xwiki  \n13:16\u00a0<OSIMasson>\u00a0has joined #xwiki  \n13:24\u00a0<gsmeria>\u00a0has quit  \n13:25\u00a0<gsmeria>\u00a0has joined #xwiki  \n13:50\u00a0<gsmeria>\u00a0has quit  \n14:20\u00a0<OSIMasson>\u00a0has quit  \n14:20\u00a0<OSIMasson>\u00a0has joined #xwiki  \n14:50\u00a0<lucaa>\u00a0has quit  \n14:51\u00a0<lucaa>\u00a0has joined #xwiki  \n15:19\u00a0<OSIMasson>\u00a0has quit  \n15:20\u00a0<DarkKnightCZ>\u00a0has quit  \n15:23\u00a0<msmeria>\u00a0has quit  \n17:25\u00a0<tmortagne>\u00a0has quit  \n17:25\u00a0<Trefex>\u00a0are you here?  \n17:25\u00a0<Trefex>\u00a0oups no name  \n17:30\u00a0<evalica>\u00a0has quit  \n17:32\u00a0<KermitTheFragger>\u00a0has quit  \n17:59\u00a0<Trefex>\u00a0has quit  \n18:10\u00a0<vmassol>\u00a0ClemensR: hi  \n18:11\u00a0<vmassol>\u00a0on http://lists.xwiki.org/pipermail/users/2015-February/029983.html you said you were able to reproduce the issue. Could you add the steps to reproduce on http://jira.xwiki.org/browse/XWIKI-11843 ?  \n18:17\u00a0<cjd>\u00a0has quit  \n18:23\u00a0<ClemensR>\u00a0\u00a0vmassol: hi  \n18:23\u00a0<woshilapin>\u00a0has quit  \n18:24\u00a0<ClemensR>\u00a0ah ok, should read first ... yes, doing so  \n18:34\u00a0<ClemensR>\u00a0ok, done  \n18:39\u00a0<vmassol>\u00a0reading\u2026 thanks ClemensR  \n19:06\u00a0<lucaa>\u00a0has quit  \n19:06\u00a0<ClemensR>\u00a0has quit  \n19:13\u00a0<cjd>\u00a0has joined #xwiki  \n19:44\u00a0<Enygma`>\u00a0has quit  \n20:41\u00a0<vmassol>\u00a0has quit  \n20:56\u00a0<gdelhumeau>\u00a0has quit  \n21:20\u00a0<gsmeria>\u00a0has joined #xwiki  \n21:42\u00a0<mflorea>\u00a0has quit  \n22:44\u00a0<gsmeria>\u00a0has quit  \n23:07\u00a0<sdumitriu>\u00a0has quit\n"}