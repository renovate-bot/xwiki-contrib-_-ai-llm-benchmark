{"id": "dev:IRC.xwikiArchive20100117", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100117", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nnpm left at 01:31 (\"Leaving.\"  \nCalebJamesDeLisl joined #xwiki at 03:19  \nSvenDowideit left at 03:50 (Read error: 60 (Operation timed out)  \nsunny\\_slls joined #xwiki at 04:36  \nCalebJamesDeLisl - (04:57): Hi sunny\\_slls, sorry I wasn't available earlier, had to catch some sleep.  \nsunny\\_slls - (05:08): hi CalebJamesDeLisl   \nsunny\\_slls - (05:08): CalebJamesDeLisl, sorry for responding late  \nCalebJamesDeLisl - (05:08): How is the scripting going?  \nsunny\\_slls - (05:08): CalebJamesDeLisl, come on don't embarrass me ..don't say sorry  \nsunny\\_slls - (05:08): CalebJamesDeLisl, working on it  \nsunny\\_slls - (05:09): i am on the verge of finishing it  \nCalebJamesDeLisl - (05:09): \"don't embarrass me\" haha, I was in bed until about 1/2 hour ago.  \nsunny\\_slls - (05:09): CalebJamesDeLisl, what time is it now there?  \nCalebJamesDeLisl - (05:10): 11PM, I have a weird sleep schedule.  \nsunny\\_slls - (05:10): CalebJamesDeLisl, so soon you must be going to sleep soon  \nCalebJamesDeLisl - (05:11): Not until tomorrow some time.  \nsunny\\_slls - (05:11): haha  \nsunny\\_slls - (05:11): CalebJamesDeLisl, ok give me sometime so that i finish the script  \nsunny\\_slls - (05:11): its very bad to extend it  \nCalebJamesDeLisl - (05:12): Have you done much with querying the database? $xwiki.searchDocuments( ?  \nsunny\\_slls - (05:12): nope  \nCalebJamesDeLisl - (05:12): Once you get the hang of velocity itself, you can have a lot of fun running searches and creating output.  \nsunny\\_slls - (05:13): ok  \nsunny\\_slls - (05:13): so hang on for half an hour till i finish it  \nCalebJamesDeLisl - (05:13): If you need any help, you can post your script on pastebin and I can look at it.  \nsunny\\_slls - (05:13): and then we will have scripting fun together  \nsunny\\_slls - (05:13): :)  \nsunny\\_slls - (05:13): thanks  \nsunny\\_slls - (05:14): CalebJamesDeLisl, that was very kind and supporting of you  \nsunny\\_slls - (05:14): :)  \nsunny\\_slls - (05:14): CalebJamesDeLisl, by the way you are studying in which semester?  \nCalebJamesDeLisl - (05:14): No problem.  \nCalebJamesDeLisl - (05:15): No college for me, I'm studying the XWiki core.  \nsunny\\_slls - (05:15): ok, so seaching for job which all people do after completing college stuffs?  \nCalebJamesDeLisl - (05:16): Something like that.  \nsunny\\_slls - (05:16): so do you get paid for working for xwiki core  \nsunny\\_slls - (05:16): ?  \nCalebJamesDeLisl - (05:17): There has been some talk about it, we will see.  \nsunny\\_slls - (05:17): ok  \nsunny\\_slls - (05:17): CalebJamesDeLisl, i too like to work with corejava :)  \nsunny\\_slls - (05:18): CalebJamesDeLisl, ok i will catch you later ..lets get back to velocity stuff  \nCalebJamesDeLisl - (05:18): Enjoy.  \nsunny\\_slls - (05:36): CalebJamesDeLisl, http://pastebin.com/m6cb9a89b  \nsunny\\_slls - (05:37): Key: $key -> Value: $allProducts.get($key) \u00a0\u00a0\u00a0please explain this statement  \nsunny\\_slls - (05:38): ?  \nCalebJamesDeLisl - (05:39): Should I give you the equivalent java code?  \nCalebJamesDeLisl - (05:40): if $allProducts is a Map and $key is a key in that map, then it will output \"Key: (the key) -> Value: (the corresponding value)  \nCalebJamesDeLisl - (05:40): \"  \nCalebJamesDeLisl - (05:42): You understand that \"#foreach( $key in $allProducts.keySet() )\" will give you a loop and set $key to each key in the Map \u00a0$allProducts right?  \nsunny\\_slls - (05:43): if i say that allproducts.get($key) method retrieves the key to all the products and the value is stored in the \"Value\" \u00a0and $key points out to the value in \"Value\"  \nsunny\\_slls - (05:43): is that right ?  \nCalebJamesDeLisl - (05:43): Yes.  \nsunny\\_slls - (05:43): ok  \nCalebJamesDeLisl - (05:43): Are you familiar with the Map interface?  \nsunny\\_slls - (05:44): in java right?  \nCalebJamesDeLisl - (05:44): Yes.  \nsunny\\_slls - (05:45): yes i am familiar with it but never used it  \nsunny\\_slls - (05:45): little familiar with hashMap  \nCalebJamesDeLisl - (05:45): It will help to understand that all Velocity code is compiled into Java code. You are programming Java with different commands.  \nsunny\\_slls - (05:46): ok  \nCalebJamesDeLisl - (05:46): Yes, HashMap is a type of Map.  \nsunny\\_slls - (05:47): there are packages in java which contains these in-build methods, does velocity also have such kind of packages which are imported?  \nCalebJamesDeLisl - (05:48): In velocity you can't call \"import java.lang.SomePackage\" and that makes it more secure.  \nsunny\\_slls - (05:48): ok i will come on this later  \nCalebJamesDeLisl - (05:49): Have you tried running the code you showed me?  \nsunny\\_slls - (05:50): nope  \nsunny\\_slls - (05:50): wait  \nSvenDowideit joined #xwiki at 05:53  \nsunny\\_slls - (07:05): CalebJamesDeLisl, http://pastebin.com/m7fb68dab  \nsunny\\_slls - (07:05): #set($dynamicsource = \"$source$select\")  \nCalebJamesDeLisl - (07:06): In java that would be String dynamicsource = source + select;  \nsunny\\_slls - (07:07): but the variable which contains the value is $source1 not $source  \nsunny\\_slls - (07:07): and why the value on is not showing since it should be concatenated with \"abc\"  \nsunny\\_slls - (07:08): i mean value of the $select which is 1 here  \nCalebJamesDeLisl - (07:08): Looks like you found a mistake in the Velocity documentation :)  \nsunny\\_slls - (07:08): no its not a mistake  \nsunny\\_slls - (07:09): when i run the code it is running correctly withour any error or exception  \nsunny\\_slls - (07:09): \\*without  \nCalebJamesDeLisl - (07:09): if $source is not defined (and it isn't in the example) Velocity defaults to: \"String dynamicsource = \"$source\" + select;  \nCalebJamesDeLisl - (07:09): \"  \nsunny\\_slls - (07:10): source is defined   \nCalebJamesDeLisl - (07:10): Oh I though only $source1 was defined.  \nsunny\\_slls - (07:10): oh sorry  \nsunny\\_slls - (07:10): my mistake  \nsunny\\_slls - (07:11): but then how come its taking the value of $source1 in $source?  \nCalebJamesDeLisl - (07:11): It shouldn't be.  \nsunny\\_slls - (07:12): err  \nCalebJamesDeLisl - (07:12): or.  \nsunny\\_slls - (07:13): according to my logic the value of the $source1= \"abc\" and $select = 1 , so the output of the concatenated value should be $source$select = abc1  \nsunny\\_slls - (07:13): but its not coming like that  \nCalebJamesDeLisl - (07:14): Let me guess, it comes out to \"abc\"  \nsunny\\_slls - (07:15): yes  \nCalebJamesDeLisl - (07:16): Welcome to the land of metaprogramming :)  \nsunny\\_slls - (07:16): without quotes  \nsunny\\_slls - (07:16): gosh~!  \nCalebJamesDeLisl - (07:16): Here's what happens  \nsunny\\_slls - (07:16): haha  \nCalebJamesDeLisl - (07:17): $source$select converts to java: String sourceselect = \"$source\" + select;  \nsunny\\_slls - (07:18): ok  \nCalebJamesDeLisl - (07:18): that means that sourceselect = \"$source1\"  \nCalebJamesDeLisl - (07:18): then it parses it again and says Ah hah: $sourceselect = $source1  \nCalebJamesDeLisl - (07:18): thus $sourceselect = abc  \nCalebJamesDeLisl - (07:19): which is the value of $source1  \nCalebJamesDeLisl - (07:19): You have written a program which writes a program, congratulations.  \nsunny\\_slls - (07:22): well its not so clear to me  \nCalebJamesDeLisl - (07:22): $source$select converts to java: String sourceselect = \"$source\" + select;  \nsunny\\_slls - (07:22): ok  \nsunny\\_slls - (07:23): but how sourceselect = \"$source1\" \u00a0?  \nCalebJamesDeLisl - (07:23): which is interpreted as: String sourceselect = \"$source\" + \"1\";  \nCalebJamesDeLisl - (07:23): because $select = 1  \nCalebJamesDeLisl - (07:24): when java executes that line, it becomes: String sourceselect = \"$source1\";  \nsunny\\_slls - (07:24): got it  \nsunny\\_slls - (07:25): ya now its clear  \nsunny\\_slls - (07:25): thanks  \nCalebJamesDeLisl - (07:25): Funny when you actually see what's happening isn't it?  \nsunny\\_slls - (07:25): ya its a bit weird  \nCalebJamesDeLisl - (07:25): Now lets see if we can overflow the stack :)  \nsunny\\_slls - (07:26): ok  \nCalebJamesDeLisl - (07:26): With a recursive call which never solves.  \nCalebJamesDeLisl - (07:26): Not a security issue but it's fun.  \nsunny\\_slls - (07:27): ok  \nsunny\\_slls - (07:39): when i am declaring a macro then it is giving an error  \nsunny\\_slls - (07:39): #macro( d )  \nsunny\\_slls - (07:41): CalebJamesDeLisl, ?  \nCalebJamesDeLisl - (07:42): What kind of error is it?  \nsunny\\_slls - (07:42): http://pastebin.com/m4830d201  \nCalebJamesDeLisl - (07:43): Macros have to end with #end  \nCalebJamesDeLisl - (07:43): here are some examples of macros  \nCalebJamesDeLisl - (07:44): http://svn.xwiki.org/svnroot/xwiki/platform/web/trunk/standard/src/main/webapp/templates/macros.vm  \nCalebJamesDeLisl - (07:44): BTW: These macros are all available for you to use while coding.  \nsunny\\_slls - (07:44): ya  \nsunny\\_slls - (07:44): got it  \nCalebJamesDeLisl - (08:03): Hey sunny...  \nsunny\\_slls is now known as sunny\\_slls|away ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nsunny\\_slls|away is now known as sunny\\_slls ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nsunny\\_slls left at 09:34 (\"Leaving\"  \nA-Kaser joined #xwiki at 11:33  \nbougie joined #xwiki at 13:58  \nbougie left #xwiki at 13:58  \nsunny\\_slls joined #xwiki at 14:46  \nsunny\\_slls - (14:47): hello everybody  \nCalebJamesDeLisl - (14:57): Hi sunny  \nsunny\\_slls - (15:26): CalebJamesDeLisl, http://pastebin.com/mc74c2a0  \nsunny\\_slls - (15:26): please explain me this   \nCalebJamesDeLisl - (15:26): ?  \nsunny\\_slls - (15:27): CalebJamesDeLisl, http://pastebin.com/mc74c2a0  \nCalebJamesDeLisl - (15:27): It should output ${my:invalid:non:reference} I think  \nsunny\\_slls - (15:27): its giving an error  \nsunny\\_slls - (15:28): http://pastebin.com/m44263ddd  \nsunny\\_slls - (15:28): here is the error  \nCalebJamesDeLisl - (15:30): You could try #set($d = '${') then you would be able to say ${d}my:invalid...  \nsunny\\_slls - (15:31): i can't get the concept of what is it trying to do   \nsunny\\_slls - (15:31): please explain  \nCalebJamesDeLisl - (15:31): What they are teaching is how to say things on your web page which Velocity wants to parse as syntax.  \nsunny\\_slls - (15:31): ok  \nsunny\\_slls - (15:32): one question  \nsunny\\_slls - (15:32): $s = ${s} is the same thing?  \nCalebJamesDeLisl - (15:32): yes $s is the same as ${s}  \nCalebJamesDeLisl - (15:33): but $sammy is not the same as ${s}ammy   \nsunny\\_slls - (15:33): yes  \nCalebJamesDeLisl - (15:33): You use the {} to stop it from trying interpret a bigger block of text as a variable  \nsunny\\_slls - (15:34): so here when it is writing ${D}{my:invalid:non:reference} it should give \u00a0\u00a0{my:invalid:non:reference}{my:invalid:non:reference}  \nsunny\\_slls - (15:35): since $D = \"$\"  \nCalebJamesDeLisl - (15:37): No ${D} resolves to '$' so you get ${my:invalid:non:ref}  \nsunny\\_slls - (15:38): oh its in single quotes  \nsunny\\_slls - (15:38): for double quotes my answer is right  \nCalebJamesDeLisl - (15:39): I don't see how ${D} ever resolves to {my:invalid:non:reference}  \nCalebJamesDeLisl - (15:40): The main difference between ' and \" is that things inside of ' are not allowed to be parsed.  \nsunny\\_slls - (15:40): yes  \nsunny\\_slls - (15:40): that is what i am saying   \nsunny\\_slls - (15:41): for \"\" the $D get parsed to {my:invalid:non:reference}  \nsunny\\_slls - (15:41): but for ' it is not parsed and gives $   \nsunny\\_slls - (15:41): thanks  \nsunny\\_slls - (15:42): can you give me some link of website that are made from velocity?  \nCalebJamesDeLisl - (15:43): I don't know, you'd have to for references on the Velocity website.  \nCalebJamesDeLisl - (15:43): BTW: I found the problem with your code.  \nCalebJamesDeLisl - (15:43): First line is an example.  \nCalebJamesDeLisl - (15:44): Remove it and it works fine :)  \nsunny\\_slls - (15:44): ok  \nsunny\\_slls - (15:45): yes it worls  \nsunny\\_slls - (15:45): \\*works  \nsunny\\_slls - (16:01): CalebJamesDeLisl, please tell me about the \\\\ character  \nsunny\\_slls - (16:02): getting little confused  \nCalebJamesDeLisl - (16:02): Where are you using it?  \nsunny\\_slls - (16:03): #set( $foo = \"bar\" )  \nsunny\\_slls - (16:03): $\\!foo  \nsunny\\_slls - (16:03): $\\!{foo}  \nsunny\\_slls - (16:03): $\\\\!foo  \nsunny\\_slls - (16:03): $\\\\\\!foo  \nCalebJamesDeLisl - (16:04): if you say $x and $x = 'blah' then you will output 'blah'  \nCalebJamesDeLisl - (16:04): so you can say \\$x and the output will be '$x'  \nsunny\\_slls - (16:04): ok  \nsunny\\_slls - (16:05): \\\\$!foo will be ?  \nCalebJamesDeLisl - (16:05): one backslash \"escapes\" the character in front of it making it not parsed.  \nsunny\\_slls - (16:05): ok  \nCalebJamesDeLisl - (16:06): But backslashes can also escape themselves so \\\\ will output '\\'  \nsunny\\_slls - (16:06): ok  \nsunny\\_slls - (16:06): got it  \nCalebJamesDeLisl - (16:07): so if $x = 'blah' then \\$x will output '$x' but \\\\$x will output '\\blah'  \nsunny\\_slls - (16:07): what is the difference in between $\\\\x and \\\\$x   \nsunny\\_slls - (16:07): means $//x means?  \nCalebJamesDeLisl - (16:08): I think $\\\\x will output '$\\x' because \\ can't be used in a variable name so it assumes you literally mean to put the $ there.  \nsunny\\_slls - (16:09): got it  \nsunny\\_slls - (16:11): CalebJamesDeLisl, well now i am done with velocity ...  \nCalebJamesDeLisl - (16:11): Well now you get to use velocity to call functions in the core.  \nsunny\\_slls - (16:12): ok  \nsunny\\_slls - (16:12): so what i should do now?  \nCalebJamesDeLisl - (16:13): This page is a good read: http://platform.xwiki.org/xwiki/bin/view/DevGuide/Scripting  \nCalebJamesDeLisl - (16:13): You have a lot of things available to you such as the core XWiki object which is bound to the variable $xwiki  \nCalebJamesDeLisl - (16:14): The current document is $doc  \nCalebJamesDeLisl - (16:14): you can get the name of the current document with $doc.getName()  \nsunny\\_slls - (16:14): ok  \nCalebJamesDeLisl - (16:15): If you are used to Java then the hard part is over, the rest is all calling Java methods.  \nsunny\\_slls - (16:15): yes i am used to java   \nsunny\\_slls - (16:16): except the collection framework part is incomplete  \nsunny\\_slls - (16:18): there are specifications for each language . do i have to know them all  \nCalebJamesDeLisl - (16:18): You follow tutorials very carefully.  \nsunny\\_slls - (16:18): since i don't have any idea about groovy  \nCalebJamesDeLisl - (16:18): I usually just scan over the headlines and then come back later if I have a problem.  \nsunny\\_slls - (16:18): ok  \nCalebJamesDeLisl - (16:19): Javadoc is very cool for looking stuff up.  \nsunny\\_slls - (16:19): well but i can see a lot of use of groovy  \nCalebJamesDeLisl - (16:19): Groovy is easy, it's just java but you don't need to define a class or main method, it runs like a script.  \nsunny\\_slls - (16:19): ok  \nCalebJamesDeLisl - (16:20): Groovy also has some serious security problems.  \nsunny\\_slls - (16:20): ok  \nCalebJamesDeLisl - (16:20): XWiki only allows groovy to be written by users who have programming rights.  \nsunny\\_slls - (16:21): ok  \nsunny\\_slls - (16:21): CalebJamesDeLisl, let me read this doc...then i would come to you later  \nCalebJamesDeLisl - (16:21): ok.  \nsunny\\_slls - (16:22): btw i have to go for dinner  \nsunny\\_slls - (16:22): its already 9:00pm  \nsunny\\_slls - (16:22): see ya later  \nsunny\\_slls is now known as sunny\\_slls|away ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nsunny\\_slls|away is now known as sunny\\_slls ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nsunny\\_slls left at 19:24 (\"Leaving\"  \nA-Kaser left at 19:25 (\"\"Soyons r\u00e9alistes, exigeons l'impossible.\" Ch\u00e9 Guevara\"  \nCalebJamesDeLisl left at 19:32 (\"Off to bed.\"  \nlucaa joined #xwiki at 22:02  \nSvenDowiu joined #xwiki at 22:36  \nSvenDowideit left at 22:50 (Read error: 110 (Connection timed out)  \nSvenDowiu is now known as SvenDowideit ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nlucaa left #xwiki at 23:08  \n\n"}