{"id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome", "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/", "title": "OpenID Connect Authenticator", "collection": ["Eval", "Eval-Small", "Eval-Large"], "mimetype": "text/markdown", "language": "en", "content": "\n\n\n| openid_connect_16x16.png | **Allow an XWiki instance to authenticate on an OpenID Connect provider** |\n| --- | --- |\n\n**Recommended**\n\n| Type | JAR |\n| --- | --- |\n| Category | Authenticator |\n| Developed by | [Thomas Mortagne](https://xwiki.org/xwiki/bin/view/XWiki/ThomasMortagne) |\n| Active Installs | 146 |\n| Rating | *  * [1](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \"Poor\") * [2](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \"Satisfactory\") * [3](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \"Good\") * [4](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \"Very good\") * [5](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \"Excellent\")    1\u00a0Votes |\n| License | GNU Lesser General Public License 2.1 |\n\n\n\n| Compatibility | XWiki 14.10+ is required. |\n| --- | --- |\n\n**Installable with the Extension Manager**\n\n[Download v2.8.6](https://extensions.xwiki.org/xwiki/rest/repository/extensions/org.xwiki.contrib.oidc%3Aoidc-authenticator/versions/2.8.6/file?rid=maven-xwiki)[Sources](https://github.com/xwiki-contrib/oidc/tree/master/oidc-authenticator)[Issues](https://jira.xwiki.org/browse/OIDC)\n\nTable of contents\n\n* [Description](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HDescription)\n* [Main limitations](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HMainlimitations)\n* [Configuration](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HConfiguration)\n\t+ [Configuration Guides for specific systems](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HConfigurationGuidesforspecificsystems)\n\t\t- [Lemon LDAP / Open PAAS](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HLemonLDAP2FOpenPAAS)\n\t\t- [OpenID Authentication with Keycloak](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HOpenIDAuthenticationwithKeycloak)\n\t\t- [Univention Corporate Server](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HUniventionCorporateServer)\n\t+ [Configuration files](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HConfigurationfiles)\n\t\t- [xwiki.cfg](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#Hxwiki.cfg)\n\t\t- [xwiki.properties](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#Hxwiki.properties)\n\t+ [In-wiki configuration](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HIn-wikiconfiguration)\n\t+ [Authentication with a domain-based instance](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HAuthenticationwithadomain-basedinstance)\n* [Endpoints](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HEndpoints)\n\t+ [Callback](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HCallback)\n\t+ [Back-Channel Logout](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HBack-ChannelLogout)\n* [Bypass OpenID Connect](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HBypassOpenIDConnect)\n* [Group synchronization](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HGroupsynchronization)\n* [Customization](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HCustomization)\n\t+ [Templates](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HTemplates)\n\t+ [Listeners](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HListeners)\n* [Troubleshooting](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HTroubleshooting)\n\t+ [Enable DEBUG log](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HEnableDEBUGlog)\n\t\t- [With the Logging Admin UI](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HWiththeLoggingAdminUI)\n\t\t- [With the Logback configuration file](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HWiththeLogbackconfigurationfile)\n* [Short URLs](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HShortURLs)\n* [Prerequisites & Installation Instructions](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HPrerequisites26InstallationInstructions)\n* [Dependencies](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HDependencies)\n# Description\n\nAllow an XWiki instance to authenticate on an OpenId Connect provider. It also performs automatic synchronization.\n\nSee also [OpenID Connect Provider](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Provider/).\n\n![oidc_client_provider.png](https://extensions.xwiki.org/xwiki/bin/download/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/WebHome/oidc_client_provider.png?rev=1.1)\n\nRelease notes can be found on [OpenID Connect project page](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/#HReleaseNotes).\n\n# Main limitations\n\n* [Automatically authenticate user when coming back](https://jira.xwiki.org/browse/OIDC-16)\n\n# Configuration\n\n## Configuration Guides for specific systems\n\n### Lemon LDAP / Open PAAS\n\nA [configuration guide](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ConfigurationLemonLDAP/) is available to connect XWiki to LemonLDAP / OpenPAAS using the OpenIDC XWiki client.\n\n### OpenID Authentication with Keycloak\n\nA [configuration example for Keycloak](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20Keycloak/) is available.\n\n### Univention Corporate Server\n\nA [configuration example for Univention Corporate Server (UCS)](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/OpenID%20Authentication%20with%20UCS/) is available.\n\n## Configuration files\n\n### xwiki.cfg\n\n#-# The authentication management class.  \nxwiki.authentication.authclass=org.xwiki.contrib.oidc.auth.OIDCAuthServiceImpl### xwiki.properties\n\n#-# The base URL of the OpenId Connect Provider to use as starting point to discover the provider configuration.  \n#-# See following endpoints properties if the provider is does not support OpenID Connect discovery.  \n#-# If not indicated and not custom endpoint is provided, it will be asked to the user.  \n# oidc.provider=https://xwikiorg-node1.xwikisas.com/xwiki/oidc  \n  \n#-# The generic OpenId Connect endpoints to use to communicate with the provider.  \n#-# It's generally not needed when providing the provider discovery endpoint (which is supposed to provide those enpoints).  \n# oidc.endpoint.authorization=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/authorization  \n# oidc.endpoint.token=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/token  \n# oidc.endpoint.userinfo=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/userinfo  \n# oidc.endpoint.logout=https://xwikiorg-node1.xwikisas.com/xwiki/oidc/logout  \n  \n#-# It's possible to add custom HTTP headers to the endpoint (generally only needed for bad or non-oidc providers)  \n#-# by adding the suffix \".headers\" to the endpoint property key and listing the custom headers using key:value format.  \n#-# Note that it's not taken into account for the oidc.endpoint.authorization endpoint because it's used as a redirect.  \n#-# Here is an example to send \"Accept: application/json\" and \"SomeOtherHeader: header\" HTTP headers with the userinfo request.  \n# oidc.endpoint.userinfo.headers=Accept:application/json  \n# oidc.endpoint.userinfo.headers=SomeOtherHeader:header value  \n  \n#-# The scopes to use when redirecting to the provider  \n#-# The standard OpenID Connection scopes are:  \n#-# \\* openid: Informs the authorisation server that the client is making an OpenID Connect request (REQUIRED).  \n#-# \\* profile: Requests that access to the end-user's default profile claims at the UserInfo endpoint be granted by the issued access token.  \n#-# \\* email: Requests that access to the email and email\\_verified claims at the UserInfo endpoint be granted by the issued access token.  \n#-# \\* address: Requests that access to address claim at the UserInfo endpoint be granted by the issued access token.  \n#-# \\* phone: Requests that access to the {phone\\_number and phone\\_number\\_verified claims at the UserInfo endpoint be granted by the issued access token.  \n#-# \\* offline\\_access: Requests that an OAuth 2.0 refresh token be issued that can be used to obtain an access token that grants access the end-user's UserInfo endpoint even when the user is not present (not logged in).  \n#-#\u00a0  \n#-# But depending on the provider more can be listed.  \n#-#\u00a0  \n#-# The default is:  \n# oidc.scope=openid,profile,email,address,phone  \n  \n#-# The response type to control the flow used by the OpenId Connect protocol.  \n#-# This is often used to control if the information about the user should  \n#-# be gathered from the userinfo endpoint with a request from XWiki to the provider (\"code\", the default)  \n#-# or the id token directly provided when the provider redirects to XWiki (\"id\\_token\")  \n#-# but it's also possible to combine.  \n#-# See https://openid.net/specs/openid-connect-core-1\\_0.html#rfc.section.3 for mode details.  \n#-# For an hybrid flow, use list syntax (so comma or several set) instead of the white space  \n#-# documented in the specification to separate words.  \n#-#  \n#-# The default is:  \n# oidc.responseType=code  \n  \n#-# The method used to access the userinfo endpoint.  \n#-#\u00a0  \n#-# Supported values are:  \n#-# \\* GET: use GET HTTP method  \n#-# \\* POST: use POST HTTP method  \n#-#\u00a0  \n#-# The default is:  \n# oidc.endpoint.userinfo.method=GET  \n  \n#-# The pattern to use to generate the XWiki user name.  \n#-#\u00a0  \n#-# The following variables are available:  \n#-# oidc.user.subject: the unique id of the user in the provider  \n#-# oidc.user.mail: the mail of the user  \n#-# oidc.user.familyName : the last name of the user  \n#-# oidc.user.givenName: the first name of the user  \n#-# oidc.user.preferredUsername: the recommended string to use as id for the user  \n#-# oidc.provider: the URL of the XWiki provider (only when a XWiki provider is used)  \n#-# oidc.provider.host: the host of the provider URL  \n#-# oidc.provider.path: the path of the provider URL  \n#-# oidc.provider.protocol: the protocol (usually https) of the provider URL  \n#-# oidc.provider.port: the port of the provider URL  \n#-# oidc.issuer: the issuer URI  \n#-# oidc.issuer.host: the host of the issuer URI  \n#-# oidc.issuer.path: the path of the issuer URI  \n#-# oidc.issuer.scheme: the scheme (usually https) of the issuer URI  \n#-# oidc.issuer.port: the port of the issuer URI  \n#-#\u00a0  \n#-# Both the entire userinfo and id token JSON received from the provider are also available using respectively:  \n#-# \\* \"oidc.user.\" for the userinfo  \n#-# \\* \"oidc.idtoken.\" for the id token  \n#-# For example if the provider send the following JSON for the user info:  \n#-# {  \n#-# \u00a0\u00a0\"sub\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"248289761001\",  \n#-# \u00a0\u00a0\"name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"Jane Doe\",  \n#-# \u00a0\u00a0\"given\\_name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"Jane\",  \n#-# \u00a0\u00a0\"family\\_name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"Doe\",  \n#-# \u00a0\u00a0\"preferred\\_username\" : \"j.doe\",  \n#-# \u00a0\u00a0\"email\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"[[email\u00a0protected]](https://extensions.xwiki.org/cdn-cgi/l/email-protection)\",  \n#-# \u00a0\u00a0\"picture\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"http://example.com/janedoe/me.jpg\"  \n#-# \u00a0\u00a0\"customobject\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:  \n#-# \u00a0\u00a0{  \n#-# \u00a0\u00a0\u00a0\u00a0\"customproperty\" \u00a0\u00a0: \u00a0\"customvalue\"  \n#-# \u00a0\u00a0}  \n#-# }  \n#-# you can use the variable ${oidc.user.customobject.customproperty}.  \n#-#  \n#-# The following suffixes can be added:  \n#-# \\* \".\\_lowerCase\": the lower case version of the string  \n#-# \\* \".\\_upperCase\": the upper case version of the string\u00a0  \n#-# \\* \".\\_clean\": a version of the string stripped from \".\", \":\", \",\", \"@\", \"^\" characters and \"\\s\" (all forms of white spaces).  \n#-# \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0It can itself be suffixed with \".\\_lowerCase\" and \".\\_upperCase\".  \n#-#  \n#-# The variable syntax also have other features (fallback value, etc.) detailed on https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/StringSubstitutor.html.  \n#-#\u00a0  \n#-# The default is:\u00a0  \n# oidc.user.nameFormater=${oidc.issuer.host.\\_clean}-${oidc.user.preferredUsername.\\_clean}  \n  \n#-# The pattern to use to generate the unique identifier of the user in the OpenId Connect provider.  \n#-# It is used to avoid collisions with user have similar name.  \n#-#\u00a0  \n#-# The syntax is the same than the one described for oidc.user.nameFormater property.  \n#-#\u00a0  \n#-# The default is:\u00a0  \n# oidc.user.subjectFormater=${oidc.user.subject}  \n  \n#-# It's possible to associate non standard properties coming from the OpenID Connect provider with the XWiki user.  \n#-# It's a map with the name of the XWiki user property and a format similar to the one defined in oidc.user.nameFormater for the OpenID Connect side.  \n#-#\u00a0  \n# oidc.user.mapping=myxproperty1=${oidc.user.subject}  \n# oidc.user.mapping=myxproperty2=myprefix-${oidc.user.subject}  \n  \n#-# The righs each new user should have on its own profile as a comma (only comma, no white space allowed) separated list. Setting a right also implies that all the others users don't have it.  \n#-# For example if you want that only users have view right on their profile but thay can modify their own profile you could use:  \n# oidc.user.oidc.user.ownProfileRights=view,edit  \n#-#\u00a0  \n#-# The default is (user profiles are viewable by all users by default and it's possible to edit one own's profile):  \n# oidc.user.oidc.user.ownProfileRights=edit  \n  \n#-# The custom claims to request to the provider for id token.  \n#-#  \n#-# The default is:  \n# oidc.idtokenclaims=xwiki\\_instance\\_id  \n  \n#-# The name of the claim used to get the list of groups the user belong to.  \n#-# This claim also need to be listed in oidc.userinfoclaims which control if group membership synchronization is enabled or not.  \n#-#\u00a0  \n#-# It's also possible to use a custom property from the userinfo JSON.  \n#-# For example if the provider send the following JSON for the user info:  \n#-# {  \n#-# \u00a0\u00a0\"sub\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"248289761001\",  \n#-# \u00a0\u00a0\"name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"Jane Doe\",  \n#-# \u00a0\u00a0\"given\\_name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"Jane\",  \n#-# \u00a0\u00a0\"family\\_name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"Doe\",  \n#-# \u00a0\u00a0\"preferred\\_username\" : \"j.doe\",  \n#-# \u00a0\u00a0\"email\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"[[email\u00a0protected]](https://extensions.xwiki.org/cdn-cgi/l/email-protection)\",  \n#-# \u00a0\u00a0\"picture\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"http://example.com/janedoe/me.jpg\"  \n#-# \u00a0\u00a0\"customobject\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:  \n#-# \u00a0\u00a0{  \n#-# \u00a0\u00a0\u00a0\u00a0\"customgroups\" \u00a0\u00a0: \u00a0[\"group1\", \"group2\"]  \n#-# \u00a0\u00a0}  \n#-# }  \n#-# you can use:  \n# oidc.groups.claim=customobject.customgroups  \n#-#\u00a0  \n#-# The default is:  \n# oidc.groups.claim=xwiki\\_groups  \n  \n#-# Receiving a groups list is enough to enable group synchronization but you might need to configure XWiki groups names different from the remote groups names.  \n#-# It's also required to indicate what's the field containing the list of groups (that's not an OpenID Connect standard) using oidc.groups.claim property.  \n#-#\u00a0  \n# oidc.groups.mapping=MyXWikiGroup=my-oidc-group  \n# oidc.groups.mapping=MyXWikiGroup2=my-oidc-group2  \n# oidc.groups.mapping=MyXWikiGroup2=my-oidc-group3  \n  \n#-# The groups the user need to belong to be allowed to authenticate.  \n#-# Not taken into account if not set or empty.  \n#-#\u00a0  \n# oidc.groups.allowed=  \n  \n#-# If the user belong to one of these groups it won't be allowed to authenticate  \n#-# Not taken into account if not set or empty.  \n#-#\u00a0  \n# oidc.groups.forbidden=  \n  \n#-# If set, only group names with this prefix will be provisioned  \n#-# Not taken into account if not set or empty.  \n#-#\u00a0  \n# oidc.groups.prefix=  \n  \n#-# If the identity provider returns group memberships as a single value attribute delimited with a char, for example:  \n#-# {  \n#-# \u00a0\u00a0\"sub\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"248289761001\",  \n#-# \u00a0\u00a0\"name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"Jane Doe\",  \n#-# \u00a0\u00a0\"given\\_name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"Jane\",  \n#-# \u00a0\u00a0\"family\\_name\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"Doe\",  \n#-# \u00a0\u00a0\"preferred\\_username\" : \"j.doe\",  \n#-# \u00a0\u00a0\"email\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"[[email\u00a0protected]](https://extensions.xwiki.org/cdn-cgi/l/email-protection)\",  \n#-# \u00a0\u00a0\"picture\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"http://example.com/janedoe/me.jpg\",  \n#-# \u00a0\u00a0\"groups\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0: \"group1,group2\"  \n#-# }  \n#-# you can set here the separator char to get the list of groups the user belong to.\u00a0  \n#-# If not set, group memberships are evaluated as a multi valued attribute.  \n#-#\u00a0  \n# oidc.groups.separator=  \n  \n#-# The custom claims to request to the provider for the UserInfo  \n#-#\u00a0  \n#-# The available custom claims are:  \n#-# xwiki\\_groups (or whatever you indicated in oidc.groups.claim): the groups a user belong to in the provider (see \"Group synchronization\" section for more details)  \n#-# xwiki\\_user\\_<fieldname>: the suffix to use to request any field in the user profile document (generally when the provider is XWiki)\u00a0  \n#-# The default is:  \n# oidc.userinfoclaims=xwiki\\_user\\_accessibility,xwiki\\_user\\_company,xwiki\\_user\\_displayHiddenDocuments,xwiki\\_user\\_editor,xwiki\\_user\\_usertype  \n  \n#-# The time after which the user information should be refreshed (in milliseconds)  \n#-#\u00a0  \n#-# The default is:  \n# oidc.userinforefreshrate=600000  \n  \n#-# The client identifier used by the authentication.  \n#-# The default is the identifier of the XWiki instance.  \n# oidc.clientid=  \n  \n#-# The client secret (optionally) registered on the provider.  \n#-# By default nothing is sent to the provider.  \n# oidc.secret=  \n  \n#-# How to send the client id and secret.  \n#-#\u00a0  \n#-# Supported values are:  \n#-# \\* client\\_secret\\_basic: the id and the secret are sent using BASIC auth header  \n#-# \\* client\\_secret\\_post: the id and the secret are sent in the the request body\u00a0  \n#-#\u00a0  \n#-# The default is:  \n# oidc.endpoint.token.auth\\_method=client\\_secret\\_basic  \n  \n#-# The token to send along with the registration request to the provider.  \n#-#\u00a0  \n# oidc.endpoint.register.token=  \n  \n#-# Configure the in-wiki OIDC configuration  \n#-#\u00a0  \n#-# Define the name of the default wiki OIDC configuration to be used for client authentication.  \n#-# If no configuration with such name is found, the authenticator will rely only on the configuration keys declared in  \n#-# this file.  \n#-#  \n#-# The default is:  \n#-# oidc.defaultClientConfiguration=default  \n#-#  \n#-# When using in-wiki OIDC configuration, it is possible to define multiple configurations that can be selected by  \n#-# the end user through a cookie indicating the name of the configuration to be used. You can control the name of  \n#-# this cookie with the following configuration.  \n#-#  \n#-# oidc.clientConfigurationCookie=oidcProvider  \n  \n#-# Define if user accounts should be enabled (marked as active) on first login  \n#-#  \n# oidc.enableUser=true  \n  \n#-# Disable the OpenId Connect authenticator  \n#-#\u00a0  \n#-# The default is:  \n# oidc.skipped=false## In-wiki configuration\n\nXWiki 1.30+ The OIDC authenticator can be configured in XWiki, and to rely on multiple configurations which get selected through a user cookie.\n\nIn order to use the in-wiki configuration of the OIDC authenticator, you will still need to define the configuration key xwiki.authentication.authclass in xwiki.cfg. Once the OIDC Authenticator installed, you will be able to define new OIDC Client configurations through objects of class XWiki.OIDC.ClientConfigurationClass.\n\nThe property \"Configuration name\" of the object will define the name of the OIDC configuration being declared. Use default for the default OIDC configuration. The other properties are similar to the properties defined in xwiki.properties. Use the key oidc.defaultClientConfiguration in xwiki.properties to change the name of the OIDC configuration that should be used by default.\n\nWhen creating multiple in-wiki configurations, each configuration will be selectable by the user through the cookie oidcProvider. You can change the name of this cookie with the key oidc.clientConfigurationCookie in xwiki.properties.\n\n## Authentication with a domain-based instance\n\nWhen XWiki is configured as a domain-based instance, users will not be automatically authenticated on every wiki by default, as the OIDC authenticator does not rely on the property xwiki.authentication.cookiedomains in xwiki.cfg.\n\nTo still allow users to be automatically authenticated when accessing one of the wikis of the farm, you will have to update the configuration of the session cookie of your servlet container so that this cookie gets set on a top-level domain, encompassing every wiki of farm. If your XWiki instance has very different domains for its wikis, this fix will not work.\n\nWhen using Tomcat as a servlet container, it's possible to change the domain of the cookie JSESSIONID by adding the attribute sessionCookieDomain to context.xml as such :\n\n<Context sessionCookieDomain=\"mytld.org\">  \n...  \n</Context># Endpoints\n\n## Callback\n\npath: **authenticator/callback**\n\n## [Back-Channel Logout](https://openid.net/specs/openid-connect-backchannel-1_0.html)\n\npath: **authenticator/backchannel\\_logout**\n\n# Bypass OpenID Connect\n\nAs indicated in the previous section you can disable OpenID Connect using the property oidc.skipped in the xwiki.properties file.\n\nIt's also possible to skip OpenId Connect temporarily using a URL parameter: for example https://mydomain/xwiki/bin/view/Main/?oidc.skipped=true.\n\n# Group synchronization\n\nThe default group synchronization is enabled by adding the claim xwiki\\_groups to the property oidc.userinfoclaims in the xwiki.properties file.\n\nBy default this synchronization expect to receive the list of group names (without the `wiki:XWiki.` prefix) in which the user should be placed (groups are automatically created when they don't exist). You can also define a mapping between the XWiki groups and the provider groups using oidc.groups.mapping property.\n\nIt's also possible to implement your own custom group synchronization in a listener. See [Listeners section](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HListeners).\n\n# Customization\n\n## Templates\n\nThe authenticator uses a template to ask the user for the target provider when it's not provided in the configuration. This template can be overwritten through the standard [template system](https://extensions.xwiki.org/xwiki/bin/view/Extension/Template%20Module).\n\nThe name of the template is oidc/client/provider.vm.\n\n## Listeners\n\nIt's possible to implement an event [listener](https://extensions.xwiki.org/xwiki/bin/view/Extension/Observation%20Module%20Local) and be notified during user profile update to add more to this process or do other things after it:\n\n* org.xwiki.contrib.oidc.event.OIDCUserUpdating to modify the user profile before it being saved\n* org.xwiki.contrib.oidc.event.OIDCUserUpdated to do something after the user profile has been saved\n\n# Troubleshooting\n\n## Enable DEBUG log\n\nSee [Logging Admin Guide](https://xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Logging).\n\nThe specific packages to track for OpenID Connect module is org.xwiki.contrib.oidc. There is several ways to enable debug log.\n\n### With the Logging Admin UI\n\nUse [Logging Admin UI](https://extensions.xwiki.org/xwiki/bin/view/Extension/Logging%20Application) from the Administration section, add set TRACE or DEBUG level classes located in package org.xwiki.contrib.oidc.\n\nAnything you set trough the Logging Administration won't be remembered after a restart.\n\n### With the Logback configuration file\n\nYou need to add the following in WEB-INF/classes/logback.xml:\n\n<logger name=\"org.xwiki.contrib.oidc\" level=\"trace\"/>You need to restart XWiki for this to be taken into account.\n\n# Short URLs\n\nIf you use [short URL setup](https://xwiki.org/xwiki/bin/view/Documentation/AdminGuide/ShortURLs/) you will have to make sure to add \"oidc\" to the known entry points (same as \"webjars\" for example).\n\n# Prerequisites & Installation Instructions\n\nWe recommend using the [Extension Manager](http://extensions.xwiki.org/xwiki/bin/view/Extension/Extension+Manager+Application) to install this extension (Make sure that the text \"Installable with the Extension Manager\" is displayed at the top right location on this page to know if this extension can be installed with the Extension Manager).\n\nYou can also use the manual method which involves dropping the JAR file and all its dependencies into the WEB-INF/lib folder and restarting XWiki.\n\n  \nOnce you installed the extension you will need to indicate you want to use it as authenticator with the property xwiki.authentication.authclass in xwiki.cfg file. See [Configuration section](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/#HConfiguration) for more details.\n\n# Dependencies\n\nDependencies for this extension (org.xwiki.contrib.oidc:oidc-authenticator 2.8.6):\n\n* org.xwiki.platform:xwiki-platform-oldcore 14.10\n* com.nimbusds:oauth2-oidc-sdk 11.10.1\n* [org.xwiki.contrib.oidc:oidc-provider](https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Provider/) 2.8.6\n* org.xwiki.contrib.oidc:oidc-authenticator-configuration 2.8.6\n* org.xwiki.contrib.oidc:oidc-authenticator-user 2.8.6\n\n\n"}