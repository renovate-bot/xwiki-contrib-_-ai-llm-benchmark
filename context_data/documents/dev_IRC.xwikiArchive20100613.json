{"id": "dev:IRC.xwikiArchive20100613", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100613", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nflorinciu joined #xwiki at 00:02  \nbblfish joined #xwiki at 00:02  \nflorinciu left at 00:25 (Read error: Connection reset by peer  \nanamarias left at 00:34 (Quit: anamarias  \nsdumitriu left at 00:51 (Ping timeout: 260 seconds  \nbblfish left at 02:46 (Ping timeout: 248 seconds  \nlucaa joined #xwiki at 03:32  \nbblfish joined #xwiki at 08:20  \nvmassol joined #xwiki at 08:36  \nanamarias joined #xwiki at 09:20  \nmflorea joined #xwiki at 09:39  \nvmassol - (10:13): good morning  \nvmassol - (10:13): some idea for our irc bot ;) http://www.irc-junkie.org/2010-06-11/researchers-develop-honeybot-social-engineer-irc-users-automatically/  \nCalebJamesDeLisl - (10:21): That's hilarious. Wait till the spammers catch on.  \nvmassol - (10:22): yes\u2026.  \nCalebJamesDeLisl - (10:23): Since it's the weekend I decided to lend some time to XWQL. 2 problems so far. I'll send mail after I try a few more things.  \nvmassol - (10:24): ah great  \nvmassol - (10:24): (not for the bugs but that you checked it out ;))  \nCalebJamesDeLisl - (10:25): IMO the best way forward is integrating querying with the language eg: \u00a0select(Document.class).where().name.equals(\"docName\");  \nvmassol - (10:25): yes but that's different  \nvmassol - (10:26): I feel it's more complex for users  \nvmassol - (10:26): but yes I have thought about this  \nvmassol - (10:26): and even found some frameworks  \nvmassol - (10:26): but they were not mature when I looked  \nvmassol - (10:26): (that was about 2 years ago)  \nCalebJamesDeLisl - (10:26): The advantage is it forces them to put \"docName\" into a parameter where it belongs.  \nvmassol - (10:27): I remember my idea was \"linq for java\"  \nvmassol - (10:27): yes quaere is what I looked at at the time  \nCalebJamesDeLisl - (10:27): I have looked at linq. It's not very much like sql unfortunately.  \nvmassol - (10:28): some links: http://stackoverflow.com/questions/346721/linq-for-java-tool  \nCalebJamesDeLisl - (10:29): Also we have strange requirements (hence XWQL) so we'd probably have to either write our own version or make big changes.  \nCalebJamesDeLisl - (10:30): Anyway language integration is the holy grail for preventing sql injection.  \nCalebJamesDeLisl - (10:40): http://jira.xwiki.org/jira/browse/XWIKI-5271  \nsburjan` joined #xwiki at 10:53  \nvmassol - (10:54): CalebJamesDeLisl: ok, first one is simple to fix it seems  \nvmassol - (10:55): can there be a character other than space/NL/tab before \"select\"?  \nvmassol - (10:55): in other words would a trim be enough?  \nCalebJamesDeLisl - (10:56): Should check the first token after parsing IMO.  \nCalebJamesDeLisl - (10:57): Second problem is pretty easy to fix. We fixed it once.  \nCalebJamesDeLisl - (10:57): How long before we discover the third?  \nvmassol - (10:58): re after parsing then we would need to introduce a notion of filter that can be added after the parsing  \nvmassol - (10:58): looks slightly complex if a trim would do  \nvmassol - (10:58): we need to look out for escape chars too  \nvmassol - (10:59): hmm right we can't know ahead of time  \nvmassol - (10:59): since it depends on the query language  \nCalebJamesDeLisl - (10:59): The filter has accountability, what we know about trim is that it breaks the exploit in the bug report.  \nvmassol - (11:00): since some checks are language dependent it would be better to move those the query implementation for a given language indeed  \nCalebJamesDeLisl - (11:00): Actually we could (if there is no PR) force all queries to start with \"select XWikiDocument as doc\" that worked pretty well for searchDocuments.  \nvmassol - (11:01): that doesn't work  \nvmassol - (11:01): for example for xpath it wouldn't work  \nvmassol - (11:01): QueryManager is supposed to be independent of the query language used  \nvmassol - (11:02): the checks should be done in QueryExecutor IMO  \nvmassol - (11:02): (the checks that relate to the language syntax that is)  \nCalebJamesDeLisl - (11:04): What we have to be careful of is that there will be a way to make XWQL believe it's reading one thing while HQL thinks it's reading another.  \nCalebJamesDeLisl - (11:04): That is (in a sentence) the nature of the backslash attack on HQL.  \nCalebJamesDeLisl - (11:05): HQL saw one thing the db saw another.  \nvmassol - (11:05): you mean that the XWQL to HQL translator must escape the input it gets?  \nCalebJamesDeLisl - (11:05): I mean we have to guard against any way for it to think one thing while HQL thinks another.  \nCalebJamesDeLisl - (11:07): Another think I would do \\*If I were king\\* ;) \u00a0is parametrize everything inside of single quotes.  \nCalebJamesDeLisl - (11:08): Quotes are treated differently by different databases, postgres allows you to escape with a #, oracle allows escaping with { and }, everybody has a different idea of what \\ should mean. You have to allow anything between quotes through without changing it.  \nCalebJamesDeLisl - (11:09): A query is petty safe if all of it's quotes are removed out to parameters.  \nvmassol - (11:10): sorry CalebJamesDeLisl, got to go drive my kid to the tennis club and have lunch there\u2026 bb this afternoon  \nCalebJamesDeLisl - (11:10): See ya.  \nvmassol left at 11:10 (Quit: Leaving.  \nsburjan`` joined #xwiki at 11:45  \nsburjan` left at 11:48 (Ping timeout: 248 seconds  \nsburjan`` is now known as sburjan` ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nsdumitriu joined #xwiki at 11:50  \nabusenius joined #xwiki at 11:55  \nbblfish left at 11:58 (Ping timeout: 272 seconds  \nCalebJamesDeLisl - (12:00): Good morning Alex. Thought you might enjoy this: http://jira.xwiki.org/jira/browse/XWIKI-5271  \nbblfish joined #xwiki at 12:07  \nflorinciu joined #xwiki at 12:13  \nflorinciu left at 12:30 (Quit: Leaving.  \nflorinciu joined #xwiki at 12:39  \nCalebJamesDeLisl - (12:53): Going to try git-svn. How long would it take to try git svn clone --username=jdoe --stdlayout https://svn.xwiki.org/svnroot/xwiki/platform/? ~20 hours?  \nbblfish left at 13:11 (Quit: Leaving.  \nbblfish joined #xwiki at 13:11  \nCalebJamesDeLisl - (13:14): Hmm. I just did a  \nCalebJamesDeLisl - (13:14): git svn clone --username=cjdelisle --stdlayout https://svn.xwiki.org/svnroot/xwiki/platform/ xwiki-platform  \nCalebJamesDeLisl - (13:14): It ate my cpu for 10 minutes and then stopped.  \nCalebJamesDeLisl - (13:14): Do I have to do a fetch or something to get the files?  \nCalebJamesDeLisl - (13:17): sdumitriu: Any ideas?  \nsdumitriu - (13:17): Yep, wait a bit  \nCalebJamesDeLisl - (13:18): stopped meaning dropped to the command line.  \nsdumitriu - (13:22): You can't use stdlayout with the whole platform  \nsdumitriu - (13:22): stdlayout implies trunk+tags+branches  \nsdumitriu - (13:23): You should checkout each subdirectory this way  \nsdumitriu - (13:23): core, web, plugins...  \nCalebJamesDeLisl - (13:25): Ok, will do.  \nCalebJamesDeLisl - (13:27): will that make is a pain to git pack everything?  \nbbc581 left at 13:28 (Ping timeout: 265 seconds  \nabusenius - (13:36): CalebJamesDeLisl, very nice :)  \nCalebJamesDeLisl - (13:37): Yea we got to talking about Lynq for java. That would relieve a lot of headaches.  \nabusenius - (13:38): the only inconvinient thing in git-svn IMO is that you need to commit for every directory instead of trunks/  \nCalebJamesDeLisl - (13:39): Hmm. I was hoping to go the other direction and be able to commit once (even if that caused multiple revisions to be generated.)  \nabusenius - (13:40): well, if you clone the whole thing it will probably work  \nCalebJamesDeLisl - (13:40): I havn't ever been able to commit from /trunks/ with svn I don't think that's possible.  \nabusenius - (13:40): ah ok  \nabusenius - (13:40): well, then there are just advantages ^^  \nCalebJamesDeLisl - (13:40): because /trunks/ is not a real directory etc. etc. etc.  \nCalebJamesDeLisl - (13:41): What I do is svn ci ./core ./web ./applications  \nCalebJamesDeLisl - (13:42): hah cloning /pom/ now, this is going to take forever.  \nabusenius - (13:43): the thing is, if you clone the whole directory (with \"tags\" and \"branches\") you'll have to download 100 copies of the same thing  \nCalebJamesDeLisl - (13:44): 108G free space.  \nabusenius - (13:44): I usually only clone trunk/, its faster and if you want to use svn tags or branches, you should better use svn directly imo  \nabusenius - (13:45): (on server)  \nabusenius - (13:45): well, your choice, hope you have a fast connection :)  \nCalebJamesDeLisl - (13:45): ~3Mbps  \nCalebJamesDeLisl - (13:46): It would be nice if I had a VPN with a 100M connection but I'd have to wait until nobody was trying to use the svn server.  \nCalebJamesDeLisl - (13:48): Here's an idea, how about if there are files (like templates) which allow users to extend api.Document and api.XWiki etc.  \nCalebJamesDeLisl - (13:49): Then users can easily patch over security holes by extending and blocking bad functions.  \nbblfish left at 13:57 (Quit: Leaving.  \nabusenius - (13:57): this might be quite tricky, e.g. if the problem is in some widely used method like search, then how do you patch methods that use search?  \nabusenius - (13:58): (things like escaping something will work tough)  \nfreud - (14:04): Hi all. I'm so grateful for OpenSource and Xwiki in perticular, i'd like to gove something back. If I want to contribute to the Xwiki community, what programming languages do I need to learn?(I did a semester of Pascal programming 15 years ago, that's about it) I'd like to make a cool plugin or something...like incorporating a minichat or forum in Xwiki, or maybe get started on that Wikipedia skin someone requested some time ago...  \nCalebJamesDeLisl - (14:05): freud: Cool that's great. Internally XWiki is written in Java but most of the external code is written in velocity (see apache velocity)  \nCalebJamesDeLisl - (14:06): I think the best thing to do is invent something really cool which you can use and people will like, build it as an application on the XWiki platform and share it in the code zone code.xwiki.org  \nfreud - (14:07): I saw the velocity when trying to mod the homepage of my newly setup xwiki, gonna have to look into that anyway, so maybe that's a place to start...  \nCalebJamesDeLisl - (14:08): Definitely. Velocity is basically java but there are fewer keywords and no static typing.  \nCalebJamesDeLisl - (14:09): abusenius: If the groovy file extends the existing XWiki, then you could extend search (for instance) and take the input, filter it, and pass it to the original search \"super.search(filteredString)\"  \nCalebJamesDeLisl - (14:09): Also users could disable things which they don't need (which makes security auditors dance in the streets.)  \nabusenius - (14:09): I see  \nCalebJamesDeLisl - (14:10): Another one of my ideas to float here, propose to the list, get accepted, add to mile long todo list.  \nfreud - (14:13): So a plugin is mostly based on Velocity? I'm thinking of maybe bridging a forum, like Jforum or similar, or forking into a plugin...Is there a general Wishlist I could look at?  \nCalebJamesDeLisl - (14:13): I say you should build something you want to use.  \nCalebJamesDeLisl - (14:14): If you are fulfilling a need that someone else expresses then you won't be as well able to understand that need as you would if it's your own.  \nCalebJamesDeLisl - (14:15): You can look here to see what other people have been up to: http://code.xwiki.org/xwiki/bin/view/Applications/  \nfreud - (14:15): Caleb, in the contribute page of docs, it says to try and keep plugins and such in the direction the community has decided Xwiki should go, would this be in the Roadmap?  \nabusenius - (14:16): anyone knows how to stop clirr from comparing my shiny new component with 2.3 version?  \nabusenius - (14:16): excluding \\*\\* doesnt help, it still tries to download 2.3 version and fails...  \nCalebJamesDeLisl - (14:17): freud: plugins are core (we don't actually use plugins anymore). Applications are what are written in script and anyone can easily install on their system.  \nCalebJamesDeLisl - (14:18): EG: If you are a mamber of myxwiki.org you can install applications but only the server admins can install plugins.  \nCalebJamesDeLisl - (14:18): abusenius: Take a look in the pom files. Vincent's been adding clirr checks lately.  \nCalebJamesDeLisl - (14:20): Did you get the xss email Vincent sent to the sec list?  \nsdumitriu - (14:22): CalebJamesDeLisl: Yep, it's going to take about a whole day, maybe more, to clone everything with git-svn  \nsdumitriu - (14:23): You could clone my repo, which should take much less  \nlucaa1 joined #xwiki at 14:23  \nlucaa left at 14:23 (Ping timeout: 248 seconds  \nCalebJamesDeLisl - (14:23): How's your connection? I'd hate to slam a dsl or cable connection.  \nsdumitriu - (14:24): Kind of slow for uploads  \nsdumitriu - (14:24): 100kbytes  \nCalebJamesDeLisl - (14:24): I'll keep doing this then.  \nCalebJamesDeLisl - (14:25): Oh wait kiloBYTES. that's not bad.  \nsdumitriu - (14:25): Yes, bytes  \nCalebJamesDeLisl - (14:25): That would be nice if it's like 200M  \nCalebJamesDeLisl - (14:26): Want me to put in an iptables rate limit rule?  \nsdumitriu - (14:26): No  \nsdumitriu - (14:26): I don't have anything to upload  \nsdumitriu - (14:27): Just wait until I figure out how to make it available, other than ssh  \nCalebJamesDeLisl - (14:27): can do ssh, and provide a key if you want.  \nCalebJamesDeLisl - (14:28): Bittorrent! :D  \nabusenius - (14:31): sdumitriu, tar bz2 the .git and upload it somewhere  \nsdumitriu - (14:31): Ah, yes  \nsdumitriu - (14:31): That should also work  \nsdumitriu - (14:31): Thanks  \nCalebJamesDeLisl - (14:40): bbiab coffee  \nlucaa1 left at 14:41 (Remote host closed the connection  \nlucaa joined #xwiki at 14:41  \nfreud - (14:44): Can code to implementing 3rd party sotfware be put in a panel? Like a minichat or something.  \nsdumitriu - (14:46): Sure  \nfreud - (14:51): @sdumitriu: it would have to be Java, right?(I'm too new at all this tomcat business, need to get some background info)  \nsdumitriu - (14:51): Not really  \nsdumitriu - (14:51): It depends on how complex the code has to be  \nsdumitriu - (14:51): You can take 2 approaches:  \nsdumitriu - (14:52): 1. Java component + public API + Velocity inside the panel  \nsdumitriu - (14:52): 2. Groovy code inside the panel  \nfreud - (14:53): Googling like mad :)  \nmflorea left at 14:56 (Quit: Leaving.  \nvmassol joined #xwiki at 15:23  \nsdumitriu - (15:24): vmassol: abusenius hates clirr  \nvmassol - (15:24): how come?  \nsdumitriu - (15:24): I'll let him answer that  \nvmassol - (15:29): IMO it's the best thing since sliced bread :)  \nbbc581 joined #xwiki at 15:35  \nabusenius - (15:51): vmassol, how can I disable clirr?  \nabusenius - (15:52): it tries to download a 2.3 version of the component I'm working on  \nabusenius - (15:52): excluding doesnt seem to work  \nvmassol - (15:53): abusenius: yes that's normal since that's how I've configured it. Let me check for the skip part  \nvmassol - (15:53): apparently you're inheriting from the core pom  \nvmassol - (15:53): so it's normal you get to have the core pom behavior  \nabusenius - (15:53): yes  \nvmassol - (15:55): ok it's clirr.skip  \nvmassol - (15:55): you can add a clirr config in your pom.xml  \nvmassol - (15:56): with <skip>true</skip> in the clirr plugin config section  \nvmassol - (15:56): on the command line it's: mvn \u2026 -Dclirr.skip=true  \nvmassol - (15:56): (abusenius)  \nvmassol - (15:57): so the rule is: when we introduce a new module in core/ then that module must have a skip in its config since it's not been released before  \nvmassol - (15:57): and that skip must be removed after the next release of core  \nabusenius - (15:58): hm  \nabusenius - (15:59): <plugins>  \nabusenius - (15:59): \u00a0\u00a0<plugin>  \nabusenius - (15:59): \u00a0\u00a0\u00a0\u00a0<groupId>org.codehaus.mojo</groupId>  \nabusenius - (15:59): \u00a0\u00a0\u00a0\u00a0<artifactId>clirr-maven-plugin</artifactId>  \nabusenius - (15:59): \u00a0\u00a0\u00a0\u00a0<configuration>  \nabusenius - (15:59): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<skip>true</skip>  \nabusenius - (15:59): \u00a0\u00a0\u00a0\u00a0</configuration>  \nabusenius - (15:59): ?  \nabusenius - (15:59): doesnt work  \nvmassol - (15:59): yes but in a profile  \nabusenius - (15:59): ah  \nvmassol - (15:59): but that won't make it work better  \nvmassol - (16:00): it's just that it won't fail when we use cobertura  \nvmassol - (16:00): let me try it for you  \nabusenius - (16:02): yes, doesn't work in profile either  \nvmassol - (16:02): ok that's normal I now why  \nvmassol - (16:03): know  \nvmassol - (16:03): the skip feature has been added in 2.2.3-SNAPSHOT of the clirr plugin  \nvmassol - (16:03): we're using 2.2.2  \nvmassol - (16:03): let me try to find another solution  \nabusenius - (16:04): btw their documentation is quite unhelpful  \nvmassol - (16:04): abusenius: does the following work:  \nvmassol - (16:04): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<configuration>  \nvmassol - (16:04): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<excludes>  \nvmassol - (16:04): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<exclude>\\*\\*</exclude>  \nvmassol - (16:04): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</excludes>  \nvmassol - (16:04): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</configuration>  \nvmassol - (16:04): here's the documentation: http://svn.codehaus.org/mojo/tags/clirr-maven-plugin-2.2.2/src/main/java/org/codehaus/mojo/clirr/AbstractClirrMojo.java ;)  \nabusenius - (16:05): read the source, Luke ^^  \nCalebJamesDeLisl - (16:05): Why would clirr break over adding functionality?  \nabusenius - (16:05): vmassol, no that was the first thing I tried  \nabusenius - (16:05): it still first tries to download stuff  \nabusenius - (16:06): where and how can I set clirr.baseline.download=false?  \nabusenius - (16:07): <properties><clirr.baseline.download>false>/... ?  \nvmassol - (16:09): abusenius: ok something to try  \nvmassol - (16:09): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<configuration>  \nvmassol - (16:09): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<comparisonArtifacts/>  \nvmassol - (16:09): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0</configuration>  \nvmassol - (16:09): this shoudl prevent the download  \nflorinciu left at 16:13 (Quit: Leaving.  \nabusenius - (16:15): no, doesn'T help  \nvmassol - (16:16): strange it works here  \nvmassol - (16:16): can you tinypaste your pom.xml?  \nvmassol - (16:17): btw we can easily add a condition to skip the clirr executin  \nvmassol - (16:18): let me do that, it's probably the easiest to do  \nvmassol - (16:18): (since it's in a profile)  \nabusenius - (16:18): http://tinypaste.com/79434  \nvmassol - (16:18): ok that's what I thought  \nvmassol - (16:18): your pom.xml is not correct  \nvmassol - (16:18): :)  \nvmassol - (16:18): your profile is not activated  \nabusenius - (16:19): what's wrong with it?  \nvmassol - (16:19): it's not activated  \nvmassol - (16:19): so it won't run unless you force its execution  \nvmassol - (16:19): check the pom.xml for platform/core/pom.xml for ex  \nvmassol - (16:20): you'll see the profile is activated by default there  \nvmassol - (16:20): to execute a profile that is not automatically activated in maven you need to run it with: -Pclirr  \nabusenius - (16:20): activeByDefault doesn'T change anything  \nvmassol - (16:20): but let me add a property to skip the profile when we want, that'll be cleaner I think  \nabusenius - (16:21): definitely  \nabusenius - (16:21): even -Pclirr doesn't work :)  \nvmassol - (16:21): strnage works for me  \nabusenius - (16:23): which version of maven do you have?  \nvmassol - (16:23): 3.0 beta1  \nabusenius - (16:26): 2.2.1  \nflorinciu joined #xwiki at 16:26  \nvmassol - (16:29): ok I'm almost there  \nvmassol - (16:34): abusenius: committed  \nvmassol - (16:34): but....  \nsburjan` left at 16:34 (Quit: Peace and Protection 4.22  \nvmassol - (16:34): I don't get it why the following put in a pom.xml doesn't prevent the clirr profile to execute:  \nvmassol - (16:34): \u00a0\u00a0<properties>  \nvmassol - (16:34): \u00a0\u00a0\u00a0\u00a0<clirr.skip>true</clirr.skip>  \nvmassol - (16:34): \u00a0\u00a0</properties>  \nvmassol - (16:34): it works if you do it on the command line though:  \nvmassol - (16:34): -Dclirr.skip=true  \nvmassol - (16:34): (you'll need to mvn install -N the core pom.xml first, after a svn up)  \nbblfish joined #xwiki at 16:38  \nvmassol - (16:41): I think I know...  \nvmassol - (16:41): s/I think I know...//  \nabusenius - (16:42): mmh -Dclirr.skip=true doesn't work for me :(  \nvmassol - (16:42): abusenius: you need to svn up and mvn clean install -N the core pom.xml  \nabusenius - (16:43): I did  \nfreud left at 16:44 (Disconnected by services  \nabusenius - (16:46): ok, need to go, thanks for the help vmassol, bbl  \nvmassol - (16:46): I tested both with maven 2.2.1 and 3.0 beta 1  \nvmassol - (16:46): both work  \nvmassol - (16:46): ok bye  \nCalebJamesDeLisl - (16:47): I have an idea to float (sink). Suppose we established a best practice that all javascript was in the head of the document?  \nvmassol - (16:48): I think that's already a best practice  \nvmassol - (16:48): but we could make it \"official\" indeed  \nCalebJamesDeLisl - (16:49): I very much like that idea. If we can verify with tests that all javascript is in the head then users who are worried about security could use mod\\_filter to filter any javascript after the head  \nCalebJamesDeLisl - (16:50): Remember the filter idea? ;)  \nCalebJamesDeLisl - (16:53): It's such a pain that there was an issue to fix the search bar and it was fixed and now it has since regressed.  \nvmassol - (16:53): yes but that's because we're too laxists  \nvmassol - (16:53): whenever we fix something we need a test to prove it  \nvmassol - (16:53): the test has to be written before the fix  \nvmassol - (16:53): I know it's a pain sometimes  \nvmassol - (16:54): but that's the only way not to introduce regressions later on  \nvmassol - (16:54): now if we can kill multiple birds with one stone it's all the better :)  \nvmassol - (16:55): but as a general rule we still need tests when a bug is fixed  \nCalebJamesDeLisl - (16:55): I agree about tests.  \nCalebJamesDeLisl - (16:55): With security my feeling is: The best system is a system which is verifiable secure.  \nvmassol - (16:55): I agree  \nCalebJamesDeLisl - (16:55): The second best is one which is verifiably insecure because everybody knows it must be fixed.  \nCalebJamesDeLisl - (16:56): The worst is a system which I can't audit and prove anything because people think it's okay because I can't find a hole.  \nCalebJamesDeLisl - (16:57): This is why I dislike patching each hole separately. It takes the system from the second category to the third.  \nvmassol - (17:06): it seems maven doesn't support interpolation of pom properties in profile activation  \nvmassol - (17:06): that's a pain  \nCalebJamesDeLisl - (17:23): Since we know that webstandards is going to keep failing for a while, maybe we should check the \"hear no evil see no evil\" box.  \nCalebJamesDeLisl - (17:23): (stop getting email.)  \nvmassol - (17:23): we cannot do that  \nvmassol - (17:23): you're only talking about some webstandards tests not all of them  \nCalebJamesDeLisl - (17:25): Yea if we did then it might not tell us about regressions.  \nCalebJamesDeLisl - (17:27): It'd be great to have custom emails with failure count, special mail for regressions, ability to quite some tests down (unless there is a regression) but I'd be worried about experimenting on a live server.  \nCalebJamesDeLisl - (17:27): s/quite/quiet  \nCalebJamesDeLisl - (17:37): In git how would I do a svn diff as a dry run so I can see what I'm about to commit?  \nvmassol - (17:46): ok clirr skip stuff fixed and working  \nanamarias left at 17:48 (Quit: anamarias  \nCalebJamesDeLisl - (17:49): ahh git diff. that makes sense.  \nvmassol-ipad joined #xwiki at 18:02  \nvmassol-ipad left at 18:03 (Client Quit  \nnuvolari - (18:09): :'( can't you create AI to detect if the person creating a new page is \"wiki-literate\"? Our wiki at work is becoming a mess because the people don't take the time to learn how a wiki works.  \nbblfish left at 18:33 (Ping timeout: 240 seconds  \nCalebJamesDeLisl - (18:42): Well there's this: http://www.tomscott.com/stupidfight/#ladygaga-vs-justinbieber  \nbblfish joined #xwiki at 18:42  \nCalebJamesDeLisl - (18:42): Still need some human intervention but it's give you an early heads up.  \nlucaa left at 18:55 (Ping timeout: 245 seconds  \nflorinciu left at 18:57 (Quit: Leaving.  \nabusenius - (18:57): CalebJamesDeLisl: http://git.or.cz/course/svn.html  \nCalebJamesDeLisl - (18:57): Thanks.  \nCalebJamesDeLisl - (18:58): I have done a few things, test branch, checkout, rebase.  \nabusenius - (19:07): cool, skipping clirr works now :)  \nvmassol - (19:10): yep :)  \nabusenius - (19:16): thanks vmassol :)  \nsdumitriu - (19:28): Hehe: http://www.tomscott.com/stupidfight/#xwiki-vs-atlassian  \nsdumitriu - (19:30): CalebJamesDeLisl: Ping me if you need help with git-svn  \nCalebJamesDeLisl - (19:30): thanks. How about going \"back in time\" to an old revision?  \nCalebJamesDeLisl - (19:31): Can I use svn numbers?  \nsdumitriu - (19:31): No  \nsdumitriu - (19:31): But you do git log  \nsdumitriu - (19:31): Check the git id corresponding to a svn version  \nsdumitriu - (19:31): And git co 8434ab2f  \nsdumitriu - (19:31): Or git reset  \nsdumitriu - (19:31): Depending on what you want to do  \nCalebJamesDeLisl - (19:32): I see, thanks.  \nsdumitriu - (19:32): But it would be easy to write a script which goes to a given svn version  \nCalebJamesDeLisl - (19:32): yup.  \nsdumitriu - (19:32): There's http://github.com/offbytwo/git-svn-extensions which helps  \nCalebJamesDeLisl - (19:33): Maybe we should push a copy of the git repo to xwiki.org if other devs want to try it.  \nsdumitriu - (19:33): Yep  \nCalebJamesDeLisl - (19:34): Not sure if file saving plugin is activated but that would be a good use for it.  \nsdumitriu - (19:34): I already talked with our sysadmin about this, and I was supposed to provide a list of requirements  \nCalebJamesDeLisl - (19:35): For running a repo live?  \nsdumitriu - (19:37): Yes  \nCalebJamesDeLisl - (19:38): That would be cool, would we be able to commit to either one?  \nCalebJamesDeLisl - (19:38): Synchronization seems like the biggest problem.  \nsdumitriu - (19:40): Synchronization is easy  \nsdumitriu - (19:40): You can write a hook which automatically pushes to SVN once the commit is done  \nsdumitriu - (19:40): And the other way around  \nsdumitriu - (19:40): Both systems have hooks  \nvmassol - (19:40): sdumitriu: sorry forgot to attribute the source to you in my last tweet...  \nsdumitriu - (19:41): vmassol: No problem  \nvmassol - (19:41): I'll take the flamewar on me though  \nvmassol - (19:41): ;)  \nsdumitriu - (19:41): Yep, better  \nvmassol - (19:41): :)  \nCalebJamesDeLisl - (19:44): sdumitriu: What do you think about making it a best practice that all script should go in the head?  \nsdumitriu - (19:47): I thought it already is  \nsdumitriu - (19:47): +1 for writing it  \nCalebJamesDeLisl - (19:47): Ok that's 3 of us, I'll send a proposal.  \nsdumitriu - (19:48): Who is the third?  \nCalebJamesDeLisl - (19:48): Vincent and I talked about it earlier. My reasoning is if it's written, and then there is (eventually) a test, it will open the door to letting users run a content filter.  \nCalebJamesDeLisl - (19:49): I imagine the day when XSS is only possible by getting script into the head.  \nabusenius - (19:50): language ^^  \nCalebJamesDeLisl - (19:52): language?  \nabusenius - (19:52): btw, speaking of security, could you guys apply some patches from the list here: http://jira.xwiki.org/jira/secure/IssueNavigator.jspa?mode=hide&requestId=10650  \nabusenius - (19:52): http://jira.xwiki.org/jira/browse/XSKINX-36  \nsdumitriu - (19:53): abusenius: Busy on some other stuff at the moment, but was planning to apply some more before 2.4M2  \nabusenius - (19:53): I see, would be cool, having so many branches start being unhandy  \nabusenius - (19:55): everyone else (who can) is welcomed to apply patches too ;)  \nCalebJamesDeLisl - (19:59): Can't we just put the entire /templates/ inside of a big $escapetool.xml() ;) ?  \nCalebJamesDeLisl - (20:15): Here's an interesting study into how to fail really hard at handling security problems: http://www.google.com/search?q=ciscogate  \nbblfish left at 20:28 (Ping timeout: 264 seconds  \nCalebJamesDeLisl - (20:42): abusenius: http://jira.xwiki.org/jira/browse/XWIKI-5272  \nabusenius - (20:48): ui-tests ran oom again, swapping in firefox...  \nabusenius - (20:50): ah, very nice  \nCalebJamesDeLisl - (20:50): No this one is bad. This is going to be a huge PITA.  \nCalebJamesDeLisl - (20:51): Hmm, I wonder if that attack works other places?  \nabusenius - (20:52): it have to be syntax 1 right?  \nCalebJamesDeLisl - (20:55): Well there is the macro jailbreaking. I think I will go ahead and apply your patch for that, if it breaks stuff, that's the price we pay.  \nCalebJamesDeLisl - (21:07): Hah, non exploitable in templates. It's only a disaster, not a catastrophe.  \nCalebJamesDeLisl - (21:09): Ahh, it's the \"isInRenderingEngine\" flag that saved us this time.  \nfreud\\_ joined #xwiki at 21:16  \nfreud\\_ - (21:18): hi again, another silly question for ya, i'm trying to add a favicon to my xwiki install. I've added the mime-type image/x-icon in web.xml, put a favicon.ico in /webapps/xwiki/ folder and restarted tomcat, no go, is there a step i'm missing?  \njvdrean joined #xwiki at 21:19  \nfreud\\_ - (21:19): I took a working favicom from xampp, doesn't show in either explorer or firefox  \njvdrean left #xwiki at 21:19  \nCalebJamesDeLisl - (21:19): freud\\_: More of a tomcat question, there is no code in xwiki for dealing with them.  \nfreud\\_ - (21:20): Heading for #tomcat then, thx Caleb  \nabusenius - (21:25): hm, memory consumption of java process running xwiki grows constantly to over 2G, although it uses -Xmx=300M  \nCalebJamesDeLisl - (21:30): That's wrong. how many java processes are running?  \nabusenius - (21:33): 4  \nabusenius - (21:34): no 3, maven, surefire-booter and xwiki  \nCalebJamesDeLisl - (21:35): Which one is vacuming up all the ram?  \nCalebJamesDeLisl - (21:35): \\*vacuuming  \nabusenius - (21:36): xwiki  \nabusenius - (21:36): I wonder why  \nCalebJamesDeLisl - (21:36): Me too, I have jetty with 4 versions of xwiki and it doesn't eat up all my ram.  \nabusenius - (21:36): I'll try clean install trunk  \nCalebJamesDeLisl - (21:37): keeps segfaulting though ;)  \nabusenius - (21:37): :)  \nabusenius - (21:37): which java version do you have?  \nCalebJamesDeLisl - (21:37): OpenJDK Client VM (build 1.6.0-b09, mixed mode)  \nCalebJamesDeLisl - (21:38): running with -server  \nabusenius - (21:39): I have sun-jdk-1.6.0.20  \nCalebJamesDeLisl - (21:39): I used to have that.  \nCalebJamesDeLisl - (21:40): java -server -jar -Xmx512m -XX:MaxPermSize=192m -Dorg.mortbay.jetty.Request.maxFormContentSize=9999999 ./start.jar  \nCalebJamesDeLisl - (21:40): There's my start script  \nCalebJamesDeLisl - (21:40): Big permgen because lots of versions running at once.  \nCalebJamesDeLisl - (21:41): Hang on you said -Xmx=300M  \nCalebJamesDeLisl - (21:41): ?  \nCalebJamesDeLisl - (21:41): try -Xmx300m  \nfreud\\_ left at 21:44 (Quit: Page closed  \nCalebJamesDeLisl - (21:44): Hey I'm thinking the rendering order should be able to be chosen by in the cfg file.  \nCalebJamesDeLisl - (21:45): s/by //  \nabusenius - (21:46): no, its 300m  \nabusenius - (21:46): default probably  \nCalebJamesDeLisl - (21:47): Hmm, and it never dumps out for lack of memory?  \nCalebJamesDeLisl - (21:48): Maybe there's a java bug, you could try allocating memory in an infinite loop and see if you can force it to OOM.  \nabusenius - (21:51): maybe  \nabusenius - (21:51): it usually eats all my ram and is killed by oom killer  \nabusenius - (21:51): or I kill it earlier  \nCalebJamesDeLisl - (21:53): oom killer?  \nabusenius - (21:54): the one from linux kernel  \nCalebJamesDeLisl - (21:55): Ah the one that stops a user from ruining the machine.  \nabusenius - (21:55): yes  \nCalebJamesDeLisl - (21:55): How much swap space you have?  \nabusenius - (21:55): 4G  \nabusenius - (21:56): maybe I should make it a bit smaller  \nCalebJamesDeLisl - (21:56): hah, bigger ;)  \nCalebJamesDeLisl - (21:56): Spanning swap over disks helps performance.  \nabusenius - (21:56): I also have 4G ram  \nabusenius - (21:56): I have only one  \nCalebJamesDeLisl - (21:57): Ah, then 8G of swap should be perfect :)  \nabusenius - (21:57): what really helps performance is not to swap :)  \nCalebJamesDeLisl - (21:58): Back in the 2.2 days there was a kernel bug which meant you needed 1.5 times the amount of memory for swap.  \nCalebJamesDeLisl - (21:58): They fixed it and now the recommendation is same swap as memory but I still have ridiculous settings.  \nabusenius - (21:59): I thought 4G RAM will be enough to disable swap  \nabusenius - (22:00): seems that ff + thunderbird + eclipse + xwiki + maven dont agree  \nCalebJamesDeLisl - (22:00): No, you always need swap. Otherwise firefox would eat everything ;P  \nabusenius - (22:00): firefox \"just\" eats 300m  \nCalebJamesDeLisl - (22:01): Try making a ram vacuum class just to test java.  \nCalebJamesDeLisl - (22:02): public class someFunnyNameIShouldNotSayHere { public static void main(String[] args) {while (true) { long x = 0L; } } }  \nCalebJamesDeLisl - (22:03): oops that won't work...  \nCalebJamesDeLisl - (22:04): ginormous LinkedList.  \nCalebJamesDeLisl - (22:05): while(true) { list.add(new Random.randomInt().toString()) } ?  \nCalebJamesDeLisl - (22:05): If you do it wrong the garbage collector goes on strike.  \nabusenius - (22:07): allocating 1000 bytes in a loop doesnt eat memory  \nabusenius - (22:07): trying with a list  \nCalebJamesDeLisl - (22:07): Not unless you hold references to it.  \nCalebJamesDeLisl - (22:08): Avoid arrayList, it'll take forever tyo resize it every time.  \nCalebJamesDeLisl - (22:09): We must be bad programmers if we can't get \\_java\\_ to vacuum up all the memory.  \nCalebJamesDeLisl - (22:10): usually you only need to type: java  \nabusenius - (22:10): re array list - no its ammortized O(1)  \nvmassol left at 22:11 (Quit: Leaving.  \nabusenius - (22:11): (the size is doubled when it needs more space)  \nabusenius - (22:16): Exception in thread \"main\" java.lang.OutOfMemoryError: GC overhead limit exceeded  \nabusenius left at 22:18 (Quit: Konversation terminated!  \nabusenius joined #xwiki at 22:19  \nCalebJamesDeLisl - (22:32): Ok so it's not failing to produce OOMs maybe java itself has a memory leak.  \nCalebJamesDeLisl - (22:33): You could try adding to your script try { <memory thief code> } catch (Error oom) {} inside the loop.  \nCalebJamesDeLisl - (22:33): Maybe the ooms are being caught?  \nabusenius left at 22:44 (Ping timeout: 258 seconds  \nabusenius joined #xwiki at 22:51  \nabusenius - (22:51): \\*sigh\\*  \nabusenius - (22:52): seems that it works fine until import tests, then it quickly runs oom  \nabusenius - (22:52): but running just import tests work fine  \nabusenius - (23:04): if I catch oom exception in the test prog, it still fails soon thereafter  \nCalebJamesDeLisl - (23:09): I need to get some sleep. There are a lot of problems with the syntax1.0 stuff.  \nabusenius - (23:18): you're almost at CEST time :)  \nCalebJamesDeLisl - (23:22): Pasted some info http://jira.xwiki.org/jira/browse/XWIKI-5272  \nCalebJamesDeLisl - (23:23): I think the right thing to do is switch the order of the parsers even if it breaks backward compatibility.  \nCalebJamesDeLisl - (23:24): See ya tomorrow.  \nbblfish joined #xwiki at 23:27  \nabusenius - (23:31): see you  \nlucaa joined #xwiki at 23:42  \n\n"}