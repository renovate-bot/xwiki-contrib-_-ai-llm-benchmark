{"id": "dev:IRC.xwikiArchive20130426", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20130426", "title": "IRC Archive for channel #xwiki on 26 April 2013 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<xwikibot>\u00a0has joined #xwiki  \n08:43\u00a0<Denis1>\u00a0has joined #xwiki  \n08:43\u00a0<Denis1>\u00a0is now known as <Denis>  \n09:33\u00a0<vmassol>\u00a0release day! cool :)  \n09:33\u00a0<vmassol>\u00a0hmm still quite a few tests failing on ci for 5.x  \n09:33\u00a0<vmassol>\u00a0s/5.x/5.0  \n09:34\u00a0<sburjan>\u00a0has joined #xwiki  \n09:35\u00a0<vmassol>\u00a0platform master is failing  \n09:35\u00a0<vmassol>\u00a0reason is:  \n09:35\u00a0<vmassol>\u00a0Caused by: org.sonatype.aether.transfer.ArtifactNotFoundException: Could not find artifact org.xwiki.platform:xwiki-platform-tool-jetty:pom:5.1-SNAPSHOT in local.central (file:///home/h  \n09:35\u00a0<vmassol>\u00a0udsonagent/.m2/repository)  \n09:35\u00a0<vmassol>\u00a0(in packager plugin it tests)  \n09:35\u00a0<bouquetf>\u00a0Hi there  \n09:36\u00a0<vmassol>\u00a0indeed there's only 5.0-SNAP and not 5.1-SNAP in local repo on a12 for some reason  \n09:36\u00a0<vmassol>\u00a0bouquetf: hi, seen your tweet, I'll check the commit later today, thansk!  \n09:37\u00a0<bouquetf>\u00a0yw :) I've just seen a pull request from Julien, I'm merging it  \n09:38\u00a0<vmassol>\u00a0ok cool, was planning to look at it but go ahead!  \n09:42\u00a0<bouquetf>\u00a0Done! Just before next talk ;) See you later  \n09:42\u00a0<vmassol>\u00a0enjoy the conf!  \n09:43\u00a0<bouquetf>\u00a0thx, have fun for the new release  \n09:43\u00a0<vmassol>\u00a0hx  \n09:43\u00a0<vmassol>\u00a0\\*t  \n10:18\u00a0<vmassol>\u00a0sorry for sending a long message to the list :)  \n10:25\u00a0<Denis>\u00a0long, but clear :)  \n10:26\u00a0<vmassol>\u00a0pfew :)  \n10:27\u00a0<Denis>\u00a0however, I do not have a strong opinion. The mistake was to have prefix and wiki name the same initially  \n10:29\u00a0<Denis>\u00a0vmassol: are you sure we really need that all that syntax fuzz to add prefixes ?  \n10:30\u00a0<vmassol>\u00a0I don't understand what you mean Denis  \n10:31\u00a0<Denis>\u00a0isn't it sufficiently uncommon to reference document outside a wiki, that to be sure you never get broken, you should prefix with doc:, else you are simply at risk  \n10:31\u00a0<vmassol>\u00a0that's not the issue  \n10:31\u00a0<vmassol>\u00a0the issue is not breaking a given syntax  \n10:31\u00a0<vmassol>\u00a0you cannot add a new type prefix without breaking it with the current system  \n10:31\u00a0<vmassol>\u00a0so you need a new syntax  \n10:31\u00a0<vmassol>\u00a0it's solution 1  \n10:31\u00a0<vmassol>\u00a0:)  \n10:32\u00a0<Denis>\u00a0sure, but it would break marginal cases  \n10:32\u00a0<vmassol>\u00a0yes but that's still a syntax breakage  \n10:32\u00a0<Denis>\u00a0couldn't we simply accept it ?  \n10:32\u00a0<vmassol>\u00a0having a subwiki named \"user\" isn't maybe that uncommon  \n10:32\u00a0<vmassol>\u00a0(and having links to it)  \n10:32\u00a0<vmassol>\u00a0you could propose that as solution 5 :)  \n10:33\u00a0<vmassol>\u00a0but my solution 1 is already implemented  \n10:33\u00a0<vmassol>\u00a0and is IMO better than this  \n10:33\u00a0<vmassol>\u00a0it's the same but controls what a syntax accepts  \n10:33\u00a0<Denis>\u00a0but complex  \n10:34\u00a0<vmassol>\u00a0the question re solution 1 is whether we'll need this again in the future and how oftne  \n10:34\u00a0<vmassol>\u00a0not really  \n10:34\u00a0<vmassol>\u00a0we do need a new 2.2 syntax anyway  \n10:34\u00a0<Denis>\u00a0not for us, for the user  \n10:34\u00a0<vmassol>\u00a0(experimental)  \n10:34\u00a0<vmassol>\u00a0for the user it's ok  \n10:34\u00a0<vmassol>\u00a0I can explain how to add a new type parser in the doc  \n10:34\u00a0<Denis>\u00a0so, which syntax do I need to have to be able to use this or that prefix ?  \n10:34\u00a0<vmassol>\u00a0it just means a few more lines of code  \n10:34\u00a0<vmassol>\u00a0but not many  \n10:35\u00a0<vmassol>\u00a0@Denis: each syntax says what it supports  \n10:35\u00a0<vmassol>\u00a0but  \n10:35\u00a0<vmassol>\u00a0from the user POV if he wants he can change that with code for his system if he needs to add a new type for an existing syntax  \n10:35\u00a0<vmassol>\u00a0(if he wants \u00a0a custom system)  \n10:35\u00a0<Denis>\u00a0in a few year, you got a wiki with a mixup of document in different syntax, and you would be surprise that link to user works here and not there  \n10:36\u00a0<vmassol>\u00a0that's ok  \n10:36\u00a0<vmassol>\u00a0that's already the case  \n10:36\u00a0<vmassol>\u00a0if you're using syntax 2.0 for ex  \n10:36\u00a0<vmassol>\u00a0you don't have the type prefixes support for ex  \n10:36\u00a0<vmassol>\u00a0nor with syntax 1.0 or other wiki markups  \n10:37\u00a0<Denis>\u00a0sure, but this is a more visible feature than a simple new prefix  \n10:37\u00a0<vmassol>\u00a0however converting from 2.1 to 2.2 will work seamlessly :)  \n10:37\u00a0<vmassol>\u00a0I find anchors and query string to be a bigger concenr personally  \n10:37\u00a0<vmassol>\u00a0(the change in 2.1 from 2.0)  \n10:37\u00a0<vmassol>\u00a0syntaxes provide changes  \n10:37\u00a0<Denis>\u00a0I means, it could introduce complexity each time we want to add another one  \n10:37\u00a0<vmassol>\u00a0that's normal  \n10:37\u00a0<vmassol>\u00a0ad that's why we have new syntaxes :)  \n10:38\u00a0<Denis>\u00a0sure, but this is not really a big syntax feature, just an extension, like when you add a new macro IMO  \n10:38\u00a0<vmassol>\u00a0but solutions 3 or 4 are the best ofc  \n10:38\u00a0<vmassol>\u00a0since they allow extensibility without breaking the syntax  \n10:39\u00a0<vmassol>\u00a0and you get a real extension system for adding new types like macros  \n10:40\u00a0<vmassol>\u00a0(we thought we had this now but we forgot the issue with syntax breakages)  \n10:40\u00a0<Denis>\u00a0again, we would have it if no collision with wiki name was possible  \n10:41\u00a0<tdelafosse>\u00a0has joined #xwiki  \n10:41\u00a0<vmassol>\u00a0yes that's solutions 3 and 4 :)  \n10:41\u00a0<vmassol>\u00a0to avoid collisions  \n10:44\u00a0<Denis>\u00a0what about 3bis, linking to external wiki needs doc:  \n10:44\u00a0<vmassol>\u00a0interesting  \n10:44\u00a0<vmassol>\u00a0:)  \n10:44\u00a0<vmassol>\u00a0looks a good idea to me  \n10:44\u00a0<vmassol>\u00a0you should propose it  \n10:45\u00a0<vmassol>\u00a0I think it's the best proposal so far  \n10:45\u00a0<vmassol>\u00a0although users would need to get used to it  \n10:45\u00a0<vmassol>\u00a0if we look at xwiki.org for ex or any workspaces setup you do a lot of cross wiki links  \n10:45\u00a0<vmassol>\u00a0but certainly better than solution 3 for sure  \n10:55\u00a0<Denis>\u00a0of course, you will need a simple converter to go from 2.1 to 2.2 syntax, but it looks really more less intrusive to me than other solutions, and a definitive fix  \n10:55\u00a0<Denis>\u00a0-more  \n11:00\u00a0<vmassol>\u00a0you don't need any converter  \n11:00\u00a0<vmassol>\u00a0it's done automatically  \n11:14\u00a0<Denis>\u00a0sure, what I would like to means, is that from a user pov, there will be a small conversion  \n11:20\u00a0<qwebirc440>\u00a0has joined #xwiki  \n11:26\u00a0<qwebirc440>\u00a0Hello. We're (still) having an issue with XWiki Ent 3.0. Problem: Employees have an Active directory useraccount and they use these credentials to login to Xwiki. Using the xwiki.cfg a translation is made between AD groups and xwiki groups. Whenever a user logs on to Xwiki a user page is created and the xwiki.user is added to all the corresponding groups in the .cfg file. However in one (custom xwiki group) the user gets added ov  \n11:27\u00a0<qwebirc440>\u00a0the good thing: removing the user page, removes all the entries from all groups and boosts performance for that user a lot!  \n11:28\u00a0<qwebirc440>\u00a0Unfortunately the problem remains and the performance deteriorates for those users over time.  \n11:29\u00a0<qwebirc440>\u00a0Until the clean up is done again.  \n11:29\u00a0<qwebirc440>\u00a0Anyone able to help me in my quest for a solution ? :)  \n11:59\u00a0<qwebirc440>\u00a0At some point when trying to delete users from a group and then closing the window, the group suddenly contain 2x the amount of users.  \n11:59\u00a0<qwebirc440>\u00a0Going into document index, orphaned pages, the page i just edited has become orphan.  \n12:00\u00a0<qwebirc440>\u00a0when i delete the orphan the user count in the group returns to normal  \n12:00\u00a0<vmassol>\u00a0sorry qwebirc440 never used ldap with xwiki  \n12:01\u00a0<qwebirc440>\u00a0why? isn't it supported?  \n12:01\u00a0<vmassol>\u00a0I don't use eveyrthing that's supported :)  \n12:03\u00a0<qwebirc440>\u00a0we want to use it to provide users a sso method  \n12:04\u00a0<qwebirc440>\u00a0o my bad... i thought you wrote \"never use\"  \n12:04\u00a0<qwebirc440>\u00a0the -d makes quite a difference :)  \n12:04\u00a0<vmassol>\u00a0oh no you can use it of course!  \n12:04\u00a0<vmassol>\u00a0it's supported  \n12:09\u00a0<vmassol>\u00a0does anyone know how I could create a PR from my working clone of xwiki-rendering for example?  \n12:10\u00a0<vmassol>\u00a0it seems a pretty common use case, we code something and then found it's complex or dangerous and we want to transform it into a PR  \n12:11\u00a0<vmassol>\u00a0actually my use case is not so common  \n12:11\u00a0<vmassol>\u00a0because you'd normally create a branch  \n12:12\u00a0<vmassol>\u00a0but I don't want to do that, \u00a0since my goal is just to share my code and then close the PR later on but I'd like the keep the ref to it so that if one day we want to use it we can easily see the code  \n12:13\u00a0<vmassol>\u00a0hmm i guess that even if I delete a branch I'd still be able to reference the sha  \n12:55\u00a0<sburjan\\_>\u00a0has joined #xwiki  \n12:58\u00a0<sburjan\\_>\u00a0is now known as <sburjan`>  \n13:04\u00a0<xwikibot>\u00a0has joined #xwiki  \n13:26\u00a0<qwebirc440>\u00a0has quit  \n13:32\u00a0<Denis>\u00a0has quit  \n13:57\u00a0<vmassol>\u00a0hmm I wonder what could cause such a big difference: [WARNING] Insufficient code coverage for INSTRUCTION: 62.07% < 62.38%  \n13:57\u00a0<vmassol>\u00a0on platform master (quality checks)  \n13:57\u00a0<vmassol>\u00a00.31% is huge  \n13:58\u00a0<vmassol>\u00a0trying locally  \n13:59\u00a0<vmassol>\u00a0sdumitriu: ping  \n14:00\u00a0<vmassol>\u00a0what's happening on http://ci.xwiki.org/  \n14:00\u00a0<vmassol>\u00a0?  \n14:00\u00a0<vmassol>\u00a0seems it's building all PR that ever happened or something like that  \n14:00\u00a0<vmassol>\u00a0did you change something?  \n14:02\u00a0<vmassol>\u00a0you installed the github PR plugin.  \n14:02\u00a0<vmassol>\u00a0?  \n14:03\u00a0<vmassol>\u00a0there are 10 PR builds now is that normal?  \n14:04\u00a0<sdumitriu>\u00a0vmassol: Pong  \n14:05\u00a0<sdumitriu>\u00a0I've installed the GitHubPullRequestBuilder  \n14:05\u00a0<sdumitriu>\u00a0Builds seem to be stuck  \n14:06\u00a0<vmassol>\u00a0ok  \n14:06\u00a0<vmassol>\u00a0I agree with this because beehive is never going to work for us  \n14:06\u00a0<sdumitriu>\u00a0And again it's the \"Exception in thread \"Job Manager daemon thread\" java.util.ConcurrentModificationException\" error  \n14:06\u00a0<sdumitriu>\u00a0I'm stopping them  \n14:07\u00a0<vmassol>\u00a0seems different  \n14:07\u00a0<vmassol>\u00a0for ex: http://ci.xwiki.org/job/xwiki-platform-pullrequests/4/console  \n14:07\u00a0<vmassol>\u00a0is not related to concurrency  \n14:07\u00a0<sdumitriu>\u00a0Yes, was looking at that one  \n14:07\u00a0<vmassol>\u00a0another one: http://ci.xwiki.org/job/xwiki-platform-pullrequests/10/console  \n14:07\u00a0<sdumitriu>\u00a0Some pull requests are too old  \n14:07\u00a0<vmassol>\u00a0whihc is also different  \n14:07\u00a0<vmassol>\u00a0so how does it work?  \n14:08\u00a0<vmassol>\u00a0it started building all open PRs?  \n14:08\u00a0<vmassol>\u00a0or did you trigger something?  \n14:08\u00a0<sdumitriu>\u00a0Well, it's based on a whitelist  \n14:08\u00a0<sdumitriu>\u00a0It only builds automatically PRs from trusted people  \n14:09\u00a0<sdumitriu>\u00a0- run tests -> trigger a build for this PR  \n14:09\u00a0<sdumitriu>\u00a0- add to whitelist -> add the requester to the whitelist and automatically build his PRs from now on  \n14:09\u00a0<sdumitriu>\u00a0It should be able to mark the PR status  \n14:09\u00a0<vmassol>\u00a0from what ui?  \n14:10\u00a0<sdumitriu>\u00a0I don't know why it doesn't here  \n14:10\u00a0<vmassol>\u00a0on http://ci.xwiki.org/job/xwiki-platform-pullrequests/ I don't see the optios  \n14:10\u00a0<sdumitriu>\u00a0From GitHub, in a comment on the PR  \n14:10\u00a0<vmassol>\u00a0ah ok  \n14:10\u00a0<sdumitriu>\u00a0Like on https://github.com/xwiki/xwiki-platform/pull/102  \n14:10\u00a0<sdumitriu>\u00a0(see my comment)  \n14:11\u00a0<sdumitriu>\u00a0I think one problem could be that we're using the stable version, which is old  \n14:11\u00a0<vmassol>\u00a0so you add a new comment  \n14:11\u00a0<sdumitriu>\u00a0I've used the latest version and it worked flawlessly for me  \n14:11\u00a0<vmassol>\u00a0and if it contains the string \"run tests\"  \n14:11\u00a0<sdumitriu>\u00a0Yes  \n14:11\u00a0<vmassol>\u00a0then a build is triggered?  \n14:11\u00a0<vmassol>\u00a0ok  \n14:11\u00a0<sdumitriu>\u00a0Check in the global Jenkins configuration  \n14:12\u00a0<sdumitriu>\u00a0You can configure the strings to look for  \n14:12\u00a0<vmassol>\u00a0I didn't understand your comment this morning :)  \n14:12\u00a0<vmassol>\u00a0makes sense now  \n14:12\u00a0<vmassol>\u00a0I also commented btw on some PR  \n14:12\u00a0<vmassol>\u00a0about the need to have downstream build work too (like func tests)  \n14:13\u00a0<vmassol>\u00a0we would need a full total build to be really sure a PR is working  \n14:13\u00a0<sdumitriu>\u00a0Yes, I only added the platform one to see if it works  \n14:13\u00a0<vmassol>\u00a0but would it trigger other jobs downstream?  \n14:13\u00a0<vmassol>\u00a0and wait for the result  \n14:13\u00a0<sdumitriu>\u00a0I'm not sure how we can build downstream repos, though  \n14:13\u00a0<vmassol>\u00a0before posting back on gothub?  \n14:13\u00a0<vmassol>\u00a0github  \n14:14\u00a0<sdumitriu>\u00a0Since it can't run on the same version of the code  \n14:14\u00a0<sdumitriu>\u00a0Unless we manually add post-install commands to run on the same machine  \n14:14\u00a0<vmassol>\u00a0there are jenkins plugin for running a set of jobs  \n14:14\u00a0<vmassol>\u00a0like the flow plugin  \n14:15\u00a0<vmassol>\u00a0but I need to read on the github pr plugin to understand how it works  \n14:15\u00a0<vmassol>\u00a0https://wiki.jenkins-ci.org/display/JENKINS/Build+Flow+Plugin  \n14:16\u00a0<vmassol>\u00a0and you get nice stuff as shown on http://www.lordofthejars.com/2012/08/build-flow-jenkins-plugin.html  \n14:17\u00a0<vmassol>\u00a0there's another such plugin but its name escapes me ATM  \n14:18\u00a0<vmassol>\u00a0ah I remember  \n14:18\u00a0<vmassol>\u00a0the pipeline plugin  \n14:18\u00a0<vmassol>\u00a0https://wiki.jenkins-ci.org/display/JENKINS/Build+Pipeline+Plugin  \n14:55\u00a0<sorinello\\_\\_>\u00a0has joined #xwiki  \n14:57\u00a0<vmassol>\u00a0mflorea: shouldn't we remove the \"experimental\" status of the DW in 5.0 final?  \n14:57\u00a0<mflorea>\u00a0it's already removed  \n14:58\u00a0<vmassol>\u00a0ah cool then the screenshots at http://www.xwiki.org/xwiki/bin/view/ReleaseNotes/ReleaseNotesXWiki50 are a bit outdated :)  \n14:58\u00a0<vmassol>\u00a0for ex: http://www.xwiki.org/xwiki/bin/download/ReleaseNotes/ReleaseNotesXWiki451/DW-upgradeExtensions.png  \n14:58\u00a0<mflorea>\u00a0checkout the link  \n14:58\u00a0<mflorea>\u00a04.5.1  \n14:59\u00a0<vmassol>\u00a0that's impl detail  \n14:59\u00a0<vmassol>\u00a0it's in RN 5.0  \n14:59\u00a0<vmassol>\u00a0so that's wrong  \n14:59\u00a0<vmassol>\u00a0we just need a new screensho  \n14:59\u00a0<vmassol>\u00a0t  \n14:59\u00a0<mflorea>\u00a0yes, I don't have time  \n15:00\u00a0<vmassol>\u00a0someone who could help?  \n15:00\u00a0<vmassol>\u00a0does the ref doc also has the warning?  \n15:00\u00a0<vmassol>\u00a0checking  \n15:01\u00a0<vmassol>\u00a0btw where is the ref doc for DW?  \n15:01\u00a0<mflorea>\u00a0nowhere  \n15:01\u00a0<vmassol>\u00a0hmmm  \n15:01\u00a0<vmassol>\u00a0that's not very nice  \n15:01\u00a0<vmassol>\u00a0we need to find a place  \n15:02\u00a0<vmassol>\u00a0right now the module is web right?  \n15:02\u00a0<vmassol>\u00a0ah no  \n15:02\u00a0<mflorea>\u00a0the UI yes, the backend is in EM  \n15:02\u00a0<vmassol>\u00a0platform-extension-distribution  \n15:02\u00a0<mflorea>\u00a0that's the backend  \n15:02\u00a0<vmassol>\u00a0ok  \n15:03\u00a0<vmassol>\u00a0need to think\u2026 interesting challenge  \n15:05\u00a0<vmassol>\u00a0if we were to follow what we currently have  \n15:05\u00a0<vmassol>\u00a0it should be documented in enterprise:Features space  \n15:05\u00a0<vmassol>\u00a0with a new section here: http://enterprise.xwiki.org/xwiki/bin/view/Main/Features  \n15:05\u00a0<vmassol>\u00a0IMO that's what we should do for now  \n15:06\u00a0<vmassol>\u00a0msmeria/sburjan: what would you think of taking up that challenge?  \n15:06\u00a0<vmassol>\u00a0:)  \n15:07\u00a0<mflorea>\u00a0I can document it next week, but now I don't have time..  \n15:07\u00a0<vmassol>\u00a0the idea is to create a new \"Installation and Upgrade Wizard\" entry on http://enterprise.xwiki.org/xwiki/bin/view/Main/Features  \n15:07\u00a0<vmassol>\u00a0in http://enterprise.xwiki.org/xwiki/bin/view/Main/Features/DistributionWizard  \n15:08\u00a0<vmassol>\u00a0err back link  \n15:08\u00a0<vmassol>\u00a0\\*bad  \n15:08\u00a0<vmassol>\u00a0http://enterprise.xwiki.org/xwiki/bin/view/Features/DistributionWizard  \n15:08\u00a0<vmassol>\u00a0actually bad link too  \n15:08\u00a0<vmassol>\u00a03rd try:  \n15:08\u00a0<vmassol>\u00a0http://platform.xwiki.org/xwiki/bin/view/Features/DistributionWizard  \n15:08\u00a0<vmassol>\u00a0yes that's the good one :)  \n15:08\u00a0<vmassol>\u00a0I'll add a jira for it now  \n15:10\u00a0<vmassol>\u00a0mflorea: normally we shouldn't have been able to close any issue regarding the DW without this  \n15:10\u00a0<vmassol>\u00a0it means we didn't follow our practice for the DW  \n15:10\u00a0<vmassol>\u00a0since we need doc in RN and ref doc  \n15:10\u00a0<vmassol>\u00a0something to learn for the future  \n15:11\u00a0<vmassol>\u00a0ok the issue is at http://jira.xwiki.org/browse/XINFRA-86  \n15:11\u00a0<vmassol>\u00a0sburjan, msmeria, mflorea: I'll let you decide who does it between you 3 :)  \n15:12\u00a0<vmassol>\u00a0who will be lucky winner\u2026.  \n15:12\u00a0<sburjan>\u00a0vmassol: I won't since I can't seem to have the rights to assign it to me ;)  \n15:12\u00a0<vmassol>\u00a0sburjan: that can be fixed  \n15:12\u00a0<vmassol>\u00a0:)  \n15:12\u00a0<sburjan>\u00a0then I'll do it :)  \n15:12\u00a0<msmeria>\u00a0:D  \n15:13\u00a0<vmassol>\u00a0ok great  \n15:13\u00a0<vmassol>\u00a0now assigned to you  \n15:13\u00a0<sburjan>\u00a0but can I do it next week ?  \n15:13\u00a0<sburjan>\u00a0like .. Monday :)  \n15:13\u00a0<vmassol>\u00a0yes Monday is good  \n15:13\u00a0<sburjan>\u00a0cool.  \n15:13\u00a0<vmassol>\u00a0thanks  \n15:25\u00a0<vmassol>\u00a0sburjan: why is XWIKI-9074 a bug?  \n15:25\u00a0<vmassol>\u00a0I'd consider it more like an improvement  \n15:26\u00a0<sburjan>\u00a0because the defauly syntax is 2.1  \n15:26\u00a0<vmassol>\u00a0and?  \n15:26\u00a0<sburjan>\u00a0and the importer creates 2.0 documents  \n15:26\u00a0<vmassol>\u00a0hmmmm  \n15:26\u00a0<sburjan>\u00a0as an end user I would expect 2.1 pages to be created  \n15:26\u00a0<vmassol>\u00a0it's really edge case for a bug  \n15:27\u00a0<sburjan>\u00a0what else could be if not a bug ?  \n15:27\u00a0<sburjan>\u00a0and intended feature ?  \n15:27\u00a0<vmassol>\u00a0it is intended ATM  \n15:27\u00a0<vmassol>\u00a0and not a bug  \n15:27\u00a0<vmassol>\u00a0but I agree that an improvement would be to use the default syntax  \n15:27\u00a0<sburjan>\u00a0ok, I did not know it is intended :)  \n15:27\u00a0<vmassol>\u00a0I'm assuming that someone hardcoded 2.0, checking ;)  \n15:28\u00a0<vmassol>\u00a0I see:  \n15:28\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0@Override  \n15:28\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return getContentAsString(\"xwiki/2.0\");  \n15:28\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0}  \n15:28\u00a0<vmassol>\u00a0I'll fix this  \n15:29\u00a0<vmassol>\u00a0funnily the office SS correclty uses the passed syntax  \n15:30\u00a0<sburjan>\u00a0SS = scriptservice ?  \n15:30\u00a0<vmassol>\u00a0yes I know, it reminds of other unpleasant things....  \n15:31\u00a0<gihanchanukak>\u00a0has quit  \n15:35\u00a0<gihanchanuka>\u00a0has joined #xwiki  \n15:36\u00a0<tdelafosse>\u00a0has quit  \n15:40\u00a0<vmassol>\u00a0it's not easy to fix  \n15:40\u00a0<vmassol>\u00a0the api is really not nice in the office module code  \n15:41\u00a0<vmassol>\u00a0implementation classes are exposed in non internal packages for example  \n15:41\u00a0<vmassol>\u00a0:(  \n15:42\u00a0<sburjan>\u00a0ouch  \n15:43\u00a0<sburjan>\u00a0so breaking API  \n15:43\u00a0<vmassol>\u00a0yes  \n15:45\u00a0<vmassol>\u00a0actually no I don't have to break api  \n15:46\u00a0<vmassol>\u00a0I can just deprecate  \n15:46\u00a0<vmassol>\u00a0trying  \n15:46\u00a0<vmassol>\u00a0ah no, even better  \n15:46\u00a0<vmassol>\u00a0ok I can do it easily actually ;)  \n15:49\u00a0<vmassol>\u00a0hmmm not so easily since I need to depend on oldcore...  \n15:52\u00a0<sburjan>\u00a0vmassol: well I just reported to be known :)  \n15:52\u00a0<sburjan>\u00a0no one if forcing you to fix it ;)  \n15:52\u00a0<vmassol>\u00a0I know  \n15:52\u00a0<vmassol>\u00a0but it's an interesting problem to solve  \n15:52\u00a0<vmassol>\u00a0which is how to get the default syntax cleanly  \n15:55\u00a0<tdelafosse>\u00a0has joined #xwiki  \n16:00\u00a0<msmeria>\u00a0has quit  \n16:20\u00a0<tdelafosse>\u00a0has quit  \n16:23\u00a0<tdelafosse>\u00a0has joined #xwiki  \n16:34\u00a0<evalica>\u00a0has quit  \n16:38\u00a0<dpatriche>\u00a0has quit  \n16:42\u00a0<sdumitriu1>\u00a0has joined #xwiki  \n16:44\u00a0<mflorea>\u00a0vmassol: platform build stuck in the same place, the extension unit tests  \n16:51\u00a0<vmassol>\u00a0as usual\u2026.  \n16:51\u00a0<vmassol>\u00a0killed it  \n16:52\u00a0<bouquetf>\u00a0Hi again  \n16:52\u00a0<vmassol>\u00a0bouquetf: hi  \n16:52\u00a0<bouquetf>\u00a0vmassol: Just seen your feedback on github  \n16:52\u00a0<vmassol>\u00a0yeah sorry about the mess  \n16:52\u00a0<bouquetf>\u00a0np :)  \n16:53\u00a0<bouquetf>\u00a0In fact, I was not able to get several authentication plugins activated at the same time. Maybe find a way to get the properties from a property file ?  \n16:53\u00a0<vmassol>\u00a0I don't understand  \n16:54\u00a0<vmassol>\u00a0we can have a single plugin  \n16:54\u00a0<vmassol>\u00a0bouquetf: just one XWikiAuthenticationPlugin  \n16:54\u00a0<vmassol>\u00a0but inside it we auth depending on the method chosen by the user  \n16:54\u00a0<vmassol>\u00a0that won't work?  \n16:54\u00a0<bouquetf>\u00a0It may, didn't try  \n16:54\u00a0<vmassol>\u00a0(I haven't researched this topic on crash)  \n16:55\u00a0<vmassol>\u00a0you just need to say true or false  \n16:55\u00a0<vmassol>\u00a0so it's easy IMO  \n16:55\u00a0<vmassol>\u00a0so to summarize:  \n16:55\u00a0<vmassol>\u00a01) we introduce a new config prop that says which xwiki component to use for auth  \n16:55\u00a0<vmassol>\u00a0(the value is the component hint)  \n16:55\u00a0<vmassol>\u00a02) we implement 3 components  \n16:56\u00a0<vmassol>\u00a0one for each auth  \n16:56\u00a0<vmassol>\u00a03) in XWikiAuthenticationPlugin we use the impl matched by the config prop  \n16:56\u00a0<vmassol>\u00a04) by default we use the xwiki-backed auth method if the user hasn't defined the config prop that says with auth method to use  \n16:57\u00a0<vmassol>\u00a0bouquetf: wdyt?  \n16:57\u00a0<vmassol>\u00a0this will allow the 3 auth + allow anyone to plug new auth mechanisms if they want, using components  \n16:57\u00a0<bouquetf>\u00a0Do you think we can have at the same time several ways to authenticate a user (for example ssh key and username/password from xwiki API ?)  \n16:57\u00a0<vmassol>\u00a0why at the same time?  \n16:58\u00a0<vmassol>\u00a0btw yes we could chain them if we want  \n16:58\u00a0<bouquetf>\u00a0Cause it would not be the same way to implement it  \n16:58\u00a0<vmassol>\u00a0you mean chain them right?  \n16:58\u00a0<bouquetf>\u00a0Yep  \n16:58\u00a0<vmassol>\u00a0I thought if you were asking if it was possible  \n16:58\u00a0<vmassol>\u00a0but you're asking if we want to do that  \n16:58\u00a0<vmassol>\u00a0right?  \n16:58\u00a0<vmassol>\u00a0this works the same way actually  \n16:59\u00a0<bouquetf>\u00a0Yes, I'm not sure it's supported by Crash but I was asking if we want to support it  \n16:59\u00a0<vmassol>\u00a05) we implement an xwiki component auth that chains them  \n16:59\u00a0<vmassol>\u00a0(using the same interface)  \n16:59\u00a0<vmassol>\u00a0it's really easy to do all this but I can do it if you want  \n16:59\u00a0<bouquetf>\u00a0right now, the solution I see is to develop some kind of \"meta-authentication\" plugin which will chain authentication mecanisms  \n16:59\u00a0<vmassol>\u00a0since I don't know if I was clear enough :)  \n17:00\u00a0<bouquetf>\u00a0Just noticed your 5  \n17:00\u00a0<vmassol>\u00a0let me commit something quickly  \n17:00\u00a0<bouquetf>\u00a0It's an other way yes  \n17:00\u00a0<bouquetf>\u00a0okay  \n17:03\u00a0<bouquetf>\u00a0Basically, in crash, to support a new authentication mecanism, you have to create a new authentication plugin which is loaded by crash. Then, using a system property (crash.auth) you define which plugin to use  \n17:03\u00a0<vmassol>\u00a0ah ok so either we do it their way or we do it our way  \n17:03\u00a0<vmassol>\u00a0our = the xwiki way  \n17:03\u00a0<vmassol>\u00a0do they allow chaining?  \n17:04\u00a0<vmassol>\u00a0probably not  \n17:04\u00a0<bouquetf>\u00a0Yes, I did it their way, I didn't think about doing it our way. Not sure they allow chaining, tryed but not found how  \n17:04\u00a0<bouquetf>\u00a0so our way may be the solution  \n17:08\u00a0<bouquetf>\u00a0I'll have to check how ssh key support is implemented. May be an issue  \n17:08\u00a0<vmassol>\u00a0yes possibly  \n17:13\u00a0<bouquetf>\u00a0It seems that ssh keys is supported by default (not as an authentication plugin)  \n17:15\u00a0<vmassol>\u00a0that's not a very nice design  \n17:16\u00a0<vmassol>\u00a0I'll need to talk to julien :)  \n17:16\u00a0<vmassol>\u00a0I'm almost done  \n17:16\u00a0<vmassol>\u00a0(without tests)  \n17:16\u00a0<bouquetf>\u00a0Yes, I confirm : the ssh public key repository is read when crash is started  \n17:18\u00a0<bouquetf>\u00a0So, the authentication chain is :  \n17:18\u00a0<bouquetf>\u00a01. Check ssh key  \n17:18\u00a0<bouquetf>\u00a02. check authentication to xwiki which will chain mecanisms  \n17:19\u00a0<bouquetf>\u00a0not sure it's the design we want  \n17:22\u00a0<vmassol>\u00a0ok done, testing  \n17:23\u00a0<bouquetf>\u00a0What were you working on ?  \n17:23\u00a0<vmassol>\u00a0some tech stuff on xwiki codebase why? :)  \n17:23\u00a0<sdumitriu1>\u00a0has left #xwiki  \n17:23\u00a0<vmassol>\u00a0I'll commit and you can tell me if you like it or not  \n17:24\u00a0<vmassol>\u00a0if not I'll roll back  \n17:24\u00a0<bouquetf>\u00a0ah ok, wanted to know it you were on xwiki codebase or a modification on our integration  \n17:27\u00a0<vmassol>\u00a0something is still failing for me but I'll commit now so that you can see what I meant  \n17:27\u00a0<bouquetf>\u00a0ok  \n17:28\u00a0<vmassol>\u00a0just created http://jira.xwiki.org/browse/XCONTRIB-200  \n17:28\u00a0<vmassol>\u00a0you can assign yourself  \n17:29\u00a0<vmassol>\u00a0done, should arrive here soon  \n17:30\u00a0<vmassol>\u00a0not sure why the notifiaiton doesn't arrive :)  \n17:30\u00a0<bouquetf>\u00a0done yes. For you, what would be the best way to set properties on crash side ? I think in the administration page of crash may be a nice solution  \n17:30\u00a0<vmassol>\u00a0https://github.com/xwiki-contrib/application-crash/commit/f94d981bd2bf8b39eafdb43fed02e6e6af549824  \n17:30\u00a0<bouquetf>\u00a0thx  \n17:31\u00a0<vmassol>\u00a0ok I know what I forgot :)  \n17:31\u00a0<vmassol>\u00a0fixing  \n17:33\u00a0<sburjan>\u00a0has quit  \n17:33\u00a0<sorinello\\_\\_>\u00a0has quit  \n17:37\u00a0<bouquetf>\u00a0What you wanted to do is AllCrashAuthentication the authentication plugin ?  \n17:37\u00a0<bouquetf>\u00a0\\* to use  \n17:37\u00a0<vmassol>\u00a0by default yes  \n17:37\u00a0<vmassol>\u00a0if not speicfied by the user  \n17:37\u00a0<vmassol>\u00a0if you use crash.authentication=xwiki you'll get xwiki auth only  \n17:38\u00a0<vmassol>\u00a0if you use crash.authentication=simple you'll get simple auth only  \n17:38\u00a0<vmassol>\u00a0if you don't specify anytrhing or crash.authentication=all you get chaning  \n17:38\u00a0<vmassol>\u00a0ie it tries first simple auth and if it fails then tries xwiki auth  \n17:38\u00a0<vmassol>\u00a0so basically simple auth overrides xwiki auth  \n17:39\u00a0<bouquetf>\u00a0yes I see. Some things have to be changed for the authentication plugin  \n17:40\u00a0<vmassol>\u00a0ah?  \n17:40\u00a0<bouquetf>\u00a0In fact, an authentication plugin has to extend CRaSHPlugin and implement AuthenticationPlugin  \n17:41\u00a0<vmassol>\u00a0I did that  \n17:41\u00a0<vmassol>\u00a0:)  \n17:41\u00a0<bouquetf>\u00a0then, you have to define the plugin to use as a system property (crash.auth)  \n17:41\u00a0<vmassol>\u00a0it's also done  \n17:42\u00a0<vmassol>\u00a0:)  \n17:42\u00a0<vmassol>\u00a0btw just pushed a change  \n17:42\u00a0<bouquetf>\u00a0Ah, and it has to be loaded in classloader by setting it in org.crsh.plugin.CRaSHPlugin resource  \n17:42\u00a0<vmassol>\u00a0yes sure  \n17:42\u00a0<vmassol>\u00a0that's also there  \n17:42\u00a0<bouquetf>\u00a0ok, I'll get it :)  \n17:42\u00a0<bouquetf>\u00a0it should work so now  \n17:42\u00a0<vmassol>\u00a0I still have a bug somehwere  \n17:43\u00a0<bouquetf>\u00a0Just pulled it, I check too  \n17:44\u00a0<vmassol>\u00a0debuggin, ok thanks  \n17:45\u00a0<vmassol>\u00a0ok found the problem  \n17:45\u00a0<vmassol>\u00a0fixing  \n17:45\u00a0<vmassol>\u00a0typo  \n17:46\u00a0<bouquetf>\u00a0ok  \n17:46\u00a0<vmassol>\u00a0pushed  \n17:46\u00a0<bouquetf>\u00a0I check that  \n17:46\u00a0<vmassol>\u00a0so wdyt about the code?  \n17:47\u00a0<vmassol>\u00a0it's very configurable and the user can choose all the auth way he wants + extend it easily by adding new components  \n17:47\u00a0<vmassol>\u00a0actually he can even provide an extension that implements a new auth if he wants ;)  \n17:48\u00a0<vmassol>\u00a0hmm still fialing  \n17:49\u00a0<bouquetf>\u00a0Hm... For AllConfiguration plugin, what about chaining different plugins, depending on a system property. Or better : \u00a0a configuration read on xwiki admin page ?  \n17:51\u00a0<bouquetf>\u00a0ups, mix-it is finishing. I'll have to go. I'll check it this evening  \n17:52\u00a0<vmassol>\u00a0ok  \n17:53\u00a0<vmassol>\u00a0ok I know the problem  \n18:01\u00a0<vmassol>\u00a0bouquetf: ok I've fixed it, retesting  \n18:11\u00a0<sburjan`>\u00a0has quit  \n18:11\u00a0<sburjan`>\u00a0has joined #xwiki  \n18:14\u00a0<evalica>\u00a0has joined #xwiki  \n19:00\u00a0<tdelafosse>\u00a0has quit  \n19:05\u00a0<evalica>\u00a0has quit  \n19:40\u00a0<Denis1>\u00a0has joined #xwiki  \n19:55\u00a0<abusenius>\u00a0has joined #xwiki  \n20:01\u00a0<vmassol>\u00a0has quit  \n20:22\u00a0<mflorea>\u00a0has quit  \n21:23\u00a0<Denis1>\u00a0has quit  \n21:46\u00a0<evalica>\u00a0has joined #xwiki  \n21:57\u00a0<evalica>\u00a0has quit  \n22:32\u00a0<Denis1>\u00a0has joined #xwiki  \n22:32\u00a0<Denis1>\u00a0has quit  \n23:17\u00a0<npm\\_>\u00a0has quit  \n23:17\u00a0<npm\\_>\u00a0has joined #xwiki  \n23:22\u00a0<giuseppe\\_>\u00a0has joined #xwiki  \n23:37\u00a0<giuseppe\\_>\u00a0has quit\n"}