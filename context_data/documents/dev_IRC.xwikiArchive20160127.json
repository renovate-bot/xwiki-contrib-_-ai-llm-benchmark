{"id": "dev:IRC.xwikiArchive20160127", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20160127", "title": "IRC Archive for channel #xwiki on 27 January 2016 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<msmeria>\u00a0has joined #xwiki  \n07:35\u00a0<vmassol>\u00a0has joined #xwiki  \n08:01\u00a0<tmortagne>\u00a0has joined #xwiki  \n08:13\u00a0<D-Spair>\u00a0has quit  \n08:15\u00a0<msmeria1>\u00a0has joined #xwiki  \n08:17\u00a0<msmeria>\u00a0has quit  \n08:18\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n08:22\u00a0<D-Spair>\u00a0has joined #xwiki  \n08:28\u00a0<vmassol>\u00a0has quit  \n09:19\u00a0<evalica>\u00a0has joined #xwiki  \n09:25\u00a0<mflorea>\u00a0has joined #xwiki  \n09:37\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:41\u00a0<vmassol>\u00a0has joined #xwiki  \n09:43\u00a0<vmassol1>\u00a0has joined #xwiki  \n09:43\u00a0<vmassol>\u00a0has quit  \n09:49\u00a0<cjd>\u00a0has joined #xwiki  \n10:04\u00a0<woshilapin>\u00a0has joined #xwiki  \n10:14\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n10:29\u00a0<vmassol1>\u00a0good morning  \n10:29\u00a0<vmassol1>\u00a0I'm still tuning my script  \n10:29\u00a0<vmassol1>\u00a0is now known as <vmassol>  \n10:29\u00a0<vmassol>\u00a0I'm coding the handling of revisions now  \n10:29\u00a0<vmassol>\u00a0then I need to handle the AS  \n10:38\u00a0<woshilapin>\u00a0has quit  \n10:40\u00a0<woshilapin>\u00a0has joined #xwiki  \n10:54\u00a0<vmassol>\u00a0@Enygma` FTR the delete version UI action does delete the doc if it's the last version  \n10:55\u00a0<vmassol>\u00a0however we don't have any api for deleting a revision unfortunately  \n10:55\u00a0<vmassol>\u00a0the code is currently in DeleteVersionsAction  \n10:56\u00a0<vmassol>\u00a0so if I want this behavior I'll need to implement it in the script  \n10:56\u00a0<Enygma`>\u00a0yes, I was thinking at the code level as well  \n10:57\u00a0<Enygma`>\u00a0it`s good that we do it in the UI at least  \n11:32\u00a0<gdelhumeau>\u00a0$xwiki.getDocument('TourCode.TourJS').authorReference returns 'xwiki:XWiki.superadmin' for documents created by the packager plugin, but of course this user does not exist  \n11:32\u00a0<gdelhumeau>\u00a0and so I cannot do some right checks based on the doc author  \n11:32\u00a0<gdelhumeau>\u00a0do we have a strategy for this use-case?  \n11:33\u00a0<gdelhumeau>\u00a0actually my problem is that $services.security.authorization.hasAccess('edit', $tourDoc.authorReference, $targetRef) returns false when $tourDoc has been saved by superadmin  \n11:33\u00a0<gdelhumeau>\u00a0which is obviously wrong  \n11:35\u00a0<tmortagne>\u00a0I don't understand \"I cannot do some right checks based on the doc author\", right system obviously knows superadmin (and null guest user for that matter)  \n11:36\u00a0<gdelhumeau>\u00a0\u00a0$services.security.authorization.hasAccess('edit', $tourDoc.authorReference, $targetRef) returns false  \n11:36\u00a0<gdelhumeau>\u00a0because $tourDoc;authorReference is xwiki:XWiki.superadmin  \n11:36\u00a0<gdelhumeau>\u00a0which does not exist  \n11:36\u00a0<gdelhumeau>\u00a0(I'm on XWiki 6.4 btw)  \n11:37\u00a0<tmortagne>\u00a0it's not supposed to return false for superadmin, again it knows superadmin special user, otherwise you could not do anything when you log with it  \n11:39\u00a0<gdelhumeau>\u00a0then it's a bug  \n11:41\u00a0<gdelhumeau>\u00a0digging  \n11:42\u00a0<tmortagne>\u00a0$services.security.authorization.hasAccess('edit', 'xwiki:XWiki.superadmin', $doc.documentReference) gives me true on 6.4.6  \n11:42\u00a0<tmortagne>\u00a0are you really sure your reference is superadmin ?  \n11:42\u00a0<tmortagne>\u00a0I doubt there is a general superadmin issue in 6.4 as it would have broke a lot of tests, could be some very edge case  \n11:43\u00a0<gdelhumeau>\u00a0forget  \n11:43\u00a0<gdelhumeau>\u00a0$services.security is not installed  \n11:44\u00a0<vmassol>\u00a0:)  \n11:44\u00a0<tmortagne>\u00a0ok so you don't really get false, you used it in a #if  \n11:44\u00a0<gdelhumeau>\u00a0:)  \n11:44\u00a0<gdelhumeau>\u00a0I was thinking it was installed on the default package  \n11:44\u00a0<gdelhumeau>\u00a0apparently it's not  \n11:44\u00a0<tmortagne>\u00a0that's weird, it should  \n11:44\u00a0<tmortagne>\u00a0since it's used everywhere in the templates  \n11:46\u00a0<tmortagne>\u00a0I see it in PackagMojo#getMandatoryJarArtifacts() in master so maybe not in 6.4 but that would be surprising  \n11:46\u00a0<MasterPiece>\u00a0has joined #xwiki  \n11:47\u00a0<gdelhumeau>\u00a0I have xwiki-platform-security-api-6.4.jar and xwiki-platform-security-bridge-6.4.jar but no xwiki-platform-security-script-6.4.jar  \n11:48\u00a0<tmortagne>\u00a0been added in http://jira.xwiki.org/browse/XWIKI-12176  \n11:48\u00a0<tmortagne>\u00a0so indeed it's not in 6.4  \n11:49\u00a0<tmortagne>\u00a0but you can easily add it as dependency of the packager plugin on your side (or add it in minimum package if you are working on 6.4.7-SNAPSHOT branch)  \n11:50\u00a0<gdelhumeau>\u00a0I'm on a 6.4 release  \n11:50\u00a0<gdelhumeau>\u00a0for an app  \n11:50\u00a0<gdelhumeau>\u00a0on contrib  \n11:50\u00a0<tmortagne>\u00a0or as test dependency of your project, not sure what packager plugin search were actually  \n11:51\u00a0<tmortagne>\u00a0other possibility being to add it as dependency of your application as it it was not a core module  \n11:52\u00a0<gdelhumeau>\u00a0that's what I do  \n11:52\u00a0<gdelhumeau>\u00a0adding the dep to the app ui itself  \n11:53\u00a0<gdelhumeau>\u00a0now I have troubles with $services.localization.use('document', 'TourCode.TourTranslations') having no effect  \n11:53\u00a0<tmortagne>\u00a0(so the answer was plugin dependency and not test dependency since test dependency is only for test code)  \n11:54\u00a0<tmortagne>\u00a0same issue maybe ?  \n11:54\u00a0<gdelhumeau>\u00a0no $services.localization -> org.xwiki.localization.script.LocalizationScriptService@55f26d2f  \n11:54\u00a0<gdelhumeau>\u00a0I mean it's not the same issue  \n11:55\u00a0<tmortagne>\u00a0ok then I don't know, are you sure the translation is used in the same request ?  \n11:56\u00a0<tmortagne>\u00a0i.e. if you call use on some application home page it won't be available in the livetable result generation for example  \n11:57\u00a0<tmortagne>\u00a0for this kind of the use either you use some custom service page calling the use or you use scope wiki  \n11:57\u00a0<tmortagne>\u00a0(AWM use scope wiki)  \n11:58\u00a0<gdelhumeau>\u00a0tmortagne: I's an AWM-based application that I have developped on 6.4.7  \n11:58\u00a0<gdelhumeau>\u00a0Now I am testing it on 6.4  \n11:58\u00a0<gdelhumeau>\u00a0AWM did not use the scope WIKI  \n11:58\u00a0<tmortagne>\u00a0it does now  \n11:58\u00a0<gdelhumeau>\u00a0apparently, it's the context issue you mentioned  \n11:59\u00a0<gdelhumeau>\u00a0because the title is not rendered, but if I add $services.localization.render('tour.app.name') in the content, it works  \n11:59\u00a0<gdelhumeau>\u00a0maybe the basic fix is to use the WIKI scope and that's all  \n12:00\u00a0<tmortagne>\u00a0either wiki scope or custom service page for the livetable should do the trick, wiki scope is simpler :)  \n12:01\u00a0<tmortagne>\u00a0and the good thing with wiki scope is that it also work for application panel if you translation the applcation name  \n12:01\u00a0<gdelhumeau>\u00a0I did this ugly thing for the app panel: \"label=#set($discard =${services.localization.use('document', 'TourCode.TourTranslations')})$services.localization.render('tour.app.name')\"  \n12:02\u00a0<gdelhumeau>\u00a0the good thing is that I can simplify this :)  \n12:02\u00a0<gdelhumeau>\u00a0note that there is $services.localization.use('document', 'TourCode.TourTranslations') in TourLivetableResults  \n12:03\u00a0<woshilapin>\u00a0has quit  \n12:04\u00a0<woshilapin>\u00a0has joined #xwiki  \n12:13\u00a0<tmortagne>\u00a0actually I think AWM still call use, it's using scope wiki for something else  \n12:37\u00a0<mflorea>\u00a0has quit  \n12:40\u00a0<Slashman>\u00a0has joined #xwiki  \n12:47\u00a0<evalica>\u00a0has quit  \n12:49\u00a0<Enygma`>\u00a0has quit  \n12:52\u00a0<MasterPiece>\u00a0has quit  \n13:07\u00a0<msmeria1>\u00a0has quit  \n13:08\u00a0<mflorea>\u00a0has joined #xwiki  \n13:14\u00a0<msmeria>\u00a0has joined #xwiki  \n13:27\u00a0<evalica>\u00a0has joined #xwiki  \n13:28\u00a0<Enygma`>\u00a0has joined #xwiki  \n14:17\u00a0<msmeria1>\u00a0has joined #xwiki  \n14:20\u00a0<msmeria>\u00a0has quit  \n14:36\u00a0<vmassol>\u00a0found a solr indexing bug  \n14:36\u00a0<vmassol>\u00a0reporting  \n14:37\u00a0<vmassol>\u00a0which is causing me problems in my cleaning script...  \n14:41\u00a0<vmassol>\u00a0http://jira.xwiki.org/browse/XWIKI-13035  \n14:41\u00a0<vmassol>\u00a0so that's a problem because after I delete spam revisions from doc they still appear in a spam search...  \n14:42\u00a0<vmassol>\u00a0mflorea: can you confirm the problem? did you know about it?  \n14:46\u00a0<mflorea>\u00a0vmassol: what event is fired when you delete a revision? If there's no event fired then Solr can't detect it and update the index  \n14:46\u00a0<vmassol>\u00a0doesn't make the bug less real :)  \n14:46\u00a0<mflorea>\u00a0sure, but it may not be a Solr bug but an oldcore bug  \n14:47\u00a0<vmassol>\u00a0I don't know whose fault it is and I don't really care (whoever fixes this will need to figure out the reason)  \n14:47\u00a0<vmassol>\u00a0sure  \n14:47\u00a0<vmassol>\u00a0most likely  \n14:47\u00a0<tmortagne>\u00a0vmassol: you mean last revision, right ?  \n14:47\u00a0<vmassol>\u00a0yes  \n14:47\u00a0<tmortagne>\u00a0because solr does not care about old revision, the issue title is not very clear about that  \n14:48\u00a0<vmassol>\u00a0yes the description is more clear  \n14:48\u00a0<vmassol>\u00a0fixing title  \n14:48\u00a0<tmortagne>\u00a0what API did you use ?  \n14:48\u00a0<vmassol>\u00a0the same code as on DeleteVersionsAction  \n14:48\u00a0<tmortagne>\u00a0if it's store API the issue is that it's not supposed to generate event so basically either we need another API or you should send the event yourself  \n14:49\u00a0<vmassol>\u00a0which is the store api becase there's no other  \n14:49\u00a0<vmassol>\u00a0:)  \n14:49\u00a0<tmortagne>\u00a0in the case of save we have XWiki API in front of store API  \n14:49\u00a0<vmassol>\u00a0we should definitely introdce a new removeRevisions() api  \n14:49\u00a0<vmassol>\u00a0I'll create the jira issue for this  \n14:52\u00a0<tmortagne>\u00a0I see DeletVersionAction use context.getWiki().getStore().saveXWikiDoc(newdoc, context); so no wonder there is no event  \n14:53\u00a0<vmassol>\u00a0done: http://jira.xwiki.org/browse/XWIKI-13036  \n14:53\u00a0<tmortagne>\u00a0if you do the same in your script then yes you bypass event but you could go trough XWiki API I guess, not sure why DeleteVersionAction does that  \n14:53\u00a0<vmassol>\u00a0@tmortagne because there's no api for saving an XWikiDocumentArchive ?N  \n14:53\u00a0<vmassol>\u00a0forget that part  \n14:53\u00a0<tmortagne>\u00a0newdoc is no an archive  \n14:53\u00a0<tmortagne>\u00a0it's a doc  \n14:54\u00a0<vmassol>\u00a0yes indeed we only need to care about the last part  \n14:54\u00a0<tmortagne>\u00a0all XWiki#saveDocument does is calling this store API and send some events around it  \n14:54\u00a0<vmassol>\u00a0should be pretty easy to fix  \n14:54\u00a0<tmortagne>\u00a0so I don't see why it's bypassed in this case  \n14:54\u00a0<vmassol>\u00a0unless there's a reason  \n14:54\u00a0<vmassol>\u00a0maybe not to have any rev created  \n14:55\u00a0<tmortagne>\u00a0it's the store who create revision, not XWiki#saveDocument  \n14:55\u00a0<tmortagne>\u00a0it's not creating new revision here because of setMatadataDirty(dalse)  \n14:55\u00a0<tmortagne>\u00a0which work the same trough XWiki  \n14:57\u00a0<msmeria1>\u00a0has quit  \n14:58\u00a0<vmassol>\u00a0works  \n14:58\u00a0<vmassol>\u00a0thanks  \n14:58\u00a0<vmassol>\u00a0at least my script is safe now :)  \n14:59\u00a0<vmassol>\u00a0I still think I should do content verification before deleteting a doc and not rely on search  \n14:59\u00a0<vmassol>\u00a0since there could be delay during the indexing  \n15:01\u00a0<tmortagne>\u00a0unless there is a lot of things to index it does not take very long usually but yes in theory there could be a delay, depends what scale of time you are  \n15:02\u00a0<tmortagne>\u00a0(a modification instantly trigger the reindex, it's not like it was some indexing job waking up from time to time)  \n15:04\u00a0<vmassol>\u00a0so I'll get the doc content in xml and grep it ;)  \n15:05\u00a0<tmortagne>\u00a0you could also way for solr indexer to be done with whatever it's doing like we do in some UI tests  \n15:05\u00a0<tmortagne>\u00a0s/way/wait/  \n15:05\u00a0<vmassol>\u00a0do I have a script api to wait for that?  \n15:06\u00a0<tmortagne>\u00a0(but in your case the risk is to wait a long time on a vary active wiki)  \n15:07\u00a0<tmortagne>\u00a0the equivalent of what the test are doing is to do a while on $services.solr.queueSize until it return 0  \n15:07\u00a0<vmassol>\u00a0yeah not so easy in velocity  \n15:07\u00a0<vmassol>\u00a0anyway I'll do the grep I think  \n15:07\u00a0<vmassol>\u00a0shouldn' t cost much  \n15:07\u00a0<vmassol>\u00a0since I have the doc in memory  \n15:11\u00a0<vmassol>\u00a0actually the toXML() solution won't work fine  \n15:11\u00a0<vmassol>\u00a0since my input is a solr query....  \n15:12\u00a0<vmassol>\u00a0so if it contains a single keyword that's fine but it could be a lot more complex...  \n15:12\u00a0<vmassol>\u00a0so the wait seems to be the only simple solution  \n15:13\u00a0<vmassol>\u00a0now need to figure out how to do that in velocity  \n15:16\u00a0<vmassol>\u00a0I guess I can just call a groovy script :)  \n15:16\u00a0<vmassol>\u00a0I already need PR anyway\u2026.  \n15:31\u00a0<vmassol>\u00a0ok done, now need to handle the AS, but now that I use groovy it should not be that hard  \n16:35\u00a0<cjd>\u00a0gdelhumeau: are you about ?  \n16:35\u00a0<gdelhumeau>\u00a0I'm here  \n16:36\u00a0<cjd>\u00a0Do you know anything about the user cixwiki on github  \n16:36\u00a0<cjd>\u00a0?  \n16:36\u00a0<cjd>\u00a0err xwikici  \n16:36\u00a0<cjd>\u00a0I need to use it and I don't know where the passwd/key/etc is  \n16:39\u00a0<cjd>\u00a0gdelhumeau: ^ \u00a0(I guess you went back to what you were doing?)  \n16:40\u00a0<gdelhumeau>\u00a0no I'm back  \n16:40\u00a0<gdelhumeau>\u00a0Sorry I don't know  \n16:41\u00a0<cjd>\u00a0ok  \n16:43\u00a0<vmassol>\u00a0ok hold tight  \n16:43\u00a0<vmassol>\u00a0I'm going to run my script again  \n16:43\u00a0<vmassol>\u00a0(I have backups in case it fails)  \n16:43\u00a0<gdelhumeau>\u00a0cjd: hum I may have removed it from xwikiorg on github  \n16:43\u00a0<gdelhumeau>\u00a0not intended I only wanted to see what is it ^^  \n16:47\u00a0<vmassol>\u00a0ok script failed\u2026  \n16:47\u00a0<vmassol>\u00a0btw anyone knows what http://extensions.xwiki.org/xwiki/bin/view/Extension/Menu+Application?viewer=changes&rev2=45.1 is ?  \n16:48\u00a0<vmassol>\u00a0it's actually GL I think  \n16:48\u00a0<vmassol>\u00a0who's voted  \n16:48\u00a0<vmassol>\u00a0not very nice that the user is \"Admin\"  \n17:05\u00a0<tmortagne>\u00a0vmassol: it's not that the author is Admin, I think the listener that did that just did not touched the author  \n17:07\u00a0<KermitTheFragger>\u00a0has quit  \n17:18\u00a0<mflorea>\u00a0has quit  \n17:43\u00a0<evalica>\u00a0has quit  \n18:23\u00a0<vmassol>\u00a0has quit  \n18:41\u00a0<gdelhumeau>\u00a0has quit  \n18:47\u00a0<evalica>\u00a0has joined #xwiki  \n18:49\u00a0<cjd>\u00a0has quit  \n18:58\u00a0<MasterPiece>\u00a0has joined #xwiki  \n19:23\u00a0<evalica>\u00a0has quit  \n19:35\u00a0<woshilapin>\u00a0has quit  \n19:45\u00a0<vmassol>\u00a0has joined #xwiki  \n19:45\u00a0<Slashman>\u00a0has quit  \n19:53\u00a0<abusenius>\u00a0has joined #xwiki  \n19:53\u00a0<cjd>\u00a0has joined #xwiki  \n21:02\u00a0<tmortagne>\u00a0has quit  \n21:19\u00a0<mflorea>\u00a0has joined #xwiki  \n22:08\u00a0<woshilapin>\u00a0has joined #xwiki  \n23:23\u00a0<mflorea>\u00a0has quit  \n23:30\u00a0<vmassol>\u00a0guys do you remember how to check from java if we're on an xwiki instance that supports nested spaces?  \n23:31\u00a0<vmassol>\u00a0I guess I could ask the version of a core extension but I think we had found a better way  \n23:32\u00a0<vmassol>\u00a0actually I'll do that  \n23:44\u00a0<vmassol>\u00a0found a better way  \n23:58\u00a0<woshilapin>\u00a0There was a very long discussion about that and as far as I remember, every solution was some sort of trick  \n23:58\u00a0<woshilapin>\u00a0You may find a solution in the code of WebIDE (because this is why the question has been asked)  \n23:59\u00a0<woshilapin>\u00a0I don't know much more...\n"}