{"id": "dev:IRC.xwikiArchive20140606", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20140606", "title": "IRC Archive for channel #xwiki on 06 June 2014 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<Lyes>\u00a0has left #xwiki  \n00:09\u00a0<Lyes1>\u00a0has joined #xwiki  \n00:12\u00a0<Lyes1>\u00a0has quit  \n00:20\u00a0<abusenius>\u00a0has quit  \n00:21\u00a0<Lyes>\u00a0has joined #xwiki  \n00:21\u00a0<Lyes>\u00a0has quit  \n00:48\u00a0<vmassol>\u00a0has quit  \n01:01\u00a0<lucaa>\u00a0has quit  \n01:22\u00a0<mflorea>\u00a0has quit  \n02:22\u00a0<Denis>\u00a0has quit  \n04:30\u00a0<Denis>\u00a0has joined #xwiki  \n06:01\u00a0<Denis>\u00a0has quit  \n07:15\u00a0<D-Spair>\u00a0has quit  \n07:15\u00a0<sburjan>\u00a0has quit  \n07:16\u00a0<msmeria>\u00a0has joined #xwiki  \n07:26\u00a0<sburjan>\u00a0has joined #xwiki  \n07:28\u00a0<D-Spair>\u00a0has quit  \n07:28\u00a0<sburjan>\u00a0has quit  \n07:33\u00a0<sburjan>\u00a0has joined #xwiki  \n07:38\u00a0<evalica>\u00a0has joined #xwiki  \n07:38\u00a0<kaisen>\u00a0has joined #xwiki  \n08:05\u00a0<vmassol>\u00a0has joined #xwiki  \n08:11\u00a0<kaisen>\u00a0Good Morning,  \n08:17\u00a0<kaisen>\u00a0Since I have upgraded to 6.0 I have one Problem when I launcher the Syntax Help. I get the following velocity error http://mysticpaste.com/view/NRJ6ybWc4V?4  \n08:22\u00a0<tmortagne>\u00a0has joined #xwiki  \n08:35\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n08:40\u00a0<evalica>\u00a0has quit  \n08:44\u00a0<evalica>\u00a0has joined #xwiki  \n08:52\u00a0<cjd>\u00a0has joined #xwiki  \n09:04\u00a0<Denis1>\u00a0has joined #xwiki  \n09:08\u00a0<woshilapin>\u00a0has joined #xwiki  \n09:21\u00a0<Lyes>\u00a0has joined #xwiki  \n09:26\u00a0<vmassol>\u00a0Lyes: good morning  \n09:26\u00a0<vmassol>\u00a0any progress on the mail api? :)  \n09:26\u00a0<vmassol>\u00a0do you need some help?  \n09:27\u00a0<Lyes>\u00a0Vincent: Good Morning  \n09:29\u00a0<Lyes>\u00a0I was on clients projects  \n09:32\u00a0<vmassol>\u00a0Lyes: will you be able to work on mail today?  \n09:32\u00a0<vmassol>\u00a0we need to progress fast now  \n09:32\u00a0<Lyes>\u00a0Yes i work on it today  \n09:33\u00a0<vmassol>\u00a0ok cool, let me know if you need help to progress faster  \n09:46\u00a0<mflorea>\u00a0has joined #xwiki  \n09:59\u00a0<vmassol>\u00a0goooooood mooooooornnnnniiiiinnnnnng XWiki  \n09:59\u00a0<vmassol>\u00a0(in the good morning vietnam style ;))  \n10:00\u00a0<cjd>\u00a0xD  \n10:01\u00a0<cjd>\u00a0Fighting a war in inhospitable jungle seems an apt metaphore  \n10:02\u00a0<vmassol>\u00a0:)  \n10:13\u00a0<lucaa>\u00a0has joined #xwiki  \n10:27\u00a0<lucaa>\u00a0has quit  \n10:30\u00a0<lucaa>\u00a0has joined #xwiki  \n10:33\u00a0<vierfzweievieraz>\u00a0has joined #xwiki  \n10:47\u00a0<kaisen>\u00a0I will just ask my questions from this moring again in the hope now someone can help me :)  \n10:47\u00a0<kaisen>\u00a0Since I have upgraded to 6.0 I have one Problem when I launcher the Syntax Help. I get the following velocity error http://mysticpaste.com/view/NRJ6ybWc4V?4  \n10:51\u00a0<evalica>\u00a0has quit  \n10:53\u00a0<ClemensR>\u00a0has joined #xwiki  \n11:04\u00a0<silverdrop>\u00a0has joined #xwiki  \n11:13\u00a0<Denis1>\u00a0just added what I know of Guillaume work yesterday, no sure it is complete  \n11:14\u00a0<Denis1>\u00a0is now known as <Denis>  \n11:15\u00a0<vmassol>\u00a0ah yes thanks Denis (indeed Guillaume is off today\u00e0  \n11:15\u00a0<vmassol>\u00a0)  \n11:45\u00a0<cjd>\u00a0mmm  \n11:45\u00a0<webczat>\u00a0Hello.  \n11:45\u00a0<cjd>\u00a0Introduce a new Routing Filter <-- this is interesting, it could be a single connection point where all of the servlet crap hands off to our stuff  \n11:45\u00a0<vmassol>\u00a0almost  \n11:45\u00a0<vmassol>\u00a0we still need to have 2 servlets  \n11:46\u00a0<vmassol>\u00a0- struts servlet  \n11:46\u00a0<vmassol>\u00a0- new xwiki servlet  \n11:46\u00a0<vmassol>\u00a0for legacy reasons  \n11:46\u00a0<vmassol>\u00a0if you discard legacy then this single point is the new XWiki Servlet  \n11:47\u00a0<vmassol>\u00a0RoutingFilter is just there to decide whegher to send to struts or this new servlet based on some conditions  \n11:47\u00a0<cjd>\u00a0We probably have more power if we use a filter as the entry point as opposed to a servlet  \n11:47\u00a0<vmassol>\u00a0why?  \n11:47\u00a0<vmassol>\u00a0they're the same, filter will need to call something :)  \n11:47\u00a0<vmassol>\u00a0(and this something is a servlet)  \n11:48\u00a0<cjd>\u00a0filter gets called for any connection that comes in, servlet gets called based on web.xml mapping  \n11:48\u00a0<vmassol>\u00a0nope  \n11:48\u00a0<vmassol>\u00a0you have a filter mapping  \n11:48\u00a0<cjd>\u00a0ahh ok  \n11:48\u00a0<vmassol>\u00a0they're the same  \n11:48\u00a0<vmassol>\u00a0the only difference is that filters can be chained  \n11:49\u00a0<vmassol>\u00a0while servlet are the end of the chain if you prefer  \n11:49\u00a0<cjd>\u00a0One approach to getting rid of the struts/oldcore stuff would be to work our way down from the top  \n11:49\u00a0<cjd>\u00a0fake the servlet, then fake struts, then fake oldcore  \n11:50\u00a0<cjd>\u00a0err fake the servlet container  \n11:50\u00a0<vmassol>\u00a0the approach I'm taking is create parallel paths  \n11:50\u00a0<vmassol>\u00a0same as I did for Rendering  \n11:50\u00a0<vmassol>\u00a0ie support several schemes  \n11:50\u00a0<vmassol>\u00a0- the current url scheme (currently called \"standard\")  \n11:50\u00a0<vmassol>\u00a0- any new scheme  \n11:50\u00a0<vmassol>\u00a0then provide a nicer new scheme  \n11:50\u00a0<vmassol>\u00a0at some point make it the default  \n11:51\u00a0<cjd>\u00a0hm  \n11:51\u00a0<vmassol>\u00a0and move the \"standard\" one to legacy/retire it  \n11:51\u00a0<cjd>\u00a0the hard part is creating the correct context/xwikiservletrequest/etc for oldcore to be happy  \n11:52\u00a0<vmassol>\u00a0sure  \n11:52\u00a0<vmassol>\u00a0my goal here  \n11:52\u00a0<vmassol>\u00a0is not to replace oldcore  \n11:52\u00a0<cjd>\u00a0+1  \n11:52\u00a0<vmassol>\u00a0it's to replace the front end part of oldcore (ie struts and XWikiACtion)  \n11:52\u00a0<cjd>\u00a0IMO you pretty much have to live with XWikiAction  \n11:52\u00a0<cjd>\u00a0but for what we use struts for, we can probably \"mock\" it  \n11:53\u00a0<vmassol>\u00a0I don't understand why we'd need to mock struts, I'm going around it, not needing it  \n11:53\u00a0<cjd>\u00a0because most of /web/ relies on some little stuff that struts does  \n11:54\u00a0<cjd>\u00a0not really complex stuff to do otherwise, just little annoying stuff that's just enough to break when you remove it  \n11:54\u00a0<cjd>\u00a0and IMO replacing oldcore/web/ is a lofty ambition  \n11:55\u00a0<cjd>\u00a0anyway happy to see this old project coming back again  \n11:56\u00a0<vmassol>\u00a0the only thing that struts provide IMO is the Form classe, i.e. gather url parameters into a java object  \n11:56\u00a0<cjd>\u00a0/nod  \n11:56\u00a0<vmassol>\u00a0not very hard to populate them without struts  \n11:57\u00a0<cjd>\u00a0yeap, that's basically what I'm getting at re \"mocking struts\"  \n11:57\u00a0<vmassol>\u00a0ok  \n12:04\u00a0<webczat>\u00a0I have concept problems with ldap thing. It will have event listeners that modify directory on modification of user documents. But I am not sure if it is going to seamlessly work with ldap auth plugin.  \n12:06\u00a0<webczat>\u00a0like the user document is created also after first ldapauth. I can distinguish it because the request has empty password but then passwords go out of sync, actually. like when the user will be subsequently modified etc...  \n12:07\u00a0<webczat>\u00a0then I would need to distinguish if I want to change password or not.  \n12:08\u00a0<cjd>\u00a0see the save operation, grab the password, compare it to your ldap container ?  \n12:09\u00a0<webczat>\u00a0I am not going to have plaintext in ldap, no.  \n12:09\u00a0<webczat>\u00a0So that makes it impossible especially that I do not want to implement SSHA, would rather like to use password modify op  \n12:10\u00a0<cjd>\u00a0ahh I see  \n12:10\u00a0<cjd>\u00a0take the new password, attempt a fake login with ldap  \n12:11\u00a0<cjd>\u00a0login fail -> update password  \n12:11\u00a0<webczat>\u00a0I would probably need to either assume xwiki is the only thing that modifies a directory or reimplement auth to be sync aware.  \n12:11\u00a0<webczat>\u00a0cjd: Really? isn't password hashed in xwiki?  \n12:12\u00a0<webczat>\u00a0If it has not been modified then  \n12:12\u00a0<cjd>\u00a0when it's being updated...  \n12:12\u00a0<cjd>\u00a0you might be able to grab the plaintext, I don't know the code  \n12:12\u00a0<webczat>\u00a0I believe it is hashed then I can't.  \n12:13\u00a0<webczat>\u00a0When updating, it is possible but probably only when password changed.  \n12:13\u00a0<cjd>\u00a0I thought that was the only time you really cared about the update...  \n12:13\u00a0<cjd>\u00a0if the password is the same, it's not so much of a risk  \n12:13\u00a0<webczat>\u00a0I didn't do testing yet but I was told it is hashed.  \n12:14\u00a0<cjd>\u00a0it's single iteration sha512, no salt  \n12:14\u00a0<webczat>\u00a0remember that I can update realname but leave the password intact  \n12:14\u00a0<cjd>\u00a0password same in xwiki --> leave password same in ldap?  \n12:14\u00a0<webczat>\u00a0yes...  \n12:15\u00a0<cjd>\u00a0you could also put another entry in your ldap dir for the \"xwiki hash\" which you can always compare to the xwiki hashed password  \n12:15\u00a0<webczat>\u00a0or if it is still empty, that annoys me that it can be empty  \n12:15\u00a0<cjd>\u00a0and then it they go out of sync, you can at least know about it  \n12:17\u00a0<webczat>\u00a0Okay, possible to do but then: how to ensure the whole directory or wiki does not go out of sync? document change/create/delete is one thing. but... first if for example mail in ldap would change  \n12:17\u00a0<webczat>\u00a0and the user in question would not log in  \n12:18\u00a0<webczat>\u00a0and someone will try to use the old mail  \n12:18\u00a0<webczat>\u00a0and: group sync... even worse because adding members should go ti ldap, deleting members should go to ldap, and xwiki should have good info about current members without waiting for all of them to log in.  \n12:19\u00a0<cjd>\u00a0syncing ldap over to xwiki is something you need to study in your ldap application  \n12:19\u00a0<webczat>\u00a0cjd: The problem is that it is done only during user loin and that is not a problem when ldap is only read.  \n12:19\u00a0<webczat>\u00a0\\*login  \n12:20\u00a0<cjd>\u00a0sounds like a big project  \n12:20\u00a0<webczat>\u00a0Unfortunately it is not possible to log into ldap and get events about changes.  \n12:21\u00a0<webczat>\u00a0I need it for private use.  \n12:21\u00a0<ClemensR>\u00a0its not possible to get notifications from the ldap ... so it is always possible to go out of sync if you store values from \u00a0ldap somewhere else ...  \n12:22\u00a0<cjd>\u00a0it looks like you're going to end up either hacking something together (eg with a script which syncs every so often) or you're going to be stuck rewriting xwiki to defer to ldap  \n12:22\u00a0<webczat>\u00a0And the main problem is I do not know wiki internals at all.  \n12:22\u00a0<webczat>\u00a0Or do timed sync.  \n12:22\u00a0<webczat>\u00a0But...  \n12:24\u00a0<webczat>\u00a0Also problem, what for group creation and removal... If I would like to make this extension public, some users would like to do it too.  \n12:26\u00a0<webczat>\u00a0Ahh... If xwiki could implement user managers to completely replace user handling but still allow user edit to be done using standard gui... it would make it easier.  \n12:26\u00a0<webczat>\u00a0I am blind and do not want to make a gui.  \n12:29\u00a0<webczat>\u00a0Is there an easier route? there exists a ldap paasword manager with support for self register but without ui for account management.  \n12:29\u00a0<webczat>\u00a0same for groups.  \n12:33\u00a0<webczat>\u00a0Okay, I will do the password manager route and disabling user registration somehow. Would be more clean.  \n12:34\u00a0<webczat>\u00a0hm  \n12:40\u00a0<vmassol>\u00a0has quit  \n12:40\u00a0<evalica>\u00a0has joined #xwiki  \n12:40\u00a0<ClemensR>\u00a0I think adding and removing groups is rather \"heavy stuff\" and the admins should know what they are doing there. Same for registration: if XWiki users are LDAP synced but registration is still open, then newly registered users will not be in sync with the ldap.  \n12:41\u00a0<ClemensR>\u00a0That I think is a misconfiguration - Administrators should be told not to do it that way or expect trouble  \n12:41\u00a0<webczat>\u00a0registering users emits document creating event, doesn't it?  \n12:41\u00a0<ClemensR>\u00a0yes, I think it does  \n12:42\u00a0<webczat>\u00a0I mean a sync from xwiki to ldap so it could handle the event.  \n12:43\u00a0<ClemensR>\u00a0can XWiki write into the LDAP? this of course depends on the settings, but I think in a usual setup it is not possible to write into LDAP. but maybe your use case is different  \n12:44\u00a0<webczat>\u00a0I thought about writing a component handling events.  \n12:44\u00a0<webczat>\u00a0It would do ldap sync.  \n12:45\u00a0<webczat>\u00a0I wouldn't however want to spend half of my life writing that.  \n12:48\u00a0<ClemensR>\u00a0If you can assume that XWiki, and only XWiki, writes into the ldap, then it is possible to keep them in sync by definition. If you cannot assume that, then the problem is impossible to solve, so no need to worry either ;)  \n12:49\u00a0<webczat>\u00a0Like document change events for both groups and users would not be so difficult.  \n12:49\u00a0<webczat>\u00a0I would not add and remove groups, but I could add and remove group members.  \n12:50\u00a0<vmassol>\u00a0has joined #xwiki  \n12:51\u00a0<webczat>\u00a0And actually i could live without ldap authentication enabled in xwiki  \n12:51\u00a0<ClemensR>\u00a0as cjd said, adding a background job to check for inconsistencies between ldap is a manageable hack ... people can at least check if something went inconsistent. That would defer the \"impossible\" \u00a0part of the \u00a0problems to the usrrs ;)  \n12:51\u00a0<evalica>\u00a0has quit  \n12:52\u00a0<ClemensR>\u00a0add and remove group members should trigger a DocumentUpdate event on the group, so that is detectable  \n12:52\u00a0<webczat>\u00a0yes  \n12:52\u00a0<webczat>\u00a0user add/change/remove too  \n12:52\u00a0<ClemensR>\u00a0yes  \n12:53\u00a0<webczat>\u00a0but if any ldap infrastructure changes will haooen or something that would require me to do ldap modify directly.  \n12:54\u00a0<webczat>\u00a0\\*happen  \n12:54\u00a0<ClemensR>\u00a0there is already an ldap authenticator for XWiki, I remember, so people can active that if they want. of course that has the property that if the ldap is down, people with ldap logins cannot login  \n12:54\u00a0<webczat>\u00a0There is.  \n12:55\u00a0<webczat>\u00a0ldap authenticator syncs ldap to wiki.  \n12:55\u00a0<ClemensR>\u00a0but that is normal if you have an ldap for login ... I think  \n12:55\u00a0<webczat>\u00a0but let's assume I would change ldap admin group using ldap and then  \n12:56\u00a0<webczat>\u00a0it may be needed due to some external reasons. maybe I should not make this plugin public? I believe it depends a lot on the infrastructure.  \n12:56\u00a0<ClemensR>\u00a0if folks mess with the admin group in ldap and forgot to update the wiki configuration ...  \n12:56\u00a0<webczat>\u00a0Or I could defer handling to manual ldap and use another app for password change and user registration  \n12:57\u00a0<webczat>\u00a0What you think would be a better idea?  \n12:57\u00a0<ClemensR>\u00a0... someone will need to activate the \"superadmin\" account and fix the Mapping \"ldap admin\" -> XWiki admin, its just that. I you not worry about except mention it loudly in the installation notes  \n12:58\u00a0<webczat>\u00a0Another thing is:component configuration.  \n12:59\u00a0<ClemensR>\u00a0I think it depends on the use case. Around here the LDAP is where the admins add new users, so they want no \"registration\" button in the applications. So they just disable it everywhere they can - and it is easy in XWiki to do that.  \n12:59\u00a0<webczat>\u00a0Also it would not be a problem if I would use a different ldap lib?  \n13:00\u00a0<webczat>\u00a0In my case ldap is used for users to have the same accounts on each app, but users have to be able to selfregister.  \n13:00\u00a0<webczat>\u00a0in general, not on each app  \n13:02\u00a0<ClemensR>\u00a0well, in that case either they likely register directly in some ldap app, and XWiki has to detect if new users appear on login, i.e. check for them in the LDAP  \n13:03\u00a0<ClemensR>\u00a0and then you \u00a0really need to have that background job checking for updates, or you never store any user information in XWiki itself but always fetch it from the LDAP  \n13:03\u00a0<ClemensR>\u00a0as cjd already said  \n13:04\u00a0<webczat>\u00a0It would be easier to do. but \u00a0I would be happy to have the possibility to manage accounts from ui. xwiki does it, but xwiki model is incompatible with ldap and could possibly cause pain.  \n13:04\u00a0<webczat>\u00a0the auth plugin handles group member sync, handles user info sync and handles user creation on ldap login.  \n13:05\u00a0<ClemensR>\u00a0ah, yes, I forgot, of course it has to do it  \n13:05\u00a0<webczat>\u00a0That made me think about making a component that handles user sync automatically so that the wiki registers users.  \n13:06\u00a0<webczat>\u00a0It does not change the fact that a separate ldap app is probably more clean, always up to date etc.  \n13:06\u00a0<webczat>\u00a0Although xwiki may go out of sync, ldap cannot.  \n13:09\u00a0<webczat>\u00a0In the case of a component, if I would deny the whole operation on ldap malfunction, ldap couldn't go out of sync, but modifying ldap directly would have higher impact on the wiki if the same thing would be subsequently modified in wiki.  \n13:09\u00a0<vierfzweievieraz>\u00a0has left #xwiki  \n13:10\u00a0<webczat>\u00a0like \u00a0group member added in ldap, then group member (another one) removed in wiki. means both removed from ldap.  \n13:11\u00a0<webczat>\u00a0Because it would be difficult to get a change of a whole document and distinguish between add of members and such, so I would issue attribute replace with the whole list.  \n13:12\u00a0<OSIMasson>\u00a0has quit  \n13:13\u00a0<ClemensR>\u00a0in DocumentUpdatedEvents you can also get the wiki doc before the change with doc.getOriginalDocument(), so you can compare that with the ldap and see it it is already put of sync  \n13:14\u00a0<ClemensR>\u00a0not sure if that helps much ... but at least you could both figure out if you are in sync and what the actual change in that update is  \n13:14\u00a0<ClemensR>\u00a0oh and \"put of sync\" should read \"out of sync\", sorry  \n13:23\u00a0<webczat>\u00a0still wondering what to do.  \n13:23\u00a0<webczat>\u00a0if it's worth making something like that  \n13:25\u00a0<webczat>\u00a0Because it is actually a hack over hack. like do not sync user when document creating event was received without a password because this is the user creation during ldap auth.  \n13:26\u00a0<webczat>\u00a0when login process updates the document then first data are downloaded from ldap then because I cannot distinguish between profile change and ldapauth \u00a0sync, the same data is copied again to ldap. It wouldn't cause a problem but even sounds strange.  \n13:51\u00a0<Denis>\u00a0has quit  \n13:52\u00a0<webczat>\u00a0What would you do in my case?  \n13:56\u00a0<Denis>\u00a0has joined #xwiki  \n14:20\u00a0<KermitTheFragger>\u00a0has quit  \n14:32\u00a0<ClemensR>\u00a0has left #xwiki  \n14:53\u00a0<msmeria>\u00a0has quit  \n15:40\u00a0<cjd>\u00a0vmassol: for configuration of filesystem attachments, \u00a0\u00a0store.fsattach.myConfigurationKey ?  \n15:40\u00a0<cjd>\u00a0WDYT?  \n16:10\u00a0<cjd>\u00a0tmortagne: since vmassol seems to be afk and I'm itching to commit, WDYT of store.fsattach.cleanOnStartup as a configuration key?  \n16:10\u00a0<cjd>\u00a0specifically store.fsattach as a prefix for filesystem attachment related config  \n16:12\u00a0<tmortagne>\u00a0looks good to me  \n16:12\u00a0<cjd>\u00a0cool, thanks  \n16:20\u00a0<Denis>\u00a0has quit  \n16:21\u00a0<vmassol>\u00a0cjd: I haven't followed but I've just read the RN  \n16:22\u00a0<vmassol>\u00a0and I have a question  \n16:22\u00a0<vmassol>\u00a0if the FS auto clean is not required to work then why not drop it?  \n16:22\u00a0<vmassol>\u00a0if it's needed then it should be even more needed on systems where you have lots of attachments, no?  \n16:23\u00a0<cjd>\u00a0vmassol: because administrators who are in the know can decide to clean empty directories in a different way, for example at 2:00AM when there is minimum load on the server  \n16:24\u00a0<cjd>\u00a0however I think that just putting it in a thread will alleviate the issue, the configuration parameter is a safty measure  \n16:24\u00a0<cjd>\u00a0and yes, I forgot to add the line to xwiki.properties, doing that now  \n16:26\u00a0<cjd>\u00a0./xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm <-- This one is correct I presume  \n16:29\u00a0<tmortagne>\u00a0yes  \n16:30\u00a0<cjd>\u00a0meh I kind of have to start a new section for storage  \n16:30\u00a0<cjd>\u00a0annoying but there's nothing else that really fits  \n16:34\u00a0<vmassol>\u00a0cjd: hmm  \n16:35\u00a0<cjd>\u00a0:D  \n16:35\u00a0<cjd>\u00a0I knew it  \n16:35\u00a0<vmassol>\u00a0isn't our storage config in xwiki.cfg.vm?  \n16:35\u00a0<cjd>\u00a0all I'd have to do is push and you'd find something you didn't like  \n16:35\u00a0<vmassol>\u00a0this is oldcore no?  \n16:35\u00a0<cjd>\u00a0nope  \n16:35\u00a0<cjd>\u00a0xwiki-platform-store  \n16:35\u00a0<vmassol>\u00a0and platform-store has not config so far?  \n16:35\u00a0<vmassol>\u00a0s/not/no  \n16:35\u00a0<cjd>\u00a0correct  \n16:36\u00a0<vmassol>\u00a0ok  \n16:36\u00a0<cjd>\u00a0well until 5 minutes ago  \n16:37\u00a0<vmassol>\u00a0you should be glad that people are willing to spend time to review what you do  \n16:37\u00a0<cjd>\u00a0Yeah, I do appreciate the effort :)  \n16:39\u00a0<vmassol>\u00a0maybe I'm a PITA but that's mostly because I want to understand so that I can maintain it afterwards (ie answer questions, etc)  \n16:39\u00a0<cjd>\u00a0That's valid  \n16:41\u00a0<cjd>\u00a0The only thing I would suggest (and feel free to trash it if you like) is that it's important not to get trapped in comment typos and variable naming as much as the big stuff like promiscuous globals...  \n16:42\u00a0<vmassol>\u00a0ideally yes, although variable naming can be important. Reviewing design is several order of magnitude more complex so that's why there's more comment on the small things. I understand though  \n16:43\u00a0<vmassol>\u00a0globally that reminds me Freakonomics  \n16:43\u00a0<vmassol>\u00a0have you read that book?  \n16:43\u00a0<vmassol>\u00a0they mention about the new work metro  \n16:43\u00a0<vmassol>\u00a0and the fact that there's violence and it's dirty, etc  \n16:44\u00a0<Slashman>\u00a0has joined #xwiki  \n16:44\u00a0<vmassol>\u00a0and the study shows that if you let a few people get away with tagging the walls and deteriorating stuff  \n16:44\u00a0<vmassol>\u00a0very quickly everyone does it  \n16:44\u00a0<vmassol>\u00a0and insecurity increases  \n16:45\u00a0<vmassol>\u00a0I feel it's a bit the same about a code base  \n16:45\u00a0<vmassol>\u00a0and when you have stuff like the oldcore then nobody wants to work on it anymore\u2026  \n16:46\u00a0<vmassol>\u00a0when stuff are inconsistent, hack over hack, no doc, bad var naming  \n16:46\u00a0<vmassol>\u00a0then you get a bad feeling  \n16:46\u00a0<vmassol>\u00a0and then  \n16:46\u00a0<vmassol>\u00a0either you don't want to touch that code  \n16:46\u00a0<vmassol>\u00a0or when you have to do it, you keep doing the same thing as what is there already and you even increase the technical debt  \n16:47\u00a0<vmassol>\u00a0because it's alreadhy \"dirty\" so making it a little bit more dirty seems ok  \n16:48\u00a0<vmassol>\u00a0when you have clean code you want to continue keeping it clean and you have remorse if you don't ;)  \n16:49\u00a0<vmassol>\u00a0don't you agree?  \n16:50\u00a0<vmassol>\u00a0said differently, I'm a believer that small things matter and can have big effects. Now we need to not piss off the contributors/committers....  \n16:50\u00a0<vmassol>\u00a0\u00a0:)  \n16:51\u00a0<vmassol>\u00a0that's the hard part...  \n16:53\u00a0<tmortagne>\u00a0has quit  \n16:53\u00a0<cjd>\u00a0sorry I was just away for a moment  \n16:54\u00a0<cjd>\u00a0ahh the \"broken windows\" theory  \n16:54\u00a0<cjd>\u00a0indeed things getting chaotic is a bad thing  \n16:55\u00a0<cjd>\u00a0Actually I think the problem with oldcore is more because of difficulty to validate and test, and fear of breaking backward compat  \n16:55\u00a0<cjd>\u00a0build performance comes in here ;)  \n16:55\u00a0<vmassol>\u00a0it's more missing tests  \n16:56\u00a0<vmassol>\u00a0but you can't add tests easily because of the design  \n16:56\u00a0<cjd>\u00a0difficulty to validate is missing tests  \n16:56\u00a0<cjd>\u00a0and difficulty to test is ... yeah  \n16:56\u00a0<vmassol>\u00a0but when you read the code you also get a lot of WTF moments\u2026  \n16:57\u00a0<cjd>\u00a0That happens when I read any code :|  \n16:57\u00a0<vmassol>\u00a0like XWiki.getFlash()  \n16:57\u00a0<vmassol>\u00a0;)  \n16:59\u00a0<cjd>\u00a0yeah, getFlash is cutting across boundries between view and controller  \n17:00\u00a0<vmassol>\u00a0and there's no flash.vm AFAIK ...  \n17:00\u00a0<cjd>\u00a0/nod  \n17:00\u00a0<cjd>\u00a0so one problem is that we don't have a clear vision of what is actually being used and what is just sitting there  \n17:00\u00a0<cjd>\u00a0if we did, we could clean things up significantly be summarily yanking anything which is in a \"doesn't work, noone uses it, may never have worked\" state  \n17:01\u00a0<vmassol>\u00a0for this method actually we should move it to legacy  \n17:01\u00a0<cjd>\u00a0but that takes courage which takes a fast build/test cycle :)  \n17:01\u00a0<cjd>\u00a0and lots of tests  \n17:02\u00a0<vmassol>\u00a0a quick grep shows it's not used anywhere, will move now actually! \u00a0:)  \n17:03\u00a0<cjd>\u00a0One night I was thinking about what I would do if suddenly I had to do your job. The first answer that came to my mind was \"work nights for a long time\" ;)  \n17:04\u00a0<cjd>\u00a0many many scripts running over the codebase looking for things which can be fixed  \n17:04\u00a0<vmassol>\u00a0yeah it might be a good idea to switch jobs actually, as you get blunted over time  \n17:04\u00a0<cjd>\u00a0bring hellfire upon the build time  \n17:05\u00a0<vmassol>\u00a0every few weeks I ask myself whether I'm doing a good job or not  \n17:05\u00a0<cjd>\u00a0oh hell, don't start going there  \n17:05\u00a0<vmassol>\u00a0and I have ups and downs\u2026  \n17:05\u00a0<cjd>\u00a0you're good  \n17:05\u00a0<vmassol>\u00a0actually I'm not sure  \n17:05\u00a0<vmassol>\u00a0it's been 7 years for me  \n17:05\u00a0<vmassol>\u00a0and I was not able to do half of what I wanted to do  \n17:06\u00a0<cjd>\u00a0:(  \n17:06\u00a0<vmassol>\u00a0and xwiki is still not yet known worldwide\u2026 :)  \n17:06\u00a0<ClemensR>\u00a0has joined #xwiki  \n17:06\u00a0<cjd>\u00a0we'll get there on the second part  \n17:06\u00a0<cjd>\u00a0first part, all I have to say is feed that inner anger at how much everything sucks  \n17:07\u00a0<cjd>\u00a0because everything in the world is really not that great, not just software either  \n17:07\u00a0<cjd>\u00a0guys building libraries don't know your pain when you use them, people building the tools don't know it either  \n17:08\u00a0<cjd>\u00a0Remember yesterday you were talking about reinventing everything and I said \"there has to be a limit\"?  \n17:09\u00a0<cjd>\u00a0I thought about that and I was wrong. There should be no limit at all. Do one thing at a time, start with the low hanging fruit, and there's no good reason why making \\*everything\\* better is not valid.  \n17:09\u00a0<vmassol>\u00a0yup and I think as you get older your past experience pushes that limit down and to make some dent in the world you prefer focusing on more narrow things because you're more likely to succeed  \n17:10\u00a0<vmassol>\u00a0now if you're in pure research then of course you have a lot more liberty  \n17:10\u00a0<vmassol>\u00a0than you have if you need to support a user base....  \n17:11\u00a0<cjd>\u00a0And cjdns is a unique thing because it has almost no backward compat to support so I can sneak off with some horrific tricks  \n17:11\u00a0<cjd>\u00a0XWiki is a different story alltogether  \n17:11\u00a0<vmassol>\u00a0that's the pain of getting old\u2026 you're getting too realistic :)  \n17:11\u00a0<vmassol>\u00a0I love this quote:  \n17:11\u00a0<cjd>\u00a0but not a challenge we can't beat  \n17:11\u00a0<vmassol>\u00a0(translated from french)  \n17:12\u00a0<cjd>\u00a0:)  \n17:12\u00a0<vmassol>\u00a0\"they didn't know it was impossible and thus they did it\"  \n17:12\u00a0<cjd>\u00a0ahh  \n17:13\u00a0<cjd>\u00a0Those who say it can't be done should get out of the way of those who are doing it.  \n17:13\u00a0<cjd>\u00a0--Joel Arthur Barker  \n17:13\u00a0<cjd>\u00a0Lot of truth to those words  \n17:14\u00a0<vmassol>\u00a0yes it's a nice quote, all is about the context and the goal\u2026  \n17:14\u00a0<cjd>\u00a0On my side, I do things which nobody thought of, stuff like planting the websocket directly into XWiki instead of waiting for tomcat to come along with a version which supports it  \n17:14\u00a0<kaisen>\u00a0has quit  \n17:15\u00a0<cjd>\u00a0and I pay my share because I have to debug my code more  \n17:15\u00a0<cjd>\u00a0but I get it all back in the end because once I've debugged it, it's clean and I don't usually end up dealing with uglyness because someone decided to use glassfish...  \n17:16\u00a0<cjd>\u00a0but it requires courage because when I screw up and try to do something that can't be done and it actually can't be done, I fall on my face  \n17:16\u00a0<vmassol>\u00a0it's like our wysiwyg  \n17:16\u00a0<vmassol>\u00a0it was nice to reimplment it initially because it brought us an edge over others at the time  \n17:17\u00a0<vmassol>\u00a0but since it's not our core business we don't invest in it and thus we loose ground over time  \n17:17\u00a0<vmassol>\u00a0and then it becomes a burden becuase others are overcaught you  \n17:17\u00a0<vmassol>\u00a0and you need to pay again for removing it  \n17:17\u00a0<vmassol>\u00a0so you better profit from the initial advantage you had or it's not worth it  \n17:17\u00a0<cjd>\u00a0+1 that  \n17:17\u00a0<cjd>\u00a0so we switch to a generic editor and sell the fact that XWiki is the Realtime Wiki :D  \n17:18\u00a0<vmassol>\u00a0:)  \n17:18\u00a0<cjd>\u00a0btw I have a couple of silly bugs to fix and then WDYT of realtime-wiki on xwiki.org?  \n17:19\u00a0<vmassol>\u00a0if you think it's ready enough then it would be great  \n17:19\u00a0<vmassol>\u00a0maybe on myxwiki.org first though  \n17:19\u00a0<vmassol>\u00a0since myxwiki.org is our rea world test platform  \n17:19\u00a0<cjd>\u00a0I think it's ready for anything  \n17:19\u00a0<vmassol>\u00a0and then if it works fine, we can have it on xwiki.org  \n17:20\u00a0<cjd>\u00a0all of the bugs I've discovered have been \"haha I didn't think of that\", nothing core level or algorithmic  \n17:20\u00a0<cjd>\u00a0that sounds like a logical approach  \n17:20\u00a0<cjd>\u00a0oh I really wanna do chat :D  \n17:21\u00a0<vmassol>\u00a0wdym?  \n17:21\u00a0<vmassol>\u00a0chat in the wiki?  \n17:21\u00a0<cjd>\u00a0userlink -> \"this user is online, chat?\"  \n17:21\u00a0<mflorea>\u00a0has quit  \n17:21\u00a0<vmassol>\u00a0ah like fabio's extension?  \n17:21\u00a0<cjd>\u00a0yes  \n17:21\u00a0<vmassol>\u00a0http://extensions.xwiki.org/xwiki/bin/view/Extension/XMPP+Chat+Application  \n17:21\u00a0<vmassol>\u00a0?  \n17:21\u00a0<cjd>\u00a0except since I have a well tested websocket which is capable of doing arbitrary backends, this time it will be easy  \n17:22\u00a0<cjd>\u00a0if realtime wiki works, chat is \"free\"  \n17:22\u00a0<vmassol>\u00a0cool  \n17:22\u00a0<cjd>\u00a0video chat is not that interesting to me atm  \n17:22\u00a0<vmassol>\u00a0sure I agree  \n17:22\u00a0<cjd>\u00a0ideally we train people to chat in text and then enable logging so it can be searched  \n17:23\u00a0<cjd>\u00a0[ ] Off The Record \u00a0\u00a0\u00a0(unchecked by default so everything is logged)  \n17:25\u00a0<cjd>\u00a0also we're going to wipe the floor with the competition when we have pervasive realtime/websocket stuff because all of the other stuff \\*cough\\* jira is basically like a struts app with some js sugar  \n17:25\u00a0<vmassol>\u00a0:)  \n17:25\u00a0<cjd>\u00a0like the recent changes don't auto-update, wat is this?!  \n17:26\u00a0<vmassol>\u00a0yes that would be nice but we need to rewrite the AS first  \n17:27\u00a0<cjd>\u00a0can we fire events and then just listen for them?  \n17:27\u00a0<vmassol>\u00a0that's what the AS does  \n17:27\u00a0<vmassol>\u00a0it listens to all events  \n17:27\u00a0<vmassol>\u00a0and displays them  \n17:27\u00a0<cjd>\u00a0ahh ok then all we need to do is listen to events and bcast them down the websocket  \n17:27\u00a0<cjd>\u00a0even allow the client to listen for events in js using a WebSocketHandler  \n17:28\u00a0<vmassol>\u00a0sure what I mean is that are lots of issues with the AS, first being performances  \n17:28\u00a0<cjd>\u00a0/nod  \n17:28\u00a0<vmassol>\u00a0so we need to rewrite it anyway  \n17:28\u00a0<vmassol>\u00a0so if you improve it now then when we rewrite you have to rewrite more  \n17:28\u00a0<vmassol>\u00a0I've been trying to try to fit thre rewrite in the roadmap several times already  \n17:28\u00a0<cjd>\u00a0ahh everything would be so much easier if we just shoehored nodejs into a .jar file and tricked the customers into thinking it's struts  \n17:28\u00a0<vmassol>\u00a0almost succeedd twice  \n17:28\u00a0<vmassol>\u00a0...  \n17:29\u00a0<vmassol>\u00a0I'll continue trying and in the end I'll prevail\u2026 ;)  \n17:29\u00a0<cjd>\u00a0careful of the bulldozer approach  \n17:30\u00a0<cjd>\u00a0don't want you to burn out, you're our General  \n17:30\u00a0<vmassol>\u00a0yeah that's a possibility on the long run...  \n17:31\u00a0<cjd>\u00a0bulldozer or sneeky.js ?  \n17:31\u00a0<vmassol>\u00a0wearing out  \n17:31\u00a0<cjd>\u00a0I'm not gonna let you :P  \n17:32\u00a0<vmassol>\u00a0:)  \n17:33\u00a0<vmassol>\u00a0[friday fun] http://t.co/SQmFJIgUdA  \n17:33\u00a0<cjd>\u00a0I was thinking, we should probably find the best technology (not the most fastionable) and use that, then we should wrap that technology in whatever our customers want  \n17:34\u00a0<cjd>\u00a0haha  \n17:36\u00a0<vmassol>\u00a0\u2018Write clear, precise code. Every ten years it will run 1,000 times faster.\u2019\u2014Joe Armstrong  \n17:37\u00a0<cjd>\u00a0write the cheapest code to develop and maintain until it's out of date  \n17:37\u00a0<cjd>\u00a0cheap to develop implies a higher maintanence cost so it's a balance  \n17:37\u00a0<cjd>\u00a0but in the end, everything is a prototype  \n17:41\u00a0<cjd>\u00a0also play with nodejs, I'm to the point now of being willing to bet money that in 10 years it's going to beat everything else, it's also a lot of fun :)  \n17:42\u00a0<vmassol>\u00a0the problem is that you're just thinking about node.js but you're not thinking about tools/educating developers/ability to recruit devleopers who know the technology/etc  \n17:43\u00a0<vmassol>\u00a0you really need to factor all this in  \n17:43\u00a0<cjd>\u00a0+1 that  \n17:43\u00a0<vmassol>\u00a0at XWiki SAS for ex we have python code  \n17:43\u00a0<cjd>\u00a0I'm just saying fool around with it :)  \n17:43\u00a0<vmassol>\u00a0and nobody is touhcing it because nobody knows it  \n17:43\u00a0<vmassol>\u00a0and it's decaying  \n17:44\u00a0<vmassol>\u00a0fooling around is ok  \n17:44\u00a0<vmassol>\u00a0:)  \n17:44\u00a0<cjd>\u00a0I volunteered to help look at it even though I'm not a python expert  \n17:44\u00a0<cjd>\u00a0I like a challenge  \n17:44\u00a0<vmassol>\u00a0cool  \n17:44\u00a0<cjd>\u00a0they said it's ok so I didn't persue it  \n17:44\u00a0<cjd>\u00a0the problem I saw was threading, threads make everything harder to reason with  \n17:45\u00a0<cjd>\u00a0(with the python thingy)  \n18:04\u00a0<mflorea>\u00a0has joined #xwiki  \n18:20\u00a0<ClemensR>\u00a0has left #xwiki  \n19:04\u00a0<mflorea>\u00a0has quit  \n19:09\u00a0<vmassol>\u00a0Lyes: missing @Component and @Singleton, adding now  \n19:15\u00a0<cjd>\u00a0has quit  \n19:19\u00a0<lucaa>\u00a0has quit  \n19:19\u00a0<woshilapin>\u00a0has quit  \n19:19\u00a0<vmassol>\u00a0Lyes: ok I'm done with a first quick review :)  \n19:20\u00a0<vmassol>\u00a0a few things to fix...  \n19:20\u00a0<vmassol>\u00a0:)  \n19:20\u00a0<Lyes>\u00a0i check your comments  \n19:25\u00a0<Slashman>\u00a0has quit  \n19:37\u00a0<lucaa>\u00a0has joined #xwiki  \n19:37\u00a0<abusenius>\u00a0has joined #xwiki  \n19:41\u00a0<vmassol>\u00a0cjd   \n19:41\u00a0<vmassol>\u00a0not here....  \n19:48\u00a0<silverdrop>\u00a0has quit  \n19:49\u00a0<abusenius>\u00a0has quit  \n19:53\u00a0<silverdrop>\u00a0has joined #xwiki  \n20:06\u00a0<ramkamx>\u00a0has quit  \n20:33\u00a0<vmassol>\u00a0has quit  \n20:40\u00a0<vmassol>\u00a0has joined #xwiki  \n20:53\u00a0<silverdrop>\u00a0has quit  \n20:59\u00a0<abusenius>\u00a0has joined #xwiki  \n21:14\u00a0<silverdrop>\u00a0has joined #xwiki  \n21:23\u00a0<silverdrop>\u00a0has quit  \n21:34\u00a0<lucaa>\u00a0has quit  \n22:26\u00a0<tekzilla>\u00a0has quit  \n22:34\u00a0<tekzilla>\u00a0has joined #xwiki  \n23:01\u00a0<vmassol>\u00a0has quit  \n23:50\u00a0<vmassol>\u00a0has joined #xwiki  \n23:59\u00a0<vmassol>\u00a0has quit\n"}