{"id": "dev:IRC.xwikiArchive20110616", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110616", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:00\u00a0<abusenius>\u00a0has joined #xwiki  \n01:06\u00a0<jvdrean>\u00a0has quit  \n01:07\u00a0<jvdrean>\u00a0has joined #xwiki  \n01:09\u00a0<jvelociter>\u00a0has quit  \n01:09\u00a0<jvdrean>\u00a0has quit  \n02:33\u00a0<sdumitriu>\u00a0has quit  \n02:59\u00a0<abusenius>\u00a0has quit  \n04:50\u00a0<DrLou>\u00a0has quit  \n07:04\u00a0<Denis>\u00a0has quit  \n07:10\u00a0<Denis>\u00a0has joined #xwiki  \n07:22\u00a0<vmassol>\u00a0has joined #xwiki  \n08:09\u00a0<vmassol>\u00a0good morning  \n08:51\u00a0<sburjan`>\u00a0has quit  \n08:57\u00a0<vmassol>\u00a0has quit  \n08:58\u00a0<sburjan`>\u00a0has joined #xwiki  \n08:59\u00a0<vmassol>\u00a0has joined #xwiki  \n09:17\u00a0<jvdrean>\u00a0has joined #xwiki  \n09:26\u00a0<vmassol>\u00a0jenkins is restarting?  \n09:29\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:46\u00a0<sburjan>\u00a0has joined #xwiki  \n09:54\u00a0<afrey>\u00a0has quit  \n10:02\u00a0<sburjan>\u00a0has quit  \n10:15\u00a0<sburjan>\u00a0has joined #xwiki  \n10:17\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:24\u00a0<Enygma`>\u00a0has quit  \n10:26\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:44\u00a0<Enygma`>\u00a0has quit  \n10:56\u00a0<vmassol>\u00a0sburjan: fyi I've reproduced XWIKI-6708  \n10:56\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:57\u00a0<vmassol>\u00a0checking if we have rename tests  \n10:58\u00a0<vmassol>\u00a0hmm we don't seem to have any in functional tests  \n11:00\u00a0<tmortagne>\u00a0has quit  \n11:01\u00a0<tmortagne>\u00a0has joined #xwiki  \n11:15\u00a0<vmassol>\u00a0hmmm  \n11:16\u00a0<vmassol>\u00a0it doesn't seem to be a regression  \n11:16\u00a0<vmassol>\u00a0seems like we've always considered that you needed the delete right to rename a doc  \n11:16\u00a0<vmassol>\u00a0still trying to find when we first introduced the check  \n11:16\u00a0<vmassol>\u00a0the error handling is bad though since we don't display any error to the user  \n11:16\u00a0<vmassol>\u00a0and we consider that the rename has worked  \n11:17\u00a0<+tmortagne>\u00a0well make sense (except for the bad error handling)  \n11:17\u00a0<vmassol>\u00a0well since the user can create pages, we could decide that the pages he could delete the pages he has created  \n11:17\u00a0<vmassol>\u00a0but that's an improvement, not a bug fix  \n11:18\u00a0<+tmortagne>\u00a0we could  \n11:18\u00a0<+tmortagne>\u00a0but sounds like a vote  \n11:18\u00a0<vmassol>\u00a0yes definitely  \n11:19\u00a0<vmassol>\u00a0and not for 3.1  \n11:19\u00a0<+tmortagne>\u00a0wow already a RC of Firefox 5  \n11:20\u00a0<+tmortagne>\u00a0and we don't fully support Firefox 4 in integration tests  \n11:20\u00a0<+tmortagne>\u00a0really need to get rid of selenium1  \n11:22\u00a0<vmassol>\u00a0ok found it: XWIKI-3398  \n11:22\u00a0<vmassol>\u00a0http://jira.xwiki.org/jira/browse/XWIKI-3398  \n11:24\u00a0<vmassol>\u00a0so done in 1.9M1  \n11:24\u00a0<vmassol>\u00a0sburjan: doesn't look like a regression ;)  \n11:24\u00a0<vmassol>\u00a0svn rev is 17854  \n11:24\u00a0<vmassol>\u00a0- \u00a0 \u00a0 \u00a0 \u00a0this.doc.rename(newDocumentName, getXWikiContext());  \n11:24\u00a0<vmassol>\u00a0+ \u00a0 \u00a0 \u00a0 \u00a0if (hasAccessLevel(\"delete\") && this.context.getWiki().checkAccess(\"edit\", this.context.getWiki().getDocument(newDocumentName, this.context), this.context)) {  \n11:24\u00a0<vmassol>\u00a0+ \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0this.doc.rename(newDocumentName, getXWikiContext());  \n11:24\u00a0<vmassol>\u00a0+ \u00a0 \u00a0 \u00a0 \u00a0}  \n11:24\u00a0<+tmortagne>\u00a0whats did xwikibot matched in this snippet ?  \n11:25\u00a0<+tmortagne>\u00a0or is it late for the previous link ?  \n11:25\u00a0<vmassol>\u00a0jira test  \n11:25\u00a0<vmassol>\u00a0!jira test  \n11:27\u00a0<sdumitriu>\u00a0has joined #xwiki  \n11:28\u00a0<+tmortagne>\u00a0ok it's slow  \n11:30\u00a0<vmassol>\u00a0the search has always been slow  \n11:30\u00a0<vmassol>\u00a0but XWIKI-1000 should be working and fast  \n11:30\u00a0<vmassol>\u00a0ok works  \n11:30\u00a0<vmassol>\u00a0XWIKI-3398  \n11:30\u00a0<jvelociter>\u00a0has joined #xwiki  \n11:30\u00a0<vmassol>\u00a0ah I know  \n11:30\u00a0<vmassol>\u00a0it's a confidential issue  \n11:30\u00a0<vmassol>\u00a0:)  \n11:35\u00a0<+tmortagne>\u00a0cjdelisle, vmassol: ok for letter test build on another agent ? I would not put all agent to keep one restricted to builds  \n11:36\u00a0<+tmortagne>\u00a0lest say agent 1 and 2 for tests  \n11:36\u00a0<vmassol>\u00a0sure  \n11:36\u00a0<vmassol>\u00a0IMO we don't even need to tie any build to any agent when we have enough don't you think?  \n11:36\u00a0<vmassol>\u00a0alex is supposed to install 3 more agents on the new machine  \n11:36\u00a0<vmassol>\u00a0(we need to ping him about it)  \n11:37\u00a0<+tmortagne>\u00a0with that many agents sure  \n11:37\u00a0<+tmortagne>\u00a0but with 3 I don't know  \n11:41\u00a0<vmassol>\u00a0with 3 I agree  \n11:43\u00a0<+tmortagne>\u00a0done, will remove any tie when we get all the agents  \n11:48\u00a0<vmassol>\u00a0merging tag author stuff in 3.1 now  \n11:52\u00a0<vmassol>\u00a0cjdelisle: are you avail for the release today?  \n11:52\u00a0<vmassol>\u00a0lunch bbl  \n11:55\u00a0<cjdelisle>\u00a0Just got up, I will be back in a few and will start the release.  \n12:00\u00a0<+sburjan>\u00a0vmassol, tmortagne : okay, I thought it was something bad there because IMO user doesn't know the back-end mechanism, and he either gets a warning that needs delete right, either he expects a nice error.  \n12:00\u00a0<+sburjan>\u00a0vmassol: you cand un-mark it as a blocker and have the release. but IMO this is confusing, even for me after a year :)  \n12:01\u00a0<+sburjan>\u00a0from a normal user POV  \n12:04\u00a0<+sburjan>\u00a0vmassol: or as a simpler fix, couldn't we check in the code snippet you pasted that if user is the creator of the page instead of hasAccessLevel(\"delete\") ?  \n12:08\u00a0<+tmortagne>\u00a0sburjan: it's not just about this issues, the fact that the creator of a document had right to delete it require a general vote and will then be fixed at delete right check level  \n12:09\u00a0<+sburjan>\u00a0so ATM the creator is not able to delete it's own pages >  \n12:09\u00a0<+tmortagne>\u00a0because renameing documennt Toto to Titi still mean the document Toto does not exist anymore it's not relaly about does the document is using deleteDocument or not  \n12:09\u00a0<+tmortagne>\u00a0sburjan: AFAIK yes  \n12:09\u00a0<+tmortagne>\u00a0since you need delete right to delete  \n12:10\u00a0<jvdrean>\u00a0has quit  \n12:10\u00a0<+tmortagne>\u00a0but I did not checked, if you fid that a creator actually can delete it's own document then this is a bug that does not require a general vote  \n12:10\u00a0<+tmortagne>\u00a0(the renaming issue)  \n12:11\u00a0<+sburjan>\u00a0tmortagne: I totally agree. I'm gonna create a page and try to delete it myself (as creator)  \n12:12\u00a0<+Denis>\u00a0jvelociter: the follow up of our last talk about github fork: http://goo.gl/psVFG  \n12:19\u00a0<+jvelociter>\u00a0Denis: thanks  \n12:20\u00a0<+sburjan>\u00a0tmortagne: delete works. so me as a creator I am able to delete my pages. so still don't understand why rename doesn't work  \n12:20\u00a0<+jvelociter>\u00a0I will read it with graet attention :)  \n12:20\u00a0<+sburjan>\u00a0If I have delete rights I should be able to rename (delete + create)  \n12:38\u00a0<vmassol>\u00a0sburjan: it's no longer a blocker for the 3.1 release but we can discuss it on the list. Could you start a thread?  \n12:39\u00a0<+sburjan>\u00a0vmassol: I still don't understand. So if I am able to delete my own created pages, why can't I rename them ? basically if I have delete right, rename should work  \n12:40\u00a0<vmassol>\u00a0you don't have the delete rights  \n12:40\u00a0<+sburjan>\u00a0well how can I delete a page if I don't have delete rights ?  \n12:40\u00a0<+sburjan>\u00a0because I can delete a page created by me  \n12:41\u00a0<vmassol>\u00a0because there must be a special check  \n12:41\u00a0<vmassol>\u00a0for the author of the doc  \n12:41\u00a0<vmassol>\u00a0checking that  \n12:45\u00a0<cjdelisle>\u00a0do you know what I would have to change in the pom file to push to nexus rather than maven?  \n12:47\u00a0<vmassol>\u00a0I guess this can be found in the nexus book  \n12:47\u00a0<+tmortagne>\u00a0sburjan: ok then it means there is a bad design here, if we allow user to delete its own page it should be checked in delete right IMO and not be some special other check everywhere we needs it  \n12:47\u00a0<+tmortagne>\u00a0so you are right rename thing is a bug IMO  \n12:47\u00a0<vmassol>\u00a0http://www.sonatype.com/books/nexus-book/reference/staging.html  \n12:48\u00a0<vmassol>\u00a0tmortagne: either rename or delete  \n12:48\u00a0<+tmortagne>\u00a0the delete is done on purpose I doubt it's a bug  \n12:48\u00a0<+tmortagne>\u00a0but it has been forgotten in rename  \n12:48\u00a0<vmassol>\u00a0still checking where it's done fro dlete  \n12:48\u00a0<vmassol>\u00a0canDelete() doesn't seem to have this rule  \n12:49\u00a0<vmassol>\u00a0ah canDelete is the trash  \n12:49\u00a0<vmassol>\u00a0s/is/is for/  \n12:49\u00a0<vmassol>\u00a0I don't see a check in DeleteAction though  \n12:50\u00a0<+tmortagne>\u00a0vmassol: sdumitriu say it's already supposed to work the right way (i.e. at delete right check level)  \n12:51\u00a0<vmassol>\u00a0can you point me to the check int eh code?  \n12:51\u00a0<@sdumitriu>\u00a0vmassol: I pou it as a comment to the jira issue  \n12:52\u00a0<@sdumitriu>\u00a0put  \n12:52\u00a0<vmassol>\u00a0oh hardcoded in the general right\u2026 :)  \n12:53\u00a0<vmassol>\u00a0I always forget to check there  \n12:54\u00a0<cjdelisle>\u00a0if something in the permissions engine is acting weird that could be serious, should I stop again?  \n12:54\u00a0<vmassol>\u00a0no  \n12:54\u00a0<vmassol>\u00a0it's not a regression  \n12:54\u00a0<cjdelisle>\u00a0k  \n12:54\u00a0<vmassol>\u00a0been like this since 1.9M1  \n12:55\u00a0<cjdelisle>\u00a0I seem to recall some line that said \"// if the user created this page then they automaticly have delete right\"  \n12:55\u00a0<+tmortagne>\u00a0vmassol: not sure about that  \n12:55\u00a0<vmassol>\u00a0yes that's what sdumitriu was saying  \n12:56\u00a0<vmassol>\u00a0tmortagne: check my comment on the jria issue I gave the details  \n12:56\u00a0<mpaun>\u00a0has joined #xwiki  \n12:57\u00a0<+tmortagne>\u00a0vmassol: delete right check is broken, does not mean it was broken for XWIKI-3398  \n12:57\u00a0<+tmortagne>\u00a0XWIKI-3398 is right if the delete right is working the expected way  \n12:57\u00a0<mpaun>\u00a0Hi guys! I have a wiki where unregistered users are globally denied the view rights, are allowed to view XWiki.Registration because it's custom and yet the successful registration message from the Registration section of Administration is not taken into account. Any idea how to solve this?  \n12:57\u00a0<vmassol>\u00a0tmortagne: the check for delete right for rename has been there since 1.9M1  \n12:58\u00a0<+tmortagne>\u00a0and ?  \n12:58\u00a0<vmassol>\u00a0that's why a user needs delete rights to rename a doc  \n12:58\u00a0<+tmortagne>\u00a0this has nothing to do with XWIKI-6708 since creator is supposed to have delete right  \n12:58\u00a0<+tmortagne>\u00a0sburjan report was only about creator  \n12:58\u00a0<+sburjan>\u00a0creator when creatos is a regular user  \n12:59\u00a0<vmassol>\u00a0tmortagne: ah you mean that checkAccess should grant delete right for creators..hmm indeed  \n12:59\u00a0<+tmortagne>\u00a0yes  \n12:59\u00a0<vmassol>\u00a0debugging again  \n12:59\u00a0<vmassol>\u00a0cjdelisle: hold on for a few minutes maybe.. you can start with commons and rendering  \n12:59\u00a0<cjdelisle>\u00a0k  \n12:59\u00a0<+sburjan>\u00a0IMO it's \\_natural\\_ to be able to manipulate (copy, rename, delete) the pages \\_you\\_ created.  \n13:00\u00a0<vmassol>\u00a0sburjan: let's separate issues please  \n13:00\u00a0<+tmortagne>\u00a0but it's possible the bug \u00a0delete right check in this particular context is old since it's working well when \"normally\" deleting a document  \n13:00\u00a0<vmassol>\u00a0we should only address regression ATM  \n13:00\u00a0<cjdelisle>\u00a0At this point the question is \"has something changed we don't know about\" because that might mean horrible things are afoot in the storage/permissions rat's nes- err I mean system  \n13:00\u00a0<+tmortagne>\u00a0but still a bug in right management system is always critical  \n13:12\u00a0<cjdelisle>\u00a0vmassol: does the build engine have an account with nexus?  \n13:12\u00a0<vmassol>\u00a0ok found the problem  \n13:12\u00a0<vmassol>\u00a0it's an important bug and regression indeed  \n13:12\u00a0<vmassol>\u00a0fixing  \n13:13\u00a0<vmassol>\u00a0cjdelisle: please hold the release of platform  \n13:14\u00a0<cjdelisle>\u00a0ok  \n13:15\u00a0<vmassol>\u00a0easy to fix but I'd like to see if I can add a unit test  \n13:17\u00a0<cjdelisle>\u00a0I'm planning to add a user to nexus for the build engine then give staged release a shot.  \n13:23\u00a0<cjdelisle>\u00a0heh I bet nexus can't send mail. I just lost my passwd to it  \n13:23\u00a0<cjdelisle>\u00a0or not just but it's not here  \n13:24\u00a0<mpaun>\u00a0has quit  \n13:26\u00a0<+tmortagne>\u00a0cjdelisle: maybe I can reset your password, should I check ?  \n13:26\u00a0<cjdelisle>\u00a0yes please, I'm kind of held up until I can get a hudson user added  \n13:28\u00a0<+tmortagne>\u00a0done but I have no idea what it mean, maybe it will send you a mail  \n13:28\u00a0<+tmortagne>\u00a0I can't set one just ask for \"reset\"  \n13:28\u00a0<cjdelisle>\u00a0I tried the forgot password function, still no mail...  \n13:28\u00a0<+tmortagne>\u00a0vmassol: any idea ?  \n13:29\u00a0<vmassol>\u00a0cheecking  \n13:30\u00a0<+tmortagne>\u00a0there is smtp setup but I don't know if it's right  \n13:30\u00a0<+tmortagne>\u00a0hmm \"smtp-host\" as host does not seems right  \n13:31\u00a0<vmassol>\u00a0I gave cjdelisle his password  \n13:31\u00a0<jvdrean>\u00a0has joined #xwiki  \n13:31\u00a0<vmassol>\u00a0I don't know about the smtp setup  \n13:31\u00a0<vmassol>\u00a0I've never set i tup so it must not be set  \n13:31\u00a0<+sburjan>\u00a0vmassol: are you writing a unit test or selenium2 test for the rename issue ?  \n13:31\u00a0<vmassol>\u00a0unit test  \n13:35\u00a0<jvdrean>\u00a0has quit  \n13:36\u00a0<cjdelisle>\u00a0works, thanks  \n13:38\u00a0<cjdelisle>\u00a0oh we have a deployment user, cool  \n13:38\u00a0<DrLou>\u00a0has joined #xwiki  \n13:39\u00a0<jvdrean>\u00a0has joined #xwiki  \n14:02\u00a0<abusenius>\u00a0has joined #xwiki  \n14:16\u00a0<vmassol>\u00a0rename fixed thanks sburjan for reporting this!  \n14:16\u00a0<vmassol>\u00a0all should be good but we might want to wait for a full build  \n14:16\u00a0<vmassol>\u00a0(cjdelisle)  \n14:17\u00a0<cjdelisle>\u00a0I'm trying to figure out how to setup a staging profile for releases right now  \n14:18\u00a0<+tmortagne>\u00a0we have \"Too many open files\" error on agent2  \n14:18\u00a0<nlemoine>\u00a0has joined #xwiki  \n14:18\u00a0<+sburjan>\u00a0vmassol: my pleasure. Glad I found it in time before the final release ...  \n14:18\u00a0<vmassol>\u00a0sburjan: that said it's not a regression been there since 2.3  \n14:26\u00a0<+sburjan>\u00a0vmassol: I'm almost intrigued how come nobody complained about this .. I mean regular users in production.  \n14:30\u00a0<vmassol>\u00a0stopping agent2  \n14:30\u00a0<vmassol>\u00a0it has a display issue  \n14:31\u00a0<@sdumitriu>\u00a0This means that users don't use the rename feature that often  \n14:35\u00a0<cjdelisle>\u00a0it's a cool idea, this way I can make all the mistakes I want :)  \n14:35\u00a0<vmassol>\u00a0:)  \n14:38\u00a0<cjdelisle>\u00a0do you know the password for the \"deployment\" user so I can add him to the settings.xml file?  \n14:38\u00a0<vmassol>\u00a0we have such a user? (didn't know)  \n14:38\u00a0<vmassol>\u00a0checking  \n14:38\u00a0<vmassol>\u00a0maybe it's jvdrean who set this up  \n14:39\u00a0<+tmortagne>\u00a0cjdelisle: it's supposed to be your user  \n14:39\u00a0<vmassol>\u00a0cjdelisle: I guess you'll need to use a user that's valid on nexus  \n14:39\u00a0<+tmortagne>\u00a0I doubt there is a \"deployment\" user  \n14:40\u00a0<cjdelisle>\u00a0check the user list  \n14:40\u00a0<+tmortagne>\u00a0or maybe just for contrib releases  \n14:40\u00a0<+tmortagne>\u00a0but you don't need that  \n14:40\u00a0<vmassol>\u00a0ok seen it  \n14:40\u00a0<vmassol>\u00a0IMO we shouldn't have it  \n14:40\u00a0<vmassol>\u00a0for accountability reasons  \n14:40\u00a0<cjdelisle>\u00a0I have enough to think about keeping my security without pasting my passwords onto other machines.  \n14:40\u00a0<vmassol>\u00a0anyone who releases should have a user  \n14:40\u00a0<+tmortagne>\u00a0in any case it's useless for the one who have user on nexus  \n14:42\u00a0<cjdelisle>\u00a0If nexus supports keys then that's cool but if my password leaves my machine then we pretty much have to accept my account is public access.  \n14:43\u00a0<+tmortagne>\u00a0would it be ok with https ?  \n14:43\u00a0<vmassol>\u00a0cjdelisle: no idea, I'll let you research that!  \n14:43\u00a0<cjdelisle>\u00a0this morning ay?  \n14:44\u00a0<vmassol>\u00a0just use whatever works for now, no?  \n14:44\u00a0<cjdelisle>\u00a0I think the thing to do is either add a user for agent1 or skip staging.  \n14:44\u00a0<vmassol>\u00a0IMO it's a bit later to try staging  \n14:45\u00a0<vmassol>\u00a0we could try it just after a release is done  \n14:45\u00a0<vmassol>\u00a0to be ready for the next one  \n14:45\u00a0<vmassol>\u00a0just not to be in a rush,  \n14:45\u00a0<vmassol>\u00a0wdyt?  \n14:45\u00a0<vmassol>\u00a0s/later/late/  \n14:45\u00a0<cjdelisle>\u00a0I was ready to do it, you said we needed it for final. I have a profile set up, I think all I need is to add the user and go.  \n14:45\u00a0<vmassol>\u00a0as you want  \n14:46\u00a0<vmassol>\u00a0I'm fine with whatever works  \n14:47\u00a0<cjdelisle>\u00a0adding a user for agent1, I'll keep the password and put it in agent1's settings file. If we release from another box we should use another user for isolation purpose.  \n14:50\u00a0<cjdelisle>\u00a0http://nexus.xwiki.org/nexus/index.html#security-users;agent1  \n14:51\u00a0<cjdelisle>\u00a0only thing he's allowed to do is staging deployment, we'll see how that works.  \n14:52\u00a0<+sburjan>\u00a0release is beginning ?  \n14:53\u00a0<cjdelisle>\u00a0indeed  \n14:54\u00a0<nlemoine>\u00a0has quit  \n14:55\u00a0<vmassol>\u00a0cjdelisle: you might want to check this out too: https://wiki.jenkins-ci.org/display/JENKINS/M2+Release+Plugin  \n14:56\u00a0<cjdelisle>\u00a0Yes, that's kind of the direction I have been trying to go with the automation of everything with my script.  \n15:02\u00a0<cjdelisle>\u00a0http://nexus.xwiki.org/nexus/index.html#view-repositories;xwiki\\_releases\\_staging-001  \n15:02\u00a0<cjdelisle>\u00a0there it is...  \n15:05\u00a0<vmassol>\u00a0btw we're using an oldish nexus version, if we need it we can upgrade to latest 1.9.1.1  \n15:07\u00a0<cjdelisle>\u00a0I think nexus is well overpowered for what we need so it shouldn't be an issue  \n15:07\u00a0<cjdelisle>\u00a0does c4c27aa3514b50fb7d9b42081884bc820442ff83 - XWIKI-5781 need to make the release?  \n15:07\u00a0<vmassol>\u00a0yes better if it's in  \n15:08\u00a0<vmassol>\u00a0I asked this morning  \n15:08\u00a0<cjdelisle>\u00a0I'm pulling XWIKI-6708 into 3.1 branch, I want to make sure 5781 is really safe before I pull that too  \n15:08\u00a0<vmassol>\u00a05781 should be safe  \n15:09\u00a0<vmassol>\u00a0at least sdumitriu, tmortagne and me think it's safe  \n15:10\u00a0<cjdelisle>\u00a0ok, cherry-picked  \n15:12\u00a0<vmassol>\u00a0cjdelisle: hmm I alreayd cherry picked it normally  \n15:12\u00a0<vmassol>\u00a0unless you're talking about another branch  \n15:12\u00a0<+sburjan>\u00a0could you tell me when the build is ready so I can test against XWIKI-6708 ?  \n15:12\u00a0<vmassol>\u00a0(different from stable-3.1.x)  \n15:13\u00a0<cjdelisle>\u00a0yes, I'm releasing from a special 3.1 branch, sdumitriu and I decided the benefits outweighted the costs of doing that all the time.  \n15:13\u00a0<vmassol>\u00a0ok  \n15:13\u00a0<vmassol>\u00a0sburjan:  \n15:13\u00a0<vmassol>\u00a0testing here too (since I didn't test it functioannly)  \n15:14\u00a0<vmassol>\u00a0(I should have)  \n15:14\u00a0<cjdelisle>\u00a0we'll be able to test the staged release pretty soon (which is pretty awesome IMO)  \n15:14\u00a0<vmassol>\u00a0it is  \n15:14\u00a0<+sburjan>\u00a0vmassol: ping me when buid is on maven  \n15:14\u00a0<vmassol>\u00a0sburjan: you can check ci.xwiki.org  \n15:15\u00a0<vmassol>\u00a0I won't know more than you  \n15:15\u00a0<+sburjan>\u00a0you know how to read ci.xwiki.org :)  \n15:15\u00a0<cjdelisle>\u00a0I'll let you know when it's in the staging repo.  \n15:16\u00a0<cjdelisle>\u00a0it'll be an hour or 2 since the build takes a while  \n15:17\u00a0<vmassol>\u00a0argh got a failing test on master for oldcore  \n15:17\u00a0<vmassol>\u00a0checking what's up  \n15:18\u00a0<vmassol>\u00a0tmortagne: ./target/surefire-reports/com.xpn.xwiki.internal.event.CommentEventGeneratorListenerTest.txt:testNotComment(com.xpn.xwiki.internal.event.CommentEventGeneratorListenerTest) \u00a0Time elapsed: 0.024 sec \u00a0<<< ERROR!  \n15:18\u00a0<+tmortagne>\u00a0that's weird I executed test before committing  \n15:18\u00a0<+tmortagne>\u00a0will look at it  \n15:26\u00a0<vmassol>\u00a0sburjan: worked!  \n15:26\u00a0<vmassol>\u00a0(the rename)  \n15:26\u00a0<+sburjan>\u00a0cool ;)  \n15:27\u00a0<+sburjan>\u00a0did you build locally ?  \n15:27\u00a0<+tmortagne>\u00a0vmassol: didn't you built core without building model before ?  \n15:27\u00a0<vmassol>\u00a0yes  \n15:27\u00a0<+tmortagne>\u00a0s/core/oldcore/  \n15:27\u00a0<vmassol>\u00a0(yes for sburjan)  \n15:27\u00a0<vmassol>\u00a0tmortagne: ah  \n15:27\u00a0<vmassol>\u00a0you changed model?  \n15:27\u00a0<vmassol>\u00a0my bad then  \n15:27\u00a0<vmassol>\u00a0I didn't rebuild the whole thing  \n15:28\u00a0<cjdelisle>\u00a0ok so we're set to release platform?  \n15:28\u00a0<+tmortagne>\u00a0yes the real bug was actually in RegexEntityReference  \n15:28\u00a0<vmassol>\u00a0tmortagne: ok  \n15:28\u00a0<vmassol>\u00a0cjdelisle: yes  \n15:29\u00a0<cjdelisle>\u00a0hmm I wonder if I should not be tagging the release until we promote it out of staging  \n15:30\u00a0<cjdelisle>\u00a0I already pushed the commons tag but from now on I'll tag on localhost and wait until the end to push tags  \n15:43\u00a0<+Denis>\u00a0sdumitriu: recent git history of XWiki is really bad, and this is mainly linked to how committers use git currently, if I well remember, you were writing some guidelines, what was the outcome ?  \n15:44\u00a0<@sdumitriu>\u00a0WDYM bad?  \n15:44\u00a0<+Denis>\u00a0just take the recent fix from vmassol, 3 unlinked commit for 1  \n15:46\u00a0<@sdumitriu>\u00a0Hm, it's hard to link commits when they go in different branches  \n15:46\u00a0<@sdumitriu>\u00a0What can be done is to do git cherry-pick -x  \n15:47\u00a0<@sdumitriu>\u00a0Which adds a (cherry picked from commit 123abc) message in the comment  \n15:49\u00a0<+Denis>\u00a0cherry-picking should be the exception  \n15:49\u00a0<+Denis>\u00a0not the rules  \n15:50\u00a0<+Denis>\u00a0it is evil like rebase when missused  \n15:50\u00a0<@sdumitriu>\u00a0But I don't know how else to do it...  \n15:50\u00a0<+Denis>\u00a0branch, and merge  \n15:50\u00a0<@sdumitriu>\u00a0Merge what?  \n15:50\u00a0<+Denis>\u00a0branch your single commit and merge it many times  \n15:51\u00a0<@sdumitriu>\u00a0That doesn't work...  \n15:51\u00a0<@sdumitriu>\u00a0merge commit -> merge the whole branch up to that commit  \n15:52\u00a0<+Denis>\u00a0this was the flow we have discussed, read http://nvie.com/posts/a-successful-git-branching-model/ again  \n15:52\u00a0<@sdumitriu>\u00a0So if you merge from master -> XWIKI-123  \n15:52\u00a0<@sdumitriu>\u00a0Then commit on XWIKI-123  \n15:52\u00a0<+tmortagne>\u00a0sdumitriu: Denis mean you create a quickfix branch  \n15:52\u00a0<@sdumitriu>\u00a0Then merge on stable-3.1.x, you'll get the master branch as a grandparent  \n15:52\u00a0<+tmortagne>\u00a0then you merge that branch to master and others  \n15:53\u00a0<+Denis>\u00a0tmortagne: exactly  \n15:53\u00a0<@sdumitriu>\u00a0Yes, but it doesn't work  \n15:53\u00a0<@sdumitriu>\u00a0Merge inherits the parent commits  \n15:53\u00a0<@sdumitriu>\u00a0Let me draw something  \n15:57\u00a0<+Denis>\u00a0sdumitriu: I really do not see what could be the problem, for a hotfix, you just branch a common ancestor of all the branches were you expect to merge, and you are done. Release branch could be merge (multiple times) to master as well, since this is a the right way to ensure master receive these fix  \n15:59\u00a0<+Denis>\u00a0what is really bad currently, is that we rely on the old svn way, with a tools that is far better than svn and could ensure the integrity of our code by it self  \n16:01\u00a0<@sdumitriu>\u00a0http://imageshack.us/photo/my-images/96/mergec.png/  \n16:02\u00a0<@sdumitriu>\u00a0The problem is that the common ancestor works if there aren't that many changes  \n16:04\u00a0<+Denis>\u00a0in your sample, you should simple hotfix on stable and merge it to master  \n16:05\u00a0<@sdumitriu>\u00a0Works as long as there aren't any distinct commits on the stable branch  \n16:06\u00a0<@sdumitriu>\u00a0So this means that we should never commit unmerged stuff on a stable branch  \n16:06\u00a0<@sdumitriu>\u00a0It could work  \n16:06\u00a0<@sdumitriu>\u00a0But it's already late for that  \n16:06\u00a0<+Denis>\u00a0late for the past  \n16:06\u00a0<@sdumitriu>\u00a0We could apply this starting with the future stable branches  \n16:07\u00a0<+Denis>\u00a0we should, else we will undoubtedly found a regression due to a missing commit applied on a stable branch and never merged to master  \n16:07\u00a0<+Denis>\u00a0it will also helps contributor following what we do  \n16:08\u00a0<cjdelisle>\u00a0merging up from stable to master makes a lot of sense  \n16:10\u00a0<@sdumitriu>\u00a0Yep, but then the rule is to always commit on the lowest branch first  \n16:12\u00a0<+Denis>\u00a0yes, this is whet is recommended by git workflow, see http://www.kernel.org/pub/software/scm/git/docs/gitworkflows.html  \n16:13\u00a0<+Denis>\u00a0\"Merges have many advantages, so we try to solve as many problems as possible with merges alone. Cherry-picking is still occasionally useful; see \"Merging upwards\" below for an example.\"  \n16:14\u00a0<@sdumitriu>\u00a0Seems that kernel.org uses cherry-pick as well  \n16:14\u00a0<@sdumitriu>\u00a0For example: http://git.kernel.org/?p=linux/kernel/git/stable/linux-2.6.36.y.git;a=commit;h=5cc301295c277a59cb8ae9c529b6b1ef130fef0c  \n16:14\u00a0<@sdumitriu>\u00a0Cherry-picked from 2.6.37  \n16:14\u00a0<+Denis>\u00a0occasionally, you may need it, but it is bad  \n16:14\u00a0<@sdumitriu>\u00a0They just put this in the commit message:  \n16:14\u00a0<@sdumitriu>\u00a0commit\u00a0f7ab9b407b3bc83161c2aa74c992ba4782e87c9c\u00a0upstream.  \n16:15\u00a0<+Denis>\u00a0yes, but this does not show in the history properly. I do not say that we should never cherry-pick, but we should avoid it when possible  \n16:16\u00a0<@sdumitriu>\u00a0Agreed  \n16:16\u00a0<+Denis>\u00a0we should also priviledge fast-forward  \n16:16\u00a0<+Denis>\u00a0look at the commit of cjdelisle of the fix of vmassol, this is inappropriate, since it could have been a ff  \n16:17\u00a0<cjdelisle>\u00a0link?  \n16:17\u00a0<+Denis>\u00a0file:///Applications/GitX.app/Contents/Resources/html/views/history/index.html  \n16:17\u00a0<cjdelisle>\u00a0heh  \n16:20\u00a0<+Denis>\u00a0sdumitriu: there is also another practice that seems some has missed, which is to pull rebase on master before commits, and not to pull merge to once again use fast-forward  \n16:21\u00a0<vmassol>\u00a0at least this I always do :)  \n16:22\u00a0<+Denis>\u00a0vmassol: just to be clear, my remarks are only to improve the situation, git is a great tools, but it is not easy to use after svn, it take myself a few days before I get the idea :)  \n16:22\u00a0<cjdelisle>\u00a0IMO we ought to know (and have written down) what the best way to do things is but at this point it is counterproductive to punish \"bad\" behavior. We are all still just getting started with git and like learning a new language it is discouraging to be expected to use it fluently and with eloquence.  \n16:23\u00a0<+Denis>\u00a0the earlier you fix bad habits, the better ;)  \n16:24\u00a0<cjdelisle>\u00a0goal #1 is to know the right thing. Maybe you could start a page on best practices.  \n16:25\u00a0<+Denis>\u00a0though sdumitriu has started that work, that was my first question!  \n16:26\u00a0<@sdumitriu>\u00a0Denis: I also use rebase on master all the time  \n16:26\u00a0<cjdelisle>\u00a0and it's not about about fixing \"bad\" habits early, these are the way we did things with svn, they haven't suddenly gotten worse, it's just that there are better ways.  \n16:26\u00a0<@sdumitriu>\u00a0I have an alias git up => pull --rebase --prune  \n16:26\u00a0<+Denis>\u00a0good think for svn is not good for git  \n16:27\u00a0<+Denis>\u00a0sdumitriu: nice idea, I get it :)  \n16:27\u00a0<@sdumitriu>\u00a0Denis: fast-forward also doesn't always work  \n16:27\u00a0<cjdelisle>\u00a0Are you saying that the same practice is worse because the scm is different?  \n16:27\u00a0<@sdumitriu>\u00a0By default git does try to ff  \n16:27\u00a0<@sdumitriu>\u00a0cjdelisle: Yes  \n16:27\u00a0<+Denis>\u00a0cjdelisle: yes  \n16:27\u00a0<@sdumitriu>\u00a0SVN thought us that branches are bad  \n16:27\u00a0<@sdumitriu>\u00a0Git tells us that branches are good  \n16:28\u00a0<@sdumitriu>\u00a0As many branches as possible is good  \n16:28\u00a0<@sdumitriu>\u00a0I'm actually lazy and work on master all the time  \n16:28\u00a0<cjdelisle>\u00a0Is one of those teachings truer than the other?  \n16:28\u00a0<@sdumitriu>\u00a0We should work on topic branches as often as possible  \n16:29\u00a0<+Denis>\u00a0you should never work on master  \n16:29\u00a0<+Denis>\u00a0branch locally all the time  \n16:29\u00a0<+Denis>\u00a0this is far better  \n16:29\u00a0<@sdumitriu>\u00a0I know  \n16:29\u00a0<@sdumitriu>\u00a0Lazy  \n16:30\u00a0<cjdelisle>\u00a0Was working on master really better when using svn or was it just as bad but we were limited by our tools?  \n16:30\u00a0<+Denis>\u00a0the main thing to understand with git is that there no branch, just pointers and a network of commits  \n16:30\u00a0<@sdumitriu>\u00a0Right  \n16:30\u00a0<@sdumitriu>\u00a0DAG  \n16:34\u00a0<+Denis>\u00a0cjdelisle: Yesterday, I have ported an old patch, by checking out a very old state of the core, apply my patch, and than rebase my work. You should have never try that with svn  \n16:35\u00a0<+Denis>\u00a0at the end, I have got the right commit for the latest state of master  \n16:36\u00a0<cjdelisle>\u00a0The question I ask is: Is our current practice better than what we did when using svn? If it is not then perhaps git is a bad thing because it has already made our development practice worse.  \n16:37\u00a0<@sdumitriu>\u00a0cjdelisle: Why do you say it's worse?  \n16:37\u00a0<cjdelisle>\u00a0I'm asking what you guys think.  \n16:38\u00a0<tekzilla>\u00a0has joined #xwiki  \n16:39\u00a0<@sdumitriu>\u00a0IMHO, it's better now, but it could be even better  \n16:39\u00a0<@sdumitriu>\u00a0But you said \"already made our development practice worse.\"  \n16:39\u00a0<sburjan>\u00a0has quit  \n16:39\u00a0<@sdumitriu>\u00a0How come?  \n16:39\u00a0<cjdelisle>\u00a0If our current practice is better than what we were doing with svn but we still have room for improvement then we it is not critical that we fix our development practice right away, steady improvement is a good enough goal.  \n16:40\u00a0<cjdelisle>\u00a0I'm just trying to differentiate between regression and room for improvement.  \n16:40\u00a0<+Denis>\u00a0cjdelisle: svn require you to patch all active branch, git allow you to patch the lowest and merge up, it far more secure to ensure you do not forgot it, and this could allow more branch in parallels, WDYT ?  \n16:41\u00a0<+Denis>\u00a0ok, this is improvement, but this also has a major effect on forked projects  \n16:43\u00a0<cjdelisle>\u00a0I'm sure everyone is doing their best to get going on this, 3.1 was the first version released from git and I'm sure that as long as we have something telling us the best way, we'll all be using it soon.  \n16:44\u00a0<+Denis>\u00a0cjdelisle: once again, my remarks is to improve the situation, and I completely understand how hard it is to move from svn to git  \n16:46\u00a0<+tmortagne>\u00a0cjdelisle: added 3.1.1 version in jira since I have a bugfix to merge for 3.1 branch and it's ok if it's not going in 3.1 final (seen you created the release branch)  \n16:49\u00a0<+tmortagne>\u00a0Denis: yes I know I used cherry-pick, too late. Something around the lazyness sdumitriu was talking about, will try next time ;)  \n16:50\u00a0<tekzilla>\u00a0has quit  \n16:51\u00a0<+Denis>\u00a0tmortagne: I think we should target 3.2.x for improvement :)  \n16:56\u00a0<+tmortagne>\u00a0ha crap I used the wrong jira id  \n16:56\u00a0<+tmortagne>\u00a0ha no  \n16:56\u00a0<+tmortagne>\u00a0it's ok  \n16:57\u00a0<tekzilla>\u00a0has joined #xwiki  \n17:02\u00a0<vmassol>\u00a0:)  \n17:26\u00a0<pulasthi>\u00a0has joined #xwiki  \n17:29\u00a0<Chami1>\u00a0has joined #xwiki  \n17:33\u00a0<Chami1>\u00a0tmortagne: hi  \n17:37\u00a0<+tmortagne>\u00a0Chami1: hi  \n17:37\u00a0<Chami1>\u00a0big problem which i didn't notice  \n17:37\u00a0<Chami1>\u00a0actually gsoc library is 170kb  \n17:38\u00a0<Chami1>\u00a0gsoc/gson  \n17:38\u00a0<+tmortagne>\u00a0still very small compared to restlet or jaxp scale  \n17:39\u00a0<+tmortagne>\u00a0s/jaxp/jaxb/  \n17:39\u00a0<+tmortagne>\u00a0restlet is more that 500 as far as I remember  \n17:39\u00a0<pulasthi1>\u00a0has joined #xwiki  \n17:40\u00a0<+tmortagne>\u00a0Chami1: but If you think gson does not give you much and you can do it easily yourself for you need i'm ok with that  \n17:41\u00a0<pulasthi>\u00a0has quit  \n17:41\u00a0<Chami1>\u00a0how about using jackson? I have to check on jackson because it seems it can apply directly to jaxb model  \n17:42\u00a0<+tmortagne>\u00a0Chami1: jackson exists on android side ?  \n17:42\u00a0<Chami1>\u00a0so we don't have to make own model  \n17:42\u00a0<Chami1>\u00a0not android side. it's same as gsoc. but 220kb  \n17:42\u00a0<Chami1>\u00a0it can be used in android  \n17:42\u00a0<+tmortagne>\u00a0how is this related to gson size then ?  \n17:43\u00a0<+tmortagne>\u00a0I don't understand, you say gson is too big and your solution is to use jackson instead which is bigger  \n17:43\u00a0<cjdelisle>\u00a0sburjan`: http://nexus.xwiki.org/nexus/service/local/repositories/xwiki\\_releases\\_staging-001/content/org/xwiki/enterprise/xwiki-enterprise-jetty-hsqldb/3.1/xwiki-enterprise-jetty-hsqldb-3.1.zip  \n17:43\u00a0<Chami1>\u00a0no i mean if jackson is used we don't have to worry about jaxb model  \n17:44\u00a0<+tmortagne>\u00a0ok that's a good point but I don't see how it's related to gson size  \n17:44\u00a0<+tmortagne>\u00a0s/good point/very good point/  \n17:45\u00a0<Chami1>\u00a0if we use gson we have to make our own model to deserialize into java objects. I think it's not a good practice because if the xwiki changes something in REST it will affect the android-client  \n17:46\u00a0<cjdelisle>\u00a0http://nexus.xwiki.org/nexus/service/local/repositories/xwiki\\_releases\\_staging-001/content/org/xwiki/enterprise/xwiki-enterprise-installer-windows/3.1/xwiki-enterprise-installer-windows-3.1.exe  \n17:46\u00a0<Chami1>\u00a0it can be solved by using jackson \u00a0deserializing by using xwiki jaxb model classes  \n17:46\u00a0<cjdelisle>\u00a0http://nexus.xwiki.org/nexus/service/local/repositories/xwiki\\_releases\\_staging-001/content/org/xwiki/enterprise/xwiki-enterprise-installer-generic/3.1/xwiki-enterprise-installer-generic-3.1-standard.jar  \n17:46\u00a0<+tmortagne>\u00a0Chami1: it's not a good practice for sure, I never said it was. I just don't understand the relationship with \"(05:37:53 PM) Chami1: actually gsoc library is 170kb\"  \n17:47\u00a0<+tmortagne>\u00a0anyway jackson seems a lot better accorrding to what you say and it's not much bigger so +1 to use it  \n17:47\u00a0<cjdelisle>\u00a0http://nexus.xwiki.org/nexus/service/local/artifact/maven/redirect?r=xwiki\\_releases\\_staging-001&g=org.xwiki.enterprise&a=xwiki-enterprise-web&v=3.1&p=war  \n17:48\u00a0<cjdelisle>\u00a0http://nexus.xwiki.org/nexus/service/local/artifact/maven/redirect?r=xwiki\\_releases\\_staging-001&g=org.xwiki.enterprise&a=xwiki-enterprise-wiki&v=3.1&p=xar  \n17:48\u00a0<Chami1>\u00a0let me tell you clearly  \n17:48\u00a0<Chami1>\u00a0option 1: gsoc (170kb) + our model(not good)  \n17:48\u00a0<Chami1>\u00a0option 2: jackson(220kb) + xwiki model  \n17:49\u00a0<Chami1>\u00a0gsoc/gson  \n17:49\u00a0<+tmortagne>\u00a0so you first sentence was to prepare to the fact that jackson is not that big as an alternative and not \"ho god gson is too big, we can't use that\" \u00a0:)  \n17:50\u00a0<+tmortagne>\u00a0in any case if I did found jackson before gson I would never suggested you to use gson so big +1 for me  \n17:52\u00a0<+tmortagne>\u00a0the other difference is that gson use public field where jackson+xwiki model will use getter/setter which is less good for performances but should still be ok  \n17:52\u00a0<Chami1>\u00a0anyway 220kb is the core library. I have to check whether it can do java object serialization  \n17:53\u00a0<Chami1>\u00a0so final decision is gsoc. isn't it?  \n17:53\u00a0<+tmortagne>\u00a0why ?  \n17:54\u00a0<+tmortagne>\u00a0if jackson is really only 220k and is doing what you say I said several times i'm +1 for it  \n17:55\u00a0<Chami1>\u00a0but less performance when using getter/setter  \n17:55\u00a0<+tmortagne>\u00a0yes but as I said i'm not sure it's that bad  \n17:55\u00a0<+tmortagne>\u00a0I don't know android enough  \n17:56\u00a0<+tmortagne>\u00a0hmm  \n17:56\u00a0<+tmortagne>\u00a0better be safe maybe yes  \n17:56\u00a0<+tmortagne>\u00a0and Jaxb support public field based serialization so nothing prevent us to modify the standard model  \n17:57\u00a0<+tmortagne>\u00a0which would allow us to directly use it with gson  \n17:58\u00a0<+tmortagne>\u00a0another good point for gson is that it's specifically writtent for android so I guess it's as optimized as possible  \n17:58\u00a0<Chami1>\u00a0so your choice is gsoc. right?  \n17:58\u00a0<+tmortagne>\u00a0yea after all sounds better  \n17:59\u00a0<+tmortagne>\u00a0Chami1: in any case you should make what is used to actually to the parsing/serialization hidden from xwiki library user POV  \n17:59\u00a0<+tmortagne>\u00a0so that it's easy to change it later if we need to  \n18:01\u00a0<Chami1>\u00a0sorry i didn't get what you said?  \n18:03\u00a0<+tmortagne>\u00a0Chami1: when you use xwiki-android-client you should know what is actually used behind the scene to do java object <-> REST server  \n18:03\u00a0<+tmortagne>\u00a0whatever is used that should not have any impact on the library API  \n18:03\u00a0<+tmortagne>\u00a0that way if we find later that gson is not the right thing we can easily change it without breaking anything  \n18:04\u00a0<cjdelisle>\u00a0I'm going to go grab something to eat and then try starting the 3.1 staged release .war file on tomcat/postgres, if other people can try some testing too that would be great.  \n18:04\u00a0<+tmortagne>\u00a0s/should know/should not know/  \n18:04\u00a0<Enygma`>\u00a0has quit  \n18:04\u00a0<+tmortagne>\u00a0sorry change a lot the meaning :)  \n18:06\u00a0<Chami1>\u00a0:) ok get it  \n18:07\u00a0<+tmortagne>\u00a0as usual it's maybe obvious for you but I prefer saying it ;)  \n18:11\u00a0<Chami1>\u00a0tmortagne: ok. I will proceed with gson and thank you for your help.  \n18:12\u00a0<+tmortagne>\u00a0Chami1: no problem, btw even if it's your own model for technical reason keep the exact same thing than xwiki rest model just with the modification you need for now  \n18:13\u00a0<+tmortagne>\u00a0in case we find a way to change a bit the standard model (did not had time to look at it yet)  \n18:13\u00a0<Chami1>\u00a0I only have to modify protected -> public in variables of jaxb model classes  \n18:13\u00a0<+tmortagne>\u00a0you could also try to look at it youself maybe you will quickly find some property to set in pom.xml or something  \n18:14\u00a0<+tmortagne>\u00a0that way you will avoid having to cpy \u00a0and modify all the classes yourself  \n18:15\u00a0<Chami1>\u00a0tmortagne: ok, i'll check  \n18:17\u00a0<Chami1>\u00a0tmortagne: I planned to make UI for android navigator within this weekend. is there anybody should I contact to get some advices?  \n18:17\u00a0<+tmortagne>\u00a0Chami1: the best is probably to make proposals on dev mailing list  \n18:18\u00a0<Chami1>\u00a0shall i design some wireframes and send it to devs list?  \n18:19\u00a0<+tmortagne>\u00a0but anyway the UI does not have to be perfect, usuable and well integrated is the most important, it's just an demo for the lib in the context of the GSOC  \n18:19\u00a0<+tmortagne>\u00a0Chami1: sure  \n18:21\u00a0<Chami1>\u00a0you said earlier that I should build a widget. but I think you mean it's a sample application. isn't it  \n18:21\u00a0<Chami1>\u00a0because android has two types of widget. which shows in home screen like sidebar in windows  \n18:22\u00a0<+tmortagne>\u00a0Chami1: I was not really talking about android \"widget\" actually  \n18:22\u00a0<Chami1>\u00a0ah, then it should be a sample application  \n18:22\u00a0<+tmortagne>\u00a0give me 2 second and I get the correct vocabulary to rephrase  \n18:22\u00a0<+tmortagne>\u00a0yes it's a sample application  \n18:23\u00a0<Chami1>\u00a0ok.  \n18:23\u00a0<Chami1>\u00a0tmortagne: thank you. got to go for dinner. :)  \n18:24\u00a0<+tmortagne>\u00a0Chami1: what I actually meant was that every peace of the application UI should be a reusable view in a library  \n18:24\u00a0<+tmortagne>\u00a0and you then put all that in some layout in your application  \n18:24\u00a0<Chami1>\u00a0yeah I got it. thanks  \n18:25\u00a0<+tmortagne>\u00a0like you have ListView you can reuse in any application you would have WikiNagigatorView you would put in any application basically  \n18:25\u00a0<+tmortagne>\u00a0but put that in another library  \n18:27\u00a0<Chami1>\u00a0you meant developer widget. I never done that before. but I'll do.  \n18:28\u00a0<+tmortagne>\u00a0Chami1: i'm not talking about wysget, just custom View obejct  \n18:28\u00a0<+tmortagne>\u00a0object  \n18:29\u00a0<+tmortagne>\u00a0which is how you are supposed to write proper UI in android anyway  \n18:29\u00a0<+tmortagne>\u00a0Chami1: http://developer.android.com/guide/topics/ui/custom-components.html  \n18:29\u00a0<+tmortagne>\u00a0that's what I mean  \n18:31\u00a0<Chami1>\u00a0yeah, android developers can just add it to their application and it will show a xwikiNavigator within their application.  \n18:31\u00a0<Chami1>\u00a0is it?  \n18:34\u00a0<+tmortagne>\u00a0yea that's the idea  \n18:34\u00a0<+tmortagne>\u00a0does not seems hard to do, just a design choice  \n18:36\u00a0<Chami1>\u00a0I think so. same thing with little differences :)  \n18:37\u00a0<+tmortagne>\u00a0yep  \n18:45\u00a0<tekzilla>\u00a0has quit  \n18:47\u00a0<tekzilla>\u00a0has joined #xwiki  \n18:49\u00a0<pulasthi1>\u00a0cjdelisle: hi  \n18:50\u00a0<cjdelisle>\u00a0howdy  \n18:51\u00a0<cjdelisle>\u00a0I saw your message the other day about what to do next  \n18:51\u00a0<pulasthi1>\u00a0yep  \n18:51\u00a0<cjdelisle>\u00a0We have to get 2 things out of the way before we are going to have meaningful querying  \n18:51\u00a0<pulasthi1>\u00a0:)  \n18:52\u00a0<cjdelisle>\u00a0#1 is we need XWQL to be supported by the Datanucleus-Cassandra-Plugin  \n18:52\u00a0<cjdelisle>\u00a0since XWQL is really inteneded to be an extension of JPQL, I think the way to go about that is to write a JPQL plugin then make the XWQL language be the \"icing on the cake\"  \n18:53\u00a0<cjdelisle>\u00a0You saw the JDOQLQuery.java, what we need for that step is a JPQLQuery.java which is equivilant.  \n18:53\u00a0<pulasthi1>\u00a0you mean make the DN-Cassandra plugin to work for JPQL  \n18:53\u00a0<pulasthi1>\u00a0yes  \n18:53\u00a0<cjdelisle>\u00a0The other part is about deep querying  \n18:54\u00a0<pulasthi1>\u00a0hmm ya i thought od that when i saw the class ( i mean JDOQLQuery.java )  \n18:54\u00a0<pulasthi1>\u00a0od \\*of  \n18:55\u00a0<pulasthi1>\u00a0hmm deep querying not quite clear what u meant by that?  \n18:55\u00a0<cjdelisle>\u00a0https://github.com/cjdelisle/xwiki-store-datanucleus/blob/master/src/test/java/org/xwiki/store/datanucleus/test/AppTest.java#L177  \n18:55\u00a0<cjdelisle>\u00a0there are 2 little test cases commented out there  \n18:55\u00a0<cjdelisle>\u00a0those both will need to work.  \n18:55\u00a0<cjdelisle>\u00a0deep querying is querying of fields of objects within objects.  \n18:56\u00a0<pulasthi1>\u00a0ahh ok so before deep qurying i have to work on JPQL right  \n18:57\u00a0<cjdelisle>\u00a0they are independent of one another but they both are needed for a functional XWQL  \n18:57\u00a0<cjdelisle>\u00a0in XWQL, you might say: \u00a0doc.object(XWiki.XWikiUsers) AS user WHERE user.first\\_name = 'Admin'  \n18:58\u00a0<cjdelisle>\u00a0you're querying fields of an object (user) which is inside of a document  \n18:58\u00a0<pulasthi1>\u00a0ahh got the idea :)  \n18:58\u00a0<cjdelisle>\u00a0that's what I mean by \"deep querying\"  \n18:58\u00a0<pulasthi1>\u00a0\"deep quries are like if u have a Person with names and a there is a List of persons and u want to \u00a0query by there names\" i was going to ask that  \n18:59\u00a0<pulasthi1>\u00a0the XWQL is the same meaning  \n19:01\u00a0<cjdelisle>\u00a0yes and for XWQL to function the same way, deep querying is a must.  \n19:01\u00a0<pulasthi>\u00a0has joined #xwiki  \n19:01\u00a0<cjdelisle>\u00a0yes and for XWQL to function the same way, deep querying is a must.  \n19:02\u00a0<pulasthi>\u00a0so an approch like breaking the quries down to a JPQL capable level and combining them  \n19:03\u00a0<pulasthi>\u00a0does that sound ok  \n19:04\u00a0<cjdelisle>\u00a0which problem are you trying to solve?  \n19:04\u00a0<pulasthi1>\u00a0has quit  \n19:04\u00a0<pulasthi>\u00a0just smthing that came of the top of my head \" for deep qurying\"  \n19:05\u00a0<cjdelisle>\u00a0The way I envisioned solving the deep querying issue is to convert nested objects into more fields.  \n19:05\u00a0<cjdelisle>\u00a0so there are no real nested objects  \n19:06\u00a0<cjdelisle>\u00a0like the first\\_name of the first user object attached to some document would translate to a column named:  \n19:06\u00a0<cjdelisle>\u00a0XWiki.Admin.objects.1.first\\_name  \n19:07\u00a0<cjdelisle>\u00a0that would be the actual column name  \n19:07\u00a0<pulasthi>\u00a0hmm u mean when creating the cassandra schema?  \n19:08\u00a0<cjdelisle>\u00a0maybe I'm explaining myself wrong  \n19:08\u00a0<cjdelisle>\u00a0cassandra lets you just add colums to a row any time you want  \n19:09\u00a0<cjdelisle>\u00a0you don't need to modify the schema for that to work  \n19:09\u00a0<pulasthi>\u00a0ahh so u create these new columns just for the query  \n19:09\u00a0<cjdelisle>\u00a0so you can think of each row (each document) as a Map<String, String>  \n19:10\u00a0<cjdelisle>\u00a0then when you add objects to the document, instead of having another table for objects and joining them, the relational way, you just add each field in the object to the document's map.  \n19:11\u00a0<cjdelisle>\u00a0so it's as if the document had a string field named \"objects.1.first\\_name\"  \n19:11\u00a0<jvdrean>\u00a0has quit  \n19:11\u00a0<cjdelisle>\u00a0Am I making any sens?  \n19:11\u00a0<pulasthi>\u00a0hmmm yep  \n19:11\u00a0<pulasthi>\u00a0im getting the genaral idea  \n19:12\u00a0<pulasthi>\u00a0so for example  \n19:12\u00a0<pulasthi>\u00a0u have a Person with names and a there is a List of persons and u want to \u00a0query by there names  \n19:12\u00a0<pulasthi>\u00a0u make a name field in the List  \n19:12\u00a0<cjdelisle>\u00a0s/u/you/ ;)  \n19:12\u00a0<pulasthi>\u00a0of persons  \n19:12\u00a0<pulasthi>\u00a0:-/  \n19:13\u00a0<cjdelisle>\u00a0no, you wouldn't be adding fields just for the query  \n19:13\u00a0<cjdelisle>\u00a0they would be there all along.  \n19:13\u00a0<pulasthi>\u00a0ahh  \n19:13\u00a0<cjdelisle>\u00a0lemme make up a little text example  \n19:14\u00a0<pulasthi>\u00a0ok cool, hope your not busy  \n19:15\u00a0<pulasthi>\u00a0i mean with other work  \n19:18\u00a0<cjdelisle>\u00a0http://www.pastebay.com/126267  \n19:18\u00a0<cjdelisle>\u00a0It's in a jsonish kind of language but I think you get the idea  \n19:19\u00a0<pulasthi>\u00a0ahh that made much more clear  \n19:19\u00a0<pulasthi>\u00a0:)  \n19:19\u00a0<pulasthi>\u00a0made it  \n19:20\u00a0<cjdelisle>\u00a0so my thinking is to flatten everything out so then there is no such thing as a \"nested query\"  \n19:20\u00a0<cjdelisle>\u00a0Of course it will require some investigation especially in to how exactly objects are represented now, I don't really know that.  \n19:21\u00a0<pulasthi>\u00a0hmm yes  \n19:21\u00a0<pulasthi>\u00a0\u00a0ill look into adding \u00a0JPQL first  \n19:21\u00a0<pulasthi>\u00a0then work on deep queries  \n19:22\u00a0<cjdelisle>\u00a0Great, I'll be able to help with deep querying when I am finished getting load/store functionality working.  \n19:22\u00a0<cjdelisle>\u00a0oh, the other advantage of handing it that way is everything is close together  \n19:23\u00a0<cjdelisle>\u00a0databases are \"normalized\" so that querying is fast but that means a regular getDocument() call requires a ton of queries.  \n19:23\u00a0<cjdelisle>\u00a0Our current implementation runs a seperate query for each field in each object  \n19:23\u00a0<cjdelisle>\u00a0I know I know, I need to improve that...  \n19:24\u00a0<pulasthi>\u00a0yeah but its all denormalizing in cassandra right  \n19:24\u00a0<cjdelisle>\u00a0Part of the nosql credo is to denormalize the data so that reading and writing is fast.  \n19:25\u00a0<cjdelisle>\u00a0Databases are good for analytics but for running a website they are really not optimal.  \n19:25\u00a0<abusenius>\u00a0has quit  \n19:25\u00a0<pulasthi>\u00a0btw i was pallning on talking a bit with Data service people \u00a0who work with cassandra at WSO2 i can get some help from them :)  \n19:26\u00a0<cjdelisle>\u00a0That would be great, if they don't have time then even just some advice and pointers about cassandra would be most welcome.  \n19:27\u00a0<pulasthi>\u00a0yeah i have a senior of out uni in the team hes a bit new there but i can ask him a bit and later talk with the team lead if needed  \n19:27\u00a0<pulasthi>\u00a0out \\*our  \n19:28\u00a0<tmortagne>\u00a0has quit  \n19:29\u00a0<pulasthi>\u00a0ok so i'll first look into JPQL and i keep you informed on the progress  \n19:29\u00a0<pulasthi>\u00a0:)  \n19:30\u00a0<cjdelisle>\u00a0great  \n19:31\u00a0<Spazholio>\u00a0has joined #xwiki  \n19:33\u00a0<Spazholio>\u00a0Is there a known issue with the \"Last modifications feed for your watchlist\" on a user's profile not working?  \n19:33\u00a0<Spazholio>\u00a0I'm running the most recent RC.  \n19:33\u00a0<@sdumitriu>\u00a0Spazholio: Nope, none that we know of  \n19:33\u00a0<Spazholio>\u00a0The \"WebRss\" and the \"GlobalBlogRss\" seem to work just fine, but the \"WatchListRss\" tanks out.  \n19:34\u00a0<Spazholio>\u00a0Hmmm...ok. \u00a0Sorry for my ignorance, but what's the best/most efficient way to report it?  \n19:36\u00a0<@sdumitriu>\u00a0jira.xwiki.org  \n19:37\u00a0<Spazholio>\u00a0Thanks.  \n19:37\u00a0<@sdumitriu>\u00a0When you say it's not working, you mean it doesn't display anything at all?  \n19:37\u00a0<@sdumitriu>\u00a0Or that it doesn't report the right things?  \n19:37\u00a0<Spazholio>\u00a0No, it downloads a file with the code, and then the error trace.  \n19:37\u00a0<Spazholio>\u00a0I can pastebin it for you if you like.  \n19:37\u00a0<@sdumitriu>\u00a0Ah, there's a stack trace  \n19:37\u00a0<@sdumitriu>\u00a0Yes, that would be useful  \n19:38\u00a0<Spazholio>\u00a0http://pastebin.com/xnSAQP9M  \n19:38\u00a0<Spazholio>\u00a0That's what gets downloaded from the browser when I try to access that RSS feed.  \n19:40\u00a0<Spazholio>\u00a0And this is what's in my catalina.out:  \n19:40\u00a0<Spazholio>\u00a02011-06-16 13:22:13,221 [https://<DOMAIN>/xwiki/bin/view/XWiki/WatchListRss?xpage=plain&outputSyntax=plain] ERROR o.h.h.PARSER \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- <AST>:0:0: unexpected end of subtree  \n19:40\u00a0<Spazholio>\u00a0Lots of 'em.  \n19:42\u00a0<@sdumitriu>\u00a0Ah, I think I know what the problem is  \n19:42\u00a0<Spazholio>\u00a0You are about to become my new favorite person.  \n19:50\u00a0<@sdumitriu>\u00a0:D  \n19:51\u00a0<Chami1>\u00a0has left #xwiki  \n19:52\u00a0<@sdumitriu>\u00a0Indeed, found the problem, and I am very very surprised that nobody reported this so far  \n19:53\u00a0<@sdumitriu>\u00a0It's something that should fail almost all the times, which means that nobody actually tried to use that RSS feed  \n19:53\u00a0<Spazholio>\u00a0Nice. \u00a0Well, glad to help. \u00a0=)  \n19:53\u00a0<@sdumitriu>\u00a0Spazholio: can you create an issue on jira.xwiki.org ?  \n19:54\u00a0<Spazholio>\u00a0Will do.  \n19:54\u00a0<@sdumitriu>\u00a0Thanks  \n19:54\u00a0<vmassol>\u00a0has quit  \n19:55\u00a0<Spazholio>\u00a0No prob. \u00a0I don't suppose this is something that I can fix right now? \u00a0Probably have to wait for the next release?  \n19:55\u00a0<pulasthi>\u00a0has left #xwiki  \n19:56\u00a0<@sdumitriu>\u00a0The fix is in Java  \n19:56\u00a0<@sdumitriu>\u00a0You can deploy a custom jar, if you want  \n19:56\u00a0<Spazholio>\u00a0Meh. \u00a0I'll just wait for the next RC/stable/whatever.  \n19:56\u00a0<vmassol>\u00a0has joined #xwiki  \n19:57\u00a0<@sdumitriu>\u00a0Well, the next stable is staging right now, just released a few hours ago  \n19:57\u00a0<@sdumitriu>\u00a0So it missed the 3.1 release  \n19:57\u00a0<@sdumitriu>\u00a0If you had reported it yesterday, it would have been included in today's release  \n19:58\u00a0<Spazholio>\u00a0Ahhh, rats.  \n19:59\u00a0<Spazholio>\u00a0I keep meaning to stop procrastinating. \u00a0Maybe tomorrow...  \n20:00\u00a0<Spazholio>\u00a0Which Project should I file this under? \u00a0\"XWiki Enterprise\"?  \n20:01\u00a0<@sdumitriu>\u00a0XWiki platform  \n20:02\u00a0<Spazholio>\u00a0Thanks.  \n20:05\u00a0<abusenius>\u00a0has joined #xwiki  \n20:11\u00a0<Spazholio>\u00a0Submitted: http://jira.xwiki.org/jira/browse/XWIKI-6712  \n20:11\u00a0<Spazholio>\u00a0Thanks for the help.  \n20:11\u00a0<Spazholio>\u00a0Too slow, xwikibot...  \n20:16\u00a0<Spazholio>\u00a0sdumitriu: Actually, I was just asked if we could indeed get that custom jar. \u00a0That offer still on the table?  \n20:17\u00a0<@sdumitriu>\u00a0Yes  \n20:17\u00a0<@sdumitriu>\u00a0Trying the fix now  \n20:17\u00a0<Spazholio>\u00a0Thanks.  \n20:28\u00a0<cjdelisle>\u00a0sburjan`: around?  \n20:55\u00a0<@sdumitriu>\u00a0I wonder what should happen when no documents are watched: empty feed, or feed with changes in all the wiki?  \n20:59\u00a0<@sdumitriu>\u00a0vmassol?  \n21:00\u00a0<vmassol>\u00a0sdumitriu: yes?  \n21:01\u00a0<@sdumitriu>\u00a0See above question  \n21:01\u00a0<vmassol>\u00a0empty feed I'd say  \n21:01\u00a0<vmassol>\u00a0there's already a way to see all the feeds of a wiki  \n21:01\u00a0<@sdumitriu>\u00a0K  \n21:53\u00a0<vmassol>\u00a0has quit  \n22:16\u00a0<jvelociter>\u00a0has quit  \n22:16\u00a0<jvelociter>\u00a0has joined #xwiki  \n22:30\u00a0<jvelociter\\_>\u00a0has joined #xwiki  \n22:32\u00a0<jvelociter>\u00a0has quit  \n22:32\u00a0<jvelociter\\_>\u00a0is now known as <jvelociter>  \n23:23\u00a0<+sburjan`>\u00a0cjdelisle: i'm here now  \n23:24\u00a0<cjdelisle>\u00a0It's a bit late now but perhaps you could find time tomorrow to evaluate the release since it's still in staging and we can recall it if something's horribly erong  \n23:24\u00a0<+sburjan`>\u00a0what do you mean by evaluate ?  \n23:26\u00a0<cjdelisle>\u00a0Well I know you went through the full testing regime beforehand so we can be pretty sure everything is good and since we don't usually do this, every little bit is better than normal  \n23:26\u00a0<cjdelisle>\u00a0maybe just look for the things that were recently problems?  \n23:26\u00a0<+sburjan`>\u00a0okay, no problem  \n23:26\u00a0<cjdelisle>\u00a0Thanks a lot.  \n23:26\u00a0<+sburjan`>\u00a0not still familiar with staging stage of a release :P  \n23:28\u00a0<cjdelisle>\u00a0Me neither, it's a new thing  \n23:28\u00a0<cjdelisle>\u00a0did you see the mail on the list? I have links to each of the binaries  \n23:44\u00a0<+sburjan`>\u00a0didn;t see it  \n23:46\u00a0<cjdelisle>\u00a0re: re: re: re: re: 3.1 Release status  \n23:46\u00a0<cjdelisle>\u00a0^the name of the email thread  \n\n"}