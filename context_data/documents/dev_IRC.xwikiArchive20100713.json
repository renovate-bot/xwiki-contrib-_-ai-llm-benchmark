{"id": "dev:IRC.xwikiArchive20100713", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100713", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nflorinciu left at 00:05 (Quit: Leaving.  \nmflorea left at 00:07 (Quit: Leaving.  \nsdumitriu left at 04:01 (Quit: Leaving.  \nmflorea joined #xwiki at 07:05  \nmflorea left at 08:24 (Quit: Leaving.  \nsburjan joined #xwiki at 08:40  \nasrfel joined #xwiki at 09:12  \nlpereira joined #xwiki at 09:12  \nmflorea joined #xwiki at 09:13  \nkibahop joined #xwiki at 09:16  \nkibahop - (09:16): Moi Mika!  \nkibahop - (09:16): Toivottavasti olet palautunut virke\u00e4n\u00e4 ja lev\u00e4nneen\u00e4 lomalta :-)  \nkibahop - (09:16): Olemme valmiit toteuttamaan aiemmin mainitun ratkaisun prototyypin heti kun vain saamme teilt\u00e4 riitt\u00e4v\u00e4sti vaatimusm\u00e4\u00e4rittely\u00e4. Vaikka vaatimusm\u00e4\u00e4rittelynne ei olisikaan viel\u00e4 valmis, haluaisimme mielell\u00e4mme tietoja niin nopeasti kuin mahdollista jotta voimme muodostaa yleiskuvan tarpeistanne.  \nkibahop - (09:16): Yhteisty\u00f6terveisin,  \nkibahop - (09:16): Antti Kari  \nkibahop - (09:16): Toimitusjohtaja  \nkibahop - (09:16): Tietoteema Oy  \nkibahop - (09:16): Olisko digialle tommonen?  \nmflorea left at 09:35 (Read error: Operation timed out  \nsilviar joined #xwiki at 09:40  \narkub joined #xwiki at 09:43  \nflorinciu joined #xwiki at 09:48  \nmflorea joined #xwiki at 10:01  \nlucaa left at 10:04 (Ping timeout: 252 seconds  \nEnygma` joined #xwiki at 10:23  \nlucaa joined #xwiki at 10:26  \nnickless joined #xwiki at 10:27  \nnickless is now known as abusenius ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nEnygma` - (11:07): setting up  \nCalebJamesDeLisl - (11:29): abusenius: When do you expect to have XWikiX509KeyPair committed?  \nlucaa - (11:29): fyi I reported the issue of friday evening as XAANNOTATIONS-28 on annotations 1.5 and I closed it as a duplicate of XSKINX-39  \nCalebJamesDeLisl - (11:30): XSKINX-39  \nsdumitriu joined #xwiki at 11:49  \nabusenius - (12:10): CalebJamesDeLisl: sorry wasn't looking at irc  \nEnygma` left at 12:10 (Read error: Connection reset by peer  \nEnygma` joined #xwiki at 12:10  \nabusenius - (12:10): I have committed it actually  \nCalebJamesDeLisl - (12:11): I noticed you have added some more apis. crypto.signedscript.\\*  \nabusenius - (12:11): I moved crypto stuff to xwiki-crypto, it was duplicated  \nabusenius - (12:11): I'm not sure if signed script stuff should be in xwiki-crypto  \nabusenius - (12:11): but definitely not in macros  \nCalebJamesDeLisl - (12:11): IMO crypto is create keys sign/encrypt verify/decrypt.  \nabusenius - (12:12): well, signed scripts do it too, but specialized  \nCalebJamesDeLisl - (12:12): specialized --> use case.  \nabusenius - (12:13): yea, its probably better to have a separate component for that  \nCalebJamesDeLisl - (12:13): Sorry i can't off the top of my head think of where it should go.  \nabusenius - (12:14): anyway, question, since the crypto component signs text, in which encoding is it? :)  \nCalebJamesDeLisl - (12:14): The encoding specified by the configuration.  \nabusenius - (12:15): I was wondering yesterday, because the crypto api usually takes byte[] and we need to convert strings every time  \nabusenius - (12:15): wiki configuration?  \nCalebJamesDeLisl - (12:15): Let me look...  \nsdumitriu - (12:20): It should work with UTF-8  \nabusenius - (12:20): even if the wiki is in something else?  \nsdumitriu - (12:20): The wiki encoding should be used for displayed strings, not for internal data  \nabusenius - (12:20): so the db is always utf-8?  \nsdumitriu - (12:20): No  \nCalebJamesDeLisl - (12:21): Yea it's only defined in xwiki.cfg so +1.  \nsdumitriu - (12:21): Unfortunately The DB must also be in the wiki encoding  \nabusenius - (12:22): this API is supposed to be used in velocity, so if the user posts something and we take $request.text, it will also be wiki encoding, right?  \nCalebJamesDeLisl - (12:22): Hang on, String is \\_always\\_ UTF-16 all we care is that sign and verify use the same encoding.  \nsdumitriu - (12:22): It's a string, strings don't have an encoding in Java  \nabusenius - (12:23): so it converts everything internally, ok, then its easy  \nCalebJamesDeLisl - (12:23): String has no encoding?  \nsdumitriu - (12:23): It has, UTF-16  \nsdumitriu - (12:23): But it's fixed  \nsdumitriu - (12:24): I mean it doesn't have a configurable encoding  \nCalebJamesDeLisl - (12:24): So all we need to do is use an encoding which is in every java implementation, compatable with UTF-16 and the same for sign and verify. UTF-8 it is.  \nabusenius - (12:29): ok, utf-8 for the masses  \nsdumitriu - (12:31): Make sure you comment it, otherwise Vincent will ask why UTF-8  \nCalebJamesDeLisl - (12:31): :)  \nCalebJamesDeLisl - (12:38): I just made KeyService, I'm going to move PKCS7CryptoService to SignatureService. ok?  \nabusenius - (12:44): ok  \nCalebJamesDeLisl - (12:47): I'm not making these things components at the moment which sort of breaks your base64 converter. Anyway I don't like it because it can't handle a stream, how do you feel about dropping it for now?  \nCalebJamesDeLisl - (12:54): XWikiX509KeyPair will have to be moved to DefaultXWikiX509KeyPair and there will need to be an interface \"XWikiX509KeyPair\".  \nCalebJamesDeLisl - (12:55): Also a comment in XWikiX509KeyPair would be nice explaining why it can't be an interface.  \nCalebJamesDeLisl - (12:56): \\*XWikiX509Certificate  \nkibahop left #xwiki at 13:51  \nabusenius - (13:52): why not adding a stream to the converter then?  \nabusenius - (13:52): although I don't really see why you need it, it is not like you are about to convert 100-s of MB  \nabusenius - (13:53): and the apache-commons Base64 is nice IMO, because it can directly convert string <-> byte[]  \nabusenius - (14:01): (CalebJamesDeLisl)  \nabusenius - (14:04): why do you want to make XWikiX509KeyPair an interface?  \nsdumitriu left at 14:29 (Ping timeout: 260 seconds  \nsdumitriu joined #xwiki at 14:30  \nsdumitriu left at 14:37 (Ping timeout: 240 seconds  \nsdumitriu joined #xwiki at 14:38  \nsburjan left at 14:47 (Quit: Ex-Chat  \nCalebJamesDeLisl - (14:49): abusenius: (was gone getting coffee...) It's good practice to always accept and return an interface.  \nCalebJamesDeLisl - (14:51): Re stream converter: attachments are exported in base-64 so there is a real use case. The problem is all of the internal classes will have to be components.  \nCalebJamesDeLisl - (14:51): (all of the internal crypto classes such as KeyService, SignatureService, CypherService)  \nCalebJamesDeLisl - (14:53): Also I am against adding a dependency to apache-commons in crypto. I am trying to keep crypto as simple as possible.  \nCalebJamesDeLisl - (14:54): And converting String <-> byte[] is dangerous because you have no control over the character set used to convert.  \nEnygma`1 joined #xwiki at 14:56  \nEnygma` left at 14:57 (Quit: Leaving.  \nabusenius - (15:00): it is base64 encoded string <-> byte which is fine  \nabusenius - (15:01): and it really does not change the complexity if we use one or another implementation of Base64  \nabusenius - (15:01): but I see the point with attachments  \nCalebJamesDeLisl - (15:02): If we use new String(Base64.decode(bytes), \"US-ASCII\") then it will always be US-ASCII.  \nCalebJamesDeLisl - (15:02): the only danger is that it's encoded in one charset and decoded in another.  \nabusenius - (15:03): why not use utf-8 then?  \nabusenius - (15:03): the string will be the same  \nCalebJamesDeLisl - (15:03): Not if the default charset is changed.  \nabusenius - (15:03): and we avoid possible problems on decoding  \nCalebJamesDeLisl - (15:04): You can change the java default character set.  \nabusenius - (15:04): but base64 really uses only ascii characters  \nCalebJamesDeLisl - (15:04): Yes so it is \\_almost\\_ never a problem.  \nabusenius - (15:04): how can changing the default charset hurt us if we explicitely say utf-8?  \nabusenius - (15:05): (for decoding/encoding that is)  \nCalebJamesDeLisl - (15:05): If you explicitly say UTF-8 then it's fine. but I don't think apache is doing that.  \nshab\\_ joined #xwiki at 15:05  \nabusenius - (15:06): it seems they do  \nshab\\_ - (15:06): hello. how can i script different views in a class sheet for viewing and editing? \u00a0something like: \u00a0if(is\\_editing()) show\\_data\\_this\\_way() else show\\_another\\_way()  \nabusenius - (15:06): and I would even say they know what their doing better than we do :)  \nabusenius - (15:08): shab\\_: #if(\"$context.action\" == \"edit\") (in velocity) AFAIK  \nshab\\_ - (15:09): thats quite possible, just found it in the api  \nshab\\_ - (15:09): will try, thanks man  \nCalebJamesDeLisl - (15:09): $context.getAction() == 'inline'  \nabusenius - (15:10): from apache commons comment:  \nabusenius - (15:10): Since this class operates directly on byte streams, and not character streams, it is hard-coded to only encode/decode  \nabusenius - (15:10): \u00a0\\* character encodings which are compatible with the lower 127 ASCII chart (ISO-8859-1, Windows-1252, UTF-8, etc).  \nCalebJamesDeLisl - (15:10): Yes I just looked at the code, indeed it does use utf8  \nlucaa - (15:10): guys, I would need to get the hostname of a running wiki from velocity code  \nlucaa - (15:10): is there a function for that?  \nlucaa - (15:11): for the incubator, for example, I would like to find \"incubator.myxwiki.org\"  \nCalebJamesDeLisl - (15:11): You could get it from the httpServletRequest.  \nshab\\_ - (15:11): worked with the first solution  \nshab\\_ - (15:11): thanks!  \nlucaa - (15:11): lemme think if I have such  \nlucaa - (15:11): I should  \nCalebJamesDeLisl - (15:13): abusenius: Given that apache commons base64 seems to be safe, my only remaining gripe is that it increases the complexity of crypto and security depends on simplicity.  \nabusenius - (15:15): how does it increase complexity if without it we would need to convert string to byte[] correctly by ourselves?  \nabusenius - (15:16): and speaking of complexity, we don't need base64 stream support for crypto  \nabusenius - (15:16): attachments need it, but it is another story  \nCalebJamesDeLisl - (15:16): We can look at the code and know that no matter how badly the apache people messed up, it won't affect crypto.  \nabusenius - (15:17): I'm sure we will mess up, and apache people have tested their stuff years before  \nrfelber joined #xwiki at 15:17  \nabusenius - (15:18): I don't like to reinvent the wheel  \nCalebJamesDeLisl - (15:18): XWIKI-3707  \nCalebJamesDeLisl - (15:19): A real example of a problem from an apache mistake.  \nshab\\_ - (15:19): one last question. i made up a class and one attribute is source code. i want to display this with highlighting and the code-macro, but he always inserts the html tats like <p> into the codebox  \nabusenius - (15:19): that has nothing to do with base64  \nCalebJamesDeLisl - (15:20): Except it proves that apache is just people too.  \nabusenius - (15:20): sure, but we don't know how badly is bouncy castle written neither  \nabusenius - (15:21): do you want to reiplement RSA too?  \nabusenius - (15:21): just to be sure those other people didn't mess it up? :)  \nCalebJamesDeLisl - (15:21): I agree. Crypto depends on Java and BouncyCastle. Should it also depend on Apache?  \nabusenius - (15:21): why not?  \nrfelber left #xwiki at 15:21  \nabusenius - (15:22): unless you prove apache base64 implementation wrong I assume it is as good as bc  \nCalebJamesDeLisl - (15:22): increases the chance of a problem in a dependency by 30%  \nabusenius - (15:22): you can't say that, we use 2 methods from apache  \nazraelHH joined #xwiki at 15:22  \nCalebJamesDeLisl - (15:23): \"unless you prove apache base64 implementation wrong\" That's not how security auditing works.  \nabusenius - (15:23): base64 is not security, it is just a way to represent data  \nCalebJamesDeLisl - (15:24): Oh no?  \nCalebJamesDeLisl - (15:24): What happens if when you hand it your data, it returns my cert instead of the cert for your user page?  \nabusenius - (15:24): and since nobody did a security audit on both of them, what is the difference?  \nCalebJamesDeLisl - (15:25): BC is security software, I imagine they hold themselves to a higher standard than Apache.  \nabusenius - (15:25): maybe  \nabusenius - (15:26): but the choice is: BC + our crappy code vs. apache  \nCalebJamesDeLisl - (15:26): our crappy code?  \nabusenius - (15:26): (string conversion)  \nCalebJamesDeLisl - (15:26): new String(Base64.encode(this.certificate.getEncoded()), this.base64Charset)  \nCalebJamesDeLisl - (15:26): That isn't that bad.  \nshab\\_ - (15:28): is there a possibility to retreive a property of a class without the html tags $doc.display() delivers?  \nCalebJamesDeLisl - (15:28): yup.  \nshab\\_ - (15:28): yay  \nCalebJamesDeLisl - (15:29): $doc.getProperty('myProp').getValue(0  \nCalebJamesDeLisl - (15:29): )  \nCalebJamesDeLisl - (15:29): without the 0 ;)  \nabusenius - (15:29): hm, what do we actually use for base64 encoding everywhere else?  \nCalebJamesDeLisl - (15:30): Everywhere else meaning the rest of the core?  \nabusenius - (15:30): yes, e.g. for attachments  \nCalebJamesDeLisl - (15:31): I don't know. It must be a stream converter.  \nabusenius - (15:32): seems to be Base64OutputStream  \nabusenius - (15:32): apache  \nshab\\_ - (15:32): CalebJamesDeLisl: there is no getProperty() function in $doc. \u00a0\u00a0(http://maven.xwiki.org/site/xwiki-core-parent/xwiki-core/apidocs/com/xpn/xwiki/api/Document.html)  \nCalebJamesDeLisl - (15:33): Ahh sorry. \u00a0\u00a0$doc.getObject('myObj').getProperty('prop').getValue()  \nCalebJamesDeLisl - (15:34): Keep in mind that gives you exactly what's stored for the value, if the value has wiki code in it, it will parse if you display it.  \nshab\\_ - (15:35): even in a {{code}} tag macro?  \nCalebJamesDeLisl - (15:35): {{code}} will work pretty well, unless your content has \"{{/code}}\" in it ;)  \nshab\\_ - (15:36): wont happen i gues  \nshab\\_ - (15:36): s  \nCalebJamesDeLisl - (15:37): If you're obsessive compulsive you can say .replaceAll('{{/', '{ {/')  \nazraelHH - (15:38): hi there =)  \nazraelHH - (15:38): can anyone help with http://code.xwiki.org/xwiki/bin/view/Modules/RenderingModule ?  \nazraelHH - (15:40): i am trying to itegrate the xwiki renderer into a webapp  \nCalebJamesDeLisl - (15:43): Throw out your specific problem and we'll see if anyone knows the answer.  \nazraelHH - (15:44): thx ;)  \nazraelHH - (15:45): i ran into a problem with the initialization of the EmbeddableComponentManager  \nCalebJamesDeLisl - (15:45): Somehow I thought that was it.  \nazraelHH - (15:45): always get the exeption java.lang.RuntimeException: Failed to dynamically load components with annotationsjava.lang.  \nazraelHH - (15:45): boeserWicht - (14:36): RuntimeException: Failed to dynamically load components with annotations  \nazraelHH - (15:47): it seems that the componentManager couldnt load all components  \nCalebJamesDeLisl - (15:47): java.lang.boeserWicht?  \nazraelHH - (15:47): sorry, just a copy\\paste error  \nazraelHH - (15:48): RuntimeException: Failed to dynamically load components with annotations  \nCalebJamesDeLisl - (15:48): My guess is that there is a missing dependency.  \nabusenius - (15:49): CalebJamesDeLisl: if we use bouncycastle Base64, we need some utility class to do the conversion  \nabusenius - (15:49): it is not nice to have the codec everywhere, and it is too easy to forget the conversion when using decode()  \nabusenius - (15:49): (it is overloaded for string)  \nazraelHH - (15:49): and before that i get many warnings like [WARN ] [2010-07-13 13:30:05] (component.annotation.ComponentAnnotationLoader) Component [org.xwiki.rendering.internal.m  \nazraelHH - (15:49): acro.DefaultMacroCategoryManager] is being overwritten by component [org.xwiki.rendering.internal.macro.DefaultMacroCate  \nazraelHH - (15:49): goryManager] for Role/Hint [role = [org.xwiki.rendering.macro.MacroCategoryManager] hint = [default]]. It will not be po  \nazraelHH - (15:49): ssible to look it up.  \nCalebJamesDeLisl - (15:50): abusenius: Ok. What's a pain though is some of that stuff is not components. Maybe a class with a static method?  \nazraelHH - (15:51): do you any have idea wich dependencz could be missing?  \nabusenius - (15:51): CalebJamesDeLisl: yes, probably best to use static methods  \nabusenius - (15:51): azraelHH: seems that you have duplicated jars  \nCalebJamesDeLisl - (15:51): azraelHH: Have you tried unpacking the xwiki war file and setting the java classpath to ...../WEB-INF/lib?  \nazraelHH - (15:53): no i just followed the instruction for installing the xwiki renderer in standalone mode  \nCalebJamesDeLisl - (15:53): I'd give that a shot and if it starts working then you're missing a dependency.  \nazraelHH - (15:53): this works fine for a standalone app but not for a tomcat web app  \nCalebJamesDeLisl - (15:54): hmm, what abusenius said then.  \nazraelHH - (15:54): ok i will try that, thx  \nshab\\_ left at 16:01 (Quit: Page closed  \nabusenius - (16:10): CalebJamesDeLisl: org.xwiki.crypto.util.Base64?  \nCalebJamesDeLisl - (16:10): .internal.  \nCalebJamesDeLisl - (16:10): I'd say org.xwiki.crypto.internal.Base64  \nabusenius - (16:11): ok, right, it's not used anywhere else  \nEnygma`1 left at 16:12 (Ping timeout: 240 seconds  \nEnygma` joined #xwiki at 16:18  \nCalebJamesDeLisl - (16:25): \"FIXME I don't really need the certificate here, fingerprint would suffice\" What's this?  \nabusenius - (16:28): it is a bit ugly to need to use the certificate  \nabusenius - (16:29): I just need to know if it is a known certificate or not  \nabusenius - (16:30): and since the method returns XWikix509cert I need to convert  \nabusenius - (16:30): and do instanceof and hope for the best  \nabusenius - (16:31): I don't like it  \nCalebJamesDeLisl - (16:31): I see. I think we can use X509Store and be guarenteed an X509.  \nabusenius - (16:31): I'm not sure this will work, this certificate comes from the signature  \nCalebJamesDeLisl - (16:32): I want to output the cert because there may be any number of pieces of info to read from the cert.  \nabusenius - (16:32): maybe it is better to return Certificate?  \nCalebJamesDeLisl - (16:32): What I'm thinking right now is should we support multiple signatures?  \nabusenius - (16:33): I don't know, do we need it somewhere?  \nabusenius - (16:33): foaf+ssl or something like this?  \nCalebJamesDeLisl - (16:33): no  \nCalebJamesDeLisl - (16:34): However if I can figure out how to take 2 signatures on a single piece of text and merge them, then there is a definite use case.  \nCalebJamesDeLisl - (16:35): That should be possible right? it's the same text so it should just be a matter of tinkering with the asn1  \nabusenius - (16:35): the CMS-something class has an addSigner() method  \nabusenius - (16:35): it might do what you want  \nCalebJamesDeLisl - (16:36): The problem is ff knows nothing about adding a signer so it will output it's own full signature.  \nabusenius - (16:36): why do you need more than 1 signature?  \nCalebJamesDeLisl - (16:37): Not sure.... There still might be a use case :)  \nabusenius - (16:37): :D  \nabusenius - (16:37): better leave it for later then ;)  \nCalebJamesDeLisl - (16:37): Thinking more about multiple wikis and snippets being passed around.  \nabusenius - (16:38): I think this is easier to solve having a certificate chain  \nCalebJamesDeLisl - (16:39): Agreed about making the merge function a \"for later\" thing but I don't want to change the behavior of a function once we go to production.  \nabusenius - (16:39): but this is a quite hypothetical problem, maybe the users don't even want to do such things  \nCalebJamesDeLisl - (16:40): Imagine the hypothetical things which went on designing X509, they knew there was no second chance.  \nabusenius - (16:40): yea, thats why they made 3 versions :)  \nCalebJamesDeLisl - (16:41): \\*Except they should have allowed for a CA which can grant certs only for a subnet.  \nCalebJamesDeLisl - (16:43): haha, we programmers have ruined google. regular people can't search for string, or even bouncycastles.  \nabusenius - (16:44): :D  \nCalebJamesDeLisl - (16:46): CMSSignedData#getCertificates( \u00a0\u00a0returns X509Store, that looks like what we want.  \nabusenius - (16:49): ah, thats better  \nCalebJamesDeLisl - (16:51): When do you expect to commit Base64?  \nCalebJamesDeLisl - (16:52): Another issue is Hex for the fingerprint. Does out fingerprint implementation need to be compatible (can we use b64)?  \npenyaskito left at 16:52 (Read error: Connection reset by peer  \npenyaskito joined #xwiki at 16:52  \nCalebJamesDeLisl - (16:52): Another possibility is to just use BigInteger.toString(16);  \nabusenius - (16:53): it does nto have to be hex, it's just for convenience if you want to compare the generated string to what other programs show  \nabusenius - (16:53): BigInteger should be fine  \nabusenius - (16:54): just committed Base64  \nCalebJamesDeLisl - (16:56): cool. Starting to try building. once we can build we can get some basic tests going.  \nazraelHH - (16:57): great !!! thx very much for help / duplicated jars was the problem  \nazraelHH - (16:57): now its working :)  \nCalebJamesDeLisl - (16:57): Cool :)  \nCalebJamesDeLisl - (16:58): Base64 is final? Isn't it not supposed to be instantiated?  \nCalebJamesDeLisl - (16:59): I've seen java.lang stuff that should never be instantiated declared abstract.  \nCalebJamesDeLisl - (16:59): I wonder if \"abstract final\" is legal.  \nabusenius - (17:00): indeed, abstract is probably better  \nabusenius - (17:01): abstract final doesn't work  \nabusenius - (17:01): we can add private default constructor  \nCalebJamesDeLisl - (17:01): \"abstract final\" --> \"I hate maintenance programmers\"  \nabusenius - (17:01): and make it final, then nobody will be able to do anythign with it :)  \nCalebJamesDeLisl - (17:02): haha  \nsilviar left at 17:02 (Quit: Leaving.  \nCalebJamesDeLisl - (17:04): Not true. ReflectionFactory.newConstructorForSerialization  \nabusenius - (17:04): thats a dirty trick :)  \nCalebJamesDeLisl - (17:05): Yea, the compiler even says so :)  \nabusenius - (17:06): hm, we still need to convert string to byte array in a few places  \nlpereira left at 17:06 (Quit: Leaving.  \nevalica joined #xwiki at 17:06  \nabusenius - (17:06): PEM encoded certificate for example  \nCalebJamesDeLisl - (17:07): I'd say that should be in Base64, maybe it needs a rename.  \nCalebJamesDeLisl - (17:07): ConversionUtil?  \nabusenius - (17:07): maybe Converter?  \nabusenius - (17:08): Converter.toBase64(data)  \nCalebJamesDeLisl - (17:08): I was thinking Util or Utils since it's static.  \nCalebJamesDeLisl - (17:08): Linguistically Convert seems the best.  \nasrfel left at 17:08 (Quit: Leaving.  \nCalebJamesDeLisl - (17:09): Convert.toBase64String(bytes)  \nabusenius - (17:09): yes, or Convert.stringToBytes(str)  \nCalebJamesDeLisl - (17:09): I'm sold.  \nabusenius - (17:10): if somebody complains, renaming is easy  \nCalebJamesDeLisl - (17:10): Yes, it's all internal  \nabusenius - (17:10): right  \nabusenius - (17:10): renaming  \nKermitTheFragger joined #xwiki at 17:11  \nEnygma` left at 17:13 (Ping timeout: 276 seconds  \nflorinciu left at 17:16 (Quit: Leaving.  \nCalebJamesDeLisl - (17:17): \\*another use case. Every time somebody edits a page, a signed email goes out and that way one wiki can track another.  \njvelo - (17:17): hey CalebJamesDeLisl  \nCalebJamesDeLisl - (17:18): hi jvelo  \njvelo - (17:18): quick question. Does the revamped register form still supports XWiki.XWikiPreferences \"confirmation email\" property ?  \nCalebJamesDeLisl - (17:19): Yes if I remember correctly it does.  \njvelo - (17:20): OK. maybe I'm missing something then  \nCalebJamesDeLisl - (17:20): just a second, checking (it uses internal API so I didn't write it.)  \njvelo - (17:22): can't find where XWiki#sendConfirmationMessage is called  \njvelo - (17:22): sorry, I mean #sendConfirmationMail  \nCalebJamesDeLisl - (17:22): #if($xwiki.getXWikiPreferenceAsInt('use\\_email\\_verification', 0) == 1)  \njvelo - (17:23): hmm that's verification, not confirmation  \njvelo - (17:23): verification => \"please validate your account with this link blabla\"  \njvelo - (17:23): confirmation => \"your account has been successfully activated, blabla\"  \njvelo - (17:23): If you go in the register section in the admin, there are 2 textareas  \nCalebJamesDeLisl - (17:24): I see. Since it cloned RegisterAction I would guess yes, looking again.  \njvelo - (17:24): I'm talking about the second one Confirmation e-Mail Content  \njvelo - (17:24): k  \nlucaa - (17:25): hi jvelo  \nlucaa - (17:25): I am looking at the same thing right now  \njvelo - (17:25): hi lucaa  \njvelo - (17:25): ah  \njvelo - (17:25): :)  \nlucaa - (17:25): on my thing, it's validateUser() called from the XWiki.AccountValidation  \nlucaa - (17:25): I think  \nlucaa - (17:25): still investigating  \nlucaa - (17:25): my pb is that I get 2 confirmation mails  \nlucaa - (17:25): and i would really love to get only one  \njvelo - (17:28): hu  \njvelo - (17:28): I get none  \njvelo - (17:28): (but I don't use validation\\_  \njvelo - (17:28): )  \nlucaa - (17:28): but do you have the validateUser called in XWiki.AccountValidation?  \nlucaa - (17:28): ah  \nlucaa - (17:28): I see  \nlucaa - (17:28): well, that's where it's normally sent, it seems  \nCalebJamesDeLisl - (17:28): Yes that is what c.x.x.XWiki seems to show, registration calls validation and when you are validated only then do you get the confirmation mail.  \nlucaa - (17:28): in $xwiki.validateUser  \nCalebJamesDeLisl - (17:30): BTW: jvelo, we were talking about making it easier to edit an application by breaking down the xml file, it's done see: xwiki-dirtree in sandbox.  \njvelo - (17:31): yup, I've seen the commits  \njvelo - (17:31): did not had the time to test yet, though  \njvelo - (17:31): looks cool  \nCalebJamesDeLisl - (17:31): It's easier but I want to go a step further and creat a directory tree from a java object.  \njvelo - (17:33): CalebJamesDeLisl, lucaa I see. The preferences UI is a bit misleading then. What I can do is call #sendConfirmationMail in a \"doAfterRegistration\" field configuration  \nCalebJamesDeLisl - (17:34): That sounds workable. doAfterRegistration turns out to be one of the better features. It's hard to know what will be beforehand.  \njvelo - (17:39): yes, doAfterRegistration is way useful  \nflorinciu joined #xwiki at 17:58  \nCalebJamesDeLisl - (18:01): grrr another dependency.  \nevalica left at 18:10 (Quit: Leaving.  \nabusenius - (18:10): only 42 checkstyle errors :)  \nCalebJamesDeLisl - (18:13): That's pretty good. they must all be me (the luddite who refuses to use an ide)  \nabusenius - (18:15): is there any particular reason why KeyMaker.\\* throw about 6 exceptions each?  \nCalebJamesDeLisl - (18:16): Because that's what BC throws.  \nCalebJamesDeLisl - (18:17): I'll take KeyMaker, I also want to make sure all of those Exceptions are really thrown everywhere.  \nabusenius - (18:17): lets' throw GeneralSecurityException, its a superclass of all of them  \nabusenius - (18:18): I don't see why it is so important to differentiate the 6 types of errors  \nabusenius - (18:19): (and besides, there is a fanout violation that can be fixed by removing all that exceptions)  \nCalebJamesDeLisl - (18:20): I know it will fix the fanout, i was hoping to find \\_one\\_ more class to eliminate and solve that.  \nCalebJamesDeLisl - (18:21): I wanted to throw everything because it's documentative, and it's the way BC documents.  \nsdumitriu - (18:21): Hey abusenius, CalebJamesDeLisl  \nCalebJamesDeLisl - (18:21): hi  \nazraelHH left at 18:21 (Quit: Verlassend  \nabusenius - (18:21): hi  \nsdumitriu - (18:22): I see you're very active  \nsdumitriu - (18:22): I didn't look at the results yet  \nsdumitriu - (18:22): When do you think you'll have something ready for the platform?  \nCalebJamesDeLisl - (18:22): No tests yes == no results yet :)  \nabusenius - (18:22): CalebJamesDeLisl, it is important for BC because it is generic, but in our case most of the time we don't care why exactly the sign failed (IMO)  \nsdumitriu - (18:23): abusenius: Yep, our APIs shouldn't throw implementation errors  \nCalebJamesDeLisl - (18:24): sdumitriu: here's the api https://svn.xwiki.org/svnroot/xwiki/contrib/sandbox/xwiki-crypto/src/main/java/org/xwiki/crypto/CryptoService.java  \nabusenius - (18:24): sdumitriu: I think if we proceed like that, it will do something useful in a week or so  \nabusenius - (18:24): and you are always welcomed to discuss :)  \nKermitTheFragger left at 18:25 (Quit: Leaving  \nabusenius - (18:25): CalebJamesDeLisl, are you ok with throwing GeneralSecurityException? it fixed about 20 checkstyle errors :)  \nsdumitriu - (18:26): Looking at the API now  \nCalebJamesDeLisl - (18:26): The way I feel about KeyMaker is it's buried 3 levels deep, it certainly isn't api, It doesn't touch anything except java.lang, java.math, java.security, and bc. It should match BC's style as much as possible.  \nsdumitriu - (18:26): Are you sure daysOfValidity should be a mandatory parameter?  \nCalebJamesDeLisl - (18:27): Default a year or forever?  \nsdumitriu - (18:27): Default a year  \nsdumitriu - (18:27): Forever is not a good practice when it comes to keys  \nlucaa left at 18:27 (Ping timeout: 276 seconds  \nabusenius - (18:27): there should be a way to specify validity  \nsdumitriu - (18:27): The problem is that scripts will need to be re-signed  \nsdumitriu - (18:28): Yes, but the APIs should also have a default period  \nCalebJamesDeLisl - (18:28): (agreed) \u00a0I don't think it is too onerous to make a script author say \", 365\" if they want to make a 1 year key.  \nsdumitriu - (18:28): Personally I don't like duplicate methods, nor magic values (\"pass -1 to use the default X period\")  \nsdumitriu - (18:29): So it's not a clear decision for me either  \nCalebJamesDeLisl - (18:29): no no no, no \"magic values\"! :)  \nsdumitriu - (18:29): Just mark this as an observation, and make the decision yourself :)  \nCalebJamesDeLisl - (18:30): I think it's ok as is since it will be a script author's decision and it is days not milliseconds or something ridiculous.  \nsdumitriu - (18:30): K  \nsdumitriu - (18:30): verifyText  \nsdumitriu - (18:30): Returns null on error  \nsdumitriu - (18:31): Should we distinguish between expired certificate, non-existing certificate, invalid signature?  \nCalebJamesDeLisl - (18:31): not an error but when it fails to verify.  \nabusenius - (18:31): hm, I think it actually throws on any error  \nCalebJamesDeLisl - (18:32): My thinking has been that a failure is not an error.  \nabusenius - (18:32): ah, right, it returns null  \nabusenius - (18:32): it should IMO  \nCalebJamesDeLisl - (18:33): An error is something worthy of runing a velocity page, a failure is just telling you something.  \nCalebJamesDeLisl - (18:33): \\*ruining  \nsdumitriu - (18:33): Keep in mind that there's no try in velocity  \nsdumitriu - (18:33): (although we could implement one)  \nCalebJamesDeLisl - (18:34): If there was anything velocity needed it would be try catch.  \nabusenius - (18:34): but why do you return null only when the verification fails, but not e.g. when the certificate expired?  \nsdumitriu - (18:34): OK, from an external user's pov, the API looks good and easy  \nCalebJamesDeLisl - (18:34): Because you can return an expired cert and leave it to the implementation to test the cert.  \nabusenius - (18:35): but a signature signed with an expired cert \\*is\\* invalid  \nabusenius - (18:35): IMO anything other than valid is invalid and it should give no other choice  \nsdumitriu - (18:36): It's not good to \"let the caller do some work\", since it relies on the fact that the caller had the time to read the documentation and do the work  \nabusenius - (18:36): either always return null on all errors r always throw  \nabusenius - (18:36): \\*or  \nabusenius - (18:37): maybe we can return null in velocity service and throw in java  \nsdumitriu - (18:37): Should we abstract the certificate type?  \nsdumitriu - (18:37): Are you sure X509 is here to stay for the following 10 years?  \nabusenius - (18:37): you missed the long discussion about it :)  \nabusenius - (18:38): the problem is that we need some of the extensions that are currently only in x509  \nabusenius - (18:38): (like name)  \nCalebJamesDeLisl - (18:38): As does BC for most of it's work.  \nabusenius - (18:38): and some of the crypto methods require x509  \nabusenius - (18:38): so making it generic seems hard  \nsdumitriu - (18:38): K then  \nsdumitriu - (18:39): It's good the way it is  \nCalebJamesDeLisl - (18:39): X509 may not last 10 years but in 10 years we may have quantum computing so no RSA no DSA no ECC etc...  \nabusenius - (18:39): and flying cars!  \nsdumitriu - (18:40): Yep, flying cars should be here by 2015, I've seen it in Back to the Future II  \nabusenius - (18:41): btw, that professor from back to future arrived in our time a week ago :)  \nCalebJamesDeLisl - (18:42): Yea right, like they'd really manufacture the gravity engine.  \nabusenius - (18:51): only checkstyle errors in Keymaker left  \nCalebJamesDeLisl - (18:52): I just got rid of all those.  \nCalebJamesDeLisl - (18:53): But I can't have random serial numbers without a fanout violation. We'll see what happens if they're all 0  \nCalebJamesDeLisl - (18:54): Hmm better, use the system time.  \nabusenius - (18:54): can you remove something else?  \nCalebJamesDeLisl - (18:56): definitely not :)  \nCalebJamesDeLisl - (18:56): well there are my precious exceptions.  \nabusenius - (18:56): can you at least reduce their number a bit? :)  \nnpm left at 18:57 (Remote host closed the connection  \nabusenius - (18:57): NoSuchProviderException NoSuchAlgorithmException CertificateEncodingException are good candidates  \nCalebJamesDeLisl - (18:59): I did get rid of one because checkstyle told me it was a subclass of another which I was throwing.  \nCalebJamesDeLisl - (19:00): committed. And now it builds.  \nnpm joined #xwiki at 19:02  \nabusenius - (19:02): NoSuchProviderException is quite useles  \nabusenius - (19:02): it means that bouncycastle is not there  \nabusenius - (19:02): great, nothing else works  \nabusenius - (19:03): and if you want to distinguish 6 exceptions, at least document the difference :)  \nCalebJamesDeLisl - (19:04): I suppose I could improve the documentation, I just put where it was thrown from.  \nCalebJamesDeLisl - (19:04): I think I might just remove CryptoScriptService and make DefaultCryptoService implement ScriptService. Make any sense?  \nabusenius - (19:05): no, it can make problems afaik  \nabusenius - (19:05): (I had at least with csrf service)  \nnpm left at 19:06 (Remote host closed the connection  \nCalebJamesDeLisl - (19:06): What problems?  \nabusenius - (19:07): because there will be 2 default implementations around, there will be 2 different instances of crypto service, one for $services.crypto, one if you call it from java or groovy  \nabusenius - (19:07): if we don't share anything its ok  \nCalebJamesDeLisl - (19:08): really? That makes no sense. Is there a seperate implementation for initializable?  \nCalebJamesDeLisl - (19:08): I guess I have to test this.  \nabusenius - (19:08): no, it is about having multiple @ComponentRole  \nabusenius - (19:09): tmortagne told me it's better to have 2 classes  \nabusenius - (19:10): try to make a singleton component, and use it from velocity and groovy, you'll have 2 instances  \narkub left at 19:10 (Ping timeout: 240 seconds  \nCalebJamesDeLisl - (19:11): another wrapper. I still want to test this.  \nabusenius - (19:12): ok, need to go home, bbl  \nnpm joined #xwiki at 19:12  \nabusenius left at 19:17 (Ping timeout: 276 seconds  \nmflorea left at 19:19 (Quit: Leaving.  \nlucaa joined #xwiki at 19:42  \ntmortagne joined #xwiki at 20:17  \ntmortagne left #xwiki at 20:17  \nabusenius joined #xwiki at 20:18  \nproyvind left at 20:19 (Ping timeout: 276 seconds  \nsdumitriu - (20:24): abusenius: I'm running out of patches, do you have something else, or are you concentrating on bigger stuff?  \nabusenius - (20:26): sdumitriu: cool :) I was concentrating on the bigger stuff lately  \nabusenius - (20:27): if you don't know what to do, you can take a look at escaping test suite or csrf-token component  \nabusenius - (20:28): would be great to have some feedback on them :)  \nsdumitriu - (20:28): contrib/sandbox/xwiki-csrftoken/  \nabusenius - (20:28): yes  \nabusenius - (20:29): and contrib/sandbox/xwiki-enterprise-test-escaping/  \nmflorea joined #xwiki at 21:02  \nxipe joined #xwiki at 22:12  \nflorinciu left at 22:36 (Read error: Connection reset by peer  \nmflorea left at 22:54 (Quit: Leaving.  \nsdumitriu left at 23:47 (Ping timeout: 260 seconds  \n  \n{{/code}}\n"}