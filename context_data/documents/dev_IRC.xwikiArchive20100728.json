{"id": "dev:IRC.xwikiArchive20100728", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100728", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nlpereira left at 00:17 (Quit: Leaving.  \nlpereira joined #xwiki at 00:17  \nlpereira left at 00:22 (Quit: Leaving.  \nabusenius left at 01:05 (Quit: Konversation terminated!  \nDragosRusu left at 03:13 (Ping timeout: 276 seconds  \nSvenDowideit left at 04:32 (Excess Flood  \nSvenDowideit joined #xwiki at 04:34  \nmflorea joined #xwiki at 06:22  \nmflorea left at 06:28 (Quit: Leaving.  \nmflorea joined #xwiki at 06:58  \nmarta1 joined #xwiki at 07:11  \nmflorea left at 07:17 (Quit: Leaving.  \nmarta1 left at 07:43 (Read error: Operation timed out  \nvmassol joined #xwiki at 07:47  \nvmassol left at 07:51 (Client Quit  \nflorinciu left at 08:00 (Read error: Connection reset by peer  \nasrfel joined #xwiki at 08:26  \nkibahop joined #xwiki at 08:27  \nasrfel left at 08:27 (Client Quit  \nsdumitriu joined #xwiki at 08:43  \nmflorea joined #xwiki at 08:44  \nflorinciu joined #xwiki at 08:55  \nvmassol joined #xwiki at 09:05  \nlucaa joined #xwiki at 09:05  \nvmassol left at 09:07 (Client Quit  \njvdrean joined #xwiki at 09:11  \nmarta1 joined #xwiki at 09:11  \nlucaa left at 09:13 (Read error: Connection reset by peer  \nlucaa joined #xwiki at 09:13  \nvmassol joined #xwiki at 09:15  \njvelo joined #xwiki at 09:26  \narkub joined #xwiki at 09:46  \nabusenius joined #xwiki at 09:48  \nEnygma` left at 09:50 (Ping timeout: 240 seconds  \nCalebJamesDeLisl - (09:50): abusenius, The answers to your questions: No, the time parameter may vary wildly with the current cpu load. I see no good way to tell a momentarily loaded system from a chronically loaded system and thus the cpu time factor will be a bit erratic.  \nCalebJamesDeLisl - (09:52): Do you know which line \u00a0serializationTest() was failing? I thought it was because sometimes (for some reason) calling init on an already initialized function had no effect.  \nCalebJamesDeLisl - (09:53): My understanding of serialVersionUID is it need not be unique for each class, it only needs to be altered when a class is changed which we absolutely cannot do.  \nEnygma` joined #xwiki at 09:55  \nabusenius - (09:59): CalebJamesDeLisl: I have added a FIXME just above that line  \nCalebJamesDeLisl - (10:00): Yes, I made the test use a new function instead of reinitializing the same one, and removed your fixme note.  \nabusenius - (10:00): it seems to be caused by different output for this time parameter when it is calculated second time  \nabusenius - (10:00): ok  \nabusenius - (10:00): my thought was to make this calculation more explicit  \nCalebJamesDeLisl - (10:01): What's odd is the test which was failing is to prove that it doesn't output the same thing every time. So failure indicated the second init call did nothing.  \nabusenius - (10:01): or the output was different  \nKermitTheFragger joined #xwiki at 10:01  \nCalebJamesDeLisl - (10:02): No, different output --> test passes.  \nabusenius - (10:02): (it took more/less cycles to calculate => time parameter different  \nabusenius - (10:02): (I guess, haven't investigated a lot)  \nCalebJamesDeLisl - (10:03): I had been planning on changing the calculation to cycle for 4 or 5 milliseconds then multiply to make the desired time cost.  \nabusenius - (10:03): anyway, IMO the best solution is to make sure that when you check the password, you don't need to know anything except for the password  \nabusenius - (10:03): i.e. the hash should contain the parameters  \nabusenius - (10:03): or the serialized function  \nCalebJamesDeLisl - (10:04): It does. It's a serialization of the function.  \njvdrean left at 10:04 (Quit: Leaving.  \nCalebJamesDeLisl - (10:05): What I like is we can change to a different function and as long as the same function is still in the system, the deserialize, cast to interface, call verifyPassword routine will still work for legacy functions.  \njvdrean joined #xwiki at 10:06  \nabusenius - (10:06): hm, maybe I misread the test, but you seem to first deserialize the function, then check if the old hash = new hash  \nabusenius - (10:06): what I mean is a new function check(hash, password)  \nabusenius - (10:06): that would do all the job  \nCalebJamesDeLisl - (10:07): Create function, hash, serialize, reinitialize function and hash again proving the function doesn't always output the same thing. then deserialize, hash, compare.  \nabusenius - (10:08): yes, doing it in the right way should be easy  \nCalebJamesDeLisl - (10:08): The problem with check(hash, password) is what happens when we switch to a new stronger function?  \nCalebJamesDeLisl - (10:08): We could have a magic number at the beginning which changes every time we switch functions and have a lookup table but it's so much easier to let java serialization do the work.  \nabusenius - (10:08): the hashPassword(pwd) should output serialized function + hash of the password  \nabusenius - (10:09): so when you check, you deserialize it, then check the hash  \nCalebJamesDeLisl - (10:09): hashPassword is suppoest to output a key. If you include the key in the function then your cipher is shot.  \nCalebJamesDeLisl - (10:10): With PasswordVerificationFunction you deserialize, then call isPasswordCorrect(password)  \nabusenius - (10:10): magic numbers would work too, but then there is no point to support serialization of functions  \nCalebJamesDeLisl - (10:11): Magic numbers, then numbers indicating parameters, salt, checksums, it turns into a huge mess. i tried that route for an hour or so.  \nabusenius - (10:11): hm, well, if you want to use it for encryption passwords, then you need to save the parameters somewhere  \nCalebJamesDeLisl - (10:11): Correct, ciphertext has KeyDerivationFunction as a (serialized) parameter.  \nabusenius - (10:12): I thought it was intended for storing password hashes (what the name says)  \nCalebJamesDeLisl - (10:12): which?  \nabusenius - (10:12): hashPassword()  \nabusenius - (10:13): it is not createNewKey or something  \nCalebJamesDeLisl - (10:13): No. Maybe a better name would be deriveKeyFromPassword but I liked a short name.  \nabusenius - (10:13): deriveKey  \nabusenius - (10:13): password is a parameter name allready  \nlpereira joined #xwiki at 10:13  \nCalebJamesDeLisl - (10:14): You make a compelling point. I'll have to think about different names.  \nabusenius - (10:14): anyway, it should produce a small class/pair that contains both the serialized function and the result of hashing  \nabusenius - (10:15): and for storing hashes, there should be an easy way to store them in one piece  \nCalebJamesDeLisl - (10:15): PasswordVerificationFunction does exactly that.  \nabusenius - (10:16): ah, ok, then its fine  \nCalebJamesDeLisl - (10:16): KeyDerivationFunction needs to not keep the password hash, it needs to output it so the cipher can use it, then it must forget the key and store the serialized function with the ciphertext.  \nCalebJamesDeLisl - (10:17): PasswordVerificationFunction is a wrapper for KeyDerivationFunction which just takes the password and stores the key.  \nabusenius - (10:18): ok, as long as the person who decrypts/checks does not need to know key derivation paramters it should be fine  \nCalebJamesDeLisl - (10:18): haha, definitly.  \nCalebJamesDeLisl - (10:20): BTW: Now the PasswdCryptoService encryptText, decryptText, protectPassword and verifyPassword are using that code.  \narkub left at 10:27 (Quit: Leaving  \narkub joined #xwiki at 10:31  \nEnygma` left at 10:50 (Ping timeout: 265 seconds  \nmflorea1 joined #xwiki at 10:52  \nflorinciu1 joined #xwiki at 10:52  \nlpereira left at 10:52 (Quit: Leaving.  \nlpereira joined #xwiki at 10:53  \nsdumitriu left at 10:54 (Ping timeout: 240 seconds  \nlucaa left at 10:54 (Ping timeout: 258 seconds  \nflorinciu left at 10:55 (Ping timeout: 260 seconds  \nmarta1 left at 10:55 (Ping timeout: 258 seconds  \njvdrean left at 10:55 (Ping timeout: 276 seconds  \njvelo left at 10:56 (Ping timeout: 248 seconds  \nmflorea left at 10:56 (Ping timeout: 276 seconds  \nEnygma` joined #xwiki at 10:57  \nsdumitriu joined #xwiki at 11:09  \njvelo joined #xwiki at 11:13  \nEnygma` left at 11:45 (Read error: Connection reset by peer  \nEnygma` joined #xwiki at 11:45  \nflorinciu1 left at 11:57 (Quit: Leaving.  \nflorinciu joined #xwiki at 12:00  \nCalebJamesDeLisl - (12:03): Found the problem. processorExpense was occasionally set to 0 which causes salt collisions to be common.  \nvmassol left at 12:08 (Quit: Leaving.  \nCalebJamesDeLisl - (12:08): processorExpense varies from 1 to 7 iterations. The least amount of time the algorithm can take is pretty long so there aren't wild swings.  \nEnygma` left at 12:12 (Ping timeout: 276 seconds  \nabusenius - (12:22): it is amazing how inconvenient document /whateverreferences currently are -\\_-  \narkub left at 12:23 (Ping timeout: 240 seconds  \nsdumitriu - (12:23): abusenius: WDYM?  \nCalebJamesDeLisl - (12:24): I have been arguing to make them easier to use by whatever means possible, usually finding myself talking to a wall.  \nsdumitriu - (12:25): Ah, you mean creating and serializing references  \nabusenius - (12:25): they do more harm than use  \nsdumitriu - (12:25): Yes, it takes a lot of code  \nabusenius - (12:25): because almost no api uses them  \nabusenius - (12:25): so you create 4 objects just to acces a freaking document  \nsdumitriu - (12:26): Yep  \nabusenius - (12:26): serialize, deserialize wtf?  \nabusenius - (12:26): and then sometimes you need string names  \narkub joined #xwiki at 12:26  \nabusenius - (12:26): sometimes references,  \nabusenius - (12:26): sometimes other types of references  \nabusenius - (12:26): horrible  \nCalebJamesDeLisl - (12:28): References are not tied to the database in any way, I don't see any client code using them, I predict in a year they will be the next XWQL. </opinion>  \nabusenius - (12:28): I understand that typed references are better that strings, but if they are so difficult to use, there will be even more problems  \nabusenius - (12:29): their API seem completely useless  \nabusenius - (12:29): the only thing you can do with areference is construct it. great  \nabusenius - (12:30): no api takes references, so you need to make a string out of them again  \nabusenius - (12:31): and how you do it? oh, you use AVeryConvenientAndCoolEntityReferenceSerializer, very intuitive  \nCalebJamesDeLisl - (12:32): lol. When Vincent is back I think he's the one to bother about it.  \nabusenius - (12:33): ah, and also most of the \"new\" API using the references just replaces the 4 String parameters by 4 DocumentReference parameters  \nSvenDowideit left at 12:36 (Excess Flood  \nSvenDowideit joined #xwiki at 12:36  \nEnygma` joined #xwiki at 12:37  \nvmassol1 joined #xwiki at 12:39  \nvmassol1 left at 13:17 (Quit: Leaving.  \narkub left at 13:27 (Quit: Leaving  \nEnygma` left at 13:40 (Ping timeout: 245 seconds  \nEnygma` joined #xwiki at 14:04  \nvmassol joined #xwiki at 14:06  \nvmassol left at 14:08 (Client Quit  \nEnygma` left at 14:23 (Ping timeout: 240 seconds  \nEnygma` joined #xwiki at 14:30  \narkub joined #xwiki at 14:32  \nEricInBNE joined #xwiki at 14:32  \nEricInBNE - (14:33): where in the source is the gwt editor  \nEricInBNE - (14:33): is that it in curriki?  \nsdumitriu - (14:33): No  \nEricInBNE - (14:34): sdumitriu, where?  \nsdumitriu - (14:34): Wait a bit  \nsdumitriu - (14:34): Starting from here: http://svn.xwiki.org/svnroot/xwiki/platform/web/trunk/  \nsdumitriu - (14:34): But there are several modules  \nEricInBNE - (14:35): sdumitriu, where are the other modules?  \nsdumitriu - (14:35): There  \nsdumitriu - (14:35): Submodules  \nsdumitriu - (14:36): xwiki-gwt-dom, xwiki-gwt-user etc  \nsdumitriu - (14:36): Only \"standard\" is not part of the WYSIWYG  \nEricInBNE - (14:36): ah ok :)  \nsdumitriu - (14:36): mflorea1 knows more, but he's not available that much  \nmflorea1 - (14:38): EricInBNE: wysiwyg related modules are: xwik-gwt-dom, xwiki-gwt-user, xwiki-gwt-wysiwyg-client and xwiki-gwt-wysiwyg-server  \nmflorea1 - (14:39): let me know if you have other questions  \nEricInBNE - (14:40): mflorea1, will do. just importing them into eclipse now to see if I can get them running in a barebones gwt project.  \nmflorea1 - (14:41): ok, great  \nkibahop left #xwiki at 14:43  \nflorinciu left at 14:55 (Read error: Connection reset by peer  \nEnygma` left at 15:00 (Ping timeout: 245 seconds  \nsdumitriu left at 15:00 (Ping timeout: 240 seconds  \nEricInBNE - (15:06): is there a way to download files directly from SVNSearch?  \nEricInBNE - (15:35): mflorea1, I've got something that will compile. What's the main widget/entrypointy thing to try to interact with?  \nEricInBNE - (15:45): my god  \nEricInBNE - (15:45): http://code.google.com/p/google-guice/  \nEricInBNE - (15:45): ty bbs;  \nEricInBNE left #xwiki at 15:45  \njvelo left at 15:47 (Ping timeout: 258 seconds  \nmflorea1 left at 15:48 (Quit: Leaving.  \njvelo joined #xwiki at 16:00  \nflorinciu joined #xwiki at 16:05  \njvelo left at 16:22 (Ping timeout: 264 seconds  \njvelo joined #xwiki at 17:22  \nsdumitriu joined #xwiki at 17:35  \njvelo left at 17:51 (Quit: Ex-Chat  \nsdumitriu left at 17:53 (Quit: Leaving.  \nvmassol joined #xwiki at 18:30  \nvmassol left at 18:33 (Client Quit  \nKermitTheFragger left at 18:42 (Quit: Leaving  \ntsziklay joined #xwiki at 18:54  \narkub left at 19:01 (Quit: Leaving  \nlpereira left at 20:07 (Quit: Leaving.  \nlpereira joined #xwiki at 20:07  \nflorinciu left at 20:08 (Read error: Connection reset by peer  \nlpereira1 joined #xwiki at 20:13  \nlpereira left at 20:13 (Read error: Connection reset by peer  \nSvenDowideit left at 22:54 (Excess Flood  \nSvenDowideit joined #xwiki at 22:55  \ntsziklay - (23:17): are there any useful tutorials on how to create a very basic xwiki structure? All I want to do is to make a wiki page with a link and the link contains a python macro. I only need to show that executing python via xwiki is possible.  \n\n"}