{"id": "dev:IRC.xwikiArchive20100413", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100413", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nsdumitriu - (00:31): CalebJamesDeLisl: Can XWIKI-5080 be closed?  \nsdumitriu - (00:31): Ah, it's already closed  \nCalebJamesDeLisl - (00:32): Yes. \u00a0Can you tell me the reason for keeping all logic out of api.\\*?  \nsdumitriu - (00:32): api.\\* has only one purpose: expose protected methods to the untrusted scripting world  \nsdumitriu - (00:33): So all it should do is check access rights and catch exceptions (since Velocity can't do it)  \nsdumitriu - (00:33): The real API is c.x.x.doc.XWikiDocument  \nsdumitriu - (00:34): But that one is messy so it needs to be cleaned  \nCalebJamesDeLisl - (00:34): I think we should not really trust the core code either, security flaws are much less embarrassing if they happen in the sandbox.  \nsdumitriu - (00:34): Well, this is another topic  \nsdumitriu - (00:35): Keeping security checks out of the core was an early decision that's hard to change right now  \nsdumitriu - (00:35): Maybe it could be introduced in the 2.0 architecture  \nCalebJamesDeLisl - (00:35): It's part of my reason for wanting to see future code use api.\\* if possible.  \nsdumitriu - (00:36): One reason why it's impossible to do it is that the access right logic also uses the core  \nsdumitriu - (00:37): Checking access for a document will use getDocument  \nsdumitriu - (00:37): So you can't put access checks in getDocument  \nsdumitriu - (00:37): (recursion)  \nCalebJamesDeLisl - (00:37): Of course the access code needs to be the most highly trusted (and so it should be small) but there is a lot of code which need not have such power.  \nCalebJamesDeLisl - (00:38): This was part of my reasoning for wanting to see more things done in script.  \nCalebJamesDeLisl - (00:38): Otherwise we need a security manager and an api for untrusted code.  \nsdumitriu - (00:39): Then you either have a core that's not really used and accessed by anybody, and a wrapper right on top of it  \nsdumitriu - (00:39): That's bad design  \nsdumitriu - (00:39): Or, use something else to do security  \nsdumitriu - (00:39): Aspects, bytecode instrumentation...  \nsdumitriu - (00:40): Both are ugly  \nsdumitriu - (00:40): Trusting the core is simpler and cleaner  \nsdumitriu - (00:40): Although it's really bad security  \nsdumitriu - (00:40): nickless: WDYT?  \nCalebJamesDeLisl - (00:42): There are a lot of cases where we can trust everything, eg I see no security need for api.Class, api.Object etc. The only security issues are get and save.  \nsdumitriu - (00:44): Going to sleep, woke up too early today  \nsdumitriu - (00:44): Bye  \nCalebJamesDeLisl - (00:44): Bye.  \nnickless - (00:44): bye  \nnickless - (00:45): reading...  \nnickless - (00:47): well, technically it would be better to have all security checks in a thin layer around small trusted core  \nCalebJamesDeLisl - (00:48): +1  \nCalebJamesDeLisl - (00:48): (before you say \"but in the real world...\" \u00a0:) \u00a0)  \nnickless - (00:48): but there is lots of existing code around  \nnickless - (00:48): you knew it :D  \nsdumitriu left at 00:48 (Ping timeout: 260 seconds  \nCalebJamesDeLisl - (00:49): Well at the moment the only things I think we need to trust are loading and storing of documents.  \nCalebJamesDeLisl - (00:50): If there is core code which loads or stores documents without permission, we could make exceptions.  \nCalebJamesDeLisl - (00:50): Also search I forgot about that.  \nnickless - (00:51): hm, im principle everything that loads from or stores to db (there is the content)  \nCalebJamesDeLisl - (00:52): A question we will have to ask for the new security model is do we separate viewing a document from reading it's code?  \nCalebJamesDeLisl - (00:54): If no then security seems quite easy. getDocument asks \"can you get that document?\" if yes, then you get the entire document to do as you like with.  \nCalebJamesDeLisl - (00:55): All rendering, object manipulation, basically anything you would do to a document is untrusted.  \nCalebJamesDeLisl - (00:58): setAuthor and set(Content/MetaData)Dirty would have to change but that's relatively small.  \nnickless - (00:58): there might be problems with rendering, what if the user is admin and renders some javascript  \nnickless - (00:59): ?  \nnickless - (00:59): how do we know whether its not doing something nasty?  \nnickless - (01:00): but I guess unlike velocity, its quite impossible to controll using content author  \nCalebJamesDeLisl - (01:01): You mean javascript attacking the browser and making the user do something they didn't want to do?  \nnickless - (01:01): yes  \nCalebJamesDeLisl - (01:02): Maybe macros should have access controls like documents, groovy is already banned if one has no PR.  \nnickless - (01:03): I was thinking of adding one more intremediate permission  \nnickless - (01:03): at the moment edit mans all of html + some velocity  \nnickless - (01:04): it would be better to also have wiki only (no html at all), for guests e.g  \nCalebJamesDeLisl - (01:05): I would rather see fewer types of permissions and see permissions checks applied to macros because more permissions == bigger permissions module which is super trusted.  \nCalebJamesDeLisl - (01:06): IMO there should be 2 permissions: load and store. Maybe a third admin permission which is load + store which cannot be denied at a lower level.  \nCalebJamesDeLisl - (01:07): Admin of space has load+store on all documents in space etc.  \nnickless - (01:08): so current comment right would be something like \"store the comment\"?  \nnickless - (01:08): comment object  \nCalebJamesDeLisl - (01:09): I just made a change to the API which allows a velocity script to save something in the rights context of the script content author.  \nCalebJamesDeLisl - (01:09): Comment could now be implemented entirely in an application.  \nCalebJamesDeLisl - (01:09): Without PR.  \nCalebJamesDeLisl - (01:11): The problem I see with a comment right is that it satisfies comments but there are other reasons to add an object to a document, maybe you want to leave your email address but you should not be able to read all email addresses in the list.  \nnickless - (01:12): true, if it is controlled by the current application, then it has more control  \nnickless - (01:12): over the object modifications  \nCalebJamesDeLisl - (01:13): That was my thinking, I don't profess to know all the ways in which a user should have limited access to a document, hence the API.  \nbblfish left at 01:14 (Read error: Connection reset by peer  \nbblfish joined #xwiki at 01:14  \nnickless - (01:14): suppose we have an app that allows user to enter some text, a comment on blog or something  \nbblfish - (01:15): CalebJamesDeLisl: hi  \nbblfish - (01:15): just wondering how the openid stuff is coming along  \nCalebJamesDeLisl - (01:15): Hi bblfish, we were talking about rights, so authentication is very similar. (the answer is I have not done anything :( )  \nnickless - (01:16): now we define several types of content the app can distinguish, eg. simple text, advanced stuff and velocity scripts  \nnickless - (01:16): hi bblfish btw :)  \nbblfish - (01:17): ah ok. I still have a few weeks of work on something else.  \nnickless - (01:17): so, how would we forbid some user writing advanced stuff and scripts using this new api?  \nbblfish - (01:17): hi nickless  \nCalebJamesDeLisl - (01:18): The application could allow some macros and not others, it could escape {{, it's up to the application.  \ncypromis left at 01:18 (Ping timeout: 248 seconds  \nnickless - (01:19): ok, so we would need to turn normal editing of wiki pages into an application too,?  \nCalebJamesDeLisl - (01:19): If macros had access controls then the application could check which macros should be allowed.  \nCalebJamesDeLisl - (01:20): No, when you edit a wiki page, as long as the author of that page is you, the macros might refuse to run unless you have access to run them.  \nnickless - (01:21): I was thinking about different xwiki syntax versions or similar  \nCalebJamesDeLisl - (01:22): syntax1.0?  \nnickless - (01:22): rather 3.0 or something like this  \nnickless - (01:22): wiki2.0 is too flexible IMO  \nCalebJamesDeLisl - (01:23): Too flexable??!! \u00a0:)  \nnickless - (01:23): there are countless ways of putting javascript without {{html}} macro that you could forbid  \nCalebJamesDeLisl - (01:23): Really, I only know of one.  \nnickless - (01:24): yes, sometimes flexibility is harmful :)  \nCalebJamesDeLisl - (01:25): (% style=\"javascript:badScript is the only one I know of, I opened an issue for it.  \nnickless - (01:25): ok, there countably many :)  \nCalebJamesDeLisl - (01:25): It only runs on some browsers ie: IE  \nCalebJamesDeLisl - (01:26): (and old Safari if I remember correctly.)  \nCalebJamesDeLisl - (01:26): The ones you know of are related to (% ?  \nnickless - (01:27): not only, there is also one in image  \nCalebJamesDeLisl - (01:28): Ahh.  \nnickless - (01:28): (% onmouseover=\"\" %) works everywhere  \nnickless - (01:28): [[image:bla.png||height=\"40\" onload=\"\"]] is even nicer  \nCalebJamesDeLisl - (01:28): Oops.  \nnickless - (01:29): I should open issues for them  \ncypromis joined #xwiki at 01:29  \nCalebJamesDeLisl - (01:30): I didn't make my issue \u00a0(% style=\"background:url(javascript:... \u00a0a security issue because {{html}} is not currently blocked  \nnickless - (01:30): yes, its currently a feature :)  \nCalebJamesDeLisl - (01:31): I figured we have to draw the line somewhere.  \nnickless - (01:31): but e.g. for posting anonymous comments with captcha {{html}} is forbidden  \nCalebJamesDeLisl - (01:31): Did you check?  \nnickless - (01:32): at least it was last time I tried in the version from trunk  \nnickless - (01:32): 2.3  \nnickless - (01:32): 1m I guess  \nCalebJamesDeLisl - (01:32): Hmm, I wrote that and I definitely don't remember putting in any such thing. \u00a0\u00a0Going mad...  \nCalebJamesDeLisl - (01:33): Maybe anonymous comments are treated specially by some other code.  \nnickless - (01:33): hm, maybe, need to recheck  \nnickless - (01:34): anyway, forbidden {{html}} + capcha gives a wrong sense of security IMO  \nCalebJamesDeLisl - (01:35): Agreed, that's why I didn't do anything different for comments.  \nCalebJamesDeLisl - (01:35): I hate the \"make it a little harder to break\" idea.  \nCalebJamesDeLisl - (01:37): Captcha turned off, comments can run {{html}}  \nnickless - (01:38): ah, I have actually kindof reported those javascript tricks in XWIKI-4874  \ncypromis left at 01:40 (Ping timeout: 248 seconds  \nCalebJamesDeLisl - (01:41): http://jira.xwiki.org/jira/browse/XWIKI-4740  \nCalebJamesDeLisl - (01:42): Just checked with captcha turned on, still {{html}} works, maybe you made a typo when testing.  \nbblfish left at 01:43 (Quit: Leaving.  \nnickless - (01:44): indeed (rechecked), maybe I changed the configuration or something  \nCalebJamesDeLisl - (01:45): Here's an idea (to stop the bleeding...) If they request has XmlHttpRequest header (hmm can this be removed?) then it needs a token.  \nCalebJamesDeLisl - (01:45): In order to save documents that is.  \nCalebJamesDeLisl - (01:46): Ahh crap. iframes.  \nlucaa left at 01:47 (Quit: Leaving.  \nCalebJamesDeLisl - (01:47): I don't like the idea that any script in any page == privilege escalation.  \nnickless - (01:48): well, its difficult to distinguish between good and bad scripts  \nnickless - (01:49): but the thing is, most of the users don't need to be able to write scripts  \ncypromis joined #xwiki at 01:49  \nCalebJamesDeLisl - (01:49): It seems near impossible to perfectly prevent XSS. Maybe there is a way to force the user to be involved in a document save.  \nnickless - (01:51): that seems hard, unless he is forced to solve captcha  \nnickless - (01:51): but the usual was to prevent xss used in all wikis and forums is just not to allow html in any form  \nCalebJamesDeLisl - (01:52): Usually you either end up with plain text or some way to inject script.  \nCalebJamesDeLisl - (01:53): s/Usually/It seems  \nnickless - (01:53): its a privilege of some users (e.g. moderators on a forum)  \nnickless - (01:54): well, any restricted wiki syntax is fine  \nnickless - (01:55): the problem in xwiki2.0 is just that it seems to copy parts of the input into the resulting html for flexibility  \nCalebJamesDeLisl - (01:55): And speed and simplicity.  \nnickless - (01:55): e.g if [[image:bla]] is the only way to inser an image, then there is no way for abusing it  \nnickless - (01:55): yes  \nCalebJamesDeLisl - (01:56): But there is no width/height.  \nnickless - (01:56): yes, well secure but restricted, resize the image first :)  \nnickless - (01:57): unless you want to implement a fancy application its completely sufficient  \nCalebJamesDeLisl - (01:57): People don't go for that which is why 90%+ are using Windows.  \nCalebJamesDeLisl - (01:58): Sendmail, Bind the list goes on.  \nnickless - (01:59): well, do you remember the last time you actually used that formatting option for images for posting something?  \nCalebJamesDeLisl - (01:59): Yes. I use it on xwiki.org quite a lot.  \nnickless - (02:00): ok, width and height are maybe not the best example  \nnickless - (02:00): it is useful, but then it should be parsed and not copy-pasted  \nCalebJamesDeLisl - (02:01): Maybe the best option is to filter the attributes which invoke js.  \nCalebJamesDeLisl - (02:01): They are listed.  \nCalebJamesDeLisl - (02:01): Then there's the IE stuff...  \nCalebJamesDeLisl - (02:03): I don't like the method because one script gets through and we're sunk again.  \nnickless - (02:03): well, the most secure way is to explicitly allow some constructs and forbid everything else  \nnickless - (02:03): and filtering is easier  \nCalebJamesDeLisl - (02:03): I agree, and that shouldn't be very difficult either.  \nCalebJamesDeLisl - (02:05): I still wish we could build another wall by preventing script from saving without our permission.  \nCalebJamesDeLisl - (02:08): Your cookie idea seems right but how do we prevent a script opening an iframe to the edit page and then eating the cookie meant for the valid script.  \nCalebJamesDeLisl - (02:08): ?  \nnickless - (02:09): well, I don't think we can do much against it  \nnickless - (02:09): except preventing xss  \nnickless - (02:10): anti-xss and anti-csrf measures complement each other  \nCalebJamesDeLisl - (02:11): I still don't feel right about a system where one XSS hole = total destruction.  \nnickless - (02:14): I agree that its not perfect, but its practical  \nnickless - (02:14): and a great improvement over the current situation  \nCalebJamesDeLisl - (02:15): Well I think the current policy is everyone gets to run script.  \nnickless - (02:17): the thing is, javascript can almost completely mimic the user  \nnickless - (02:18): you can click, load, read text etc.  \nnickless - (02:19): so unless you make editing harder for the user, there will be ways to do the same in js  \nCalebJamesDeLisl - (02:20): Maybe we need to think about guarding cookies closer.  \nnickless - (02:21): wdym?  \nCalebJamesDeLisl - (02:23): We could start with HttpOnly cookies.  \nnickless - (02:24): they are still automagically forwarded for any request, thats the reason for token idea  \nnickless - (02:24): the token is not in cookies  \nnickless - (02:25): its part of html  \nCalebJamesDeLisl - (02:25): Yea, I suppose HttpOnly cookies still submit when the script opens an iframe.  \nnickless - (02:26): yes, also an <img src=\"\"> sends all cookies  \nCalebJamesDeLisl - (02:27): The problem I see is any XSS anywhere can open an iframe to the edit page which will push proper cookies to the server, then it can get the token.  \nCalebJamesDeLisl - (02:27): So the token becomes only useful against blind CSRF.  \nnickless - (02:28): yes, and attacks from outside  \nCalebJamesDeLisl - (02:29): Which is blind, correct?  \nnickless - (02:29): yes  \nCalebJamesDeLisl - (02:30): Iframes are the devil. I wonder if we could stop them somehow.  \nnickless - (02:31): restricted xwiki syntax :)  \nCalebJamesDeLisl - (02:32): Well still one script gets by and it can create the iframe and we're done.  \nnickless - (02:33): true, but you'll have less people to trust  \nCalebJamesDeLisl - (02:33): You mean less effective attacks?  \nCalebJamesDeLisl - (02:34): less number of...  \nCalebJamesDeLisl - (02:34): fewer.  \nCalebJamesDeLisl - (02:36): Hmm, js can detect whether it's inside of an iframe, maybe usefull.  \nnickless - (02:36): yes, e.g. if you have a blog, give your frends html rights and spammers not  \nnickless - (02:37): it would be cool to have a hint in a request whether it was caused by a mouse click or js  \nnickless - (02:38): but that would be too easy :)  \nCalebJamesDeLisl - (02:39): Well, the clicks aren't so bad because the script terminates once it goes to another page but popups and iframes are bad.  \nDenis left at 02:40 (Quit: Leaving.  \nnickless - (02:42): im principle we could filter iframes in html on save  \nnickless - (02:43): but there might also be legitimate applications for them  \nCalebJamesDeLisl - (02:43): That's an interesting idea, render html, search for <iframe> then prevent the user from saving?  \nnickless - (02:43): (I think Sammy mentions which tags are filtered in facebook in his story)  \nnickless - (02:44): yes  \nCalebJamesDeLisl - (02:44): OOps, the script makes the frame and it can unescape, eval etc...  \nnickless - (02:44): well, javascript should be filtered too  \nCalebJamesDeLisl - (02:45): So many ways to get javascript into a page though.  \nnickless - (02:45): thats one of the reasons I still like the idea of restricted wiki syntax  \nnickless - (02:46): its seems to be easier to say what is allowed  \nCalebJamesDeLisl - (02:46): I agree we need to work on it, I was trying to brainstorm a secondary measure in case javascript did leak in.  \nCalebJamesDeLisl - (02:47): I wish there was no way to save from XSS without XSS in the edit page.  \nCalebJamesDeLisl - (02:59): Hah, I beat popups! \u00a0\u00a0window.open = function(){alert(\"popup blocked\")};  \nnickless - (03:00): is there no way to restore the original window.open again?  \nCalebJamesDeLisl - (03:00): No, not unless it's saved as something else.  \nCalebJamesDeLisl - (03:00): AFAIK  \nnickless - (03:01): hm, interesting  \nCalebJamesDeLisl - (03:02): So for iframes we could detect iframes and if an iframe is detected window.location=logout...  \nnickless - (03:02): thats rough :)  \nCalebJamesDeLisl - (03:03): Well, we could limit it to the edit page.  \nCalebJamesDeLisl - (03:04): I see no value in editing in an iframe. \u00a0but then again I see no value in iframes :)  \nnickless - (03:05): they are actually useful afaik, embedding counters, ads etc.  \nnickless - (03:05): maybe also things like google map, I'm not sure, never tried to  \nCalebJamesDeLisl - (03:06): Do you see any reason to open the edit window through an iframe?  \nnickless - (03:07): no  \nCalebJamesDeLisl - (03:07): It's important that either the user is logged out or the token is invalidated fast because it's a race between that and the bad script.  \nnickless - (03:08): yea, invalidate the token is a good idea  \nCalebJamesDeLisl - (03:08): Still requires an XmlHttpRequest which can't happen soon enough.  \nCalebJamesDeLisl - (03:09): Hope there isn't a way for js to foil the request.  \nnickless - (03:10): but logging out... maybe just keep the token invalid for some time?  \nnickless - (03:10): as a punishment so to say  \nCalebJamesDeLisl - (03:11): I figured invalidate the token and then the user could get a new one without even noticing.  \nnickless - (03:13): we could suspend his editing rights until the user tries to edit something, then we show a big phat warning explaining the situation and require a captcha to proceed  \nnickless - (03:14): just logging them out will look like a bug  \nCalebJamesDeLisl - (03:15): Throw an alert and then log out?  \nnickless - (03:15): imagine there is a injected js in some page, then everyone who views it will be logged out, its bad  \nnickless - (03:16): the problem is that this alert is never showd to the user, the script loads it in background  \nCalebJamesDeLisl - (03:16): iframes can't throw alerts?  \nnickless - (03:17): mmm what exactly do you mean by an alert?  \nCalebJamesDeLisl - (03:18): alert(\"hello world\");  \nnickless - (03:18): ah, ok  \nnickless - (03:20): hm, then it will probably work  \nCalebJamesDeLisl - (03:20): You could explain it to the user as you kick them out of the system :)  \nnickless - (03:23): it will only work for iframes, not for ajax or smth else  \nnickless - (03:24): I think its posible to load the edit page using ajax, parse the html and filter out the token  \nCalebJamesDeLisl - (03:25): But is it possible to filter out the ajax header?  \nnickless - (03:26): probably  \nnickless - (03:26): if there is one, I don't know  \nCalebJamesDeLisl - (03:28): Yup, just looked it up. Hmm.  \nnickless - (03:29): X-Requested-With: XMLHttpRequest  \nnpm left at 03:30 (Ping timeout: 276 seconds  \nnickless - (03:30): hm, I guess the same problems as with referer header also apply there  \nnickless - (03:30): is it preserved by proxies and the like?  \nnickless - (03:31): also in this case it would not deny legitimate use, just make some attacks undetectable  \nnickless - (03:32): s/also/although/  \nCalebJamesDeLisl - (03:32): referrer is a bit different, js can remove it but not change it.  \nCalebJamesDeLisl - (03:33): flash <9.x can change it, but then flash gives you raw socket access.  \nnickless - (03:35): but if some proxy in between just removes all referrer headers you'll not be able to edit any more  \nnickless - (03:36): anonymous proxies do that  \nCalebJamesDeLisl - (03:37): How do you propose using the referer? js sends the url of the document with the script which made the request.  \nnickless - (03:38): no, I don't want to use it, it was just an axample  \nnickless - (03:38): example  \nnickless - (03:39): I mean if we log out users that load edit page over ajax, we'll need to check for that ajax header  \nnickless - (03:40): but it could be deleted on the way, like the referer header  \nCalebJamesDeLisl - (03:40): Ajax header can be spoofed/removed very easily.  \nnpm joined #xwiki at 03:40  \nCalebJamesDeLisl - (03:42): Actually part of the token could be a hash of the expected referer. Then we only have to deal with the possibility of the script opening an iframe and document.write more script into the edit page.  \nnickless - (03:43): but if the token is extracted from the correct edit page, what is the difference?  \nnickless - (03:44): (assuming we dont rely on the presense of referer header)  \nCalebJamesDeLisl - (03:44): Well the script needs to get back to the edit page to use the token (assuming we rely on the referer header :) )  \nnickless - (03:44): :)  \nnickless - (03:45): if we rely on referer header, we could just use it directly :)  \nCalebJamesDeLisl - (03:45): document.write(\"script...\")  \nnickless - (03:45): could be an option tough  \nCalebJamesDeLisl - (03:46): open iframe in edit page, then place another script in the iframe.  \nCalebJamesDeLisl - (03:47): + blind CSRF  \nCalebJamesDeLisl - (03:48): What if the edit page always http redirects to ?editor=wiki&uid=1234567890abcdefghi...  \nCalebJamesDeLisl - (03:48): Then there's a cookie in the referer.  \nCalebJamesDeLisl - (03:48): it's not secret but it's hard to forge.  \nnickless - (03:49): is it not redirected if loaded over iframe/ajax?  \nCalebJamesDeLisl - (03:50): It is but that prevents a token being taken from edit iframe1 and used in iframe2  \nCalebJamesDeLisl - (03:51): If the referer hash is part of the token.  \nnickless - (03:51): hm, shouldn't that kind of problems already be prevented by same origin policy?  \nCalebJamesDeLisl - (03:52): I'm trying to make it difficult for XSS to save pages and XSS has same origin.  \nCalebJamesDeLisl - (03:53): Thinking about it, it really would be awesome to be able to allow users to run js in the wiki pages safely, we would be the only site out there.  \nnickless - (03:55): there are many sites and frameworks out there, so probably thats not that easy :)  \nCalebJamesDeLisl - (03:56): The only attack I can see on this design is the script sets the uid of the page it pulls and then uses the same uid again.  \nCalebJamesDeLisl - (03:58): We must invalidate the uid after is is loaded once, a refresh must produce a new one.  \nnickless - (03:59): hm, seems reasonable  \nCalebJamesDeLisl - (04:00): Even if the script gets the token, it has to forge the referer to make it valid.  \nCalebJamesDeLisl - (04:01): And the script shouldn't get the token because the page containing it should exit if it detects an iframe.  \nnickless - (04:01): and ajax?  \nCalebJamesDeLisl - (04:02): 2 does not work but 1 does.  \nCalebJamesDeLisl - (04:02): maybe we should scrap 2?  \nnickless - (04:03): maybe  \nCalebJamesDeLisl - (04:03): I hate to depend on the referer but it seems solid.  \nnickless - (04:04): it should be configurable  \nnickless - (04:05): and, since we rely on referer anyway, we can also add simple referer check to it  \nCalebJamesDeLisl - (04:07): Is there a way to get the location header when the request was redirected? checking...  \nnickless - (04:18): mmh, too tired, I'm going to sleep  \nnickless - (04:19): bye  \nCalebJamesDeLisl - (04:19): bye.  \nnickless left at 04:26 (Ping timeout: 246 seconds  \nnpm left at 06:14 (Read error: Operation timed out  \nnpm joined #xwiki at 06:24  \nnuvolari left at 07:27 (Excess Flood  \nnuvolari joined #xwiki at 07:29  \nnuvolari left at 07:29 (Changing host  \nnuvolari joined #xwiki at 07:29  \nbougie\\_ left at 07:33 (\\*.net \\*.split  \nnpm left at 07:33 (\\*.net \\*.split  \ncypromis left at 07:33 (\\*.net \\*.split  \nLadySerena left at 07:33 (\\*.net \\*.split  \nnpm joined #xwiki at 07:35  \ncypromis joined #xwiki at 07:35  \nbougie\\_ joined #xwiki at 07:35  \nLadySerena joined #xwiki at 07:35  \nmflorea joined #xwiki at 07:42  \nvmassol joined #xwiki at 08:08  \nplunden joined #xwiki at 08:08  \nnpm left at 08:11 (Ping timeout: 276 seconds  \nnpm joined #xwiki at 08:17  \nannacondan joined #xwiki at 08:31  \njvdrean joined #xwiki at 09:07  \nEnygma` joined #xwiki at 09:12  \njvdrean left at 09:20 (Quit: Leaving.  \nflorinciu joined #xwiki at 09:23  \nsilviar joined #xwiki at 09:27  \nevalica joined #xwiki at 09:28  \ntmortagne joined #xwiki at 09:32  \nsdumitriu joined #xwiki at 09:44  \nKermitTheFragger joined #xwiki at 09:59  \njvdrean joined #xwiki at 10:06  \nbblfish joined #xwiki at 10:16  \njvdrean - (10:25): Hi all, I'd like to release XE 2.3 RC1 this afternoon, we currently have failing tests  \njvdrean - (10:25): http://hudson.xwiki.org/job/xwiki-platform-core/org.xwiki.platform$xwiki-core-chart-renderer/5933/testReport/  \njvdrean - (10:26): problems with the chart and formula macros in core (since Apr. 10)  \nsdumitriu - (10:27): Can't connect to X11, that's infrastructure problem  \nsdumitriu - (10:27): Not real failing tests  \njvdrean - (10:28): ok  \njvdrean - (10:28): any idea about http://hudson.xwiki.org/job/xwiki-product-enterprise-tests/com.xpn.xwiki.products$xwiki-enterprise-test-selenium/715/testReport/ ?  \nsdumitriu - (10:29): Yes, could be a bug  \nsdumitriu - (10:30): http://incubator.myxwiki.org/xwiki/bin/view/Test/23Snapshots#HIssuewitheditingUsers2FGroups  \nvmassol - (10:34): tmortagne: what about lucene as the main search engine?  \nvmassol - (10:34): (for XE 2.3)  \ntmortagne - (10:36): vmassol: did not had time to work on it and i will not at least this week i think  \ntmortagne - (10:36): we could decide to do it the simple way and just modify the search panel to go to lucene search  \nvmassol - (10:36): tmortagne: ok so it means we should remove it from the 2.3 roadmap then  \ntmortagne - (10:37): probably  \nvmassol - (10:37): since today is RC1 release which is supposed to be the final release  \nlucaa joined #xwiki at 10:37  \nlucaa left #xwiki at 10:39  \njvdrean left at 10:46 (Quit: Leaving.  \njvdrean joined #xwiki at 10:47  \nEnygma` left at 10:54 (Quit: Leaving.  \nflorinciu1 joined #xwiki at 10:54  \nEnygma` joined #xwiki at 10:54  \nsilviar1 joined #xwiki at 10:55  \nflorinciu left at 10:56 (Ping timeout: 260 seconds  \nsilviar left at 10:56 (Ping timeout: 265 seconds  \nevalica left at 10:56 (Ping timeout: 268 seconds  \nflorinciu1 left at 10:58 (Read error: Connection reset by peer  \njvdrean left at 11:00 (Quit: Leaving.  \nflorinciu joined #xwiki at 11:03  \njvdrean joined #xwiki at 11:20  \nglerouge joined #xwiki at 11:22  \nlucaa1 joined #xwiki at 11:23  \nmflorea left at 11:32 (Quit: Leaving.  \nSvenDowideit left at 11:33 (Ping timeout: 246 seconds  \nSvenDowideit joined #xwiki at 11:34  \nSvenDowideit left at 11:40 (Ping timeout: 246 seconds  \nSvenDowideit joined #xwiki at 11:47  \nevalica joined #xwiki at 11:52  \nSvenDowideit left at 11:53 (Ping timeout: 246 seconds  \nSvenDowideit joined #xwiki at 11:54  \nDenis joined #xwiki at 12:03  \nannacondan left at 12:12 (Quit: annacondan  \njvdrean - (12:13): looks like the problem raised by the rights func test is caused by the livetable, I've pinged Jerome  \nvmassol - (12:17): ok  \nSvenDowideit left at 12:22 (Ping timeout: 246 seconds  \nSvenDowideit\\_ joined #xwiki at 12:22  \nSvenDowideit\\_ is now known as SvenDowideit ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nCiprian joined #xwiki at 12:22  \nSvenDowideit left at 12:27 (Ping timeout: 246 seconds  \nSvenDowideit joined #xwiki at 12:28  \nbblfish left at 12:40 (Read error: Connection reset by peer  \nbblfish joined #xwiki at 12:40  \nxipe\\_ joined #xwiki at 12:51  \nflorinciu left at 13:01 (Read error: Connection reset by peer  \nbblfish left at 13:18 (Quit: Leaving.  \nannacondan joined #xwiki at 13:21  \nnickless joined #xwiki at 13:30  \nmflorea joined #xwiki at 13:46  \nflorinciu joined #xwiki at 13:48  \nxipe - (14:06): strange ....  \nxipe - (14:06): :)  \nvmassol - (14:27): mflorea: I'm trying the table plugin for the wysiwyg editor. Is it not possible to move to the next cell using tab?  \nmflorea - (14:28): vmassol: you should be able  \nvmassol - (14:28): hmm then maybe it's chrome  \nmflorea - (14:28): q: if you click tab while the caret is inside text does the rich text area loose the focus?  \nvmassol - (14:31): mflorea: no, nothing happens  \nmflorea - (14:34): hmm, tab works fine in Epiphany (WebKit based) so it should work fine in Chrome too  \nmflorea - (14:37): vmassol: I just tested on Chrome 4.1 in Vista and tab works fine  \nvmassol - (14:37): I'm on 5.0.371 on mac  \nmflorea - (14:37): works both outside of a table (add 4 spaces) and inside of a table (moves the caret to the next cell)  \nvmassol - (14:37): might be a mac only issue  \nvmassol - (14:38): doesn't work outside of a table either for me  \nvmassol - (14:39): seems tab has no effect at all inside the textarea for me  \nmflorea - (14:40): hmm, then it's either related to your Chrome version or to the fact that it runs on mac, but I think it's because of the version. maybe they changed something  \nvmassol - (14:42): can someone try to export to RTF a simple table and open it in a RTF reader?  \nvmassol - (14:42): it fails for me on mac with TextEdit and OO crashes  \nvmassol - (14:42): |= Header1|=Header2  \nvmassol - (14:42): | cell1| cell2  \nvmassol - (14:43): in TextEdit the first column cells are displayed as form inputs  \nbougie\\_ - (14:56): when I create a new wiki page, can xwiki execute a script ?  \nbougie\\_ - (14:56): and if it's possible, where can i do this ?  \njvdrean - (14:57): @all can people with assigned issues move them to future releases ? RC2 (could be final) or 2.4M1  \njvdrean - (14:57): http://jira.xwiki.org/jira/secure/IssueNavigator.jspa?reset=true&jqlQuery=project+%3D+XWIKI+AND+resolution+%3D+Unresolved+AND+fixVersion+%3D+%222.3+RC1%22  \njvdrean - (14:58): thanks  \ntmortagne - (14:59): jvdrean: can i commit something ? i'm ready, just have to click on commit button (it's for http://jira.xwiki.org/jira/browse/XWIKI-5084)  \nannacondan left at 15:00 (Quit: annacondan  \nvmassol - (15:04): bougie\\_: yes you can write a listener that listens to doc creation events  \njvdrean - (15:13): tmortagne: go ahead  \nplunden left #xwiki at 15:13  \ntmortagne - (15:16): jvdrean: done  \nvmassol - (15:16): tmortagne: \"Remote white spaces\" \u2014> Remove?  \nvmassol - (15:17): \"+ \u00a0\u00a0\u00a0\u00a0\\* <li>Remote white spaces: Clean white space since otherwise they'll get transformed into %20 by the below and thus\"  \nvmassol - (15:17): you're still converting to %?  \nvmassol - (15:17): (or is it the doc that must be updated?)  \ntmortagne - (15:17): vmassol: no it's an old comment  \nvmassol - (15:18): tmortagne: where did you steal your algo from ? :)  \ntmortagne - (15:18): me stealing things ? O:-)  \ntmortagne - (15:19): ok it's Properties encoding code  \nvmassol - (15:19): you should have been smarter and change the variable name  \nvmassol - (15:19): I doubt you'd have used \"nibble\" ;)  \ntmortagne - (15:19): vmassol: i did for some of them  \ntmortagne - (15:19): yep i did not even known this word before  \nDenis - (15:20): Hi, I have carefully read the logo challenge. I mainly share the thought of sdumitriu but also those of vmassol, ludovic and glerouge. My feeling is that what makes the logo not readable is the W, so I have try some variations, and I feel that I could propose an interesting alternative for it. Nothing revolutionary, but I hope it could helps adoptance if this logo is choosen. Is it a good idea? WDYT ?  \nsdumitriu - (15:21): Denis: Go for it  \nsdumitriu - (15:21): You can add an attachment to the page  \nDenis - (15:25): sdumitriu: I have only the B&W version not polished for now, hope that it is enough to get the idea: http://dev.xwiki.org/xwiki/bin/download/Community/LogoChallengeRound2/16%2Dalternative%2DBW.png  \nvmassol - (15:26): btw what is the ^ supposed to represent?  \nDenis - (15:27): vmassol: I do not know, happiness ^^ :)  \nvmassol - (15:27): then we should put 10 of them for more happiness  \nvmassol - (15:28): xwiki  \nvmassol - (15:28): ^^^^^^^^  \nDenis - (15:28): lol  \nannacondan joined #xwiki at 15:29  \nDenis - (15:30): as you should have notice, I just try to improve symetry of the W to have it read better, this is not an intend to add more ^, and mine is not precisely the same as other, I have try that but it is worse  \nDenis - (15:33): vmassol: is this improve or not for you ?  \nvmassol - (15:36): Denis: slightly yes  \nannacondan left at 15:36 (Quit: annacondan  \nDenis - (15:38): glerouge: is this also better for you ?  \nflorinciu left at 15:43 (Read error: Connection reset by peer  \nflorinciu joined #xwiki at 15:56  \nsilviar1 left at 16:00 (Quit: Leaving.  \nevalica - (16:08): also - maybe the first version 16A is more readable http://dev.xwiki.org/xwiki/bin/download/Community/LogoChallenge/boomerang.png  \nbblfish joined #xwiki at 16:10  \nsdumitriu - (16:10): Yes, I liked 16A better first  \ngvallarelli joined #xwiki at 16:12  \ngvallarelli - (16:12): Hi XWikiers  \nsdumitriu - (16:12): Hi gvallarelli  \ngvallarelli - (16:14): CalebJamesDeLisl, do you remember my laptop heat issue? Well the fun and heat-dissipation system is died...  \ngvallarelli - (16:14): tomorrow one technician from dell will come to my home :S  \noanat joined #xwiki at 16:16  \nlucaa1 - (16:17): welcome oanat on the irc  \noanat - (16:20): thx lucaa1  \nmflorea - (16:24): tmortagne: there are a few \"Failed to flush cache in plugin [class com.xpn.xwiki.plugin.lucene.LucenePlugin]\" exceptions in http://hudson.xwiki.org/view/Enterprise/job/xwiki-product-enterprise-tests/715/consoleText . I'm just letting you know. I noticed when I run a selenium test locally using the latest XE build from husdon.  \ntmortagne - (16:25): mflorea: ok thanks i will look at that when i can find some time  \ngvallarelli left at 16:25 (Read error: No route to host  \nmflorea - (16:25): sure  \ngvallarelli joined #xwiki at 16:26  \nCalebJamesDeLisl - (16:27): gvallarelli: Hmm, point a fan at it (if it's still running.)  \ngvallarelli - (16:28): CalebJamesDeLisl, np tomorrow I will resolve completely my problems(I hope)  \nCalebJamesDeLisl - (16:35): Hey I found something neat last night, firefox's new tree tracing jit compiler has some cool new features.  \nCalebJamesDeLisl - (16:35): Like segfault.  \nCalebJamesDeLisl - (16:35): var code=\"var s=document.createElement('script'); s.innerHTML='code'; document.body.appendChild(s); eval(code);\"; eval(code);  \nCalebJamesDeLisl - (16:37): Maybe a stack overflow in the tree tracer?  \ntmortagne - (16:44): mflorea: that's weird, the nullpointer is on  \ntmortagne - (16:45): this.config = context.getWiki().getConfig();  \ntmortagne - (16:45): which mean the XWikiContext does not contains any XWiki object in this use case  \ntmortagne - (16:45): ha or context is null actually  \ntmortagne - (16:45): need to check what can call flushCache, maybe sometimes it's called with null context  \ntmortagne - (16:46): (hope not, it this case it would be impossible to reinit the plugin)  \ntmortagne - (16:48): raa, that's it...  \ntmortagne - (16:49): PropUpdateAction is using flushCache that takes no XWikiContext (that's flushCache should not even exists IMO)  \nmflorea - (16:49): ah..  \ntmortagne - (16:50): hmm make me think you probably finally found why lucene plugin is randomly broken  \nmflorea - (16:50): :)  \nglerouge - (16:50): at last !!  \ntmortagne - (16:50): i'm glad i added this log :)  \ntmortagne - (16:54): PropUpdateAction is the only thing that use this flushCache method...  \nEnygma` left at 16:57 (Quit: Leaving.  \nbblfish left at 16:57 (Read error: Connection reset by peer  \nevalica left at 16:58 (Read error: Connection reset by peer  \nannacondan joined #xwiki at 17:00  \nannacondan left at 17:01 (Client Quit  \nglerouge - (17:06): tmortagne: do you think you will have the time to correct it in the XE 2.3 timeframe?  \ntmortagne - (17:07): glerouge: i don't have time right now to work on it but i think i can fix it easily tomorrow morning at worst i think  \nglerouge - (17:08): ok  \nKermitTheFragger left at 17:08 (Quit: Leaving  \nbougie\\_ - (17:12): vmassol: do you have a link to the doc to do this ?  \njvdrean - (17:12): florinciu: looks like the windows agent is very slow, 50min to build core  \njvdrean - (17:12): (Took http://hudson.xwiki.org/job/xwiki-platform-core/buildTimeTrend on http://hudson.xwiki.org/computer/windows-2008-server-r2)  \nxipe\\_ is now known as jvelo ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \njvelo - (17:17): sdumitriu, hello  \nsdumitriu - (17:18): Hi jvelo  \njvelo - (17:18): do you know if it's possible to use Function#delay in combination with Function#bind with proto ?  \njvelo - (17:18): I can't seem to succeed  \nsdumitriu - (17:19): Yes, it should work  \njvelo - (17:19): if I do :  \nsdumitriu - (17:19): But bind first, delay then  \njvelo - (17:19): ahh  \njvelo - (17:19): I was doing it the other way around  \njvelo - (17:19): ok will try that  \njvelo - (17:20): right, delay returns an ID  \njvelo - (17:21): yep works like a charm  \njvelo - (17:21): thanks sdumitriu  \nbblfish joined #xwiki at 17:26  \noanat left at 17:29 (Quit: Leaving.  \nCiprian left #xwiki at 17:30  \nlucaa1 left at 17:34 (Quit: Leaving.  \nbblfish left at 17:38 (Quit: Leaving.  \nmflorea left at 17:41 (Quit: Leaving.  \nbblfish joined #xwiki at 17:41  \nannacondan joined #xwiki at 17:47  \nannacondan left at 17:47 (Client Quit  \nflorinciu left at 17:48 (Ping timeout: 258 seconds  \njvdrean - (17:49): everything is ready for the release but I want to see a successful build on the CI first  \njvdrean - (17:49): proposal: release colibri, annotations, administration now  \njvdrean - (17:49): (see http://dev.xwiki.org/xwiki/bin/view/Community/ReleasePlans)  \njvdrean - (17:49): create core / web / enterprise 2.3 now  \njvdrean - (17:50): s/2.3/2.3 branches/  \njvdrean - (17:51): this way XE can be released tomorrow without preventing commits  \njvdrean - (17:51): WDYT ?  \nsdumitriu - (17:51): +1  \nvmassol - (17:51): are all tests passing?  \njvdrean - (17:52): no, I suspect flickering tests  \njvdrean - (17:52): that's my point actually  \nvmassol - (17:52): in any case the branch should have been done after the M2 release IMO  \nvmassol - (17:52): so +1 from me to branch asap  \njvelo left at 18:10 (Ping timeout: 252 seconds  \njvelo joined #xwiki at 18:11  \njvdrean - (18:20): oh I've missed tmortagne's message above about being able to put lucene as default search tommorow morning  \ntmortagne - (18:20): jvdrean: my message is about fixing the bug  \ntmortagne - (18:21): not put it as default search  \njvdrean - (18:21): ah right there's also the need for the admin section to put it as default  \ntmortagne - (18:21): for default search it needs some UI whish is why it's i did not had time to do it (the plan was to do it even with that bug)  \ntmortagne left at 18:27 (Quit: Leaving.  \njvelo left at 18:45 (Quit: Ex-Chat  \njvdrean left at 18:49 (Quit: Leaving.  \nCalebJamesDeLisl - (18:56): Why doesn't msg.get allow one to specify a default message in case there is no key?  \nsdumitriu - (18:57): CalebJamesDeLisl: Something like this can be done as:  \nsdumitriu - (18:57): #if($msg.get('key') == 'key')  \nsdumitriu - (18:57): \u00a0\u00a0Use defaule message  \nsdumitriu - (18:57): #end  \nbblfish left at 18:57 (Quit: Leaving.  \nCalebJamesDeLisl - (18:58): I was thinking of that. It would be cleaner to have $msg.get('key', 'default')  \nsdumitriu - (18:59): Good proposal for the upcomming localization component  \nCalebJamesDeLisl - (19:00): All of this msg.get seems ugly anyway, I wish there was a better way.  \nCalebJamesDeLisl - (19:02): It would be cool if the key was the same as the english version so it would look like $msg.get('This is the default (english) version') \u00a0\u00a0but then there are the ' marks...  \nvmassol - (19:03): that would be awful to maintain\u2026.  \nCalebJamesDeLisl - (19:04): How so? I see issues with ' and = but beyond that I can't see a problem.  \nvmassol - (19:05): the point of having a separate location for definitions is to allow to change them in one place  \nCalebJamesDeLisl - (19:06): So that the English version can be changed?  \nvmassol - (19:06): yes  \nvmassol - (19:06): the key has to be stable  \nCalebJamesDeLisl - (19:07): That could lead to trouble because we don't know that the translations are all valid.  \nCalebJamesDeLisl - (19:07): (if we change the english version)  \nvmassol - (19:07): a translation is not valid or invalid compared to another translation  \nvmassol - (19:07): it's valid or invalid compared to what it's associated to  \nvmassol - (19:08): if you change the ui  \nvmassol - (19:08): then you change the transaltions  \nnpm left at 19:08 (Quit: Leaving.  \nvmassol - (19:08): but translations can also be improved even when there are no ui changes  \nCalebJamesDeLisl - (19:08): Well the l10n site allows people to translate and it gives them the English version to translate.  \nvmassol - (19:08): fixing typos, using a better wording, etc  \nvmassol - (19:08): CalebJamesDeLisl:  \nvmassol - (19:09): yes but that's just a \"convenience\" even though it's not best  \nvmassol - (19:09): the best would to show visually where it applies  \nvmassol - (19:09): as we're doing for the Color Theme for ex  \nvmassol - (19:09): (for picking colors)  \nvmassol - (19:09): but it's just too hard to do  \nvmassol - (19:10): that said, we could have such a system easily  \nvmassol - (19:10): since we allow document resource bundles  \nvmassol - (19:10): so you could image a wiki farm for l10n  \nvmassol - (19:10): (no need for a farm actually)  \nvmassol - (19:11): where the translations are used for real in that wiki  \nvmassol - (19:11): so you can see them in action  \nglerouge - (19:12): sounds nice  \nvmassol - (19:12): glerouge: it's really easy to do, actually that's how I've done translations in the past  \nCalebJamesDeLisl - (19:12): Another issue I was thinking of is, I made the mistake of associating \"Ok.\" with the registration page instead of LiveValidation. It seems that \"Ok.\" should be generic and need not be associated with anything.  \nvmassol - (19:12): since otherwise you don't see how much space you have, how it looks like, etc  \nsdumitriu - (19:12): http://dev.xwiki.org/xwiki/bin/download/Community/LogoChallengeRound2/16-different.png  \nCalebJamesDeLisl - (19:14): If the keys are the english terms then there is no specific association, just phrases which are translated.  \nnpm joined #xwiki at 19:14  \nvmassol - (19:14): CalebJamesDeLisl: you're not serious are you? :)  \nCalebJamesDeLisl - (19:15): I get asked that a lot.  \nvmassol - (19:15): hehe  \nvmassol - (19:15): you'd need to remember a full sentence with all punctuation in order to be able to ask for a translation  \nvmassol - (19:15): you'd have no scoping either  \nvmassol - (19:15): (aka namespace)  \nCalebJamesDeLisl - (19:15): Scoping?  \nvmassol - (19:16): if I have \"Choose the user\"  \nvmassol - (19:16): hwo do you know to what subsystem this refers to?  \nCalebJamesDeLisl - (19:16): At the moment I can still call any translation I like, it's just bad practice.  \nvmassol - (19:16): we do have rules for naming  \nvmassol - (19:16): (for naming keys)  \nbblfish joined #xwiki at 19:17  \nvmassol - (19:17): I wonder if we have put them on dev.xwiki.org  \nvmassol - (19:17): can't find them on http://dev.xwiki.org/xwiki/bin/view/Community/DevelopmentPractices  \nCalebJamesDeLisl - (19:18): I don't remember seeing it, I just scrolled down and used what seemed like the newest standards in the applicationResources.  \nvmassol - (19:18): it was discussed and agree in emails  \nvmassol - (19:18): agreed  \nvmassol - (19:18): we need to put it on xwiki.org  \nvmassol - (19:18): if it's not already there  \nvmassol - (19:19): now we need to find the email thread....  \nCalebJamesDeLisl - (19:19): The problem with conventions is there are so many of them and they're (seemingly) always changing.  \nvmassol - (19:20): then you should vote ?1 when there's a vote email to change them!  \nvmassol - (19:20): (but you'd need a good argument obviously)  \nvmassol - (19:20): like I'm proposing to change our component annotations  \nvmassol - (19:20): this is a change  \nvmassol - (19:21): you could say ?1 if you don't agree  \nCalebJamesDeLisl - (19:21): I hate to use a -1 unless it's going to be a security or performance regression.  \nvmassol - (19:21): in general we change when the new solution is better  \nvmassol - (19:21): CalebJamesDeLisl: indeed you can't say ?1 without a good reason  \nvmassol - (19:22): but if you prefer stability vs improvement you can say so  \nvmassol - (19:22): IMO any project that doesn't refactor is a dead project but that's my personal opinion  \nCalebJamesDeLisl - (19:22): The problem is the state of the art is always changing but changing standards creates friction which drags down development.  \nvmassol - (19:23): (dead as in the sense: others will beat it no too long and the cost of change later down the chain will too high to be possible  \nvmassol - (19:23): )  \nvmassol - (19:23): yes  \nvmassol - (19:23): there needs to be a good speed  \nvmassol - (19:23): not too fast and not too slow  \nvmassol - (19:23): re translation naming we've only agreed once  \nvmassol - (19:24): so you can't blame rapid changes  \nCalebJamesDeLisl - (19:24): But that's in reference to standards/api. Code can always be refactored as long as it maintains behavior.  \nglerouge left at 19:25 (Quit: Leaving.  \nvmassol - (19:25): yes but you need to make changes too  \nvmassol - (19:25): functional changes  \nvmassol - (19:25): api changes  \nvmassol - (19:25): the annotation change I'm proposing is a good example  \nvmassol - (19:25): we could decide not to make any change  \nCalebJamesDeLisl - (19:26): So you're changing the component manager to a third party piece?  \nvmassol - (19:26): that's my next proposal indeed ;)  \nvmassol - (19:26): the one I sent was only for some annotation changes  \nvmassol - (19:26): (to align with JSR330)  \nvmassol - (19:27): but now I think it's best to also be standard on the whole component dev model  \nvmassol - (19:27): I'll make a proposal in a few days, still need to wrap up my finding  \nvmassol - (19:27): findings  \nvmassol - (19:28): re naming rule, found this one: http://xwiki.markmail.org/message/xzz2gqmexkgargbz?q=naming+rule  \nvmassol - (19:28): I recall putting it on xwiki.org but need to find where  \nCalebJamesDeLisl - (19:30): Human readable msg keys would be nice but i see your point about one missed comma etc. and you get the wrong key.  \nCalebJamesDeLisl - (19:31): I don't see the value in \"Choose a user\" being a different translation depending on why you want to chose a user.  \nvmassol - (19:32): because translations depend on the context  \nvmassol - (19:32): they're not universal  \nvmassol - (19:32): one example: in some contexts you have a lot of spaces  \nvmassol - (19:32): in another context you have little space and you need to find words that take less space  \nvmassol - (19:33): even though they're not as good as a more descriptive version  \nCalebJamesDeLisl - (19:33): But in contexts where there is plenty of space, wouldn't the english version be longer?  \nCalebJamesDeLisl - (19:34): (I never thought about the problem that translations should match the length of the original.)  \nvmassol - (19:35): I mean for a given language  \nvmassol - (19:35): not across languages  \nvmassol - (19:35): the other reason for the namespace  \nCalebJamesDeLisl - (19:35): I guess I'm confused about how you are using the word \"contexts\".  \nvmassol - (19:35): is to know where it applies  \nCalebJamesDeLisl - (19:36): I was assuming you meant that sometimes there is a little space (in a panel or next to an input field.)  \nvmassol - (19:37): yes  \nCalebJamesDeLisl - (19:37): But in that case you have a short english version and the translations should follow suite.  \nCalebJamesDeLisl - (19:38): (here I am deprecating the practice of changing standards while discussing a change in standards :) \u00a0)  \nvmassol - (19:39): ;)  \nvmassol - (19:39): got to go caleb  \nvmassol - (19:39): bbm  \nvmassol - (19:39): bbm  \nvmassol - (19:39): bbl  \nCalebJamesDeLisl - (19:39): nice chat, see ya.  \nbblfish1 joined #xwiki at 19:51  \nbblfish left at 19:51 (Read error: Connection reset by peer  \nbblfish joined #xwiki at 20:01  \nbblfish1 left at 20:01 (Read error: Connection reset by peer  \nbblfish1 joined #xwiki at 20:05  \nbblfish left at 20:05 (Read error: Connection reset by peer  \nbblfish joined #xwiki at 20:17  \nbblfish1 left at 20:17 (Read error: Connection reset by peer  \nbblfish left at 20:17 (Client Quit  \nbougie\\_ is now known as bougie ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \nannacondan joined #xwiki at 20:58  \nlucaa joined #xwiki at 21:08  \nsdumitriu - (21:10): gvallarelli: Less orgs, that was the initial total number of orgs that applied  \nsdumitriu - (21:10): I think there are 160 accepted orgs  \nsdumitriu - (21:11): CalebJamesDeLisl: Initially, the l10n keys were short and universal, usually a cleaned variant of the english text  \nsdumitriu - (21:11): And it was bad  \nsdumitriu - (21:12): Like, when the english text was rephrased to sound better, you still had the old key  \nsdumitriu - (21:12): So it was confusing, the key saying something, the text saying something else  \nsdumitriu - (21:12): When you have to translate, what do you trust?  \nsdumitriu - (21:13): Also, the fact that we had universal short words was also bad  \nsdumitriu - (21:13): You can still look at the start of ApplicationResources.properties to see the old keys  \nsdumitriu - (21:14): Bad because \"edit\" was used in all the places, menus, links, access rights, etc.  \nsdumitriu - (21:15): And while this works in English, where the same word can be used for verbs and nouns, all persons, all tenses, when you try to fit one word with all these meanings in German, you find that it's impossible  \nsdumitriu - (21:16): German is more strict, it has different endings for different uses of one word  \nsdumitriu - (21:16): And the same in most other languages  \nsdumitriu - (21:17): Thus, it's better to use the purpose of the text being translated as the key, instead of a form of the actual text  \nsdumitriu - (21:17): Oh, and the fact that we had short one-word translations lead to trying to reuse too much  \nsdumitriu - (21:18): Thus, short messages were a longer one would have been better, just because we already had it translated  \ntmortagne joined #xwiki at 21:18  \ntmortagne left at 21:18 (Client Quit  \nsdumitriu - (21:18): And mixing non-translated words with already-existing keys  \nsdumitriu - (21:19): Thus, the final text ended up as some engrish freak in other languages  \nnpm left at 21:30 (Ping timeout: 260 seconds  \nnpm joined #xwiki at 21:32  \nCalebJamesDeLisl - (21:34): Interesting.  \ngvallarelli - (21:36): got to go, good evening or what else ;)  \nCalebJamesDeLisl - (21:36): See ya.  \ngvallarelli left at 21:36 (Quit: goodbye  \nCalebJamesDeLisl - (21:40): Trouble with the current system is you have configuration parameters like registration\\_heading=$msg.get('xe.admin.registration.heading') or some such thing which isn't user friendly.  \nCalebJamesDeLisl - (21:42): If the key was the English version then the parameter could be registration\\_heading=\"Join the community\" and the code could try a msg.get on what ever the parameter was.  \nsdumitriu - (21:44): One limitation is that the java resource bundles that we're currently using don't allow spaces or other special characters inside the key  \nCalebJamesDeLisl - (21:45): Those sorts of things can be dealt with, the one to many mapping of english words to german is a problem for my idea though.  \nsdumitriu - (21:47): http://www.w3.org/International/articles/text-reuse/  \nsdumitriu - (21:48): http://www.w3.org/International/articles/composite-messages/  \nCalebJamesDeLisl - (21:50): Wow, English is like the javascript of language.  \nCalebJamesDeLisl - (21:50): Or maybe perl,  \nCalebJamesDeLisl - (21:50): .  \nsdumitriu - (21:52): These slides are really good: http://www.w3.org/blog/International?blog=1&s=talk-ishida&sentence=sentence&submit=Search  \nannacondan left at 21:53 (Quit: annacondan  \nannacondan joined #xwiki at 21:57  \nsdumitriu - (21:57): vmassol: Why do you say that 16 is not polished?  \nannacondan left at 21:58 (Client Quit  \nCalebJamesDeLisl - (22:02): Do we have a way of dealing with russian/arabic plural?  \nsdumitriu - (22:03): Nope  \nsdumitriu - (22:03): I mean, not right now, but it's possible to handle it  \nsdumitriu - (22:03): The MessageFormat class that we're using is powerful  \nCalebJamesDeLisl - (22:04): I seem to recall Reddit has a directory of py files just for plural.  \nsdumitriu - (22:05): You can, at the moment, format differently for specific numbers  \nsdumitriu - (22:05): We do in a few places in english  \nCalebJamesDeLisl - (22:06): There must be some standardized way that the language is broken eg: page(s) because not all programmers are that motivated.  \nmflorea joined #xwiki at 22:12  \nCalebJamesDeLisl - (22:23): Just got done reading wikipedia about how different languages use gender. No more complaints about l10n.  \nplunden joined #xwiki at 22:48  \nDenis1 joined #xwiki at 22:52  \nDenis left at 22:52 (Read error: Connection reset by peer  \nDenis1 left at 23:11 (Quit: Leaving.  \nmflorea left at 23:22 (Quit: Leaving.  \nvmassol left at 23:34 (Quit: Leaving.  \n\n"}