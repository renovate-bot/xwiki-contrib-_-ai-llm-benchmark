{"id": "dev:IRC.xwikiArchive20110927", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110927", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:23\u00a0<mflorea>\u00a0has quit  \n00:24\u00a0<rrodriguez>\u00a0has quit  \n01:34\u00a0<pturcotte>\u00a0has joined #xwiki  \n03:37\u00a0<DrLou>\u00a0has quit  \n05:35\u00a0<vmassol>\u00a0has joined #xwiki  \n06:40\u00a0<@sdumitriu>\u00a0Hehe, I have a release.sh script :)  \n06:41\u00a0<vmassol>\u00a0nice  \n06:44\u00a0<@sdumitriu>\u00a0It only requires entering the GPG passphrase because we don't have gpg-agent on the agent machine  \n06:44\u00a0<@sdumitriu>\u00a0But other than that, it's fully automated  \n06:45\u00a0<vmassol>\u00a0sdumitriu: I tried running the script you gave me for moving the new model but I'm on \u00a0a mac and my sed is a different one that the one you've used and ATM I don't have enough knowledge to fix the sed script (the 'T' command isn't known on my sed). I'll probably just run it on one of the build agent.  \n06:45\u00a0<@sdumitriu>\u00a0Well, it doesn't do the non-git stuff, like updating xwiki.org and publishing announcements  \n06:45\u00a0<vmassol>\u00a0of course  \n06:45\u00a0<@sdumitriu>\u00a0I'll write one for those steps as well :)  \n06:45\u00a0<vmassol>\u00a0going to be fun for the external site updates ;)  \n06:46\u00a0<@sdumitriu>\u00a0vmassol: sed --version  \n06:46\u00a0<vmassol>\u00a0see that doesn't even work ;)  \n06:46\u00a0<@sdumitriu>\u00a0Yeah, I have to watch with http-headers or firebug what URLs to call  \n06:47\u00a0<vmassol>\u00a0but don't worry the simpler is for me to run it on an agent probably  \n06:47\u00a0<@sdumitriu>\u00a0Yep  \n06:50\u00a0<@sdumitriu>\u00a0Cool, I mixed bash, git, sed, mvn, xslt, find, grep, cut, shell escapes  \n06:50\u00a0<vmassol>\u00a0:)  \n06:50\u00a0<vmassol>\u00a0don't ask anyone to maintain it!  \n06:51\u00a0<vmassol>\u00a0(must be fun)  \n06:51\u00a0<@sdumitriu>\u00a0Just cjdelisle since he likes that as well  \n06:51\u00a0<@sdumitriu>\u00a0BTW, you're up early  \n06:51\u00a0<vmassol>\u00a0yeah just drove my kid at 5:50 to a train, he's doing a school travel to Germany for 8 days  \n06:53\u00a0<@sdumitriu>\u00a0vmassol: Where's the documentation for the Jira APIs?  \n06:53\u00a0<vmassol>\u00a0the REST one?  \n06:53\u00a0<@sdumitriu>\u00a0Yes  \n06:53\u00a0<vmassol>\u00a0http://extensions.xwiki.org/xwiki/bin/view/Extension/JIRA+Integration  \n06:54\u00a0<@sdumitriu>\u00a0Thanks  \n06:55\u00a0<vmassol>\u00a0it's a very early api though  \n06:55\u00a0<vmassol>\u00a0missing things and I don't find it easy to use  \n06:56\u00a0<vmassol>\u00a0for example when you do a search you don't get the issues but a BasicIssue which doesn't have any data, just a key, so you need to do another query for each BasicIssue to get the full issue with data  \n06:58\u00a0<@sdumitriu>\u00a0vmassol: Any good json library you can recommend me?  \n06:58\u00a0<vmassol>\u00a0the groovy one?  \n06:59\u00a0<vmassol>\u00a0the json slurper is nice  \n06:59\u00a0<vmassol>\u00a0the advantage of using groovy as a shell script is that we can do reuse in wiki pages ;)  \n06:59\u00a0<vmassol>\u00a0(or vice versa)  \n07:00\u00a0<@sdumitriu>\u00a0Yep, going to do that  \n07:01\u00a0<vmassol>\u00a0(and since we all know java it's easy for us to undestand groovy script)  \n07:01\u00a0<Denis2>\u00a0has joined #xwiki  \n07:02\u00a0<Denis>\u00a0has quit  \n07:05\u00a0<vmassol>\u00a0all tests are failing in platform strange  \n07:06\u00a0<vmassol>\u00a0\"java.lang.RuntimeException: Component manager has not been initialized before lookup for [org.xwiki.context.Execution] for hint [default]\"  \n07:06\u00a0<vmassol>\u00a0has soeone added MessageToolVelocityContextInitializer ?  \n07:07\u00a0<vmassol>\u00a0doing a git pull to check  \n07:09\u00a0<vmassol>\u00a0indeed I see you've added it sdumitriu  \n07:09\u00a0<vmassol>\u00a0for XWIKI-7009  \n07:09\u00a0<vmassol>\u00a0all tests are failing now in platform  \n07:10\u00a0<@sdumitriu>\u00a0Hm...  \n07:11\u00a0<@sdumitriu>\u00a0How to fix that?  \n07:11\u00a0<vmassol>\u00a0btw the msg variable is alredy put in the velocity context elsewhere, did you change that part too?  \n07:11\u00a0<@sdumitriu>\u00a0No  \n07:11\u00a0<vmassol>\u00a0so it's put twice?  \n07:12\u00a0<@sdumitriu>\u00a0Yes  \n07:12\u00a0<@sdumitriu>\u00a0I thought about that  \n07:12\u00a0<vmassol>\u00a0not very nice  \n07:12\u00a0<@sdumitriu>\u00a0And my conclusion was that it's better this way  \n07:12\u00a0<@sdumitriu>\u00a0Since otherwise the old $msg might be deprecated  \n07:12\u00a0<@sdumitriu>\u00a0Don't know how I got to that conclusion, though...  \n07:12\u00a0<vmassol>\u00a0:)  \n07:13\u00a0<vmassol>\u00a0i don't see why we would need to put it again the second time  \n07:13\u00a0<@sdumitriu>\u00a0Since it shouldn't be possible to change the locale during the request  \n07:13\u00a0<vmassol>\u00a0your new initializer should be enough  \n07:13\u00a0<@sdumitriu>\u00a0vmassol: Works at runtime, so it's a test framework initialization problem  \n07:14\u00a0<@sdumitriu>\u00a0Do you know a quick way to fix it?  \n07:14\u00a0<vmassol>\u00a0I'm looking  \n07:15\u00a0<vmassol>\u00a0the problem is that you're using old apis in a new initializer  \n07:15\u00a0<vmassol>\u00a0I'm checking how to make this work  \n07:16\u00a0<@sdumitriu>\u00a0OK, ping me when you find something  \n07:17\u00a0<vmassol>\u00a0sure  \n07:17\u00a0<@sdumitriu>\u00a0vmassol: WDYT about using the same version format on jira as on git?  \n07:17\u00a0<@sdumitriu>\u00a0Instead of 3.2 M3 use 3.2-milestone-3  \n07:18\u00a0<vmassol>\u00a0it's just longer to type but there's auto complete now\u2026 I'm ok but I'm wondering if we need to change past names too.  \n07:19\u00a0<@sdumitriu>\u00a0No, just future  \n07:20\u00a0<vmassol>\u00a0sdumitriu: it's hard to fix for the tests  \n07:20\u00a0<vmassol>\u00a0the way to make it work is by setting the CM in web.Utils  \n07:20\u00a0<vmassol>\u00a0but oldcore isn't visible from the test fwk  \n07:21\u00a0<vmassol>\u00a0the issue is that your new initializer uses some oldcore api  \n07:21\u00a0<vmassol>\u00a0namely: Utils.getContext();  \n07:21\u00a0<vmassol>\u00a0but that's easy to fix  \n07:21\u00a0<@sdumitriu>\u00a0Yes  \n07:23\u00a0<vmassol>\u00a0btw we had a placeholder for moving stuf from velocity manager in a velocity context intiializer: XWikiVelocityContextInitializer  \n07:24\u00a0<vmassol>\u00a0ok so the msg tool is put in 3 places now  \n07:24\u00a0<vmassol>\u00a0-prepareResources  \n07:24\u00a0<vmassol>\u00a0- velocity context initializer  \n07:24\u00a0<vmassol>\u00a0- default velocity manager (checks if present first)  \n07:24\u00a0<vmassol>\u00a0we'll need to rationalize this  \n07:25\u00a0<vmassol>\u00a0re MessageToolVelocityContextInitializer an injection of Execution should do the trick  \n07:26\u00a0<vmassol>\u00a0should I let you do the fix?  \n07:26\u00a0<vmassol>\u00a0(sdumitriu)  \n07:28\u00a0<@sdumitriu>\u00a0Is it added in default velocity manager?  \n07:29\u00a0<@sdumitriu>\u00a0It wasn't available when parsing document titles in the lucene plugin  \n07:29\u00a0<vmassol>\u00a0yes:  \n07:29\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Ugly hack. The MessageTool object is created in xwiki.prepareResources(). It's also put in the  \n07:29\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Velocity context there. However if we create a new Velocity context we need to populate it with  \n07:29\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// the message tool. This needs to be refactored to be made clean.  \n07:29\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Object msg = xcontext.get(\"msg\");  \n07:29\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (msg != null) {  \n07:29\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (vcontext.get(\"msg\") == null) {  \n07:29\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vcontext.put(\"msg\", msg);  \n07:29\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \n07:29\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \n07:30\u00a0<@sdumitriu>\u00a0Still, it wasn't available in lucene  \n07:30\u00a0<@sdumitriu>\u00a0Is there another way of obtaining a velocity context?  \n07:30\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0VelocityContext vcontext =  \n07:30\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(VelocityContext) this.execution.getContext().getProperty(  \n07:30\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0VelocityExecutionContextInitializer.VELOCITY\\_CONTEXT\\_ID);  \n07:31\u00a0<vmassol>\u00a0if you do this you'll bypass the default velocity manager  \n07:31\u00a0<vmassol>\u00a0which is why I created XWikiVelocityContextInitializer  \n07:31\u00a0<vmassol>\u00a0which is supposed to be the right location for vcontext init  \n07:32\u00a0<vmassol>\u00a0but right now it's empty:  \n07:32\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0public void initialize(VelocityContext context)  \n07:32\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0{  \n07:32\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// TODO: Move the Velocity Context initialization code currently located in  \n07:32\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// VelocityManager.getVelocityContext() here. This requires some refactoring as  \n07:32\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// it means the XWiki object must be initialized before this code is called.  \n07:32\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0}  \n07:33\u00a0<@sdumitriu>\u00a0maven.xwiki.org doesn't respons  \n07:33\u00a0<@sdumitriu>\u00a0respond  \n07:37\u00a0<vmassol>\u00a0sdumitriu: so did you get what I said on how to fix MessageToolVelocityContextInitializer?  \n07:37\u00a0<@sdumitriu>\u00a0No, not really  \n07:38\u00a0<vmassol>\u00a0ok so you need to remove this: XWikiContext xcontext = Utils.getContext();  \n07:38\u00a0<vmassol>\u00a0and instead add @Inject Execution execution  \n07:38\u00a0<vmassol>\u00a0and get the xwiki context from \u00a0this.execution  \n07:38\u00a0<@sdumitriu>\u00a0Ah, OK  \n07:38\u00a0<@sdumitriu>\u00a0Right  \n07:39\u00a0<@sdumitriu>\u00a0I forgot I was in a component  \n08:00\u00a0<mflorea>\u00a0has joined #xwiki  \n08:50\u00a0<vmassol>\u00a0has quit  \n08:54\u00a0<sburjan`>\u00a0has left #xwiki  \n08:54\u00a0<sburjan`>\u00a0has joined #xwiki  \n08:54\u00a0<sburjan`>\u00a0has quit  \n08:54\u00a0<sburjan`>\u00a0has joined #xwiki  \n09:01\u00a0<evalica>\u00a0has joined #xwiki  \n09:08\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:17\u00a0<+mflorea>\u00a0sdumitriu: ping  \n09:43\u00a0<sburjan>\u00a0has joined #xwiki  \n09:44\u00a0<+mflorea>\u00a0tmortagne: Good morning. sdumitriu broke the build with https://github.com/xwiki/xwiki-platform/commit/ffb85ea108b5800bc8462d2e3610db4e108d14d1 . The problem is that the VelocityContextInitializer he added (!!a component!!) uses indirectly Utils.getComponent to access the Execution instead of using the injection mechanism.  \n09:44\u00a0<+mflorea>\u00a0\u00a0As a consequence, all AbstractComponentTestCase's are failing because they don't set the CM on the Utils. I'm going to remove the method he added to Utils and get the Execution with injection. This is the right thing to do, right?  \n09:46\u00a0<+tmortagne>\u00a0mflorea: checking but yes I don't see why a component would use Utis#getComponent  \n09:46\u00a0<+tmortagne>\u00a0maybe he moved some code as component and forget about CM injection  \n09:48\u00a0<+mflorea>\u00a0I suppose sdumitriu thought that by adding a method to Utils we can avoid duplicating code when accessing the XWikiContext from a component  \n09:48\u00a0<+tmortagne>\u00a0yea don't know but it's very bad  \n09:49\u00a0<+mflorea>\u00a0anyway, I'll remove the Utils method and use the injected Execution  \n09:49\u00a0<+tmortagne>\u00a0you can keep the getContext in utils since it's useful for old code  \n09:49\u00a0<+mflorea>\u00a0well  \n09:49\u00a0<+mflorea>\u00a0that's the problem  \n09:49\u00a0<+mflorea>\u00a0you can't use it from a component  \n09:49\u00a0<+tmortagne>\u00a0for old code  \n09:50\u00a0<+tmortagne>\u00a0there is some old code here and there which does not have directly the XWikiContext  \n09:50\u00a0<+mflorea>\u00a0MessageToolVelocityContextInitializer is in old core, but it is a component and can't use this  \n09:50\u00a0<+tmortagne>\u00a0like old API not taking the XWikiContext as parameter but now needs it  \n09:50\u00a0<+tmortagne>\u00a0old code=non component  \n09:50\u00a0<+mflorea>\u00a0ok  \n09:51\u00a0<+mflorea>\u00a0but I'll add a warning comment  \n09:52\u00a0<+tmortagne>\u00a0sure  \n09:53\u00a0<+tmortagne>\u00a0btw using VelocityContextInitializer seems wrong to me  \n09:53\u00a0<+tmortagne>\u00a0that should be used only for velocity specific things  \n09:53\u00a0<+tmortagne>\u00a0and I don't see why other language would not need msg tool  \n09:54\u00a0<+mflorea>\u00a0I think this is a workaround for the lucene search  \n09:54\u00a0<+mflorea>\u00a0lucene indexer actually  \n09:54\u00a0<+mflorea>\u00a0which didn't have $msg in the velocity context  \n09:55\u00a0<+tmortagne>\u00a0not sure what lucene indexer have to do with velocity  \n09:55\u00a0<+mflorea>\u00a0I think it indexes the rendered title  \n09:55\u00a0<+mflorea>\u00a0of a document  \n09:55\u00a0<+mflorea>\u00a0and some documents use $msg in their title  \n09:56\u00a0<+mflorea>\u00a0http://jira.xwiki.org/browse/XWIKI-7009  \n09:56\u00a0<+tmortagne>\u00a0hmm, still does not change the fact that msg should be available for any language and not just velocity  \n09:57\u00a0<xipe>\u00a0has quit  \n09:57\u00a0<+tmortagne>\u00a0or maybe see it as deprecated and wait for a service instead which would be clear actually  \n09:58\u00a0<+tmortagne>\u00a0yep actually -1 to put $msg in script context :)  \n09:58\u00a0<+mflorea>\u00a0but the ScriptService would be used with $services.msg and we would need to update all \u00a0calls to $msg  \n09:58\u00a0<+tmortagne>\u00a0mflorea: yes but it's the right way  \n09:58\u00a0<+tmortagne>\u00a0it's a service  \n09:59\u00a0<+mflorea>\u00a0sure  \n09:59\u00a0<+tmortagne>\u00a0what I said is that it's better not starting to use it in other languages than velocity  \n09:59\u00a0<+mflorea>\u00a0but Sergiu's commit was a quick fix for 3.2M3  \n09:59\u00a0<+mflorea>\u00a0yep  \n09:59\u00a0<+tmortagne>\u00a0so I'm ok to have it only in the velocity context  \n09:59\u00a0<+tmortagne>\u00a0sure but it's not introducing anything new  \n10:00\u00a0<+tmortagne>\u00a0just doing it the right way, not sure how msg used to be injected in velocity context  \n10:01\u00a0<+mflorea>\u00a0me neither, and there's no code deleted in this commit, so I suppose the old code that was injecting $msg is still executed  \n10:02\u00a0<+tmortagne>\u00a0I guess  \n10:03\u00a0<+tmortagne>\u00a0its probably somewhere directly in the xwiki velocity engine  \n10:07\u00a0<+sburjan>\u00a0any idea when we'll have an M3 ?  \n10:08\u00a0<+tmortagne>\u00a0sburjan: looks like sdumitriu started it as far as i can see in the notifications so I guess today or tomorrow at worst  \n10:09\u00a0<+sburjan>\u00a0ok  \n10:12\u00a0<+sburjan>\u00a0I'm getting so spammed by Jenkins  \n10:12\u00a0<+tmortagne>\u00a0sburjan: i'm separating everything in gmail labels  \n10:13\u00a0<+sburjan>\u00a0well how can you separate what comes to notifications list ?  \n10:13\u00a0<+sburjan>\u00a0I have a tom of labels too  \n10:13\u00a0<+sburjan>\u00a0\\*ton  \n10:13\u00a0<+tmortagne>\u00a0based on the subject or the sender etc...  \n10:13\u00a0<+tmortagne>\u00a0let me give you my filters  \n10:14\u00a0<+tmortagne>\u00a0would be nice to be able to export them  \n10:14\u00a0<+sburjan>\u00a0at least so I ca see them :)  \n10:18\u00a0<vmassol>\u00a0has joined #xwiki  \n10:22\u00a0<xipe>\u00a0has joined #xwiki  \n10:33\u00a0<vmassol>\u00a0sdumitriu: did you fix the build?  \n10:40\u00a0<+sburjan>\u00a0I think he is sleeping  \n10:40\u00a0<vmassol>\u00a0we talked earlier  \n10:40\u00a0<+mflorea>\u00a0vmassol: I'm trying to fix the build. I've changed Sergiu's commit but I still have some tests failing  \n10:40\u00a0<vmassol>\u00a0mflorea: did you see what I mentioned this morning on how to fix it?  \n10:41\u00a0<vmassol>\u00a0I explained to sergiu how to fix and he said he was fixing it  \n10:41\u00a0<vmassol>\u00a0(around 6:30-7:00 in the morning)  \n10:41\u00a0<+mflorea>\u00a0no, I haven't seen what you discussed with Sergiu  \n10:41\u00a0<vmassol>\u00a0the last part:  \n10:41\u00a0<vmassol>\u00a0ok so you need to remove this: XWikiContext xcontext = Utils.getContext();  \n10:41\u00a0<vmassol>\u00a07:38  \n10:41\u00a0<vmassol>\u00a0and instead add @Inject Execution execution  \n10:41\u00a0<vmassol>\u00a07:38  \n10:41\u00a0<vmassol>\u00a0and get the xwiki context from \u00a0this.execution  \n10:41\u00a0<+mflorea>\u00a0I changed MessageToolVCI to use the injected execution  \n10:41\u00a0<+mflorea>\u00a0yep  \n10:42\u00a0<+mflorea>\u00a0that's what I did  \n10:42\u00a0<vmassol>\u00a0ok cool  \n10:42\u00a0<+mflorea>\u00a0but I still have 3 tests failing in old core, I'm looking at them  \n10:42\u00a0<vmassol>\u00a0ok  \n10:49\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:58\u00a0<Denis2>\u00a0is now known as <Denis>  \n11:08\u00a0<DrLou>\u00a0has joined #xwiki  \n11:15\u00a0<vmassol>\u00a0mflorea: can you check EmptyAttributeFilter. I think it's missing a @Component and @Named annotations (same for all filters in the same package)  \n11:15\u00a0<vmassol>\u00a0right now it seems they'll overwrite each other  \n11:15\u00a0<+mflorea>\u00a0sure  \n11:19\u00a0<vmassol>\u00a0btw mflorea I think we can safely assume that the EC is never null  \n11:19\u00a0<vmassol>\u00a0(ie code calling execution.getContext() don't need to test for null)  \n11:19\u00a0<+mflorea>\u00a0ok, I just wanted to keep Sergiu's intention  \n11:20\u00a0<+mflorea>\u00a0I'll update the code  \n11:20\u00a0<vmassol>\u00a0for the xwikicontext itself I don't know\u2026 better be safe  \n11:20\u00a0<+tmortagne>\u00a0unless you are implementing a ExecutionContextInitialized but appart from this should be ok yes  \n11:24\u00a0<vmassol>\u00a0mflorea: I'd remove public static XWikiContext getContext()  \n11:24\u00a0<vmassol>\u00a0it's no longer needed right?  \n11:24\u00a0<vmassol>\u00a0tmortagne: even when you're implementing ExecutionContextInitialized  \n11:24\u00a0<+mflorea>\u00a0yes, I wanted to remove it but tmortagne said it might be useful for non-component code  \n11:25\u00a0<vmassol>\u00a0tmortagne: I've made sure it's always initialized before  \n11:25\u00a0<+tmortagne>\u00a0vmassol: ok  \n11:25\u00a0<vmassol>\u00a0mflorea: I'd prefer waiting for a use case  \n11:25\u00a0<+mflorea>\u00a0(10:49:33 AM) tmortagne: you can keep the getContext in utils since it's useful for old code  \n11:25\u00a0<vmassol>\u00a0(ie a real need)  \n11:25\u00a0<+tmortagne>\u00a0vmassol: we already have use cases actually  \n11:25\u00a0<vmassol>\u00a0then change code to use it, I'd like to see one usage at least  \n11:25\u00a0<+tmortagne>\u00a0code to make use this instead of recoding the way to get the XWikiContext  \n11:26\u00a0<+tmortagne>\u00a0there is several in XWikiDocument IIRW  \n11:27\u00a0<+tmortagne>\u00a0in XWikiDocument#getXWikiContext()  \n11:27\u00a0<vmassol>\u00a0I'm fine to keep it, but in the commit it would be nice to show the way by chagning at least one existing location to use it  \n11:28\u00a0<vmassol>\u00a0mflorea:  \n11:28\u00a0<+tmortagne>\u00a0+1  \n11:28\u00a0<vmassol>\u00a0did you check the filters?  \n11:28\u00a0<+tmortagne>\u00a0you can change the XWikiDocument ones  \n11:28\u00a0<+mflorea>\u00a0I'm on it, but I'm updating the rest of the wysiwyg-server code (@Override, @Inject, etc.)  \n11:29\u00a0<+mflorea>\u00a0at the same time  \n11:29\u00a0<vmassol>\u00a0ok cool  \n11:29\u00a0<vmassol>\u00a0:)  \n11:29\u00a0<vmassol>\u00a0I already did a few  \n11:29\u00a0<vmassol>\u00a0make sure you git pull first  \n11:29\u00a0<+mflorea>\u00a0ok  \n11:29\u00a0<vmassol>\u00a0I did the logger too  \n11:29\u00a0<vmassol>\u00a0(in those places, I haven't covered all code base)  \n11:30\u00a0<+mflorea>\u00a0there were still places with old logger  \n11:30\u00a0<vmassol>\u00a0yes  \n11:30\u00a0<vmassol>\u00a0I'd like to add a check at some point to ensure we don't use log4j or commons logging  \n11:30\u00a0<vmassol>\u00a0(a checkstyle check that is)  \n11:38\u00a0<vmassol>\u00a0mflorea: wait  \n11:38\u00a0<vmassol>\u00a0my push didn't work and I didn't notice  \n11:38\u00a0<vmassol>\u00a0done  \n11:38\u00a0<+mflorea>\u00a0vmassol: wysiwyg cleaning filters are fine because I didn't declare them in components.txt. My HTML cleaner instantiates them.  \n11:38\u00a0<vmassol>\u00a0sorry about that  \n11:39\u00a0<vmassol>\u00a0I had changed quite a few things  \n11:39\u00a0<+mflorea>\u00a0let's see  \n11:46\u00a0<+mflorea>\u00a0vmassol: you did pretty much everything :)  \n11:46\u00a0<vmassol>\u00a0I probably missed \u00a0a few ;)  \n11:47\u00a0<vmassol>\u00a0DefaultHTMLConverter isn't done for ex  \n12:06\u00a0<+mflorea>\u00a0vmassol: can I inject a list of components? matching a list of hints  \n12:07\u00a0<+mflorea>\u00a0e.g. @Inject @Named(\"one\", \"two\", \"three\") List<HTMLFilter> filters;  \n12:09\u00a0<vmassol>\u00a0you can inject a List or Map yes but not a defined list  \n12:10\u00a0<vmassol>\u00a0I'm pretty sure this isn't supported by JSR330  \n12:10\u00a0<+mflorea>\u00a0ok  \n12:10\u00a0<vmassol>\u00a0http://code.google.com/p/atinject/  \n12:11\u00a0<vmassol>\u00a0http://code.google.com/p/atinject/source/browse/trunk/src/javax/inject/Named.java  \n12:11\u00a0<vmassol>\u00a0but  \n12:11\u00a0<vmassol>\u00a0@Inject @Named(\"one\") @Named(\"two\") List<HTMLFilter> filters;  \n12:11\u00a0<vmassol>\u00a0we could support that one if we wanted  \n12:12\u00a0<vmassol>\u00a0sounds a bit too complex right now  \n12:12\u00a0<vmassol>\u00a0I prefer that we write:  \n12:12\u00a0<+mflorea>\u00a0indeed  \n12:12\u00a0<vmassol>\u00a0@Inject @Named(\"one\") private MyClas one;  \n12:12\u00a0<vmassol>\u00a0@Inject @Named(\"two\") private MyClas two;  \n12:12\u00a0<+mflorea>\u00a0yes, but when you have 6+ filters, it's a pain :)  \n12:13\u00a0<vmassol>\u00a0one solution is for you to have a specific interface  \n12:13\u00a0<vmassol>\u00a0extending Filter  \n12:13\u00a0<vmassol>\u00a0and then implement that interface  \n12:13\u00a0<vmassol>\u00a0and then you can get a list injected  \n12:13\u00a0<vmassol>\u00a0s/Filter/HTMLFilter/  \n12:14\u00a0<+sburjan>\u00a0vmassol: I replied to the mail you've sent me  \n12:14\u00a0<+sburjan>\u00a0(about browsers)  \n12:14\u00a0<+mflorea>\u00a0hmm, the list will contain all the available implementations right?  \n12:14\u00a0<vmassol>\u00a0sburjan: yep seen it, will reply  \n12:14\u00a0<vmassol>\u00a0mflorea: yes, but if the interface is your own one it's ok  \n12:14\u00a0<vmassol>\u00a0it's actually good  \n12:14\u00a0<vmassol>\u00a0since it allows extending it  \n12:14\u00a0<vmassol>\u00a0by users  \n12:15\u00a0<vmassol>\u00a0s/it/the list of filters that should run/  \n12:15\u00a0<vmassol>\u00a0and moreover what's best is that your components will not show up  \n12:15\u00a0<vmassol>\u00a0as HTMLFilter implementation elsewheer  \n12:16\u00a0<vmassol>\u00a0(right now I don't think you want that, although that could be a valid use case)  \n12:16\u00a0<vmassol>\u00a0mflorea: if you make them components be careful that other places in our code don't get a List since they'll get it too and they'll execute ;)  \n12:16\u00a0<vmassol>\u00a0(unless you use your own interface as I proposed above)  \n12:17\u00a0<+mflorea>\u00a0yep  \n12:17\u00a0<+mflorea>\u00a0I understand  \n12:17\u00a0<+mflorea>\u00a0but  \n12:17\u00a0<evalica1>\u00a0has joined #xwiki  \n12:18\u00a0<+mflorea>\u00a0on the other hand, even if I add an interface, if existing code outside wysiwyg is injecting a list then it will get my filters too  \n12:18\u00a0<vmassol>\u00a0depends  \n12:18\u00a0<vmassol>\u00a0not if you do this:  \n12:18\u00a0<vmassol>\u00a0@Component(roles= {yourole.class})  \n12:19\u00a0<+mflorea>\u00a0right  \n12:19\u00a0<+mflorea>\u00a0:)  \n12:19\u00a0<evalica>\u00a0has quit  \n12:19\u00a0<vmassol>\u00a0if you don't do this then 2 impls will get registered, one fro each interface  \n12:19\u00a0<vmassol>\u00a0s/impls/instances/  \n12:20\u00a0<+mflorea>\u00a0yep  \n12:38\u00a0<+sburjan>\u00a0any idea if sdumitriu commited the search/lucene fix ?  \n12:39\u00a0<+mflorea>\u00a0this one http://jira.xwiki.org/browse/XWIKI-7009 ?  \n12:40\u00a0<mflorea>\u00a0has quit  \n12:46\u00a0<vmassol>\u00a0yes he did  \n12:47\u00a0<+sburjan>\u00a0afaik there was a much major one.. a large commit.. about the rating system. or am I missing something ?  \n12:47\u00a0<vmassol>\u00a0mf   \n12:47\u00a0<vmassol>\u00a0he's left  \n12:47\u00a0<vmassol>\u00a0http://jira.xwiki.org/browse/XWIKI-7009?page=com.xiplink.jira.git.jira-git-plugin:git-commits-tabpanel#issue-tabs  \n12:47\u00a0<+sburjan>\u00a0just this one ?  \n12:48\u00a0<vmassol>\u00a0marius was tlaking about XWIKI-7009  \n12:48\u00a0<vmassol>\u00a0sergiu also committed the move to lucene 3.x if that's what you're after  \n12:49\u00a0<vmassol>\u00a0hmmm platform still not buildung  \n12:49\u00a0<+sburjan>\u00a0https://github.com/xwiki/xwiki-platform/commit/ea711ddd2920559f3c0e876673440fb9c6753c5b  \n12:49\u00a0<+sburjan>\u00a0i think i am referring to this. this has impact on search, right ?  \n12:50\u00a0<vmassol>\u00a0hmm might be caused by me since all test failures are about DefaultSyncEngine  \n12:50\u00a0<vmassol>\u00a0\u00a0which I've touched  \n12:51\u00a0<vmassol>\u00a0the logger isn't injected properly (it's null)  \n12:51\u00a0<vmassol>\u00a0need to find out why  \n12:52\u00a0<vmassol>\u00a0ok I know why  \n12:52\u00a0<vmassol>\u00a0the test is not correct  \n12:52\u00a0<vmassol>\u00a0fixing  \n13:32\u00a0<mflorea>\u00a0has joined #xwiki  \n13:38\u00a0<pturcotte>\u00a0has quit  \n13:42\u00a0<vmassol>\u00a0tmortagne:  \n13:42\u00a0<vmassol>\u00a0nevermind, sending an email  \n14:10\u00a0<+mflorea>\u00a0vmassol: so for a component impl that has multiple hints we still have to use @Component(hints = {...}) right?  \n14:10\u00a0<vmassol>\u00a0yes  \n14:10\u00a0<+mflorea>\u00a0thanks  \n14:17\u00a0<vmassol>\u00a0no more @Requirement in commons, rendering, platform, enterprise!  \n14:18\u00a0<vmassol>\u00a0(actually it's still in the localization module we're not building but I've left it for now)  \n14:19\u00a0<vmassol>\u00a0(I don't even know if that module builds)  \n14:23\u00a0<vmassol>\u00a0tmortagne: do you see any interest in keeping macrovelocity1.test ?  \n14:23\u00a0<vmassol>\u00a0I don't think it proves anything  \n14:28\u00a0<+tmortagne>\u00a0mflorea, vmassol: did not read everything but we do support generics in component manager already  \n14:28\u00a0<+tmortagne>\u00a0I added that some time ago  \n14:28\u00a0<+tmortagne>\u00a0ho you mean giving a list of hints  \n14:29\u00a0<+mflorea>\u00a0tmortagne: yep  \n14:29\u00a0<+tmortagne>\u00a0we only look at one @Named ?  \n14:29\u00a0<+tmortagne>\u00a0not sure we support it in component descriptor actually  \n14:29\u00a0<vmassol>\u00a0yes  \n14:29\u00a0<vmassol>\u00a0only one  \n14:30\u00a0<+mflorea>\u00a0anyway, Vincent's suggestion to use an interface is a better solution for me  \n14:30\u00a0<+tmortagne>\u00a0anyway I think its better to have several variables if you know the hints  \n14:30\u00a0<+tmortagne>\u00a0unless you absolutely want to use it as list maybe  \n14:35\u00a0<+tmortagne>\u00a0vmassol: re macrovelocity1.test, it's in velocity macro or 1.0 parser ?  \n14:36\u00a0<vmassol>\u00a0velocity macro  \n14:37\u00a0<+tmortagne>\u00a0i'm not sure either, do you know for what it has been committed ?  \n14:37\u00a0<+tmortagne>\u00a0I mean the related jira issue  \n14:37\u00a0<vmassol>\u00a0nope I don't know  \n14:37\u00a0<vmassol>\u00a0I can track it  \n14:37\u00a0<+tmortagne>\u00a0it seems a bit comple for a \\*1.test  \n14:37\u00a0<+tmortagne>\u00a0complex  \n14:38\u00a0<+tmortagne>\u00a0usually it's the first test wrote to validate a macro and does not contains much  \n14:38\u00a0<+tmortagne>\u00a0looks like it's macrovelocity2.test  \n14:40\u00a0<+tmortagne>\u00a0it does not even validate indentation cleanup since that is in another test  \n14:40\u00a0<+tmortagne>\u00a0or things like making sure the inner macro is inline when the velocity macro is inline since it's a standalone velocity macro  \n14:40\u00a0<vmassol>\u00a0first commit is: XWIKI-2830: Move velocity macro in xwiki-macros  \n14:41\u00a0<+tmortagne>\u00a0tes that we don't have btw  \n14:41\u00a0<vmassol>\u00a0hmm no that's not hte frist one  \n14:41\u00a0<vmassol>\u00a0the history is broken before that one,  \n14:41\u00a0<vmassol>\u00a0let me check on svnsearch  \n14:42\u00a0<vmassol>\u00a0I do't think there was any reason for this test: http://svnsearch.org/svnsearch/repos/XWIKI/search?start-index=20&filename=macrovelocity1.test#1197018710148  \n14:42\u00a0<vmassol>\u00a0I'll remove it  \n14:42\u00a0<vmassol>\u00a0ok?  \n14:44\u00a0<+tmortagne>\u00a0ok  \n14:45\u00a0<+tmortagne>\u00a0will add \u00a0one about inner macro in inline velocity macro since I don't see one  \n14:55\u00a0<vmassol>\u00a0I'm about to commit once I figure out why git doesn't let me  \n14:56\u00a0<+tmortagne>\u00a0actually inline stuff is validated by  \n14:56\u00a0<+tmortagne>\u00a0macroscript5.testmacroscript5.test  \n14:56\u00a0<+tmortagne>\u00a0macroscript5.test  \n14:57\u00a0<+tmortagne>\u00a0vmassol: are you going to move test numbers to replace the 1.test ?  \n14:57\u00a0<vmassol>\u00a0move test numbers  \n14:57\u00a0<+tmortagne>\u00a0asking because I just fixed a typo in one of the test comment but I just tough it might cause conflict  \n14:57\u00a0<vmassol>\u00a0me too  \n14:57\u00a0<vmassol>\u00a0I fixed several of them  \n14:58\u00a0<+tmortagne>\u00a0it's in macrovelocity7.test  \n14:58\u00a0<+tmortagne>\u00a0acount  \n14:58\u00a0<vmassol>\u00a0yes  \n14:58\u00a0<vmassol>\u00a0fixed already  \n14:58\u00a0<+tmortagne>\u00a0ok then everting mine  \n14:58\u00a0<vmassol>\u00a0in several of them  \n14:58\u00a0<+tmortagne>\u00a0reverting  \n15:00\u00a0<vmassol>\u00a0done  \n15:02\u00a0<vmassol>\u00a0tmortagne: I tihnk we should add an enforcer rule to prevent depending on -legacy modules  \n15:02\u00a0<+tmortagne>\u00a0vmassol: I tough there was one actually  \n15:02\u00a0<vmassol>\u00a0nope  \n15:03\u00a0<vmassol>\u00a0I checked all enforcer rules and couldn't find one  \n15:04\u00a0<+tmortagne>\u00a0ok then yes we should :)  \n15:04\u00a0<+tmortagne>\u00a0are you taking care of it or should I ?  \n15:04\u00a0<vmassol>\u00a0if you can then go ahead since I have some stuff to do now  \n15:05\u00a0<vmassol>\u00a0I'd put it in the top level pom (if my vote email is agreed upon)  \n15:05\u00a0<vmassol>\u00a0and then do exclusions where it's needed  \n15:06\u00a0<vmassol>\u00a0(xe web module for ex)  \n15:06\u00a0<vmassol>\u00a0wdyt?  \n15:06\u00a0<+tmortagne>\u00a0by top level pom you mean commons or platform ?  \n15:06\u00a0<+tmortagne>\u00a0nevermind  \n15:06\u00a0<vmassol>\u00a0commons  \n15:07\u00a0<+tmortagne>\u00a0of course it's commons since the comment about XE would not make sense otherwise :)  \n15:07\u00a0<vmassol>\u00a0tmortagne: do you kno w if we have a jira issue for the code macro not working from time to time? I can't find one  \n15:07\u00a0<vmassol>\u00a0:)  \n15:07\u00a0<+tmortagne>\u00a0vmassol: II you are talking about xwiki.org there is several reason as far as I remember  \n15:07\u00a0<+tmortagne>\u00a0coucurrency and another one  \n15:07\u00a0<vmassol>\u00a0you think it's only a xwiki.org issue?  \n15:07\u00a0<+tmortagne>\u00a0let me search  \n15:08\u00a0<vmassol>\u00a0not a general issue?  \n15:08\u00a0<+tmortagne>\u00a0no  \n15:08\u00a0<+tmortagne>\u00a0a 2.6 issue  \n15:08\u00a0<vmassol>\u00a0ok  \n15:08\u00a0<vmassol>\u00a0ah  \n15:08\u00a0<+tmortagne>\u00a0I mean old issue  \n15:08\u00a0<+tmortagne>\u00a0i.e. there is not know issue right now  \n15:08\u00a0<vmassol>\u00a0how was it fixed? by updating the pygemtns version?  \n15:08\u00a0<+tmortagne>\u00a0s/not know/no known/  \n15:09\u00a0<+tmortagne>\u00a0nothing to do with pygments actyally  \n15:09\u00a0<+tmortagne>\u00a0it's on out side  \n15:09\u00a0<+tmortagne>\u00a0our  \n15:09\u00a0<+tmortagne>\u00a0there is one issue with pygments in this version but it's not a random one  \n15:10\u00a0<+tmortagne>\u00a0it's only with a specific parser so with a specific content where you did not specified explicitely the language  \n15:10\u00a0<vmassol>\u00a0http://jira.xwiki.org/jira/browse/XWIKI-6164 ?  \n15:12\u00a0<+tmortagne>\u00a0yep that's one and it was caused by the fact that code macro was using the same jython engin is two several thread at the same time  \n15:13\u00a0<+tmortagne>\u00a0there is also one issue I remember about several macro in the same page but it was maybe before 2.6  \n15:13\u00a0<vmassol>\u00a0ok thanks, I've replied t the guy on the list  \n15:13\u00a0<vmassol>\u00a0bb in 30mn  \n15:14\u00a0<+tmortagne>\u00a0ha did not looked at the mailing list since I came back after lunch  \n15:17\u00a0<pturcotte>\u00a0has joined #xwiki  \n15:17\u00a0<+tmortagne>\u00a0vmassol: \u00a0will wait for \u00a0the vote to pass before taking care of the enforcer configuration  \n15:37\u00a0<vmassol>\u00a0ok  \n15:38\u00a0<vmassol>\u00a0hmm the build is broken again.. we get this one quite often  \n15:38\u00a0<vmassol>\u00a0http://ci.xwiki.org/job/xwiki-platform/720/console  \n15:38\u00a0<vmassol>\u00a0but I don't know what's causing it  \n15:39\u00a0<vmassol>\u00a0Caused by: java.util.zip.ZipException: The JAR/ZIP file (/home/hudsonagent/.m2/repository/org/apache/xmlbeans/xmlbeans/2.3.0/xmlbeans-2.3.0.jar) seems corrupted, error: error in opening zip file  \n15:41\u00a0<vmassol>\u00a0the jar is ok though (just checked)  \n15:42\u00a0<vmassol>\u00a0triggering a re build for now but we need to find out the cause  \n15:42\u00a0<vmassol>\u00a0happeningon agent-3  \n15:42\u00a0<vmassol>\u00a0seems agent-3 frequently has problems  \n15:43\u00a0<vmassol>\u00a0btw alex has installed agents 5 and 6 now :)  \n15:43\u00a0<+tmortagne>\u00a0yep just seen theses that's cool  \n15:44\u00a0<vmassol>\u00a0they seem ok : http://ci.xwiki.org/computer/agent-5/builds  \n15:44\u00a0<vmassol>\u00a0http://ci.xwiki.org/computer/agent-6/builds  \n15:50\u00a0<vmassol>\u00a0Enygma`: hmm so it means we don't have any functional tests to remove a user?  \n15:50\u00a0<@sdumitriu>\u00a0I'm up  \n15:50\u00a0<@sdumitriu>\u00a0mflorea: Thanks for fixing the build  \n15:50\u00a0<@sdumitriu>\u00a0vmassol: There are lots of use cases for the Utils.getContext method, they just duplicate the code  \n15:52\u00a0<vmassol>\u00a0yes although i don't like statics and it's one line vs one other line\u2026 ;) but ok...  \n15:52\u00a0<@sdumitriu>\u00a0Initially I had the code in MessageToolVelocityContextInitializer inside the Lucene plugin itself, that's why I forgot to replace Utils.getContext with @Inject  \n15:55\u00a0<@sdumitriu>\u00a0Lucene scoring issue: XWIKI-6217  \n15:58\u00a0<@sdumitriu>\u00a0Going to eat something then I'll continue the release  \n15:59\u00a0<vmassol>\u00a0sdumitriu: see on skype, there' s something important for the release  \n16:15\u00a0<+Enygma`>\u00a0vmassol: according to http://jira.xwiki.org/browse/XWIKI-6768 we have tests just for removing users from xwiki (admin section), but I can`t find them  \n16:15\u00a0<+Enygma`>\u00a0as for XWIKI-7011, no, I did not add tests  \n16:30\u00a0<vmassol>\u00a0Enygma`: wanted to know if we have tests but they're not working correctly or if we need some for this  \n16:30\u00a0<+tmortagne>\u00a0sdumitriu: did you created a branch for the release or are you releasing directly from master ?  \n16:31\u00a0<+tmortagne>\u00a0just to know what I can commit  \n16:44\u00a0<@sdumitriu>\u00a0tmortagne: from master  \n16:44\u00a0<+tmortagne>\u00a0ok  \n16:44\u00a0<+tmortagne>\u00a0will avoid committing big refactoring of integration test then :)  \n16:45\u00a0<@sdumitriu>\u00a0So what's the trunk status?  \n16:45\u00a0<@sdumitriu>\u00a0All tests passing?  \n16:45\u00a0<@sdumitriu>\u00a0Nope, build broken  \n16:45\u00a0<@sdumitriu>\u00a0Hm, just an infra problem  \n16:46\u00a0<@sdumitriu>\u00a0\"ERROR: Maven JVM terminated unexpectedly with exit code 134\"  \n16:48\u00a0<+Enygma`>\u00a0vmassol: no tests as far as I can tell  \n16:50\u00a0<@sdumitriu>\u00a0Releasing platform  \n16:54\u00a0<vmassol>\u00a0sdumitriu: once more, can you please check your skype messages. I have some for you  \n16:54\u00a0<@sdumitriu>\u00a0Yes  \n16:54\u00a0<@cjdelisle>\u00a0hey, I see lots of nice new stuff in platform:DevGuide.Scripting :)  \n17:26\u00a0<@sdumitriu>\u00a0I don't know Groovy that much... It seems I don't know how to make a JSON request  \n17:26\u00a0<@sdumitriu>\u00a0I'll do the push-release.sh script in bash+curl  \n17:40\u00a0<vmassol>\u00a0sdumitriu: I've given you some URL yesterday  \n17:40\u00a0<vmassol>\u00a0let me get one again  \n17:40\u00a0<vmassol>\u00a0http://extensions.xwiki.org/xwiki/bin/view/Extension/JIRA+Integration  \n17:40\u00a0<vmassol>\u00a0it cannot be simpler:  \n17:40\u00a0<vmassol>\u00a0import groovy.json.\\*  \n17:40\u00a0<vmassol>\u00a0def url = \"http://jira.xwiki.org/rest/api/2.0.alpha1/issue/XWIKI-1000\".toURL().text  \n17:40\u00a0<vmassol>\u00a0def root = new JsonSlurper().parseText(url)  \n17:41\u00a0<vmassol>\u00a0ah you want to send json, that's not hard let me give you another link  \n17:42\u00a0<@sdumitriu>\u00a0How do I read the response body?  \n17:42\u00a0<vmassol>\u00a0http://groovy.codehaus.org/HTTP+Builder  \n17:42\u00a0<@sdumitriu>\u00a0HttpResponseDecorator doesn't seem to have a method for it  \n17:42\u00a0<vmassol>\u00a0some more examples here: http://groovy.codehaus.org/modules/http-builder/doc/index.html  \n17:42\u00a0<@sdumitriu>\u00a0Yep, tried those  \n17:43\u00a0<@sdumitriu>\u00a0I get a server error but I can't find a way to read the response  \n17:43\u00a0<@sdumitriu>\u00a0Since it's not JSON, it's some html error page  \n17:43\u00a0<vmassol>\u00a0response.success?  \n17:43\u00a0<vmassol>\u00a0(in my first link)  \n17:43\u00a0<vmassol>\u00a0response is the response afaik  \n17:46\u00a0<@sdumitriu>\u00a0Should be something like this:  \n17:46\u00a0<@sdumitriu>\u00a0\u00a0\u00a0response.failure = {resp ->  \n17:46\u00a0<@sdumitriu>\u00a0\u00a0\u00a0\u00a0\u00a0println \"f: \" + resp.statusLine  \n17:46\u00a0<@sdumitriu>\u00a0\u00a0\u00a0}  \n17:46\u00a0<@sdumitriu>\u00a0But statusLine is just the HTTP Header with the status  \n17:46\u00a0<@sdumitriu>\u00a0And I don't see any useful method in http://groovy.codehaus.org/modules/http-builder/apidocs/groovyx/net/http/HttpResponseDecorator.html  \n17:48\u00a0<vmassol>\u00a0what do you want?  \n17:49\u00a0<@sdumitriu>\u00a0get http://jira.xwiki.org/rest/api/latest/project/XWIKI/versions and find the corresponding version for 3.2M3  \n17:49\u00a0<@sdumitriu>\u00a0Then post to that URL {\"released\": true, \"releaseDate\": \"2011-09-27\"}  \n17:50\u00a0<@sdumitriu>\u00a0To succeed, I need to also get http://jira.xwiki.org/rest/auth/1/session and remember the JSESSIONID cookie  \n17:50\u00a0<@sdumitriu>\u00a0And pass it as a request header  \n17:50\u00a0<@sdumitriu>\u00a0I wonder what Jean is doing...  \n17:51\u00a0<@sdumitriu>\u00a0xwiki.org doesn't seem to be the right place for that  \n17:52\u00a0<vmassol>\u00a0I've pinged him  \n17:54\u00a0<vmassol>\u00a0doc removed  \n17:54\u00a0<@sdumitriu>\u00a0Ah, agent1 has the old git which doesn't support --prune  \n17:57\u00a0<+tmortagne>\u00a0maybe it just need an apt-get upgrade  \n17:58\u00a0<+tmortagne>\u00a0this agent is pretty old and I doubt anyone ever update it  \n17:59\u00a0<@sdumitriu>\u00a0I'd like to use a new agent for the next release  \n17:59\u00a0<@sdumitriu>\u00a0Since a1 is slower  \n18:02\u00a0<+tmortagne>\u00a0you sure, I tough they had all the same resources  \n18:02\u00a0<+tmortagne>\u00a0?  \n18:03\u00a0<@sdumitriu>\u00a0No, a1 and a2 are old machines  \n18:04\u00a0<@sdumitriu>\u00a03G vs. 24G on a4  \n18:04\u00a0<+tmortagne>\u00a0ok I tough we moved them on new server when we added the new agents  \n18:05\u00a0<@sdumitriu>\u00a03 cores@2G on a1 vs 8 cores @3G on a4  \n18:05\u00a0<@sdumitriu>\u00a0It's weird having 3 cores...  \n18:05\u00a0<+tmortagne>\u00a0yep  \n18:06\u00a0<+tmortagne>\u00a0can a4 use all the cores ?  \n18:06\u00a0<@sdumitriu>\u00a0Not sure  \n18:06\u00a0<@sdumitriu>\u00a0Probably not all the time, since it's shared  \n18:06\u00a0<@sdumitriu>\u00a0But yes, it should be able to use them when they're available  \n18:06\u00a0<@sdumitriu>\u00a0Releasing enterprise  \n18:10\u00a0<@cjdelisle>\u00a0$xwiki.parseMessage(\"availableversionsattachment\")  \n18:11\u00a0<@cjdelisle>\u00a0just saw that when looking at versions of an attachment..  \n18:11\u00a0<@cjdelisle>\u00a0possible it's my mistake, can anyone repeat?  \n18:12\u00a0<+tmortagne>\u00a0indeed we have  \n18:12\u00a0<+tmortagne>\u00a0availableversionsattachment=The available versions of file '$attachment.filename' are:  \n18:12\u00a0<+tmortagne>\u00a0in ApplicationResources.properties with some velocity in it  \n18:13\u00a0<+tmortagne>\u00a0should not be too hard to convert in proper $msg.get  \n18:16\u00a0<vmassol>\u00a0sdumitriu: can we commit on platform master now?  \n18:16\u00a0<@sdumitriu>\u00a0Yes  \n18:17\u00a0<@sdumitriu>\u00a0cjdelisle: Are you using oldcore instead of legacy-oldcore?  \n18:18\u00a0<+tmortagne>\u00a0yep possible $xwiki.parseMessage is legacy stuff  \n18:18\u00a0<@cjdelisle>\u00a0oh indeed  \n18:18\u00a0<+tmortagne>\u00a0that would be a mistake since we still use it  \n18:18\u00a0<+tmortagne>\u00a0even if \u00a0it's deprecated  \n18:19\u00a0<+mflorea>\u00a0tmortagne: is there a way to get the current user ref without using XWikiContext?  \n18:19\u00a0<@cjdelisle>\u00a0yea, I swapped in oldcore to get some changes patched in, that explains it.  \n18:19\u00a0<+mflorea>\u00a0I think you added something recently  \n18:20\u00a0<+tmortagne>\u00a0mflorea: don't remember adding something like that recently  \n18:20\u00a0<+tmortagne>\u00a0if there is something it's probably in the bridge  \n18:20\u00a0<vmassol>\u00a0sburjan: FF 7 has been released  \n18:20\u00a0<+mflorea>\u00a0you added XWikiContext.getUserReference() I though you added something to the EC also  \n18:20\u00a0<+tmortagne>\u00a0nop was just for XWikiContext  \n18:21\u00a0<+mflorea>\u00a0ok  \n18:21\u00a0<+tmortagne>\u00a0I think we talked about having the user reference in the EC recently but I don't think it has been done  \n18:21\u00a0<+tmortagne>\u00a0since would be hard to sync with XwikiContext  \n18:22\u00a0<@sdumitriu>\u00a0Hm, should we support maven-like expansion in version comments?  \n18:22\u00a0<@sdumitriu>\u00a0${...} would be evaluated  \n18:24\u00a0<+tmortagne>\u00a0mflorea: I think the only thing you have right now is DocumentAccessBridge#getCurrentUser  \n18:24\u00a0<+mflorea>\u00a0but it's a string.. :(  \n18:24\u00a0<+tmortagne>\u00a0sdumitriu: worked on a UserManager but it's not merged yet  \n18:24\u00a0<+tmortagne>\u00a0and i'm not sure there was the current user in it actually  \n18:25\u00a0<@sdumitriu>\u00a0Ah, releasing is so easy...  \n18:26\u00a0<@sdumitriu>\u00a0Releasing manager  \n18:26\u00a0<@sdumitriu>\u00a0No, I'd like someone new to take care of 3.3  \n18:26\u00a0<vmassol>\u00a0sure, I was kidding  \n18:26\u00a0<@sdumitriu>\u00a0lucaa, Enygma`or fmancinelli  \n18:27\u00a0<@sdumitriu>\u00a0Ah, build failure :(  \n18:27\u00a0<vmassol>\u00a0hehe\u2026.  \n18:27\u00a0<@sdumitriu>\u00a0First run, there are bound to be some errors  \n18:29\u00a0<@sdumitriu>\u00a0Although it doesn't look like something in my script  \n18:29\u00a0<vmassol>\u00a0sdumitriu: did we get the commit mail for the platform 3.2M3 release (I don't recall seeing it)?  \n18:29\u00a0<@sdumitriu>\u00a0It failed at a simple build  \n18:29\u00a0<@sdumitriu>\u00a0vmassol: Me neither  \n18:29\u00a0<+sburjan>\u00a0vmassol: I know  \n18:29\u00a0<@sdumitriu>\u00a0But the tag was pushed, I git fetched it  \n18:29\u00a0<@sdumitriu>\u00a0Checking spam  \n18:30\u00a0<@sdumitriu>\u00a0Not in spam  \n18:31\u00a0<@sdumitriu>\u00a0Ah, found the problem  \n18:32\u00a0<+sburjan>\u00a0vmassol: I am curious if it's 50% more memory efficient. going home, I'll install it there. I am still running FF 3.6 on my local computer at work  \n18:32\u00a0<vmassol>\u00a0ok  \n18:32\u00a0<vmassol>\u00a0I'm using chrome so it'll be some time for FF to catch up ;)  \n18:32\u00a0<+sburjan>\u00a0;)  \n18:33\u00a0<sburjan>\u00a0has quit  \n18:33\u00a0<@sdumitriu>\u00a0mvn help:evaluate is hard to use properly because it outputs all the logs around the evaluation result. Passing -q surpresses the evaluation result as well; I had to manually remove all the useless debug lines and there was a new kind of line that I didn't encounter the last time  \n18:34\u00a0<@sdumitriu>\u00a0vmassol: Do you know something that would help?  \n18:34\u00a0<@sdumitriu>\u00a0Probably setting the logger level, but I don't know how to do that  \n18:34\u00a0<vmassol>\u00a0what do you want to do?  \n18:35\u00a0<@sdumitriu>\u00a0CURRENT\\_VERSION=`mvn help:evaluate -Dexpression='project.version'`  \n18:35\u00a0<@sdumitriu>\u00a0It's safer to ask maven than to parse the pom manually  \n18:38\u00a0<vmassol>\u00a0never done that  \n18:38\u00a0<vmassol>\u00a0found this though if it helps: http://stackoverflow.com/questions/3545292/how-to-get-maven-project-version-to-the-bash-command-line  \n18:41\u00a0<vmassol>\u00a0sdumitriu: to get the version id matching a release name:  \n18:41\u00a0<vmassol>\u00a0{{groovy}}  \n18:41\u00a0<vmassol>\u00a0import groovy.json.\\*  \n18:41\u00a0<vmassol>\u00a0def url = \" http://jira.xwiki.org/rest/api/latest/project/XWIKI/versions\".toURL().text  \n18:41\u00a0<vmassol>\u00a0def root = new JsonSlurper().parseText(url)  \n18:41\u00a0<vmassol>\u00a0def versionId = root.find { it.name == \"3.2 M3\" }.id  \n18:41\u00a0<vmassol>\u00a0{{/groovy}}  \n18:41\u00a0<@sdumitriu>\u00a0Yes, that one I got working as well  \n18:42\u00a0<@sdumitriu>\u00a0manaver released!  \n18:42\u00a0<@sdumitriu>\u00a0sburjan left home  \n18:48\u00a0<@sdumitriu>\u00a0I managed to mark a version as released with bash+curl  \n18:48\u00a0<vmassol>\u00a0yes but I'd like a solution using groovy  \n18:48\u00a0<vmassol>\u00a0shouldn't be to hard  \n18:49\u00a0<@sdumitriu>\u00a0Shouldn't  \n18:49\u00a0<vmassol>\u00a0it's a good example for the doc too  \n18:49\u00a0<vmassol>\u00a0since we don't have a POST example yet  \n18:49\u00a0<@sdumitriu>\u00a0I'm failing at:  \n18:49\u00a0<@sdumitriu>\u00a0def http = new HTTPBuilder( \"http://localhost:8080/xwiki/bin/get/A/A\" )  \n18:49\u00a0<@sdumitriu>\u00a0http.request (POST, JSON) { req ->  \n18:49\u00a0<@sdumitriu>\u00a0\u00a0\u00a0body = [\"username\":\"${USERNAME}\", \"password\":\"${PASSWORD}\"]  \n18:49\u00a0<@sdumitriu>\u00a0Ah, not localhost  \n18:49\u00a0<@sdumitriu>\u00a0http://jira.xwiki.org/rest/auth/1/session  \n18:50\u00a0<@sdumitriu>\u00a0def http = new HTTPBuilder( \"http://jira.xwiki.org/rest/auth/1/session\" )  \n18:50\u00a0<@sdumitriu>\u00a0http.request (POST, JSON) { req ->  \n18:50\u00a0<@sdumitriu>\u00a0\u00a0\u00a0body = [\"username\":\"${USERNAME}\", \"password\":\"${PASSWORD}\"]  \n18:51\u00a0<tmortagne>\u00a0has left #xwiki  \n18:52\u00a0<@sdumitriu>\u00a0sburjan`: When you get online, please test the release artifacts  \n18:53\u00a0<JuanDaugherty>\u00a0I take it only committers vote on xwiki-dev.  \n18:54\u00a0<vmassol>\u00a0btw there's a curl example here sdumitriu: https://jira.atlassian.com/browse/JRA-23998  \n18:54\u00a0<vmassol>\u00a0JuanDaugherty: yes, see http://dev.xwiki.org/xwiki/bin/view/Community/Committership  \n18:55\u00a0<vmassol>\u00a0you can still express your opinion but your opinion is non-binding  \n18:55\u00a0<vmassol>\u00a0(which doesn't mean it won't be listened to! :))  \n18:55\u00a0<JuanDaugherty>\u00a0got it  \n18:56\u00a0<vmassol>\u00a0sdumitriu: and some python version: http://pastebin.com/YHP4FNNp ;)  \n18:59\u00a0<abusenius>\u00a0has joined #xwiki  \n19:16\u00a0<@sdumitriu>\u00a0cjdelisle: might be useful http://incubator.apache.org/gora/  \n19:18\u00a0<@cjdelisle>\u00a0interesting  \n19:18\u00a0<@cjdelisle>\u00a0It seems a lot of people are trying this out, it's such a new science that we don't know where things are going to go.  \n19:19\u00a0<+sburjan`>\u00a0vmassol: updating too FF 7  \n19:19\u00a0<+sburjan`>\u00a0let's see if mem shrink really works  \n19:19\u00a0<@cjdelisle>\u00a0Everyone seems to want to implement query planners on top of distributed databases but none of them are mature yet.  \n19:42\u00a0<@sdumitriu>\u00a0sburjan`: Did you see my message about testing the release?  \n19:44\u00a0<+sburjan`>\u00a0sdumitriu: nop, I think I missed it. I was at the other house to install the carpet  \n19:44\u00a0<+sburjan`>\u00a0but vmassol told me to test it when it's ready. I was hoping for to do this this morning  \n19:44\u00a0<+sburjan`>\u00a0but the release got delayed  \n19:45\u00a0<@sdumitriu>\u00a0It's available now  \n19:45\u00a0<+sburjan`>\u00a0I'm at home now :)  \n19:46\u00a0<+sburjan`>\u00a0I will test it tomorrow. we'll also have to have a discussion about the search improvements  \n19:49\u00a0<+sburjan`>\u00a0what did you wanted to say ? could you paste again what you wrote ?  \n19:57\u00a0<+sburjan`>\u00a0sdumitriu ?  \n20:01\u00a0<@sdumitriu>\u00a0sburjan`: When you get online, please test the release artifacts  \n20:01\u00a0<@sdumitriu>\u00a0Not the MTR, just that they work  \n20:02\u00a0<mflorea>\u00a0has quit  \n20:02\u00a0<+sburjan`>\u00a0okay.  \n20:02\u00a0<+sburjan`>\u00a0I could do that now if you want to send the announcement now  \n20:02\u00a0<+sburjan`>\u00a0today  \n20:15\u00a0<Enygma`>\u00a0has quit  \n20:32\u00a0<evalica1>\u00a0has quit  \n20:38\u00a0<mflorea>\u00a0has joined #xwiki  \n21:00\u00a0<mflorea>\u00a0has quit  \n21:01\u00a0<mflorea>\u00a0has joined #xwiki  \n21:48\u00a0<+sburjan`>\u00a0sdumitriu: testing artefacts now  \n22:11\u00a0<vmassol>\u00a0has quit  \n22:14\u00a0<sburjan`>\u00a0has quit  \n22:26\u00a0<sburjan`>\u00a0has joined #xwiki  \n22:39\u00a0<abusenius>\u00a0has quit  \n23:23\u00a0<pturcotte>\u00a0has quit  \n23:26\u00a0<lpereira>\u00a0has joined #xwiki  \n23:29\u00a0<+sburjan`>\u00a0sdumitriu: zip and jar are OK  \n23:29\u00a0<@sdumitriu>\u00a0Thanks  \n23:30\u00a0<+sburjan`>\u00a0testing exe in 5 minutes  \n23:30\u00a0<+sburjan`>\u00a0sorry for the delay, I had to update Vmware and re-install all VmWare tools on the machines  \n23:38\u00a0<+sburjan`>\u00a0sdumitriu: exe is OK  \n23:39\u00a0<+sburjan`>\u00a0btw, did we had any failing tests when releasing ?  \n23:40\u00a0<@sdumitriu>\u00a0No  \n23:40\u00a0<+sburjan`>\u00a0good :)  \n\n"}