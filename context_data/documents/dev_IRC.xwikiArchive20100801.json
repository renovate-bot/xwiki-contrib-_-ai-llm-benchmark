{"id": "dev:IRC.xwikiArchive20100801", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100801", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nCalebJamesDeLisl - (00:12): abusenius, re r30294: I'm not sure we want to distribute software which creates certs that appear to be issued by xwiki.org, we have no idea how the software might be used. Maybe we can create an empty DN?  \nabusenius - (00:14): hmm, yea, it should be something more clear  \nabusenius - (00:15): like \"generated by xwiki\" or smth like that  \nCalebJamesDeLisl - (00:15): Or less clear, I think DN=unknown or \"\" is best.  \nCalebJamesDeLisl - (00:16): Did the way I had it break compatibility somewhere?  \nabusenius - (00:17): using an empty name is not a good idea probably  \nCalebJamesDeLisl - (00:17): I'm just imagining \"It looks like xwiki issued a certificate to website X\" Lawyers don't understand encryption but they know what \"certificate\" means :)  \nztane left at 00:18 (Ping timeout: 240 seconds  \nCalebJamesDeLisl - (00:18): It websiteX modifies the software, then it's their forgery, if it is default then we would have to explain that we had no control over it.  \nabusenius - (00:23): what is the purpose of that certificate? it the webid generated by xwiki?  \nztane joined #xwiki at 00:25  \nCalebJamesDeLisl - (00:27): That cert is just there so that the browser will be able to trust itself (??) it gets installed in the browser and then crypto.signText works.  \nCalebJamesDeLisl - (00:28): The issuer might be set to the website operator but he has no real control over it either so the most correct issuer would be the user who ordered it.  \nCalebJamesDeLisl - (00:29): Of course the user may not have known they were creating a cert (let alone 2) so he shouldn't be held accountable.  \nabusenius - (00:29): maybe it should be the name of the wiki?  \nCalebJamesDeLisl - (00:29): So really nobody reviewed it so the most correct answer is it was issued by nobody.  \nabusenius - (00:29): (url)  \nabusenius - (00:30): well, it is self signed, but for some purpose  \nCalebJamesDeLisl - (00:30): Right now keymaker has no dependencies on anything except java and bouncycastle, I'd like to keep it that way.  \nabusenius - (00:30): maybe we shouldnt use DN, but something else  \nCalebJamesDeLisl - (00:30): Why is it important for that cert to have a name?  \nabusenius - (00:31): well, how do you distinguish them then?  \nCalebJamesDeLisl - (00:31): Hmm, it will show up in the list of cert authorities on the user's computer, maybe it should have some description.  \nabusenius - (00:31): yes  \nabusenius - (00:32): it is used as the user-readable certificate description  \nCalebJamesDeLisl - (00:32): DN=Authority which trusts XWiki.JohnSmith  \nCalebJamesDeLisl - (00:32): ?  \nCalebJamesDeLisl - (00:33): I tried to shorten the user cert as much as possible since it all gets put in the signature, I guess the authority can have more description.  \nabusenius - (00:33): there are more fields actually, we could use more of them  \nabusenius - (00:34): like, DN=user XWiki.Someone,CN=my.wiki.com  \nabusenius - (00:35): issued by CN=my.wiki.com,etc  \nCalebJamesDeLisl - (00:35): How do you propose to get the xwiki name?  \nabusenius - (00:35): actually, user name should be in UID  \nabusenius - (00:35): thats not easy I guess  \nCalebJamesDeLisl - (00:35): Not really, it's a non-entity which exists to trust that user.  \nCalebJamesDeLisl - (00:36): Not the user himself.  \nCalebJamesDeLisl - (00:36): If I recall, the keymaker dumps the private key from that cert as soon as it's made.  \nCalebJamesDeLisl - (00:36): s/dumps/deletes.  \nabusenius left at 00:37 (Read error: Operation timed out  \nabusenius joined #xwiki at 00:38  \nabusenius - (00:39): damn connection  \nabusenius - (00:40): anyway, UID (ldap user id if I remember correctly) is better suited for user name that DN (distinguished name)  \nabusenius - (00:40): and we shouldn't use fields like organization  \nCalebJamesDeLisl - (00:40): agreed.  \nabusenius - (00:41): so what is left is some name fields and user id  \nCalebJamesDeLisl - (00:41): UID=Authority for trusting XWiki.JohnSmith?  \nabusenius - (00:42): no, lets use UID=XWiki.JohnSmith, so that you can use it easily  \nCalebJamesDeLisl - (00:42): That's the user cert.  \nCalebJamesDeLisl - (00:42): You want the authority cert to be the same?  \nabusenius - (00:42): well, if you have the cert, you look in UID and know the user  \nabusenius - (00:43): I meant IssuedTo  \nabusenius - (00:43): IssuedBy should not have UID, it doesnt make sense, unless some specific user signed this cert  \nCalebJamesDeLisl - (00:44): The use pattern is the user generates a cert in their browser, then they install the authority which trusts that cert and now they can sign text.  \nabusenius - (00:44): maybe for self-signed it should be the same user for consistency...  \nabusenius - (00:44): there is one authority for the whole wiki  \nCalebJamesDeLisl - (00:44): Yes, the authority cert is self signed but the user cert isn't because I couldn't trick ff into allowing that :)  \nabusenius - (00:45): ah, right, there was this issue  \nCalebJamesDeLisl - (00:45): \"there is one authority for the whole wiki\" incorrect, a new auth is created per user registeration.  \nCalebJamesDeLisl - (00:45): This can be overridden but I didn't write all of the support code.  \nCalebJamesDeLisl - (00:46): So each auth cert is literally just an authority existing for the sole purpose of trusting a single user.  \nabusenius - (00:47): hm, them something like DN=XWiki certificate authority for XWiki.User is the most correct description I guess  \nCalebJamesDeLisl - (00:47): XWiki indicates that it's issued by XWiki.  \nCalebJamesDeLisl - (00:48): Verisign certs don't say OpenSSL cert for.... \u00a0\u00a0rthey say Verisign.  \nabusenius - (00:48): it is better to use the actual name of the wiki  \nabusenius - (00:48): like mywiki.org  \nabusenius - (00:49): so if you are registered in several, you can see the difference  \nabusenius - (00:49): but I don't know how to find it out  \nCalebJamesDeLisl - (00:49): I have a hard time guaranteeing that it is desired in all situations.  \nabusenius - (00:49): why not?  \nabusenius - (00:50): it is exactly what this certificate authority is, an authority generated by some.wiki.com for its user  \nCalebJamesDeLisl - (00:50): Suppose somebody uses anti-DoS hosting and runs their server on cheap hosting and bounces the connection. Maybe it would reveal the real domain?  \nCalebJamesDeLisl - (00:51): I suppose it's their responsabulity to make sure XWiki#getExternalURL gives the right output.  \nabusenius - (00:52): other xwiki functionality might break too if its not  \nabusenius - (00:52): probably links etc.  \nCalebJamesDeLisl - (00:52): break or reveal the real domain for the dos bots to attack.  \nabusenius - (00:53): we might want to make it configurable though  \nabusenius - (00:53): but it should say something meaningful and distinctiv by default  \nCalebJamesDeLisl - (00:54): I think most people looking at their certs would know what it meant if it had their user name.  \nCalebJamesDeLisl - (00:54): Maybe their's a tag to use for a longer description?  \nabusenius - (00:54): unless they use the same user name everywhere  \nCalebJamesDeLisl - (00:55): (dumb)  \nabusenius - (00:55): trying to find what is allowed...  \nCalebJamesDeLisl - (00:55): Oh, I think FF will accept multiple cert authorities with the same name.  \nabusenius - (00:56): it probably uses fingerprint internally  \nCalebJamesDeLisl - (00:56): I know FF will accept multiple client certs with the same name.  \nabusenius - (00:56): but the user should be able to see which cert is which  \nabusenius - (00:57): for example if you want to delete one of them  \nztane left at 00:57 (Ping timeout: 260 seconds  \nCalebJamesDeLisl - (00:58): Maybe make it configurable but default is \"Certificate authority for trusting XWiki.JohnSmith\"  \nCalebJamesDeLisl - (01:00): Well if it's configurable then it will be defined back in the X509Service and that has dependencies on everything so adding a dependency to UserDocUtils wont hurt.  \nCalebJamesDeLisl - (01:00): \\*DefaultX509CryptoService  \nabusenius - (01:01): I'd put the wiki name (external host name) if it is easy to find out, otherwise lets leave it like this  \nCalebJamesDeLisl - (01:02): Then will the configuration say something like \"$wikiName generated certificate authority for $user\"  \nCalebJamesDeLisl - (01:02): It starts to get full of magic.  \nCalebJamesDeLisl - (01:02): I don't like the way it is right now. I'd rather it be completely blank.  \nabusenius - (01:04): blank is worse, you will have no idea where this certificate comes from  \nabusenius - (01:05): so, UID should definitely be the user name  \nabusenius - (01:05): DN might be the description then  \nabusenius - (01:06): we don't have to put a full descriptive sentence into DN  \nCalebJamesDeLisl - (01:06): I think \"A certificate authority for trusting XWiki.JohnSmith\" is enough description.  \nabusenius - (01:06): we can say \"wiki user\" in DN and set UID to the actual user name  \nabusenius - (01:07): it would make configuration less magic  \nCalebJamesDeLisl - (01:07): It's not really the user's cert. The user's browser will end up with 2 certs.  \nabusenius - (01:08): one of them will say \"personal certificate of $user\", and we don't have to make it configurable  \nCalebJamesDeLisl - (01:09): But the \"personal certificate\" is the one in the browser.  \nCalebJamesDeLisl - (01:09): AKA client cert.  \nCalebJamesDeLisl - (01:09): + anything you add to that cert makes all signatures bigger.  \nabusenius - (01:10): well, you'll see both of them in the list right?  \nabusenius - (01:10): (in the browser)  \nCalebJamesDeLisl - (01:10): One shows up on the \"my certificates\" tab. The other will be in the \"certificate authorities\" tab.l  \nCalebJamesDeLisl - (01:10): s/l//  \nabusenius - (01:10): right  \nabusenius - (01:11): (looking at the list in ff)  \nCalebJamesDeLisl - (01:11): The \"my certificates\" one only has UID=XWiki.JohnSmith so we can find the user profile.  \nabusenius - (01:12): they are grouped by organization  \nabusenius - (01:13): we could write there something generic  \nCalebJamesDeLisl - (01:13): We could say XWiki as long as we make it clear that it's just the software.  \nCalebJamesDeLisl - (01:14): O=User trust authority auto-generated by XWiki based website.  \nabusenius - (01:14): yea, something like this  \nztane joined #xwiki at 01:15  \nCalebJamesDeLisl - (01:16): DN=Not a real certificate authority, auto-generated without validating user's identity.  \nCalebJamesDeLisl - (01:17): UID=Trusts XWiki.JohnSmith  \nabusenius - (01:17): maybe just DN=Dummy CA  \nabusenius - (01:17): ?  \nabusenius - (01:17): O allready says it generated  \nabusenius - (01:18): and I would really not put any other words except for user name into UID  \nabusenius - (01:18): just for consistency  \nCalebJamesDeLisl - (01:18): Most CA's are expected to sign only sites which they verify the identity of the admin.  \nCalebJamesDeLisl - (01:19): What happens if an installation signs a fake bank cert? Who's responsible.  \nabusenius - (01:20): isn't \"Dummy CA\" enough to see its not a real one  \nabusenius - (01:20): ?  \nCalebJamesDeLisl - (01:20): To a lawyer?  \nCalebJamesDeLisl - (01:20): re UID: the only place where this will be seen is in the user's browser, it might be nice to have a little more explaination.  \nabusenius - (01:21): maybe  \nabusenius - (01:22): re fake bank cert, the user has to import the ca cert first  \nCalebJamesDeLisl - (01:22): Every time I go to an ssl site, my browser scarfs up their cert and stores it. I still don't have as many server certs as I have authorities!  \nabusenius - (01:22): it could as well be another one  \nCalebJamesDeLisl - (01:22): It's the old problem of handing out permissions, eventually everyone has god permissions.  \nCalebJamesDeLisl - (01:24): The attack model is a wiki admin might modify the code to store the cert's private key instead of throwing it away, then he could sign any site with it.  \nCalebJamesDeLisl - (01:24): And the one user who created that cert will be vulnerable to it.  \nabusenius - (01:25): look, if you see it like this, then you should not use browser signing at all, because you make people import CA certs, which might cause problems  \nCalebJamesDeLisl - (01:26): Indeed, but browser signing solves so many other problems that I see this as a small cost.  \nabusenius - (01:26): but anyone can make people import CA certs as well, using some other software  \nCalebJamesDeLisl - (01:26): s/make/ask  \nabusenius - (01:26): it doesn't matter what we do, if the admin would modify the code to hack people,  \nabusenius - (01:27): he could as well name the CA accordingly  \nabusenius - (01:27): \"Verisign Root CA\" or something  \nCalebJamesDeLisl - (01:27): Then it's his case of forgery, we have nothing to do with that.  \nabusenius - (01:28): well, if you store the key and sign a fake bank site with it, it already \\*is\\* a forgery  \nabusenius - (01:28): our software doesn'T do that by default  \nCalebJamesDeLisl - (01:28): The only place where this cert will be is in the user's browser, what dost does \"Not a real certificate authority, auto-generated without validating user's identity\" over \"Dummy CA\"?  \nCalebJamesDeLisl - (01:29): s/dost/cost/  \nabusenius - (01:29): short and concise  \nabusenius - (01:29): the first thing you see is \"dummy\"  \nabusenius - (01:30): you dont even have to read it, you allready know everything  \nCalebJamesDeLisl - (01:30): Short an concise is the C ideology.  \nabusenius - (01:30): a long sentence might not fit into the column btw  \nabusenius - (01:31): it is a good ideology for many things :)  \nCalebJamesDeLisl - (01:31): I like \"Not a real certificate authority\"  \nabusenius - (01:32): I'd call it vague  \nCalebJamesDeLisl - (01:32): maybe \"auto-generated without validating user's identity\" to describe that it's for trusting a member of a site.  \nabusenius - (01:32): its like you are trying to explain what it is and cant fnd a word  \nabusenius - (01:33): well, it's a fake authority  \nabusenius - (01:33): it doesn'T authorise anything  \nabusenius - (01:33): it is a workaround for FF  \nCalebJamesDeLisl - (01:33): I want something which the shadiest lawyer would not be able to convince a judge it was for proving the identity of anything.  \nabusenius - (01:34): mabe we can put the long description into another field?  \nabusenius - (01:34): it groups by O, so we can use O=Fake CA  \nabusenius - (01:34): and DN is the long description?  \nabusenius - (01:35): (but not too long)  \nCalebJamesDeLisl - (01:35): O=Not for validating identity, trusts anonymous wiki users.  \nCalebJamesDeLisl - (01:36): s/validating/establishing  \nabusenius - (01:36): why don't you like short name saying the same?  \nabusenius - (01:37): nobody reads text  \nCalebJamesDeLisl - (01:37): I'm imagining the heading in firefox where the user's wiki membership(s?) is/are listed.  \nabusenius - (01:37): btw, the license says we have no responsibility for any damage  \nabusenius - (01:38): so as long as we don't forge bank sites by default, its fine  \nCalebJamesDeLisl - (01:38): hmm, we could put the license in the cert ;)  \nabusenius - (01:38): lets put the full law there :)  \nabusenius - (01:38): no, the law in 5 languages :)  \nCalebJamesDeLisl - (01:38): IOException out of hard disk.  \nabusenius - (01:38): and the human rights too  \nCalebJamesDeLisl - (01:39): What human rights?  \nabusenius - (01:39): the description of them, just to be on the safe side  \nCalebJamesDeLisl - (01:40): \"Just left this here so you remember what you don't have\"  \nabusenius - (01:40): ok, now seriously, Fake CA says everything, it should be the first thing you see  \nabusenius - (01:41): if you want the description, put it into DN or CN  \nCalebJamesDeLisl - (01:41): So the heading should be Fake CA and under that is the user's name?  \nabusenius - (01:42): well, with O=Fake CA you'll have a header and the certs underneath  \nabusenius - (01:43): I don't know what it uses to name them, probably DN  \nCalebJamesDeLisl - (01:43): In the FF cert list though, I think O= translates to the heading.  \nabusenius - (01:43): UID will only be visible if you actually look at the cert I guess  \nabusenius - (01:44): (looking at other browser)  \nCalebJamesDeLisl - (01:44): Ok it looks like it reads:  \nCalebJamesDeLisl - (01:44): O=  \nCalebJamesDeLisl - (01:44): ---------  \nCalebJamesDeLisl - (01:45): C= \u00a0\u00a0(cert 1)  \nCalebJamesDeLisl - (01:45): s/C/CN  \nCalebJamesDeLisl - (01:45): CN= \u00a0\u00a0(cert 2)  \nCalebJamesDeLisl - (01:45): etc.  \nCalebJamesDeLisl - (01:47): if no CN then it seems to default to OU.  \nabusenius - (01:48): opera just shows the CN  \nabusenius - (01:48): and chrome relies on external programs to mange certs  \nabusenius - (01:48): under linux at least  \nabusenius - (01:49): so the description should be in CN I guess  \nCalebJamesDeLisl - (01:49): That's typical of chrome, any security problems, blame it on them.  \nabusenius - (01:50): and lets ignore what IE does  \nCalebJamesDeLisl - (01:50): Well, chrome support is a lower priority since they don't support anything to do with client certs.  \nCalebJamesDeLisl - (01:50): I can get IE support to work but it'll take some work (and a copy of Windxws for debugging)  \nabusenius - (01:51): an average IE user wouldn't use it anyway  \nCalebJamesDeLisl - (01:51): I imagine making this really easy to use.  \nCalebJamesDeLisl - (01:52): 1 click to generate the cert, 1 click to download the CA and 2 clicks to install it.  \nabusenius - (01:52): we can have some guiding the user, for each supported browser  \nabusenius - (01:52): \\*page guiding...  \nCalebJamesDeLisl - (01:53): cacert people has come activex thing to make installing a cert easy, probably an exploit.  \nCalebJamesDeLisl - (01:53): s/has come/have some/  \nabusenius - (01:53): lol  \nabusenius - (01:54): it's like some hacker page I read once  \nabusenius - (01:54): they said \"if you read this, then your browser probably didn't crash and you still have your passwords\"  \nabusenius - (01:55): as the intro to some article  \nCalebJamesDeLisl - (01:55): :) \u00a0\u00a0\u00a0We could use a popup and which imitates a wizard.  \nCalebJamesDeLisl - (01:55): rsnake has a huge picture which BSOD's windows machines.  \nabusenius - (01:57): re names, so we basically just have O=Fake CA,CN=A long description by Caleb  \nabusenius - (01:57): and user name in UID  \nCalebJamesDeLisl - (01:58): As far as I can see UID doesn't get shown at all.  \nabusenius - (01:59): it might only be shown in the details  \nCalebJamesDeLisl - (01:59): I would make O=Long(ish) description,CN=Authority for trusting User name.  \nCalebJamesDeLisl - (01:59): haha, this will have to be translatable then.  \nabusenius - (01:59): what?  \nabusenius - (01:59): description?  \nCalebJamesDeLisl - (02:00): Well use English in the certificate.  \nCalebJamesDeLisl - (02:00): Maybe not, no other CA's do it.  \nabusenius - (02:00): they don't say there a lot in general  \nCalebJamesDeLisl - (02:01): Could use FOAF+SSL and let them take the heat ;)  \nabusenius - (02:01): are there size retrictions on this fields?  \nCalebJamesDeLisl - (02:01): Not that I know of, I don't think so.  \nabusenius - (02:02): in any case, short sentence is better that a long sentence if the meaning is the same  \nCalebJamesDeLisl - (02:04): !CA  \nabusenius - (02:04): its too geeky :)  \nabusenius - (02:04): Not a CA is good too  \nCalebJamesDeLisl - (02:05): http://ha.ckers.org/imagecrash.html there it is  \nCalebJamesDeLisl - (02:05): <IMG SRC=\"./imagecrash.jpg\" width=\"9999999\" height=\"9999999\" ALT=\"Oversized image causes blue screen of death\">  \nCalebJamesDeLisl - (02:06): O=Not a CA  \nabusenius - (02:07): hm, in linux it is boring  \nCalebJamesDeLisl - (02:07): Indeed it is. I would have given you more warning if i thought you were a win user.  \nCalebJamesDeLisl - (02:07): hmm, no quit messages.  \nCalebJamesDeLisl - (02:08): \"O=Not a CA\" seems a little too short, remember this will be the FF heading, if not a CA, what is it and where did it come from?  \nabusenius - (02:10): why not \"Dummy CA\" then?  \nCalebJamesDeLisl - (02:10): Where did it come from?  \nabusenius - (02:11): one line below is a description  \nCalebJamesDeLisl - (02:11): I'm thinking about when you look at the CA list.  \nCalebJamesDeLisl is now known as cjdelisle ([[email\u00a0protected]](https://dev.xwiki.org/cdn-cgi/l/email-protection)  \ncjdelisle - (02:12): since I switched to xchat, seems like there is less room for text.  \nabusenius - (02:13): :)  \nabusenius - (02:14): heh, tried that link in a VM ^^  \ncjdelisle - (02:18): Wohoo, I just won the British lottery... again :/  \ncjdelisle - (02:19): Did that go to the list or have they got my address already?  \nabusenius - (02:20): it's really hard to keep the address unknown to spammers  \nabusenius - (02:20): the only working way I know is not to use it at all :)  \ncjdelisle - (02:21): That's what I have been doing.  \ncjdelisle - (02:21): (with that address)  \nabusenius - (02:22): sometimes they seem to just brute-force addresses  \nabusenius - (02:23): or maybe someone who you sent a mail once got a virus and here it goes  \ncjdelisle - (02:23): Maybe somebody has malware and every email they receive gets... yea that.  \ncjdelisle - (02:24): I'm thinking I need to start using throwaway send addresses.  \nabusenius - (02:25): I usually use 10minutesmail for sites that want my mail for no good reason  \ncjdelisle - (02:25): Yea but the list is bad, that thing spams our emails and ips all around the net.  \ncjdelisle - (02:27): I wonder if they're abusing bcc to make is so I can't find the actual to: address.  \nabusenius - (02:28): maybe, it might be even sent by the virus directly  \nabusenius - (02:29): from someone you know  \nabusenius - (02:29): look at the raw headers, maybe the is more info  \ncjdelisle - (02:29): Looks like it was bounced off ve2.dinama.com  \ncjdelisle - (02:30): I think they even got a user name, apparently dinama doesn't notice something is amiss when there are 20,000,000,000 BCC addresses.  \nabusenius - (02:32): this domain is registered to somebody in Caracas  \nabusenius - (02:32): might be an owned pc in some company  \ncjdelisle - (02:33): sent by 3 hops from suburban-0.r00.londen03.uk.bb.gin.ntt.net. virus.  \nabusenius - (02:34): still, it's hard to tell where they have your address from  \ncjdelisle - (02:36): Wonder what would happen if someone replied 20,000 times with random garbage in the reply and random from addresses.  \ncjdelisle - (02:38): Bet if you reply to those things (from a fake email) they will give you their real ip when they write back.  \ncjdelisle - (02:39): Anyway, what will the cert say.  \nabusenius - (02:39): how about \"Untrusted CA\"  \ncjdelisle - (02:40): Well it's trusted...  \nabusenius - (02:41): but only once  \nabusenius - (02:41): One-Time CA?  \ncjdelisle - (02:41): Actually it has to be trusted as long as the user will use signText  \nabusenius - (02:42): it should somehow say its not intended for other uses  \ncjdelisle - (02:42): I'm thinking of the heading on the list of CA's.  \nabusenius - (02:42): but short, so you dont have to read 20 words before you get it  \ncjdelisle - (02:42): Fake CA for trusting user's client certificate.  \ncjdelisle - (02:43): here's the longest one in my browser: Sociedad Cameral de Certificaci\u00f3n Digital - Certic\u00e1mara S.A.  \nabusenius - (02:44): they couldn'T use a shorter name - their organization is named like this  \nabusenius - (02:44): most of them use 1-2 words  \ncjdelisle - (02:45): IMO we shouldn't use anything longer than that but any length shorter is ok.  \ncjdelisle - (02:45): Fake authority for trusting wiki user's client certificate.  \ncjdelisle - (02:46): Sociedad Cameral de Certificaci\u00f3n Digital - Certic\u00e1mara S.A.  \ncjdelisle - (02:46): :D  \nabusenius - (02:46): :)  \nabusenius - (02:46): xwiki? it is not used by any other wiki  \nabusenius - (02:47): and we could use plural, it will look like a header in the list  \ncjdelisle - (02:47): actually scratch wiki because it can be used for non wiki sites.  \nabusenius - (02:48): Fake authorities for trusting generated certificates  \nabusenius - (02:48): if you don't say wiki, it is ambiguous who is the user  \ncjdelisle - (02:48): Fake authorities for trusting client certificates?  \nabusenius - (02:49): client sounds better  \ncjdelisle - (02:49): Ok, agreed.  \nabusenius - (02:49): good :)  \nabusenius - (02:49): and the CN=Authority for XWiki.JohnSmith  \nabusenius - (02:50): so we would have  \nabusenius - (02:50): Fake authorities for trusting client certificates  \nabusenius - (02:50): \u00a0\u00a0\u00a0- Authority for XWiki.JohnSmith  \nabusenius - (02:50): \u00a0\u00a0\u00a0- Authority for XWiki.User  \nabusenius - (02:50): etc  \nabusenius - (02:50): maybe with full wiki name  \ncjdelisle - (02:51): Only if JohnSmith is also known as User but it's possible.  \nabusenius - (02:51): well, if you are registered under several names you'll have this  \nabusenius - (02:52): \u00a0\u00a0\u00a0- Authority for XWiki.User on some.wiki.org  \nabusenius - (02:52): \u00a0\u00a0\u00a0- Authority for XWiki.User on xwiki.org  \nabusenius - (02:52): \u00a0\u00a0\u00a0- Authority for XWiki.User on something.else.com  \nabusenius - (02:53): would be better, you can see where it comes from even if the name is the same  \ncjdelisle - (02:53): determining the wiki name is a tricky business.  \ncjdelisle - (02:55): I suppose we could expose the option to script and let the script decide.  \nabusenius - (02:56): you mean the script that generates the cert?  \ncjdelisle - (02:57): yup.  \nabusenius - (02:57): well, we can, but there still will be some value used in the default XE  \ncjdelisle - (03:00): I wonder what would happen if a user put the magic unicode \u00a0? reversal symbol in their name field  \ncjdelisle - (03:01): how much text gets affected?  \nabusenius - (03:02): hm, probably until the end of the string  \nabusenius - (03:03): it will depend on how you parse and print it I guess  \ncjdelisle - (03:03): Fortunately FF reverses after it parses xml so <tpirs> doesn't work.  \ncjdelisle - (03:04): \\* <tpircs>  \nabusenius - (03:05): it's not that important in the cert anyway, because it's the same user who will get to see the result  \ncjdelisle - (03:05): Did you ride the \"Google:Steve Rombom\" rollercoaster.  \ncjdelisle - (03:06): It shouldn't affect the asn1 that's not unicode, it just allows unicode entities.  \nabusenius - (03:09): whatever  \ncjdelisle - (03:09): re:?  \nabusenius - (03:10): (unicode in certs)  \ncjdelisle - (03:10): I was thinking more about how much of the site could be scrambled.  \nabusenius - (03:11): everything till the end?  \nabusenius - (03:11): I have no idea how ff treats this character  \ncjdelisle - (03:13): We have agreement on the O= and it seems that the best option is to let the script decide the CN= this will require pulling in another dependency or 2 to safely build names (prevent CN=\"blah, O=Verisign...\")  \nabusenius - (03:15): isn't O fixed?  \nabusenius - (03:15): i.e. not configurable at all  \ncjdelisle - (03:15): Well, safe name building is just to prevent the script passing ,  \nabusenius - (03:16): right, we should check that the name does not inject other names  \ncjdelisle - (03:16): Hmm, I wonder what BC does if you pass 0x00 as a character in the string.  \ncjdelisle - (03:17): asn1 strings are null terminated if I recall.  \nabusenius - (03:18): the X509Name parses the passed name afaik  \nabusenius - (03:18): we could just let it parse it, and compare the output to the expected one  \nabusenius - (03:26): time to sleep, good night  \ncjdelisle - (03:26): good night,  \ncjdelisle - (03:26): .  \nabusenius left at 03:32 (Ping timeout: 276 seconds  \npenyaskito left at 04:55 (Ping timeout: 265 seconds  \nvmassol joined #xwiki at 08:21  \nvmassol left at 08:30 (Quit: Leaving.  \nvmassol joined #xwiki at 08:33  \nflorinciu joined #xwiki at 08:52  \nsdumitriu joined #xwiki at 08:53  \nvmassol left at 08:55 (Quit: Leaving.  \nsdumitriu left at 09:44 (Ping timeout: 240 seconds  \nmflorea joined #xwiki at 10:23  \nvmassol joined #xwiki at 11:28  \nvmassol left at 11:49 (Quit: Leaving.  \nflorinciu left at 12:04 (Quit: Leaving.  \nflorinciu joined #xwiki at 12:36  \nabusenius joined #xwiki at 12:43  \nvmassol joined #xwiki at 13:22  \nvmassol left at 13:23 (Client Quit  \nmflorea left at 13:54 (Quit: Leaving.  \ncjdelisle - (14:19): just realized we have the user's webid, maybe something like: \u00a0\u00a0\u00a0CN=Authority for trusting http://www.wiki.name/bin/view/XWiki/JohnSmith?  \ncjdelisle - (14:27): For user http://the.wiki.name/bin/view/XWiki/JohnSmith?  \ncjdelisle - (14:29): maybe just the webid should be the CN.  \nabusenius - (14:39): good idea  \nabusenius - (14:39): we would also have wiki name there  \ncjdelisle - (14:45): Not sure if I like the idea of using regex tricks on the webid  \nabusenius - (14:46): why regex?  \ncjdelisle - (14:46): I assume you meant to grab the.wiki.name from the id.  \nabusenius - (14:49): no, it will be in the url  \ncjdelisle - (14:49): the webid is gotten using XWikiDocument#getExternalURL  \ncjdelisle - (14:50): webid == url of user page  \nmflorea joined #xwiki at 15:56  \nvmassol joined #xwiki at 16:29  \nvmassol left at 16:30 (Client Quit  \nflorinciu left at 16:52 (Quit: Leaving.  \nvmassol joined #xwiki at 17:50  \nflorinciu joined #xwiki at 17:55  \nvmassol left at 17:57 (Quit: Leaving.  \nevalica joined #xwiki at 18:01  \nevalica left at 18:01 (Client Quit  \nmflorea left at 18:02 (Quit: Leaving.  \nvmassol joined #xwiki at 18:11  \nvmassol left at 18:12 (Client Quit  \nabusenius left at 18:14 (Ping timeout: 258 seconds  \nvmassol joined #xwiki at 18:27  \nvmassol left at 18:45 (Quit: Leaving.  \nsdumitriu joined #xwiki at 19:02  \nasrfel joined #xwiki at 21:31  \nmflorea joined #xwiki at 21:36  \nsdumitriu left at 21:46 (Ping timeout: 246 seconds  \nasrfel left at 22:03 (Quit: Leaving.  \nmflorea left at 22:03 (Quit: Leaving.  \nabusenius joined #xwiki at 22:14  \nnpm left at 22:43 (Remote host closed the connection  \nnpm joined #xwiki at 23:18  \n\n"}