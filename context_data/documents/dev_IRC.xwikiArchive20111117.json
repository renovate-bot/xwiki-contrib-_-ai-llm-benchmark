{"id": "dev:IRC.xwikiArchive20111117", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20111117", "title": "IRC Archive for channel #xwiki on 17 November 2011 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:18\u00a0<AndreasJonsson>\u00a0has quit  \n00:18\u00a0<AndreasJonsson>\u00a0has joined #xwiki  \n00:45\u00a0<jvdrean>\u00a0has quit  \n06:00\u00a0<Denis1>\u00a0has joined #xwiki  \n06:03\u00a0<Denis>\u00a0has quit  \n06:53\u00a0<abusenius>\u00a0has joined #xwiki  \n06:54\u00a0<abusenius>\u00a0has quit  \n07:01\u00a0<DrLou>\u00a0has quit  \n07:11\u00a0<tekzilla>\u00a0has quit  \n07:16\u00a0<tekzilla>\u00a0has joined #xwiki  \n07:53\u00a0<mflorea>\u00a0has joined #xwiki  \n07:54\u00a0<vmassol>\u00a0has joined #xwiki  \n08:42\u00a0<rrodriguez>\u00a0has quit  \n09:05\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:13\u00a0<CIA-102>\u00a0Vincent Massol\u000f master\u000f \\* rca460b4\u000f \u000f/ xwiki-platform-core/xwiki-platform-rendering/xwiki-platform-rendering-macros/xwiki-platform-rendering-macro-php/pom.xml :\u000f Set website URL. We need to define website URLs for all modules so that the Extension Manager UI can use this information when displaying extensions. We'll need to add some enforcer rule for this. - http://git.io/LDPerg  \n09:19\u00a0<vmassol>\u00a0good morning  \n09:19\u00a0<@cjdelisle>\u00a0good morning  \n09:19\u00a0<vmassol>\u00a0yesterday someone mentioned some tests failing because of my Dahsboard move but I've reviewed them all and I cannot find any that is related to that  \n09:20\u00a0<vmassol>\u00a0all failure that I see ATM seem related either to extensions JAXB and livetable change by thomas  \n09:20\u00a0<vmassol>\u00a0anyone knows what I would have broken with the Dashboard?  \n09:24\u00a0<CIA-102>\u00a0Vincent Massol\u000f master\u000f \\* r4b97e8b\u000f \u000f/ pom.xml :\u000f Fix SCM URL for all plartform modules - http://git.io/71Ving  \n09:24\u00a0<CIA-102>\u00a0Vincent Massol\u000f master\u000f \\* r06480b4\u000f \u000f/ xwiki-enterprise-test/pom.xml :\u000f XE-1046: Upgrade to Selenium 2.12.0 - http://git.io/8CODYQ  \n09:25\u00a0<vmassol>\u00a0so guys, are we ready to release 3.3M2 today?  \n09:32\u00a0<vmassol>\u00a0re the projects URL I wonder if we shouldn't establish a more stable URL\u2026.  \n09:33\u00a0<vmassol>\u00a0something like:  \n09:33\u00a0<vmassol>\u00a0http://xwiki.org/documentation?id=<extension id>  \n09:34\u00a0<vmassol>\u00a0and then on that page have some computation that points to the target documentation page for the extension  \n09:34\u00a0<vmassol>\u00a0(I'm referring to the URL in the poms)  \n09:34\u00a0<vmassol>\u00a0right now I've started to use for example: \u00a0\u00a0<url>http://extensions.xwiki.org/xwiki/bin/view/Extension/Observation+Module</url>  \n09:35\u00a0<vmassol>\u00a0hmmm actually  \n09:35\u00a0<vmassol>\u00a0if we set the top level URL to be:  \n09:35\u00a0<vmassol>\u00a0http://xwiki.org/documentation?id=  \n09:35\u00a0<vmassol>\u00a0then maven will automatically create the url for the submodules  \n09:35\u00a0<vmassol>\u00a0like:  \n09:36\u00a0<vmassol>\u00a0give me 1 mn  \n09:37\u00a0<vmassol>\u00a0I'll send a proposal  \n09:37\u00a0<vmassol>\u00a0in a few minutes, on the list  \n09:38\u00a0<CIA-102>\u00a0Vincent Massol\u000f master\u000f \\* r6aa29f5\u000f \u000f/ (4 files in 4 dirs):\u000f \\* Fix Commons SCM URLs ...  \n09:43\u00a0<sburjan>\u00a0has joined #xwiki  \n09:58\u00a0<evalica>\u00a0has joined #xwiki  \n10:00\u00a0<CIA-102>\u00a0Marius Dumitru Florea\u000f master\u000f \\* rf359382\u000f \u000f/ xwiki-platform-core/xwiki-platform-appwithinminutes/src/main/resources/AppWithinMinutes/ClassEditSheet.xml :\u000f Fix escaping test. - http://git.io/gBGm\\_A  \n10:00\u00a0<CIA-102>\u00a0Marius Dumitru Florea\u000f master\u000f \\* r8ddd6fa\u000f \u000f/ (2 files in 2 dirs):\u000f Merge branch 'master' of github.com:xwiki/xwiki-platform - http://git.io/KNx8pw  \n10:02\u00a0<+tmortagne>\u00a0vmassol: mflorea said it would take care of Dashboard related failure yesterday if I understood well, maybe it's already fixed  \n10:02\u00a0<+tmortagne>\u00a0s/it/he/  \n10:02\u00a0<jvdrean>\u00a0has joined #xwiki  \n10:03\u00a0<+mflorea>\u00a0it's not fixed, but I'll fix it asap  \n10:03\u00a0<vmassol>\u00a0mflorea: where is it? I couldn't find them  \n10:03\u00a0<vmassol>\u00a0(only test I haven't checked are the wysiwyg ones)  \n10:04\u00a0<vmassol>\u00a0(but I don't see why the dahsboard page would impact those)  \n10:04\u00a0<+mflorea>\u00a0you moved Main.Dashboard page, and some tests work with it  \n10:04\u00a0<vmassol>\u00a0which test mflorea?  \n10:04\u00a0<vmassol>\u00a0I couldn't find them  \n10:04\u00a0<+mflorea>\u00a0the failing ones :)  \n10:04\u00a0<+mflorea>\u00a0just a sec  \n10:04\u00a0<vmassol>\u00a0I checked them all  \n10:05\u00a0<vmassol>\u00a0and found the reaosn for all of them  \n10:05\u00a0<vmassol>\u00a0and it wasn't because of the dashboard page move  \n10:05\u00a0<vmassol>\u00a0(except wysiwyg ones which I haven't checked)  \n10:05\u00a0<+mflorea>\u00a0for instance http://ci.xwiki.org/job/xwiki-enterprise-test-wysiwyg/org.xwiki.enterprise$xwiki-enterprise-test-wysiwyg/498/testReport/org.xwiki.test.wysiwyg/LinkTest/testCreateAndEditLinkOnImage/  \n10:05\u00a0<+mflorea>\u00a0and  \n10:05\u00a0<+mflorea>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-test-wysiwyg/org.xwiki.enterprise$xwiki-enterprise-test-wysiwyg/498/testReport/org.xwiki.test.wysiwyg/LinkTest/testEditRelativeLink/  \n10:06\u00a0<vmassol>\u00a0ok so wysiwyg tests  \n10:06\u00a0<vmassol>\u00a0that explains why I didn't see them  \n10:06\u00a0<+mflorea>\u00a0yes  \n10:06\u00a0<vmassol>\u00a0btw if you fix them you should refactor them  \n10:06\u00a0<vmassol>\u00a0so that they don't use an exsiting page maybe  \n10:06\u00a0<vmassol>\u00a0haven't checked what they need  \n10:08\u00a0<vmassol>\u00a0testEditRelativeLink: Test that a relative link is correctly edited.  \n10:08\u00a0<vmassol>\u00a0I really don't see why it would need the Dahsboard page for hat  \n10:08\u00a0<vmassol>\u00a0that  \n10:09\u00a0<vmassol>\u00a0what did I miss? :)  \n10:19\u00a0<vmassol>\u00a0evalica: good morning. When can we remove the ecosystem panel? :)  \n10:20\u00a0<vmassol>\u00a0(on xwikiorg)  \n10:21\u00a0<+evalica>\u00a0I can remove it \u00a0now - if you want  \n10:21\u00a0<vmassol>\u00a0did you find a place for the surveys?  \n10:21\u00a0<vmassol>\u00a0survey panel?  \n10:22\u00a0<+evalica>\u00a0that should be ok  \n10:22\u00a0<vmassol>\u00a0or maybe there can be a survey link in the general links  \n10:22\u00a0<vmassol>\u00a0(a single survey link that is)  \n10:23\u00a0<vmassol>\u00a0provided the surveys are available somewhere not too hidden I'm +1 to remove the ecosystem panel  \n10:23\u00a0<+evalica>\u00a0k  \n10:24\u00a0<vmassol>\u00a0evalica: I'm not sure about the About xwiki.org menu  \n10:24\u00a0<vmassol>\u00a0\"About XWiki\" I mean  \n10:24\u00a0<vmassol>\u00a0it has 2 links  \n10:24\u00a0<vmassol>\u00a0should we keep it and remove those links from the General Links panel?  \n10:24\u00a0<vmassol>\u00a0or should we leave those links in the General Links panel?  \n10:24\u00a0<vmassol>\u00a0How do we organize the general links panel now?  \n10:25\u00a0<vmassol>\u00a0shouldn't general links be links located in the top menu  \n10:25\u00a0<vmassol>\u00a0leaving the side bar only for contextual panels  \n10:25\u00a0<vmassol>\u00a0that would be my preference actually I think  \n10:26\u00a0<+evalica>\u00a0well the general links should contain just links that are on the main wiki  \n10:26\u00a0<vmassol>\u00a0FAQ should go in the Support top level menu for ex  \n10:26\u00a0<vmassol>\u00a0FAQ is useful anywahere  \n10:26\u00a0<vmassol>\u00a0not just on the main wiki  \n10:27\u00a0<vmassol>\u00a0so I'm fine to transform General Links into a contextual panel for the main wiki  \n10:27\u00a0<vmassol>\u00a0but we need to move out  \n10:27\u00a0<vmassol>\u00a0items that are generic  \n10:27\u00a0<vmassol>\u00a0and that should be visible for all subwikis  \n10:27\u00a0<vmassol>\u00a0and move them into the top level menu  \n10:27\u00a0<vmassol>\u00a0wdyt?  \n10:27\u00a0<vmassol>\u00a0we can review them one by one  \n10:27\u00a0<+evalica>\u00a0let me make some changes and then we can improve  \n10:27\u00a0<vmassol>\u00a0ok  \n10:27\u00a0<+evalica>\u00a0yes - the generic / important stuff should be in the menu  \n10:27\u00a0<+evalica>\u00a0but the menu shouldn't be very crowded  \n10:28\u00a0<vmassol>\u00a0sure but I think we have some margin  \n10:28\u00a0<+evalica>\u00a0and the footer will help too  \n10:28\u00a0<+evalica>\u00a0when are we gonna integrate the footer?  \n10:28\u00a0<vmassol>\u00a0footer is not for main information!  \n10:28\u00a0<+evalica>\u00a0actually maybe when I will finish the homepage proposal .... then is a good time  \n10:28\u00a0<vmassol>\u00a0it's for comprehensiveness for me  \n10:28\u00a0<vmassol>\u00a0sitemap  \n10:28\u00a0<vmassol>\u00a0but top level menu is visible all the time  \n10:29\u00a0<vmassol>\u00a0so it should contain stuff that we want people to acess from anywhere  \n10:29\u00a0<vmassol>\u00a0all the things I had put in general links was for that  \n10:29\u00a0<+evalica>\u00a0for me the footer is for an extended navigation - but we've talked all this before : )  \n10:29\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* r4319477\u000f \u000f/ (4 files in 4 dirs):\u000f XE-1039: LiveTableElement is almost unusable ...  \n10:29\u00a0<+evalica>\u00a0k  \n10:29\u00a0<+evalica>\u00a0brb  \n10:29\u00a0<vmassol>\u00a0but we can review the general links and decide if some items do not need to be visible from everywhere  \n10:30\u00a0<vmassol>\u00a0evalica: you said that you didn't want the footer to be on all pages  \n10:30\u00a0<vmassol>\u00a0so I don't see how it can be extended nav  \n10:30\u00a0<vmassol>\u00a0it becomes contextual only  \n10:57\u00a0<CIA-102>\u00a0Marius Dumitru Florea\u000f master\u000f \\* r836738b\u000f \u000f/ (2 files):\u000f Fix webstandards validation tests. - http://git.io/8ccdqg  \n10:57\u00a0<CIA-102>\u00a0Marius Dumitru Florea\u000f master\u000f \\* raf0b277\u000f \u000f/ xwiki-platform-core/xwiki-platform-appwithinminutes/src/main/resources/AppWithinMinutes/LiveTableEditSheet.xml :\u000f Bulletproofing. - http://git.io/JcRpFA  \n11:06\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* r5bca3c1\u000f \u000f/ xwiki-enterprise-test/xwiki-enterprise-test-pageobjects/src/main/java/org/xwiki/test/po/TestUtils.java :\u000f Apply codestyle - http://git.io/JEeRnQ  \n11:10\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* r63e8e61\u000f \u000f/ xwiki-enterprise-test/xwiki-enterprise-test-pageobjects/src/main/java/org/xwiki/test/po/TestUtils.java :\u000f Put back as static since, forgot it was like this for ...  \n11:11\u00a0<CIA-102>\u00a0Marius Dumitru Florea\u000f master\u000f \\* r0ecc528\u000f \u000f/ xwiki-enterprise-test/xwiki-enterprise-test-pageobjects/src/main/java/org/xwiki/test/po/TestUtils.java :\u000f Merge branch 'master' of github.com:xwiki/xwiki-enterprise - http://git.io/DM7mgQ  \n11:11\u00a0<Enygma`>\u00a0has joined #xwiki  \n11:17\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* r8da86a7\u000f \u000f/ xwiki-enterprise-test/xwiki-enterprise-test-pageobjects/src/main/java/org/xwiki/test/po/TestUtils.java :\u000f More javadoc. - http://git.io/Uo-sMg  \n11:26\u00a0<npm>\u00a0has quit  \n11:27\u00a0<npm>\u00a0has joined #xwiki  \n11:29\u00a0<vmassol>\u00a0Denis1: hi  \n11:30\u00a0<vmassol>\u00a0I'm looking at https://github.com/xwiki/xwiki-platform/commit/0edbb5d9066a9dd614eb3cc4e02d3210007e2618  \n11:30\u00a0<vmassol>\u00a0but I see lots of commits that do not seem related to the description  \n11:30\u00a0<vmassol>\u00a0is that an error?  \n11:30\u00a0<vmassol>\u00a0actually I haven't found code related to entity references yet....  \n11:30\u00a0<vmassol>\u00a0(I started from the top)  \n11:31\u00a0<vmassol>\u00a0maybe you should revert this and re commit separately?  \n11:32\u00a0<vmassol>\u00a0there seems to be stuff about everything  \n11:33\u00a0<vmassol>\u00a0ok I've finised scanning and couldn't find anything related to entity references....  \n11:33\u00a0<vmassol>\u00a0I don't get it  \n11:38\u00a0<@cjdelisle>\u00a0I think that commit was bringing the branch up to date with the trunk.  \n11:38\u00a0<vmassol>\u00a0cjdelisle: are you sure? for me it was merging his branch into master no?  \n11:39\u00a0<vmassol>\u00a0\"Merge branch 'feature-immutable-refs' into 'master'  \n11:39\u00a0<vmassol>\u00a0\"  \n11:39\u00a0<vmassol>\u00a0this is completly unreviewable  \n11:39\u00a0<@cjdelisle>\u00a0hmm indeed  \n11:39\u00a0<vmassol>\u00a0also I don't see any change related to entity refs in this merge  \n11:39\u00a0<vmassol>\u00a0even though the message is about entity refs...  \n11:42\u00a0<vmassol>\u00a0hmmm  \n11:42\u00a0<vmassol>\u00a0looking at my workspace  \n11:42\u00a0<vmassol>\u00a0I can see private static final long serialVersionUID = 2L;  \n11:42\u00a0<vmassol>\u00a0and private static final String LOCALE = \"LOCALE\";  \n11:42\u00a0<vmassol>\u00a0so it seems refs stuff are there  \n11:42\u00a0<vmassol>\u00a0but I don't see the github diff  \n11:43\u00a0<@cjdelisle>\u00a0It looks like he accidently merged a rollback of master to an older version (probably where the branch was forked)  \n11:45\u00a0<vmassol>\u00a0I'd like to comment in github but I can't find the commit related to the new entity ref code  \n11:46\u00a0<+tmortagne>\u00a0vmassol: I think there should be a lot of commits and not just one if he merged his branch  \n11:48\u00a0<+tmortagne>\u00a0yep there is a lot of commits  \n11:48\u00a0<vmassol>\u00a0why has he kept the generic notion of parameters when we don't agree abuut it?  \n11:48\u00a0<+tmortagne>\u00a0so it depends which modification you want to comment on  \n11:48\u00a0<vmassol>\u00a0it's also exposed  \n11:48\u00a0<vmassol>\u00a0since it's protected  \n11:48\u00a0<vmassol>\u00a0I'd like to comment on several  \n11:48\u00a0<+tmortagne>\u00a0it's protected because used by DocumentReference I think  \n11:49\u00a0<vmassol>\u00a0I know why  \n11:49\u00a0<vmassol>\u00a0but I already commented by mail that it's wrong for me  \n11:49\u00a0<vmassol>\u00a0until we agree that we want parameters  \n11:49\u00a0<vmassol>\u00a0right now we are in complete disagreement on this  \n11:50\u00a0<@cjdelisle>\u00a0I hope he still has a copy of it because he seems to have deleted the branch  \n11:52\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* rc289ba8\u000f \u000f/ xwiki-enterprise-test/xwiki-enterprise-test-pageobjects/src/main/java/org/xwiki/test/po/TestUtils.java :\u000f Typo - http://git.io/vx5bOw  \n11:54\u00a0<@cjdelisle>\u00a0hmm no this looks like a github issue  \n11:55\u00a0<@cjdelisle>\u00a0https://github.com/xwiki/xwiki-platform/blob/0edbb5d9066a9dd614eb3cc4e02d3210007e2618/xwiki-platform-core/xwiki-platform-model/src/main/java/org/xwiki/model/reference/EntityReference.java  \n11:55\u00a0<@cjdelisle>\u00a0the commit happened  \n11:55\u00a0<@cjdelisle>\u00a0perhaps it has the same hash as his previous merge because the state of the tree is the same so github is displaying the wrong diff?  \n12:00\u00a0<nIMBVS>\u00a0has joined #xwiki  \n12:21\u00a0<Denis1>\u00a0vmassol: do not know what goes wrong with Github, I have merged my branch to master, doesn't it what I should do at the end ?  \n12:22\u00a0<Denis1>\u00a0is now known as <Denis>  \n12:23\u00a0<+Denis>\u00a0vmassol: in the news feed, their is a link that shows what I would have expected: https://github.com/xwiki/xwiki-platform/compare/615202482e...0edbb5d906  \n12:24\u00a0<+Denis>\u00a0do not know why this wasn't show that way.  \n12:33\u00a0<@cjdelisle>\u00a0I am trying to resolve a reference to a document, the document name is doesn't contain the wiki so how do I tell the resolver which wiki I'm using?  \n12:38\u00a0<vmassol>\u00a0Denis: so https://github.com/xwiki/xwiki-platform/compare/615202482e...0edbb5d906 represents the real commit related to your entity ref changes?  \n12:39\u00a0<+Denis>\u00a0this is the one that contains all the commits of the branch yes  \n12:39\u00a0<+Denis>\u00a0but for details, the branch is of course a better references  \n12:40\u00a0<vmassol>\u00a0arf I cannot comment there :(  \n12:40\u00a0<vmassol>\u00a0(on https://github.com/xwiki/xwiki-platform/compare/615202482e...0edbb5d906 )  \n12:40\u00a0<vmassol>\u00a0Denis: you have a typo: <excluse>  \n12:40\u00a0<vmassol>\u00a0first diff on https://github.com/xwiki/xwiki-platform/compare/615202482e...0edbb5d906  \n12:41\u00a0<vmassol>\u00a0btw I'd have put them all together (the excludes) with a comment for all of them explaining why the apis are broken  \n12:41\u00a0<vmassol>\u00a0(immutability)  \n12:42\u00a0<+Denis>\u00a0funny that it never complains  \n12:43\u00a0<vmassol>\u00a0yes maybe you haven't broken any api in which case we don't need it  \n12:43\u00a0<vmassol>\u00a0:)  \n12:43\u00a0<+Denis>\u00a0it is needed  \n12:43\u00a0<vmassol>\u00a0or maybe it disables compeltely all other excludes  \n12:43\u00a0<+Denis>\u00a0I have broken the mutability  \n12:43\u00a0<+Denis>\u00a0I fix this ASAP  \n12:45\u00a0<+Denis>\u00a0mmm  \n12:45\u00a0<+Denis>\u00a0the type is on both side  \n12:45\u00a0<+Denis>\u00a0I do not think maven care about the name here  \n12:45\u00a0<+Denis>\u00a0so it simply works  \n12:46\u00a0<vmassol>\u00a0remove it, see if it works  \n12:46\u00a0<vmassol>\u00a0if it does then either clirr has a bug or you haven't really broken backward compat  \n12:46\u00a0<vmassol>\u00a0(or something I can't figure out\u2026)  \n12:49\u00a0<vmassol>\u00a0Denis: right now we cannot reference an attachment located in a document in a given locale right?  \n12:49\u00a0<vmassol>\u00a0hmm forget that  \n12:49\u00a0<vmassol>\u00a0we can  \n12:50\u00a0<vmassol>\u00a0that looks really weird to me :  \n12:50\u00a0<vmassol>\u00a0+\u00a0\u00a0\u00a0\u00a0public\u00a0AttachmentReference(EntityReference\u00a0reference,\u00a0EntityReference\u00a0oldReference,\u00a0EntityReference\u00a0newReference)  \n12:50\u00a0<vmassol>\u00a0\u00a0  \n12:50\u00a0<vmassol>\u00a054  \n12:51\u00a0<vmassol>\u00a0I don't understand why have this as a constructor  \n12:51\u00a0<vmassol>\u00a0why not ac clone() method?  \n12:51\u00a0<vmassol>\u00a0the javadoc even mentions it's a clone: \"Clone\u00a0an\u00a0AttachmentReference,\u00a0\"  \n12:52\u00a0<@cjdelisle>\u00a0because they're immutable you have to \"clone with changes\" instead of just making changes  \n12:52\u00a0<vmassol>\u00a0clone returns \u00a0new instance  \n12:53\u00a0<@cjdelisle>\u00a0it would have to be: \u00a0\u00a0clone(EntityReference\u00a0oldReference,\u00a0EntityReference\u00a0newReference)  \n12:53\u00a0<vmassol>\u00a0yep  \n12:53\u00a0<vmassol>\u00a0that's much nicer already  \n12:53\u00a0<@cjdelisle>\u00a0I don't really have a position either way on that matter.  \n12:54\u00a0<+Denis>\u00a0you missed it  \n12:54\u00a0<+Denis>\u00a0it is a clone with parent replacement  \n12:55\u00a0<@cjdelisle>\u00a0even if you have the clone() you will still need the constructor, it's just a question of whether it should be public or private.  \n12:55\u00a0<+Denis>\u00a0it replace in the parent chain of reference, oldReference by newReference  \n12:55\u00a0<+Denis>\u00a0there is no clone()  \n12:55\u00a0<+Denis>\u00a0their is a copy-constructor  \n12:56\u00a0<vmassol>\u00a0so the javadoc is wrong?  \n12:56\u00a0<+Denis>\u00a0let me see  \n12:56\u00a0<vmassol>\u00a0\"Clone\u00a0an\u00a0AttachmentReference,\u00a0\"  \n12:57\u00a0<+Denis>\u00a0but replace one of the parent...  \n12:57\u00a0<+Denis>\u00a0where are you reading that ?  \n12:57\u00a0<vmassol>\u00a0trying to find it agian  \n12:58\u00a0<vmassol>\u00a0public\u00a0AttachmentReference(EntityReference\u00a0reference,\u00a0EntityReference\u00a0oldReference,\u00a0EntityReference\u00a0newReference)  \n12:58\u00a0<+Denis>\u00a0yes, it says: Clone an AttachmentReference, but replace one of the parent in the chain by a new one.  \n12:58\u00a0<vmassol>\u00a0I still find it strange to use a constructor for that  \n12:59\u00a0<vmassol>\u00a0it looks like some helper method  \n12:59\u00a0<vmassol>\u00a0some resolvers maybe  \n12:59\u00a0<+Denis>\u00a0you are immutable, you need to  \n12:59\u00a0<+Denis>\u00a0resolver use this all over the place  \n12:59\u00a0<vmassol>\u00a0what I don't get  \n12:59\u00a0<vmassol>\u00a0is that you're pasing everything you need in param  \n12:59\u00a0<+Denis>\u00a0this is the key of being able to change resolver without providing them mutable references  \n12:59\u00a0<vmassol>\u00a0so that method is actually static  \n13:00\u00a0<vmassol>\u00a0since it deosn't need anything from the class right?  \n13:00\u00a0<+Denis>\u00a0no  \n13:00\u00a0<+Denis>\u00a0it is a contructor, that clone reference, providing a new reference, with a modified parent chain  \n13:01\u00a0<vmassol>\u00a0so for you factories don't exist  \n13:01\u00a0<vmassol>\u00a0there are only constructors  \n13:01\u00a0<vmassol>\u00a0?  \n13:01\u00a0<@cjdelisle>\u00a0If it is to be made truely immutable then a cloneWithNewParent() method would just be syntax sugar which wrapped this constructor.  \n13:01\u00a0<+Denis>\u00a0why do you want a factory for this ?  \n13:02\u00a0<+Denis>\u00a0just for more clarity ?  \n13:02\u00a0<vmassol>\u00a0because I don't see what this has to do with the AttachmentReference class itself  \n13:03\u00a0<vmassol>\u00a0it's somertihng that uses the AttachmentReference class  \n13:03\u00a0<vmassol>\u00a0but it's not part of it  \n13:03\u00a0<+Denis>\u00a0sorry, I don't get it  \n13:03\u00a0<vmassol>\u00a0what would prevent you  \n13:04\u00a0<vmassol>\u00a0from having a class called Whatever  \n13:04\u00a0<vmassol>\u00a0that does the same thing  \n13:04\u00a0<vmassol>\u00a0?  \n13:04\u00a0<vmassol>\u00a0it's a \"helper\" method  \n13:04\u00a0<+Denis>\u00a0all references provide 2 contructors: a simple copy-construtor, and this special copy-constructor that replace parents  \n13:04\u00a0<vmassol>\u00a0not an intrinsic action/feature of AttachmentReference  \n13:04\u00a0<+Denis>\u00a0this is very useful, look a some usage  \n13:04\u00a0<vmassol>\u00a0I'm not saying it's not useful  \n13:04\u00a0<+Denis>\u00a0s/a/at/  \n13:05\u00a0<vmassol>\u00a0it's just that I don't recall seeing this constrcut as a constructor anywehre else (in our code at least)  \n13:05\u00a0<vmassol>\u00a0so it's something new for me  \n13:05\u00a0<vmassol>\u00a0and i need to put my head around it  \n13:06\u00a0<vmassol>\u00a0I need to understand why it's done like this so that I can make it mine, reuse it, modify existing code if this is the best way to do it,e tc  \n13:06\u00a0<+Denis>\u00a0if it is provided only at the EntityReference level, you will have to use the copy-construtor to go back to an attachment reference  \n13:07\u00a0<+Denis>\u00a0compare to the one of EntityReference, this one check properly that the parent chain created by the replacement is appropriate to an AttachementReference  \n13:07\u00a0<vmassol>\u00a0(btw Denis I'm not saying it's wrong, it's just than I need to undersatdn it which is why I'm playing the devil's advocate)  \n13:08\u00a0<+Denis>\u00a0before making it like this, I have use the simple copy-contructor calling the parent replacement one in entityReference, but it was not nice, and very poor for the performance  \n13:08\u00a0<+Denis>\u00a0I am trying explains  \n13:08\u00a0<+Denis>\u00a0I not close to discussion :)  \n13:09\u00a0<vmassol>\u00a0let me look at some usages to better understand it  \n13:09\u00a0<+Denis>\u00a0sure  \n13:10\u00a0<@cjdelisle>\u00a0It makes some sense that for something immutable that you would have a readily available means of getting a different one. It is almost as natural to use as setWikiReference() without the risks.  \n13:10\u00a0<+Denis>\u00a0said another way, it provide the most common mutability use case we has before, using setParent()  \n13:11\u00a0<@cjdelisle>\u00a0indeed  \n13:11\u00a0<+Denis>\u00a0but it is far more powerful  \n13:12\u00a0<+tmortagne>\u00a0gwt-maven-plugin fail very often  \n13:12\u00a0<vmassol>\u00a0Denis: I see this for example as a usage:  \n13:12\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.pageReference = new EntityReference(this.pageReference, this.pageReference.getParent(),  \n13:12\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0new EntityReference(this.value.toString(), EntityType.SPACE));  \n13:13\u00a0<vmassol>\u00a0I would have expected to see this:  \n13:13\u00a0<vmassol>\u00a0this.pageReference = this.pageReference.replace(this.pageReference.getParent(), new EntityReference(this.value.toString(), EntityType.SPACE))  \n13:13\u00a0<vmassol>\u00a0(where replace would have returned a new instance of course since it's immutable)  \n13:13\u00a0<vmassol>\u00a0it's like the String class  \n13:13\u00a0<vmassol>\u00a0it's immutable  \n13:14\u00a0<vmassol>\u00a0but it does have replace, replaceAll, substring, etc  \n13:14\u00a0<+Denis>\u00a0I am not against  \n13:14\u00a0<vmassol>\u00a0it's much simpler to understand IMO  \n13:14\u00a0<@cjdelisle>\u00a0replaceParent() as a wrapper around that constructor?  \n13:14\u00a0<+Denis>\u00a0but it is a helper  \n13:14\u00a0<+Denis>\u00a0I still need the constructor  \n13:15\u00a0<@cjdelisle>\u00a0Even if the constructor becomes private, we still need it if we want to ever make the fields truely immutable.  \n13:16\u00a0<+Denis>\u00a0so I have not provide it, it could be added, but I do not see why we should hide the constructor ?  \n13:16\u00a0<vmassol>\u00a0because from the user POV  \n13:17\u00a0<vmassol>\u00a0the idea is not to contruct something, it is to replace  \n13:17\u00a0<vmassol>\u00a0if we keep both then there are 2 ways of achieving the samre thing  \n13:17\u00a0<vmassol>\u00a0which is always troubling imo  \n13:17\u00a0<+Denis>\u00a0well this does not emphase the fact that we are immutable  \n13:17\u00a0<vmassol>\u00a0you'll find code with both styles  \n13:18\u00a0<+Denis>\u00a0I have not provide both, my choice was to use construtors  \n13:18\u00a0<vmassol>\u00a0personally when I read this:  \n13:18\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.pageReference = new EntityReference(this.pageReference, this.pageReference.getParent(),  \n13:18\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0new EntityReference(this.value.toString(), EntityType.SPACE));  \n13:18\u00a0<vmassol>\u00a0I don't undertand anything  \n13:18\u00a0<+Denis>\u00a0you have the same to replace Locale on document  \n13:18\u00a0<vmassol>\u00a0I need to go look up the javadoc  \n13:18\u00a0<vmassol>\u00a0to understand what are the params  \n13:18\u00a0<vmassol>\u00a0whereas the replace is way more clear in its intent  \n13:19\u00a0<+Denis>\u00a0but you may think then that you have not created a new reference  \n13:19\u00a0<vmassol>\u00a0the goal here is NOT to create an instance  \n13:19\u00a0<vmassol>\u00a0but to replace something  \n13:19\u00a0<+Denis>\u00a0sure it is  \n13:19\u00a0<vmassol>\u00a0the fact that an instance i created  \n13:19\u00a0<vmassol>\u00a0is just a side effect of immutability  \n13:19\u00a0<+Denis>\u00a0you are looking at the resolver use case only  \n13:19\u00a0<+Denis>\u00a0look copyDocument  \n13:20\u00a0<vmassol>\u00a0same ehre: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0reference = new EntityReference(reference, null, newReference); \u00a0How can you understand this when you read it for the first time?  \n13:21\u00a0<vmassol>\u00a0I don't even understand what it means to be honest  \n13:21\u00a0<vmassol>\u00a0how can you replace something that is null?  \n13:21\u00a0<vmassol>\u00a0:)  \n13:21\u00a0<evalica1>\u00a0has joined #xwiki  \n13:22\u00a0<Enygma`1>\u00a0has joined #xwiki  \n13:22\u00a0<vmassol>\u00a0so from what I've seen so far:  \n13:22\u00a0<vmassol>\u00a0what you've done is powerful  \n13:22\u00a0<vmassol>\u00a0but hard to read  \n13:22\u00a0<vmassol>\u00a0and use  \n13:22\u00a0<vmassol>\u00a0I'd love if we could tune it to make it more readable/understandble  \n13:23\u00a0<Enygma`>\u00a0has quit  \n13:24\u00a0<evalica>\u00a0has quit  \n13:25\u00a0<@cjdelisle>\u00a0I agree with vmassol that replaceParent() would be more easily understood but I am relitively neutral on it.  \n13:25\u00a0<CIA-102>\u00a0Vincent Massol\u000f master\u000f \\* r731dfd8\u000f \u000f/ xwiki-platform-core/xwiki-platform-model/src/main/java/org/xwiki/model/internal/reference/LocalReferenceEntityReferenceSerializer.java :\u000f Remove unnecessary null - http://git.io/93mLXg  \n13:29\u00a0<vmassol>\u00a0cjdelisle: do you know what new EntityReference(reference, null, newReference) means?  \n13:29\u00a0<vmassol>\u00a0(without looking at the impl of course ;))  \n13:29\u00a0<vmassol>\u00a0(I havne't checked the impl yet)  \n13:30\u00a0<CIA-102>\u00a0Denis Gervalle\u000f master\u000f \\* r6133f01\u000f \u000f/ xwiki-platform-core/pom.xml :\u000f XWIKI-7097 Make EntityReference immutables, and add Locale in DocumentRefence ...  \n13:30\u00a0<CIA-102>\u00a0Denis Gervalle\u000f master\u000f \\* r263cf23\u000f \u000f/ xwiki-platform-core/xwiki-platform-model/src/main/java/org/xwiki/model/reference/DocumentReference.java :\u000f XWIKI-7097 Make EntityReference immutables, and add Locale in DocumentRefence ...  \n13:30\u00a0<@cjdelisle>\u00a0ahh, it replaces by type  \n13:30\u00a0<@cjdelisle>\u00a0that's my final answer  \n13:30\u00a0<@cjdelisle>\u00a0yes, it is tricky to guess ;)  \n13:31\u00a0<+Denis>\u00a0no  \n13:31\u00a0<vmassol>\u00a0:)  \n13:31\u00a0<+Denis>\u00a0but I know it does :)  \n13:32\u00a0<+Denis>\u00a0do you means you want replaceParent, appendParent ?  \n13:32\u00a0<vmassol>\u00a0yes  \n13:32\u00a0<vmassol>\u00a0passing null is always a bad design anyway  \n13:32\u00a0<+Denis>\u00a0it could be added, no problem for me  \n13:33\u00a0<vmassol>\u00a0but I'd like the constructor private too  \n13:33\u00a0<vmassol>\u00a0since I'd like to have only 1 way of doing it  \n13:33\u00a0<vmassol>\u00a0internally passing null is not a problem for me, it's a problem at api level  \n13:34\u00a0<vmassol>\u00a0you're basically passing null as a way to do eveything in a single method but that's just hiding the fact that there are 2 use cases here  \n13:34\u00a0<+Denis>\u00a0ok, I am just so happy with the fact the it is no evident (like it could be for string) that replace parent return a new reference  \n13:35\u00a0<+Denis>\u00a0I have always be uncomfortable with that for string before, and it is for me event worse with a not well-know type, so you will have to read the javadoc, but you may missed it  \n13:36\u00a0<vmassol>\u00a0I don't see the problem. You have no choice anyway  \n13:36\u00a0<Enygma`1>\u00a0has quit  \n13:36\u00a0<vmassol>\u00a0it's not like you can call some set method  \n13:36\u00a0<+Denis>\u00a0no replacing the only null parant in the chain, it is not so bad has you said  \n13:36\u00a0<evalica1>\u00a0has quit  \n13:37\u00a0<+Denis>\u00a0if the method name better emphasis the fact the we create something new, it would be better  \n13:38\u00a0<vmassol>\u00a0I understand what you mean  \n13:38\u00a0<vmassol>\u00a0but I think there's more advantage in having easier to read code than more clearly indicating it's immutable  \n13:40\u00a0<vmassol>\u00a0Denis: leftover? if\u00a0(currentReference.getParent()\u00a0!=\u00a0null\u00a0/\\*&&\u00a0representation.length()\u00a0>\u00a00\\*/)\u00a0{  \n13:40\u00a0<+Denis>\u00a0was there before  \n13:40\u00a0<vmassol>\u00a0shouldn't we remove it?  \n13:40\u00a0<vmassol>\u00a0it's not used  \n13:41\u00a0<+Denis>\u00a0but I though it was useless, so I have left it for the reviewer  \n13:41\u00a0<+Denis>\u00a0but no one catch it already :)  \n13:41\u00a0<@cjdelisle>\u00a0That's in attachments? If it was already there then it's my fault.  \n13:41\u00a0<+Denis>\u00a0and I have forgot it  \n13:41\u00a0<+Denis>\u00a0it is in resolvers  \n13:41\u00a0<vmassol>\u00a0PathStringEntityReferenceSerializer  \n13:42\u00a0<+Denis>\u00a0probably your code Vincent, no ?  \n13:42\u00a0<@cjdelisle>\u00a0I saw it but forgot about it before I had a chance to mention it.  \n13:42\u00a0<vmassol>\u00a0let's see what gir history says  \n13:42\u00a0<@cjdelisle>\u00a0I was mostly looking for dangerous apis at the time.  \n13:42\u00a0<vmassol>\u00a0git  \n13:42\u00a0<+Denis>\u00a0is this the only place, I do not think so  \n13:43\u00a0<vmassol>\u00a0you added it Denis  \n13:43\u00a0<vmassol>\u00a0in rev a9fbbeae28ab315e38147e304f4bf08ad68ee6d2  \n13:44\u00a0<Enygma`>\u00a0has joined #xwiki  \n13:44\u00a0<vmassol>\u00a0Denis: you're reomving it?  \n13:45\u00a0<+Denis>\u00a0you means that I commented it, no ?  \n13:45\u00a0<vmassol>\u00a0no  \n13:45\u00a0<vmassol>\u00a0it wasn't there at all before  \n13:45\u00a0<vmassol>\u00a0you refactored cod and added it  \n13:45\u00a0<vmassol>\u00a0code  \n13:45\u00a0<vmassol>\u00a0anyway I can remove it or you do it as you want  \n13:45\u00a0<vmassol>\u00a0there's no point in keeping it  \n13:45\u00a0<+Denis>\u00a0so it cames from another place where I commented it  \n13:45\u00a0<vmassol>\u00a0let's get it over wiht  \n13:46\u00a0<vmassol>\u00a0:)  \n13:47\u00a0<vmassol>\u00a0Denis: \"//\u00a0TODO:\u00a0ensure\u00a0that\u00a0other\u00a0parameters\u00a0are\u00a0copied\u00a0properly\" is that importabnt?  \n13:48\u00a0<vmassol>\u00a0(in XWikiDocument.java)  \n13:49\u00a0<vmassol>\u00a0hey you sneaked in some api changes: public\u00a0List<EntityReference>\u00a0getReversedReferenceChain()\u00a0{ ;)  \n13:50\u00a0<+Denis>\u00a0yes it is  \n13:50\u00a0<vmassol>\u00a0which has an invalid coding style btw, { should be on the bext line  \n13:50\u00a0<vmassol>\u00a0next  \n13:50\u00a0<+Denis>\u00a0but this file is excluded from checkstyle probably  \n13:50\u00a0<vmassol>\u00a0the style is still not correct  \n13:51\u00a0<vmassol>\u00a0I thought you removed all excluces btw  \n13:51\u00a0<vmassol>\u00a0checkstyle excludes  \n13:51\u00a0<+Denis>\u00a0this mine, not always easy to adapt :)  \n13:51\u00a0<@cjdelisle>\u00a0hehe  \n13:51\u00a0<@cjdelisle>\u00a0removed all excluces <-- hehe  \n13:51\u00a0<+Denis>\u00a0I thought as well  \n13:51\u00a0<+Denis>\u00a0does checkstyle missed it  \n13:51\u00a0<vmassol>\u00a0maybe, but strange  \n13:52\u00a0<vmassol>\u00a0I thought it was catching this  \n13:52\u00a0<+Denis>\u00a0just found another missed also  \n13:53\u00a0<+Denis>\u00a0look higher there are all that way, curious it does not tell me  \n13:53\u00a0<vmassol>\u00a0I know all the ones you added  \n13:54\u00a0<+Denis>\u00a0sure I am coding this way for more than 20 years !  \n13:54\u00a0<vmassol>\u00a0:)  \n13:54\u00a0<+Denis>\u00a0I would have been ?1 on this style :)  \n13:54\u00a0<vmassol>\u00a0lucky you were not a comitter at the time  \n13:55\u00a0<CIA-102>\u00a0Vincent Massol\u000f master\u000f \\* r802a2a6\u000f \u000f/ xwiki-platform-core/xwiki-platform-store/xwiki-platform-store-filesystem-attachments/src/main/java/org/xwiki/model/internal/reference/PathStringEntityReferenceSerializer.java :\u000f Removed commented out code - http://git.io/iRtcVw  \n13:55\u00a0<+Denis>\u00a0I could reopen the discussion :D  \n13:55\u00a0<vmassol>\u00a0you could  \n13:55\u00a0<vmassol>\u00a0want to try? :)  \n13:55\u00a0<+Denis>\u00a0but could you explains why there and not for other {  \n13:56\u00a0<vmassol>\u00a0because of jvdrean ;)  \n13:56\u00a0<vmassol>\u00a0my initial proposal was all { on a new line  \n13:56\u00a0<vmassol>\u00a0but jvdrean objected that it's taking too much space  \n13:56\u00a0<vmassol>\u00a0(I preferred clarity over space)  \n13:56\u00a0<vmassol>\u00a0so we agreed that have { on new lines for class and method level  \n13:57\u00a0<+Denis>\u00a0sure, and it is tacking too much space there too  \n13:57\u00a0<vmassol>\u00a0for readbility  \n13:57\u00a0<@cjdelisle>\u00a0I like the way it works now, class and method names need some whitespace  \n13:57\u00a0<@cjdelisle>\u00a0}  \n13:57\u00a0<@cjdelisle>\u00a0else  \n13:57\u00a0<@cjdelisle>\u00a0{  \n13:57\u00a0<@cjdelisle>\u00a0is silly  \n13:57\u00a0<vmassol>\u00a0Denis: people who use { on the same line for class and method always end up adding new lines  \n13:57\u00a0<vmassol>\u00a0for clarity  \n13:57\u00a0<+Denis>\u00a0there is comments for that also  \n13:58\u00a0<+Denis>\u00a0you just want to say the code of XWiki is big :)  \n13:58\u00a0<vmassol>\u00a0yes commenting an if elseif is a pain  \n13:58\u00a0<vmassol>\u00a0(when on the same line)  \n13:58\u00a0<vmassol>\u00a0btw our rule  \n13:59\u00a0<vmassol>\u00a0says that even for an if/for/etc  \n13:59\u00a0<vmassol>\u00a0if the condition spans more than 1 line  \n13:59\u00a0<vmassol>\u00a0we put a { on the next line  \n13:59\u00a0<vmassol>\u00a0as otherwise the idnentation will make the condition on the next line at the same level as the code inside the block  \n13:59\u00a0<@cjdelisle>\u00a0heh I didn't even hear that rule but that's how I do it because it just feels right  \n13:59\u00a0<vmassol>\u00a0unfortunatley checstyle doesn't check for this  \n14:00\u00a0<+Denis>\u00a0seems it does not catch existing rules as well  \n14:01\u00a0<+Denis>\u00a0let's talk about the api change  \n14:01\u00a0<+Denis>\u00a0it is more productive  \n14:01\u00a0<+Denis>\u00a0I have removed getChild which was really broken  \n14:01\u00a0<+Denis>\u00a0and I provide an appropriate alternative  \n14:02\u00a0<+Denis>\u00a0so it is more an improvement than a change  \n14:02\u00a0<@cjdelisle>\u00a0getChild makes it a doubly linked list which is limiting IMO  \n14:02\u00a0<vmassol>\u00a0exactly what some dictactors said when they came to power )  \n14:02\u00a0<vmassol>\u00a0;)  \n14:02\u00a0<vmassol>\u00a0(just kidding)  \n14:03\u00a0<+Denis>\u00a0sure, but this does not works since you have a single parent and many childs  \n14:03\u00a0<vmassol>\u00a0from a user POV it's a breaking change though but let's continue  \n14:03\u00a0<@cjdelisle>\u00a0And if you get a document, you get the parent which is a space, that space doesn't have a child, it has a number of childern (each document)  \n14:03\u00a0<+Denis>\u00a0and only your last child was your child before  \n14:03\u00a0<@cjdelisle>\u00a0I didn't ever like getChild() and IIRC it introduced a bug where getParent().getChild() was returning the wrong value.  \n14:04\u00a0<+Denis>\u00a0we were lucky not having issues with that  \n14:05\u00a0<vmassol>\u00a0cjdelisle: hmm I see we had a test like this: \u00a0Assert.assertEquals(reference,\u00a0reference.getParent().getParent().getChild().getChild());  \n14:05\u00a0<@cjdelisle>\u00a0I seem to recall a bug emergency because of something with that.  \n14:05\u00a0<vmassol>\u00a0and Assert.assertEquals(reference,\u00a0reference.getParent().getChild());  \n14:05\u00a0<@cjdelisle>\u00a0I am quite happy to see getChild() go the way of /dev/null for stability's sake.  \n14:06\u00a0<vmassol>\u00a0this looks more costly though, even if more complete but anyway I haven't thought enough to have an opinion  \n14:07\u00a0<+Denis>\u00a0there is not so much usage of it  \n14:07\u00a0<@cjdelisle>\u00a0doc1ref.getParent().equals(doc2ref.getParent()) what happens?  \n14:07\u00a0<@cjdelisle>\u00a0supposing docRef1 and docRef2 are in the same space.  \n14:07\u00a0<@cjdelisle>\u00a0true or false?  \n14:07\u00a0<+Denis>\u00a0and with immutability, reusing references in parent chain should increase  \n14:08\u00a0<+Denis>\u00a0which is far better, since object creation is costly on some environment  \n14:08\u00a0<+Denis>\u00a0true  \n14:08\u00a0<@cjdelisle>\u00a0because if equals() returns true and docref1.getParent().getChild().equals(docref2.getParent().getChild()) returns false  \n14:08\u00a0<@cjdelisle>\u00a0we have a design flaw.  \n14:09\u00a0<+Denis>\u00a0we had before  \n14:09\u00a0<@cjdelisle>\u00a0indeed  \n14:09\u00a0<@cjdelisle>\u00a0Which is one reason why I disliked the getChild() method.  \n14:09\u00a0<+Denis>\u00a0I was choke discovering that getChild() exists  \n14:10\u00a0<+Denis>\u00a0When I looked at reference, there were 2 thing that I had never imagine, event in my worse dream: mutability and getChild() :)  \n14:11\u00a0<vmassol>\u00a0you must have some pretty good dreams  \n14:11\u00a0<+Denis>\u00a0I have to leave a while for lunch\u2026 I change constructor to helpers just after that, and I will fix style issues I have found  \n14:12\u00a0<@cjdelisle>\u00a0Yea, I think the fact that you fixed both of those is why I didn't catch the problems with it, I was blinded by the light because the things I disliked were fixed.  \n14:12\u00a0<vmassol>\u00a0have a good lunch  \n14:12\u00a0<+Denis>\u00a0vmassol: my best architecture ideas cames usually a few minutes before wake up :-)  \n14:13\u00a0<AndreasJonsson>\u00a0has quit  \n14:13\u00a0<AndreasJonsson>\u00a0has joined #xwiki  \n14:34\u00a0<vmassol>\u00a0guys, quick opinion: I'm planning to publish the FAQ application that I've put at http://www.xwiki.org/xwiki/bin/view/FAQ/WebHomeNew. I'd like to know if you think we should have it in platform or not? For me since it's on xwiki.org it could be a good idea to have it in platform  \n14:34\u00a0<vmassol>\u00a0wdyt?  \n14:35\u00a0<vmassol>\u00a0if I get 1 dev to agree, I'll send a vote mail ;)  \n14:35\u00a0<vmassol>\u00a0tmortagne: wdyt?  \n14:36\u00a0<+tmortagne>\u00a0vmassol: as long as you plan to maintain it :P  \n14:36\u00a0<vmassol>\u00a0I knew you'd say this ;)  \n14:36\u00a0<vmassol>\u00a0well we need to maintain it if only for xwiki.org  \n14:36\u00a0<+tmortagne>\u00a0yep  \n14:37\u00a0<+tmortagne>\u00a0makes sense to have anything we use ourself on platform  \n14:37\u00a0<+tmortagne>\u00a0because it has to work  \n14:37\u00a0<vmassol>\u00a0mail sent  \n14:38\u00a0<+tmortagne>\u00a0could \u00a0maybe be a general rule  \n14:38\u00a0<vmassol>\u00a0yes  \n14:38\u00a0<vmassol>\u00a0I'd like to move more and more stuff from xwiki.org in platform as we progress  \n14:38\u00a0<vmassol>\u00a0we've done for that for extensions already  \n14:38\u00a0<vmassol>\u00a0now for faq  \n14:38\u00a0<+tmortagne>\u00a0yep  \n14:38\u00a0<+tmortagne>\u00a0IRC bot too  \n14:38\u00a0<vmassol>\u00a0of course they have to be gneeric enough  \n14:38\u00a0<vmassol>\u00a0yep good point  \n14:38\u00a0<+tmortagne>\u00a0yep  \n14:38\u00a0<vmassol>\u00a0the reference app for ex isn't probably generic enough  \n14:38\u00a0<vmassol>\u00a0(although not sure)  \n14:39\u00a0<vmassol>\u00a0(would need to be improved first anyway)  \n14:39\u00a0<vmassol>\u00a0I'd like to move the jira macro to platform too  \n14:40\u00a0<vmassol>\u00a0(sburjan)  \n14:40\u00a0<+sburjan>\u00a0hello vmassol  \n14:40\u00a0<+sburjan>\u00a0I didn't followed what has been discussed today on IRC  \n14:40\u00a0<vmassol>\u00a0(we already have a jira module so it fits well)  \n14:40\u00a0<vmassol>\u00a0sburjan: I was just saying:  \n14:40\u00a0<vmassol>\u00a0\"I'd like to move the jira macro to platform too\"  \n14:40\u00a0<+sburjan>\u00a0yes, but I'll loose all my commit privileges  \n14:41\u00a0<vmassol>\u00a0we'll find a way  \n14:41\u00a0<+sburjan>\u00a0I could make classic pull requests  \n14:41\u00a0<vmassol>\u00a0you can still fork it and do pull requests  \n14:41\u00a0<+sburjan>\u00a0yes  \n14:41\u00a0<+sburjan>\u00a0well, ok, if you consider it should be in platform, so be it  \n14:41\u00a0<vmassol>\u00a0we use it on xwiki.org  \n14:42\u00a0<+sburjan>\u00a0but still a ton of things to polish, IMHO it's not production quality yet  \n14:42\u00a0<vmassol>\u00a0and we were jsut discussing that stuff on xwiki.org should probably be in platform  \n14:42\u00a0<vmassol>\u00a0sure sure  \n14:42\u00a0<vmassol>\u00a0but it's working  \n14:42\u00a0<vmassol>\u00a0a little cleanup  \n14:42\u00a0<vmassol>\u00a0and it's good  \n14:42\u00a0<+sburjan>\u00a0I have some future plans of improvement, I plan to add several stuff/features/cleanup/bulletproof this month  \n14:42\u00a0<vmassol>\u00a0cool  \n14:43\u00a0<vmassol>\u00a0make sure the code isn't too bloated though  \n14:43\u00a0<+sburjan>\u00a0ok, well, move it :)  \n14:43\u00a0<vmassol>\u00a0not right now but in the coming days ok  \n14:43\u00a0<+sburjan>\u00a0you'll have to review it anyway when I make the pull request :)  \n14:43\u00a0<vmassol>\u00a0yep  \n14:43\u00a0<vmassol>\u00a0:)  \n14:44\u00a0<DrLou>\u00a0has joined #xwiki  \n14:44\u00a0<vmassol>\u00a0you won't loose it  \n14:44\u00a0<jvelociter>\u00a0has quit  \n14:50\u00a0<+sburjan>\u00a0vmassol: so this mean it won't be avaiable on extensions anymore ? or the move to platform would mean that it will be bundeld by default ?  \n14:50\u00a0<vmassol>\u00a0none  \n14:50\u00a0<vmassol>\u00a0:)  \n14:51\u00a0<vmassol>\u00a0it'll still be available on extensions  \n14:51\u00a0<vmassol>\u00a0and it won't be bundled by default  \n14:51\u00a0<+sburjan>\u00a0oh, I understand. It will be exactly like the irc-bot-app  \n14:51\u00a0<vmassol>\u00a0yes  \n14:52\u00a0<vmassol>\u00a0the only difference is that it will have the XWiki Dev Team \"stamp\"  \n14:52\u00a0<vmassol>\u00a0(that's provided other devs agree of course, it'll be a vote)  \n14:52\u00a0<vmassol>\u00a0guys please vote for the FAQ app in platform  \n14:54\u00a0<+sburjan>\u00a0vmassol: and also a JIRA category will have to be created on platform, and removed from XCONTRIB, right ?  \n14:54\u00a0<+sburjan>\u00a0just asking to see if I understant properly the underlying implications :)  \n14:54\u00a0<+sburjan>\u00a0\\*understand  \n15:00\u00a0<vmassol>\u00a0otp  \n15:01\u00a0<vmassol>\u00a0sburjan: there's already a jira module in platform  \n15:03\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* r2bd69fc\u000f \u000f/ (8 files in 4 dirs):\u000f XCOMMONS-60: Move multi ComponentManager system generic code to commons ...  \n15:06\u00a0<vmassol>\u00a0it's not complex actually  \n15:06\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* r976d813\u000f \u000f/ (10 files in 4 dirs):\u000f XWIKI-7156: Move multi ComponentManager system generic code to commons ...  \n15:06\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* rb9ed8d2\u000f \u000f/ (3 files in 3 dirs):\u000f XWIKI-7146: Extension Manager does not register the component in the ...  \n15:06\u00a0<vmassol>\u00a0we just need to move some PO to platform  \n15:07\u00a0<vmassol>\u00a0the test fwk + POs to be precise  \n15:07\u00a0<+tmortagne>\u00a0vmassol: we could easily extract some page content from a xar and execute it using rendering  \n15:07\u00a0<vmassol>\u00a0then the test module would have XAR deps for other apps it needs installed  \n15:07\u00a0<+tmortagne>\u00a0and mock some APIs of oldcore  \n15:08\u00a0<vmassol>\u00a0tmortagne: I was thinking functional tests but we could also think about \"unit tests\" or \"integration tesst\"  \n15:08\u00a0<vmassol>\u00a0I think we'll need func tests anyway  \n15:09\u00a0<+tmortagne>\u00a0not sure I see the exact difference betwee unit and funtionnal test here, in my case I was more think of the quickest (unit in my mind) way to test a page content  \n15:09\u00a0<vmassol>\u00a0the difference is that you need functional (ie the real stuff) to prove it works  \n15:09\u00a0<vmassol>\u00a0so we might not need to do integration/unit tests for apps  \n15:10\u00a0<+tmortagne>\u00a0isn't that what we have in XE then ?  \n15:10\u00a0<vmassol>\u00a0yes  \n15:10\u00a0<vmassol>\u00a0exactly  \n15:10\u00a0<vmassol>\u00a0but split  \n15:10\u00a0<vmassol>\u00a0for ex the faq app should contain its func tests  \n15:10\u00a0<vmassol>\u00a0(it would depend on the search app, the livetable app since it requires those)  \n15:10\u00a0<+tmortagne>\u00a0you mean starting a full XE for each application separately ?  \n15:10\u00a0<vmassol>\u00a0yes  \n15:11\u00a0<+tmortagne>\u00a0need to improve speed a lot then  \n15:11\u00a0<vmassol>\u00a0yes + we would run this only in a profile  \n15:11\u00a0<+tmortagne>\u00a0I think the second one is easiers :)  \n15:11\u00a0<vmassol>\u00a0for ex in the faq app we have some js  \n15:11\u00a0<vmassol>\u00a0we need to run it in a browser to prove it works  \n15:12\u00a0<+tmortagne>\u00a0vmassol: jvelociter added a framework to unit test JS I think, would be a good start  \n15:12\u00a0<vmassol>\u00a0I don't think so  \n15:12\u00a0<vmassol>\u00a0because we need the func tests anyway  \n15:13\u00a0<vmassol>\u00a0so having both integratiobn and func is overkill  \n15:13\u00a0<vmassol>\u00a0IMO  \n15:13\u00a0<vmassol>\u00a0it's not overkill for large apps  \n15:13\u00a0<vmassol>\u00a0maybe  \n15:13\u00a0<vmassol>\u00a0but for small ones like faq app it is  \n15:13\u00a0<+tmortagne>\u00a0yes but XE is not going to we good enouth for this anytime soon I thhink  \n15:13\u00a0<vmassol>\u00a0it doesn't matter  \n15:13\u00a0<vmassol>\u00a0it doesn't matter if it takes 10 minutes to start  \n15:14\u00a0<vmassol>\u00a0we don't have to run it all the time  \n15:14\u00a0<vmassol>\u00a0we can optimize it  \n15:14\u00a0<vmassol>\u00a0make it run once per day even if we want  \n15:14\u00a0<+tmortagne>\u00a0we could  \n15:15\u00a0<+tmortagne>\u00a0or change the timing in a case by case basis, indeed to could even we better than what we do now  \n15:20\u00a0<vmassol>\u00a0guys could I have some votes for the faq app? I'm ready to commit\u2026 :)  \n15:21\u00a0<vmassol>\u00a0tmortagne: what is this: \"//@formatter:off\" ?  \n15:21\u00a0<+tmortagne>\u00a0broke platform build (checkstyle as usual), fixing it quickly  \n15:21\u00a0<vmassol>\u00a0eclipse only?  \n15:21\u00a0<+tmortagne>\u00a0vmassol: disable Eclipse formating after the comment  \n15:21\u00a0<+tmortagne>\u00a0maybe it's doable on IDEA too I did not checked  \n15:21\u00a0<vmassol>\u00a0I'm not too fond of having IDE-specific stuff in our code  \n15:22\u00a0<+tmortagne>\u00a0checkstyle support this kind of things too  \n15:22\u00a0<vmassol>\u00a0unless they all use the same annotations but I doubt it  \n15:22\u00a0<+tmortagne>\u00a0the work itself is pretty generic and configurable  \n15:23\u00a0<+tmortagne>\u00a0so it can be changed anytime if IDEA has something fixed  \n15:23\u00a0<vmassol>\u00a0I prefer that \"less nice indentation\" than ide-specific stuff  \n15:23\u00a0<vmassol>\u00a0(if I have to make a choice)  \n15:23\u00a0<vmassol>\u00a0s/that/the/  \n15:23\u00a0<+tmortagne>\u00a0it's only in test, i'm not going to put this in main sources  \n15:23\u00a0<vmassol>\u00a0it's not very different for me  \n15:24\u00a0<vmassol>\u00a0they're both sources  \n15:24\u00a0<vmassol>\u00a0official sources I mean  \n15:24\u00a0<vmassol>\u00a0I thought you preferrred the IDE formatting ?  \n15:24\u00a0<vmassol>\u00a0(I was the one who liked the \"hand-crafted\" one more)  \n15:25\u00a0<vmassol>\u00a0:)  \n15:26\u00a0<+tmortagne>\u00a0vmassol: I used that only for jmock stuff  \n15:26\u00a0<vmassol>\u00a0yes I know  \n15:26\u00a0<+tmortagne>\u00a0since you insisted that jmock defined a standard  \n15:26\u00a0<+tmortagne>\u00a0it's a comment, it's not like it was breaking the build  \n15:26\u00a0<vmassol>\u00a0yes but we don't like to leave commented out code either  \n15:27\u00a0<vmassol>\u00a0even though it doesn't break anything  \n15:27\u00a0<vmassol>\u00a0I could possibly be convinced if there was a checkstyle thingie for it though  \n15:28\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* rd3bd57c\u000f \u000f/ xwiki-platform-core/xwiki-platform-component/xwiki-platform-component-multi/src/main/java/org/xwiki/component/internal/UserComponentManagerFactory.java :\u000f Fix checkstyle. - http://git.io/1sNy5A  \n15:28\u00a0<vmassol>\u00a0CHECKSTYLE:OFF  \n15:28\u00a0<vmassol>\u00a0CHECKSTYLE:ON  \n15:28\u00a0<Enygma`>\u00a0has quit  \n15:29\u00a0<vmassol>\u00a0with // before  \n15:29\u00a0<+tmortagne>\u00a0CHECKSTYLE:ON do exists and is the default in checkstyle plugin  \n15:29\u00a0<vmassol>\u00a0however again I think I prefer to use our standard formatting rule  \n15:29\u00a0<vmassol>\u00a0rather than having to introduce this  \n15:30\u00a0<vmassol>\u00a0less complex  \n15:30\u00a0<+tmortagne>\u00a0( http://checkstyle.sourceforge.net/config.html#SuppressionCommentFilter )  \n15:36\u00a0<Enygma`>\u00a0has joined #xwiki  \n15:37\u00a0<+tmortagne>\u00a0vmassol: there is a proposal for IDEA but not done yet it seems, http://youtrack.jetbrains.net/issue/IDEA-56995  \n15:38\u00a0<vmassol>\u00a0yep couldn't find one by googling quickly but even if there was one, not eveyrone use eclipse/idea  \n15:38\u00a0<vmassol>\u00a0some will use netbeans, even vi  \n15:38\u00a0<vmassol>\u00a0this is why we don't commit the files for ides too in scm  \n15:38\u00a0<vmassol>\u00a0so I'd like to remain ide-agnostic  \n15:40\u00a0<+Denis>\u00a0but // CHECKSTYLE:ON/OFF is agnostic to IDE no ?  \n15:40\u00a0<vmassol>\u00a0yes  \n15:40\u00a0<+Denis>\u00a0does it works ?  \n15:40\u00a0<+Denis>\u00a0I have try but failed to use it  \n15:41\u00a0<+tmortagne>\u00a0isn't it a checkstyle standard ?  \n15:41\u00a0<@cjdelisle>\u00a0It's not turned on for XWiki.  \n15:41\u00a0<+Denis>\u00a0I am afraid it is more a maven plugin matters, no ?  \n15:41\u00a0<vmassol>\u00a0who's against using the default formatting anyway?  \n15:41\u00a0<+Denis>\u00a0why it is off, I thought it was there by default  \n15:42\u00a0<+tmortagne>\u00a0that would mean the plugin reimplemented all the parsing part which seems a bit odd  \n15:42\u00a0<+tmortagne>\u00a0vmassol: you  \n15:42\u00a0<vmassol>\u00a0I knew you'd say this but I said above that I prefer it over this  \n15:43\u00a0<+Denis>\u00a0I prefer some local exclusion to file exclusion, and there is some situation where we exclude files for just a line  \n15:43\u00a0<+Denis>\u00a0why the references stuff that I fixed were excluded ?  \n15:44\u00a0<+tmortagne>\u00a0I used this only because you were against using standard formatter and always complains about it when it's used  \n15:44\u00a0<@cjdelisle>\u00a0I proposed it a while back and it didn't go anywhere.  \n15:45\u00a0<@cjdelisle>\u00a0)adding the line to allow CHECKSTYLE:OFF)  \n15:45\u00a0<vmassol>\u00a0cjdelisle: want to vote on the faq app?  \n15:46\u00a0<@cjdelisle>\u00a0ok  \n15:47\u00a0<vmassol>\u00a0thanks  \n15:47\u00a0<+tmortagne>\u00a0hmm markmail is down since this moring  \n15:47\u00a0<@cjdelisle>\u00a0+0 because I really can't think of any important arguments either way on it.  \n15:50\u00a0<+tmortagne>\u00a0cjdelisle: don't remember you proposal about checkstyle  \n15:51\u00a0<@cjdelisle>\u00a0[xwiki-devs] [Proposal] Add SuppressionCommentFilter(CHECKSTYLE:OFF and CHECKSTYLE:ON) to checkstyle.xml  \n15:52\u00a0<+tmortagne>\u00a0indeed found it now  \n15:56\u00a0<+tmortagne>\u00a0test-ui seems stuck on jenkins  \n15:56\u00a0<+tmortagne>\u00a0I had to kill the previous build already  \n15:57\u00a0<+tmortagne>\u00a0does not seems to be the same place  \n15:59\u00a0<+tmortagne>\u00a0gwt-maven-plugin failed again  \n16:06\u00a0<@cjdelisle>\u00a0Here's an interesting question which we need to take into account building the new model:  \n16:06\u00a0<@cjdelisle>\u00a0What should happen when you do a rollback?  \n16:06\u00a0<@cjdelisle>\u00a0If you read XWiki.java#rollback() you will see what probably should not happen.  \n16:07\u00a0<vmassol>\u00a0cjdelisle: I made a proposal for a global version  \n16:10\u00a0<@cjdelisle>\u00a0Ok so you synchronize the version of the attachment and the document, now what if you delete the attachment?  \n16:10\u00a0<vmassol>\u00a0basically the answer is the same as with SVN  \n16:10\u00a0<@cjdelisle>\u00a0More importantly, what if you delete, upload a new one with the same filename, then rollback.  \n16:11\u00a0<@cjdelisle>\u00a0I understand what the user should experience, the question is how we get there.  \n16:11\u00a0<vmassol>\u00a0JCR is one choice  \n16:11\u00a0<vmassol>\u00a0since this is what it does  \n16:11\u00a0<vmassol>\u00a0re glboal version I propose something to go on that path  \n16:11\u00a0<@cjdelisle>\u00a0XWiki.java#rollback() does it in a way that I think is a mess.  \n16:12\u00a0<@cjdelisle>\u00a0JCR? is that still a live project?  \n16:12\u00a0<vmassol>\u00a0JSR isn't a project  \n16:12\u00a0<vmassol>\u00a0it's a spec  \n16:12\u00a0<vmassol>\u00a0projects are jackrabbit, nuxeo, exo, etc  \n16:12\u00a0<@cjdelisle>\u00a0I thought it went more or less the way of DNSSEC  \n16:12\u00a0<vmassol>\u00a0well there's no altenrative  \n16:13\u00a0<@cjdelisle>\u00a0Hibernate, JPA, JDO/DataNucleus, \"cloud\"  \n16:13\u00a0<vmassol>\u00a0these are not alternative  \n16:13\u00a0<vmassol>\u00a0they're rebuilding it all from scratch :)  \n16:13\u00a0<vmassol>\u00a0they're not on the same level  \n16:14\u00a0<@cjdelisle>\u00a0Well the new model isn't going to get much traction unless it can run off of hibernate.  \n16:14\u00a0<vmassol>\u00a0but yes JCR didn't take the world over  \n16:14\u00a0<@cjdelisle>\u00a0You have to build on the foundation you have.  \n16:14\u00a0<vmassol>\u00a0sure, did I say therwise?  \n16:14\u00a0<vmassol>\u00a0I'm not even planning to expose JCR  \n16:14\u00a0<vmassol>\u00a0in my proposal  \n16:15\u00a0<@cjdelisle>\u00a0Well, then the question is how we should implement rollback in a way that isn't horrible.  \n16:15\u00a0<vmassol>\u00a0you can see it in sandbox  \n16:15\u00a0<vmassol>\u00a0you need to start aligning the verisons I think  \n16:15\u00a0<vmassol>\u00a0hence the global version proposal  \n16:15\u00a0<vmassol>\u00a0anyway this is not sorted out yet  \n16:15\u00a0<@cjdelisle>\u00a0I'm happy with the global version.  \n16:15\u00a0<vmassol>\u00a0if that's your question  \n16:16\u00a0<@cjdelisle>\u00a0It's a design question, answering it will be part of what makes a good design.  \n16:17\u00a0<vmassol>\u00a0yep  \n16:17\u00a0<@cjdelisle>\u00a0https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/XWiki.java#L6920  \n16:17\u00a0<vmassol>\u00a0but I don't have the time to answer it just now:)  \n16:17\u00a0<@cjdelisle>\u00a0that is the code that I have bad dreams about  \n16:17\u00a0<vmassol>\u00a0right  \n16:17\u00a0<vmassol>\u00a0your dreams are much darker than denis's  \n16:18\u00a0<vmassol>\u00a0:)  \n16:18\u00a0<@cjdelisle>\u00a0heh  \n16:18\u00a0<@cjdelisle>\u00a0Well all of his concerns with ER I had as well and old debt that's beign isolated is much better than new debt.  \n16:27\u00a0<evalica>\u00a0has joined #xwiki  \n16:38\u00a0<vmassol>\u00a0sburjan: don't forget to document the Dashboard app  \n16:48\u00a0<+sburjan>\u00a0vmassol: I won't. I will do it at the beginning of the next week  \n16:48\u00a0<+sburjan>\u00a0I's written down in the ToDO list  \n16:54\u00a0<vmassol>\u00a0k  \n17:02\u00a0<vmassol>\u00a0hmm platform keeps having problems  \n17:03\u00a0<+Denis>\u00a0vmassol: could I leave public DocumentReference(EntityReference reference, Locale locale) like this, or do you want it protected with a helper as well ?  \n17:03\u00a0<vmassol>\u00a0Denis: I don't understand  \n17:03\u00a0<vmassol>\u00a0what does it do?  \n17:03\u00a0<vmassol>\u00a0replace the locale in the refernce?  \n17:03\u00a0<vmassol>\u00a0if so then yes I think we need to do the same as for the rest  \n17:03\u00a0<vmassol>\u00a0(ie private + helper)  \n17:04\u00a0<vmassol>\u00a0to be consistent  \n17:04\u00a0<+Denis>\u00a0but there is a case where it just set it as well  \n17:04\u00a0<+Denis>\u00a0or remove it using null  \n17:04\u00a0<vmassol>\u00a0yes those are 2 uses cases  \n17:04\u00a0<vmassol>\u00a0with helpers  \n17:04\u00a0<vmassol>\u00a0now for the set  \n17:05\u00a0<vmassol>\u00a03 actually  \n17:05\u00a0<+Denis>\u00a03 use case, so you prefer 3 helpers ?  \n17:05\u00a0<vmassol>\u00a0remove for usr, and then replace  \n17:05\u00a0<vmassol>\u00a02 is enough I think  \n17:05\u00a0<vmassol>\u00a0s/for usr//  \n17:05\u00a0<+Denis>\u00a0ok, just wonder what will happen when version came in  \n17:06\u00a0<vmassol>\u00a0that was my problem and why I wanted to discuss stuff before....  \n17:06\u00a0<vmassol>\u00a0but we've decided to push it for later and break apis  \n17:08\u00a0<vmassol>\u00a0mflorea: could you check http://ci.xwiki.org/job/xwiki-platform/1028/console  \n17:08\u00a0<+Denis>\u00a0on the other hand, the helper will be less flexible, since you will need to convert a entityReference into a DocumentReference to use it  \n17:08\u00a0<vmassol>\u00a0it doesn't seem to be a JVM crash  \n17:08\u00a0<+Denis>\u00a0it is an intermittent \u00a0crash I have experience  \n17:08\u00a0<vmassol>\u00a0well the last 3 builds have been failing  \n17:09\u00a0<vmassol>\u00a0so it doesn't seem that intermittent  \n17:09\u00a0<+Denis>\u00a0that surprising  \n17:09\u00a0<vmassol>\u00a0I don't recall have it before  \n17:09\u00a0<vmassol>\u00a0maybe it's a memory issue  \n17:09\u00a0<vmassol>\u00a0maybe there's a newer version of the plugin too  \n17:09\u00a0<+Denis>\u00a0I have had some similar things, but it have not stay for 3 build  \n17:09\u00a0<vmassol>\u00a0maybe we're doing something that causing this now  \n17:09\u00a0<+Denis>\u00a0I may have been more lucky  \n17:10\u00a0<vmassol>\u00a0personally I've never had any issue locally  \n17:10\u00a0<+Denis>\u00a0I have seen that on Jenkins this wee  \n17:10\u00a0<+Denis>\u00a0k  \n17:10\u00a0<+Denis>\u00a0but this is my first BM week, I do not have your experience  \n17:10\u00a0<vmassol>\u00a0yes there were several jvm crash this week  \n17:10\u00a0<vmassol>\u00a0could be caused by memory  \n17:10\u00a0<vmassol>\u00a0in any case we need to investigate  \n17:11\u00a0<vmassol>\u00a0we cannot leave it like htis  \n17:11\u00a0<+Denis>\u00a0and also some crash like this,I have relaunch a couple of jobs  \n17:13\u00a0<+Denis>\u00a0vmassol: on the other hand, the helpers will be less flexible, since you will need to convert an entityReference into a DocumentReference to use them\u2026 WDYT ?  \n17:14\u00a0<vmassol>\u00a0I don't see why it would change  \n17:14\u00a0<vmassol>\u00a0since it's a helper  \n17:15\u00a0<vmassol>\u00a0DocumentReference(EntityReference reference, Locale locale) \u00a0\u2014> replaceLocale(Locale locale) for ex  \n17:15\u00a0<vmassol>\u00a0return new DocumentReference(EntityReference reference, Locale locale)  \n17:15\u00a0<+Denis>\u00a0so refence should be a document reference upfront  \n17:15\u00a0<vmassol>\u00a0s/reference/this/  \n17:17\u00a0<+Denis>\u00a0EntityReference x = new DocumentReference(\u2026)  \n17:17\u00a0<+Denis>\u00a0y = new DocumentReference(x).replaceLocale(locale);  \n17:17\u00a0<+Denis>\u00a0compare to  \n17:17\u00a0<+Denis>\u00a0y = new DocumentReference(x, locale);  \n17:18\u00a0<vmassol>\u00a0compare to: x.replaceLocale(locale)  \n17:18\u00a0<+Denis>\u00a0this is syntatically similar, but require more object to be instanciated for almost nothing  \n17:18\u00a0<+Denis>\u00a0if x is a DocumentReference upfront only  \n17:19\u00a0<vmassol>\u00a0errr  \n17:19\u00a0<vmassol>\u00a0locale only exists for DR  \n17:19\u00a0<vmassol>\u00a0so it has to be  \n17:19\u00a0<+Denis>\u00a0the constructor combine 2 operation in one: transform into DR and change locale, the helper will not  \n17:19\u00a0<@cjdelisle>\u00a0you can't call replaceLocale() otherwise it's not immutable  \n17:20\u00a0<@cjdelisle>\u00a0withNewLocale() would explain it better  \n17:20\u00a0<vmassol>\u00a0why?  \n17:20\u00a0<vmassol>\u00a0String.replace  \n17:20\u00a0<vmassol>\u00a0String.replaceAll  \n17:20\u00a0<vmassol>\u00a0replace doesn't say anything about immutability for me  \n17:21\u00a0<@cjdelisle>\u00a0I suppose although I don't think it explains itself well.  \n17:21\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* raee47e9\u000f \u000f/ (14 files in 3 dirs):\u000f XWIKI-7158: Several security holes in the extension script service API ...  \n17:21\u00a0<+Denis>\u00a0no you do not understanf, you may have a valid EntityReference of type DOCUMENT as an input of my constructor, but not for using the helper  \n17:21\u00a0<vmassol>\u00a0right  \n17:21\u00a0<vmassol>\u00a0but since the notion of Locale only exist for DR  \n17:21\u00a0<vmassol>\u00a0hmm  \n17:22\u00a0<+Denis>\u00a0compare to the replaceParent which is available at all level, this not the same  \n17:22\u00a0<+Denis>\u00a0this why I am asking initially  \n17:22\u00a0<+Denis>\u00a0personnally I do not find the constructor counter intuitive  \n17:23\u00a0<vmassol>\u00a0they are  \n17:23\u00a0<vmassol>\u00a0very veyr very  \n17:23\u00a0<vmassol>\u00a0unintuitive  \n17:23\u00a0<vmassol>\u00a0atually they're impossible to guess  \n17:23\u00a0<vmassol>\u00a0just by looking at them  \n17:24\u00a0<+Denis>\u00a0for me it is the same as: public DocumentReference(String wikiName, String spaceName, String pageName, Locale locale)  \n17:24\u00a0<vmassol>\u00a0no  \n17:24\u00a0<vmassol>\u00a0completely different  \n17:24\u00a0<+Denis>\u00a0just providing the same information differently  \n17:24\u00a0<vmassol>\u00a0no  \n17:24\u00a0<+Denis>\u00a0yes they are  \n17:24\u00a0<vmassol>\u00a0this constructor is not erasing anything  \n17:24\u00a0<vmassol>\u00a0it doesn't have side effects  \n17:24\u00a0<+Denis>\u00a0none have side effect  \n17:24\u00a0<vmassol>\u00a0all your constructors have side effedct  \n17:25\u00a0<+Denis>\u00a0reference are trully immutable  \n17:25\u00a0<vmassol>\u00a0wait  \n17:25\u00a0<@cjdelisle>\u00a0what happens if locale is final, will the constructor work without an if statement?  \n17:25\u00a0<vmassol>\u00a0I think for DR it's ok to have the Locale passed since the local is exclusive to DR  \n17:25\u00a0<vmassol>\u00a0so it's not erased/replaced  \n17:25\u00a0<+tmortagne>\u00a0vmassol: about http://ci.xwiki.org/job/xwiki-platform/1028/console I reported it many times, it fail very often  \n17:26\u00a0<vmassol>\u00a0Denis: depends if you've fixed the cdoe or not  \n17:26\u00a0<vmassol>\u00a0according to the comment I gave several times now  \n17:26\u00a0<+tmortagne>\u00a0( (03:59:56 PM) tmortagne: gwt-maven-plugin failed again )  \n17:26\u00a0<+Denis>\u00a0there is no if in setLocale anymore, it was useless  \n17:26\u00a0<vmassol>\u00a0ie the fact that locale shouldn't be in ER  \n17:26\u00a0<vmassol>\u00a0shoudn't be stored in ER  \n17:26\u00a0<vmassol>\u00a0as a generic param  \n17:26\u00a0<@cjdelisle>\u00a0+1  \n17:26\u00a0<vmassol>\u00a0I haven't chekced what you did  \n17:27\u00a0<+Denis>\u00a0it is for now, this was voted, and I really hope we will find an agreement on that  \n17:27\u00a0<vmassol>\u00a0what?  \n17:27\u00a0<vmassol>\u00a0not it wasn't  \n17:27\u00a0<vmassol>\u00a0you changed the vote  \n17:27\u00a0<vmassol>\u00a0and sent a revote  \n17:27\u00a0<+Denis>\u00a0on parameters  \n17:27\u00a0<vmassol>\u00a0and I fave my -1  \n17:27\u00a0<vmassol>\u00a0but you still committed  \n17:27\u00a0<vmassol>\u00a0:(  \n17:27\u00a0<vmassol>\u00a0which is why I took the time to send another email this morning  \n17:27\u00a0<+Denis>\u00a0it was voted when I have do this job  \n17:27\u00a0<vmassol>\u00a0re-read my mails  \n17:28\u00a0<sburjan>\u00a0has quit  \n17:28\u00a0<vmassol>\u00a0I said ?1 and then I changed that by saing I'm ok \\*IF\\*\\*  \n17:28\u00a0<+Denis>\u00a0now we are doubting, so I have not expose it  \n17:28\u00a0<vmassol>\u00a0it's exposed unless you've changed it later today  \n17:29\u00a0<+Denis>\u00a0it is protected, so it is not really exposed  \n17:29\u00a0<vmassol>\u00a0that's exposed  \n17:29\u00a0<vmassol>\u00a0and it doesn't latter  \n17:29\u00a0<@cjdelisle>\u00a0I was primarily concerned about API, the API is protected and if you extend ER then you can do all kinds of horrible things.  \n17:29\u00a0<vmassol>\u00a0it's a very very bad implementation  \n17:29\u00a0<vmassol>\u00a0you need use a map to store a single imtem  \n17:29\u00a0<vmassol>\u00a0item  \n17:29\u00a0<vmassol>\u00a0I've never seen that  \n17:29\u00a0<vmassol>\u00a0it's so costly  \n17:29\u00a0<@cjdelisle>\u00a0But I agree that the implementation should use a single final field in the DR  \n17:29\u00a0<+Denis>\u00a0I can make it package scope if you really prefer, but I found this overkill  \n17:29\u00a0<vmassol>\u00a0no  \n17:29\u00a0<vmassol>\u00a0that's not going to help  \n17:30\u00a0<vmassol>\u00a0it's still a bad impl to use a map when all you need is to store a single item  \n17:30\u00a0<+Denis>\u00a0but this is what as been voted  \n17:30\u00a0<vmassol>\u00a0no  \n17:30\u00a0<+Denis>\u00a0and the vote is closed  \n17:30\u00a0<vmassol>\u00a0re the mails  \n17:30\u00a0<vmassol>\u00a0you reponed it! and caleb and myself voted -1  \n17:30\u00a0<+Denis>\u00a0before you raise your ?1, as far as I am concerned  \n17:31\u00a0<vmassol>\u00a0it doesn matter  \n17:31\u00a0<@cjdelisle>\u00a0At this point all we are arguing about is a little bit of internal code, it's not that hard to yank it out.  \n17:31\u00a0<vmassol>\u00a0cjdelisle: it has implications on the api  \n17:32\u00a0<@cjdelisle>\u00a0Because you can extend ER and do evil things?  \n17:32\u00a0<vmassol>\u00a0no  \n17:32\u00a0<vmassol>\u00a0the DR(entityref, locale) constructor  \n17:32\u00a0<vmassol>\u00a0what we were discussing with denis  \n17:32\u00a0<CIA-102>\u00a0Denis Gervalle\u000f master\u000f \\* ra9d7815\u000f \u000f/ (15 files in 7 dirs):\u000f XWIKI-7097 Make EntityReference immutables and add Locale in DocumentReference ...  \n17:32\u00a0<@cjdelisle>\u00a0what is wrong with that constructor?  \n17:33\u00a0<@cjdelisle>\u00a0because it's effectively a cloner?  \n17:33\u00a0<+Denis>\u00a0so, I have just commited the helpers for replaceParent(), it seems better, I agree  \n17:33\u00a0<vmassol>\u00a0because if Locale is in ER then this constructor will replace the Locale  \n17:33\u00a0<vmassol>\u00a0whereas if the Locale is only in DR then it won't, it's just a set  \n17:33\u00a0<@cjdelisle>\u00a0oh, it's replacing something in an ER which is already constructed?  \n17:33\u00a0<+Denis>\u00a0no  \n17:34\u00a0<vmassol>\u00a0no?  \n17:34\u00a0<vmassol>\u00a0the passed ER is already constructed  \n17:34\u00a0<+Denis>\u00a0the ER constructed is part of the construction of the DR  \n17:34\u00a0<+Denis>\u00a0you could never access it  \n17:34\u00a0<+Denis>\u00a0the passed ER is untouched  \n17:35\u00a0<@cjdelisle>\u00a0IMO we should just use final fields and let javac tell us if we're right.  \n17:35\u00a0<vmassol>\u00a0of course that's not the point  \n17:35\u00a0<vmassol>\u00a0the point is that the reutrned DR will not have the Locale from the passed ER  \n17:35\u00a0<+Denis>\u00a0the passe ER is cloned  \n17:35\u00a0<vmassol>\u00a0no it isn't  \n17:35\u00a0<+Denis>\u00a0than its local is changed  \n17:35\u00a0<vmassol>\u00a0because its locale is changed  \n17:35\u00a0<vmassol>\u00a0so it's not a real clone  \n17:36\u00a0<+Denis>\u00a0the only ER having is local changed is the newly created DR  \n17:36\u00a0<vmassol>\u00a0it' tzaking only partilal information from the passed params  \n17:36\u00a0<vmassol>\u00a0which makes it magical  \n17:36\u00a0<vmassol>\u00a0and not undertsanble  \n17:36\u00a0<@cjdelisle>\u00a0That could be a usability issue but it's not going to break the immutable nature of the ER  \n17:36\u00a0<vmassol>\u00a0immutabilty is never borken  \n17:36\u00a0<vmassol>\u00a0I don't care about immuatbility  \n17:36\u00a0<vmassol>\u00a0it's a granted  \n17:36\u00a0<vmassol>\u00a0from the beginnig I'm only talking about uisability  \n17:37\u00a0<nIMBVS>\u00a0has quit  \n17:37\u00a0<@cjdelisle>\u00a0Well then it's not introducing anything which I said -1 to. I'm not certain about it but I'm not going to block it because he wants his bikeshed red.  \n17:38\u00a0<@cjdelisle>\u00a0I do want to see use of the final keyword in there so we know that nothing fishey is going on.  \n17:39\u00a0<@cjdelisle>\u00a0and I think we all agree the one element map is silly.  \n17:39\u00a0<+Denis>\u00a0yes, so the only thing I would like to understand, not looking at implementation, is what is differente between passing a reference and a locale, and passing a name, space, wiki and a locale ?  \n17:39\u00a0<vmassol>\u00a0ok that's easy  \n17:39\u00a0<vmassol>\u00a0in the first case  \n17:39\u00a0<vmassol>\u00a0you have various possible behaviors  \n17:40\u00a0<vmassol>\u00a0behavior 1:  \n17:40\u00a0<vmassol>\u00a0only use the passed locale if there's no locale in the passed ref  \n17:40\u00a0<vmassol>\u00a0behavior 2:  \n17:40\u00a0<vmassol>\u00a0always use the passed locale and overwrite the locale if in the passed ref  \n17:40\u00a0<vmassol>\u00a0(we can list others but 2 is enough for the sake of arguments)  \n17:41\u00a0<vmassol>\u00a0in the second construcotr  \n17:41\u00a0<vmassol>\u00a0there's no ambiguity at all  \n17:41\u00a0<+Denis>\u00a0let say that behaviour 2 was my goal  \n17:41\u00a0<@cjdelisle>\u00a0behavior1 makes little sense because locale is more specific than the lacal in the reference.  \n17:41\u00a0<vmassol>\u00a0it's not conveyed in the construtor  \n17:41\u00a0<+Denis>\u00a0but there is probably right a flaw if the passed local is null  \n17:41\u00a0<vmassol>\u00a0what you're doing is actually a replace  \n17:41\u00a0<+Denis>\u00a0but I could fix that  \n17:42\u00a0<+Denis>\u00a0I agree on this, but it internal implementation  \n17:43\u00a0<@cjdelisle>\u00a0I understand that constructor takes an EntityReference, would it ever be used with a non-document reference?  \n17:43\u00a0<+Denis>\u00a0if we keep parameters, this is the best bet  \n17:43\u00a0<+Denis>\u00a0cjdelisle: it could be with an EntityReference of type DOCUMENT  \n17:44\u00a0<@cjdelisle>\u00a0So what happens if I pass it a space reference?  \n17:44\u00a0<+Denis>\u00a0it throw, like it happen with DocumentReference(EntityReference) constructor  \n17:44\u00a0<vmassol>\u00a0bbl  \n17:45\u00a0<@cjdelisle>\u00a0I do not like runtime exceptions.  \n17:46\u00a0<+Denis>\u00a0you should never do so obviously, but if I convert into a helper, you will have to call DocumentReference(EntityReference) constructor before the helper  \n17:46\u00a0<+tmortagne>\u00a0anyone has a idea of standard way or replacement to return an unmodifiable java.io.File object, I would like to keep something more typed than a string but File is not safe to return as it is in public script API  \n17:46\u00a0<+Denis>\u00a0which will clone twice, than you may still store the result in an EntityReference...  \n17:47\u00a0<@cjdelisle>\u00a0tmortagne: FileItem is slightly better but I can own your FS with either one.  \n17:48\u00a0<+Denis>\u00a0just check, there is no more issue now, so my constructor does what is documented  \n17:48\u00a0<+tmortagne>\u00a0cjdelisle: FileSystem is java7 AFAIK  \n17:48\u00a0<@cjdelisle>\u00a0FileItem which is apache  \n17:49\u00a0<@cjdelisle>\u00a0fileupload  \n17:49\u00a0<@cjdelisle>\u00a0it's in AttachmentContent.  \n17:49\u00a0<@cjdelisle>\u00a0Actually AttachmentContent is a good choice  \n17:49\u00a0<@cjdelisle>\u00a0just use FilesystemAttachmentContent to wrap the file.  \n17:49\u00a0<@cjdelisle>\u00a0or write your own which works like that  \n17:50\u00a0<+tmortagne>\u00a0looking at FilesystemAttachmentContent  \n17:51\u00a0<@cjdelisle>\u00a0Denis: WDYT of us moving to EntityReference<EntityType.DOCUMENT>?  \n17:51\u00a0<@cjdelisle>\u00a0It will require another proposal but it would make a ton of runtime stuff checked  \n17:51\u00a0<+tmortagne>\u00a0cjdelisle: FilesystemAttachmentContent extends XWikiAttachmentContent  \n17:52\u00a0<+tmortagne>\u00a0not planning to depends on olcore  \n17:52\u00a0<@cjdelisle>\u00a0Well you could use it as a template  \n17:52\u00a0<+Denis>\u00a0that would have been better initially I think (I have to think about it more)  \n17:52\u00a0<@cjdelisle>\u00a0It was a necessity in all of it's horror  \n17:53\u00a0<+Denis>\u00a0but now, I am afraid by the refactoring it would cause  \n17:53\u00a0<+tmortagne>\u00a0sure I can introduce my own type of File but I was keeping that as a last resort soletion  \n17:53\u00a0<+tmortagne>\u00a0\\*solution  \n17:53\u00a0<@cjdelisle>\u00a0Denis: IMO this stuff is going through test/write cycles now so whatever we do sooner will not need doing later.  \n17:53\u00a0<@cjdelisle>\u00a0I understand your concern, you've thrown a ton of work at this already  \n18:00\u00a0<CIA-102>\u00a0Denis Gervalle\u000f master\u000f \\* rb9db5fc\u000f \u000f/ xwiki-platform-core/xwiki-platform-model/src/main/java/org/xwiki/model/reference/EntityReference.java :\u000f XWIKI-7097 Make EntityReference immutables and add Locale in DocumentReference ...  \n18:02\u00a0<+Denis>\u00a0cjdelisle: I am not saying that it could not be, but I should be firmly voted this time. Compare to before, the current situation is really improved anyway  \n18:02\u00a0<lucaa>\u00a0has joined #xwiki  \n18:04\u00a0<+Denis>\u00a0I understand the need of helpers to clarify my replaceParent constructor, but not for changing the local, since passing a reference is similar to passing its details, and that the local is surely overwritten  \n18:04\u00a0<@cjdelisle>\u00a0I absolutely agree with you  \n18:06\u00a0<@cjdelisle>\u00a0As far as dealing with vmassol's concern, if you have a DR you can change the locale easily.  \n18:06\u00a0<@cjdelisle>\u00a0if you have an ER then you can create a dr out of it  \n18:06\u00a0<@cjdelisle>\u00a0(create a new DR which clones the ER)  \n18:07\u00a0<@cjdelisle>\u00a0The resolver where you pass the type is wrong, it should be returning a DR  \n18:08\u00a0<@cjdelisle>\u00a0<T extends EntityReference> T resolve(String representation, Class<T> type)  \n18:08\u00a0<@cjdelisle>\u00a0Then you will never be stuck with an ER which should be a DR  \n18:10\u00a0<@cjdelisle>\u00a0So if we agree that the resolver is wrong to be giving people ERs which should have been DRs, removing that constructor is ok because for now you can chain constructors to get what you want, albeit with more waste.  \n18:11\u00a0<@cjdelisle>\u00a0tmortagne: WDYT re resolvers returning DR instead of ER of type DOCUMENT?  \n18:13\u00a0<@cjdelisle>\u00a0oo we can make it backward compatable too :D  \n18:15\u00a0<@cjdelisle>\u00a0We might be able to hack the EntityType enum to return a Class<T> but if it demands to return a Class<?> then we can add another signature, deprecate the old one and reverse map from Class<T> to EntityType  \n18:29\u00a0<abusenius>\u00a0has joined #xwiki  \n18:37\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* r3fe2dc8\u000f \u000f/ (19 files in 3 dirs):\u000f XWIKI-7158: Several security holes in the extension script service API ...  \n18:37\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* rcf6967e\u000f \u000f/ (10 files in 7 dirs):\u000f XWIKI-7159: Make Extension#download a bit more generic - http://git.io/fpKxyA  \n19:00\u00a0<jvdrean>\u00a0has quit  \n19:03\u00a0<CIA-102>\u00a0tmortagne\u000f master\u000f \\* r546195a\u000f \u000f/ xwiki-platform-core/xwiki-platform-extension/xwiki-platform-extension-script/src/main/java/org/xwiki/extension/script/internal/ExtensionManagerScriptService.java :\u000f XWIKI-7158: Several security holes in the extension script service API ...  \n19:04\u00a0<tmortagne>\u00a0has quit  \n19:42\u00a0<lucaa>\u00a0has quit  \n19:58\u00a0<CIA-102>\u00a0Marius Dumitru Florea\u000f master\u000f \\* rb823771\u000f \u000f/ xwiki-platform-core/xwiki-platform-appwithinminutes/src/main/resources/AppWithinMinutes/LiveTableEditSheet.xml :\u000f Fix webstandards validation test. - http://git.io/HoqQ-A  \n20:07\u00a0<vmassol>\u00a0mflorea: there's 2.4.0 now: http://repo2.maven.org/maven2/org/codehaus/mojo/gwt-maven-plugin/2.4.0/  \n20:07\u00a0<vmassol>\u00a0do you want to try updating?  \n20:08\u00a0<vmassol>\u00a0(we're using 2.2.0)  \n20:09\u00a0<+mflorea>\u00a0I'll try  \n20:17\u00a0<CIA-102>\u00a0Marius Dumitru Florea\u000f master\u000f \\* r7c9ddd2\u000f \u000f/ xwiki-platform-core/xwiki-platform-appwithinminutes/src/main/resources/AppWithinMinutes/ClassEditSheet.xml :\u000f AppWithinMinutes/ClassEditor: Can't add fields when editing a new class. - http://git.io/LHUsog  \n20:25\u00a0<Enygma`>\u00a0has quit  \n21:03\u00a0<vmassol>\u00a0has quit  \n21:06\u00a0<rrodriguez>\u00a0has joined #xwiki  \n21:14\u00a0<rrodriguez>\u00a0has quit  \n22:16\u00a0<abusenius>\u00a0has quit  \n22:30\u00a0<evalica>\u00a0has quit  \n22:41\u00a0<evalica1>\u00a0has joined #xwiki  \n22:47\u00a0<evalica1>\u00a0has quit  \n22:47\u00a0<rrodriguez\\_>\u00a0has joined #xwiki  \n22:48\u00a0<mflorea>\u00a0has quit  \n22:55\u00a0<Enygma`>\u00a0has joined #xwiki  \n23:36\u00a0<jvdrean>\u00a0has joined #xwiki  \n\n"}