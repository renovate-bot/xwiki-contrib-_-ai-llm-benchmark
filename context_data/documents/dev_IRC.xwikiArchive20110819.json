{"id": "dev:IRC.xwikiArchive20110819", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110819", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n01:27\u00a0<rrodriguez>\u00a0has quit  \n01:49\u00a0<sburjan`>\u00a0has quit  \n03:23\u00a0<pturcotte>\u00a0has joined #xwiki  \n03:56\u00a0<DrLou>\u00a0has quit  \n04:14\u00a0<DrLou>\u00a0has joined #xwiki  \n05:23\u00a0<DrLou>\u00a0has quit  \n07:22\u00a0<mflorea>\u00a0has joined #xwiki  \n08:39\u00a0<xgoro>\u00a0has joined #xwiki  \n09:09\u00a0<vmassol>\u00a0has joined #xwiki  \n09:39\u00a0<vmassol1>\u00a0has joined #xwiki  \n09:43\u00a0<vmassol>\u00a0has quit  \n09:44\u00a0<cmarcoin>\u00a0has joined #xwiki  \n10:16\u00a0<vmassol1>\u00a0good morning  \n10:16\u00a0<vmassol1>\u00a0hmm strange build error on platform  \n10:16\u00a0<vmassol1>\u00a0http://ci.xwiki.org/job/xwiki-platform/org.xwiki.platform$xwiki-platform-oldcore/438/testReport/com.xpn.xwiki.doc/XWikiDocumentRenderingTest/testCurrentDocumentVariableIsInjectedBeforeRendering/  \n10:16\u00a0<vmassol1>\u00a0Failed to execute the [groovy] macro</div><div class=\"xwikirenderingerrordescription hidden\"><pre>java.lang.VerifyError: (class: org/codehaus/groovy/runtime/ArrayUtil, method: createArray signature: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/  \n10:18\u00a0<vmassol1>\u00a0will build locally  \n10:25\u00a0<arkub>\u00a0has joined #xwiki  \n11:06\u00a0<vmassol1>\u00a0built fine locally  \n11:07\u00a0<vmassol1>\u00a0I don't understand the problem...  \n11:34\u00a0<Spazholi0>\u00a0has joined #xwiki  \n11:34\u00a0<Spazholio>\u00a0has quit  \n11:34\u00a0<Spazholi0>\u00a0is now known as <Spazholio>  \n11:41\u00a0<rrodriguez>\u00a0has joined #xwiki  \n11:57\u00a0<sburjan`>\u00a0has joined #xwiki  \n11:58\u00a0<cmarcoin>\u00a0has quit  \n11:59\u00a0<cmarcoin>\u00a0has joined #xwiki  \n12:05\u00a0<rrodriguez>\u00a0has quit  \n12:38\u00a0<cmarcoin1>\u00a0has joined #xwiki  \n12:38\u00a0<cmarcoin>\u00a0has quit  \n12:54\u00a0<cmarcoin1>\u00a0has quit  \n13:03\u00a0<sburjan`>\u00a0has quit  \n13:23\u00a0<DrLou>\u00a0has joined #xwiki  \n13:34\u00a0<vmassol1>\u00a0mflorea: nice doc :)  \n13:36\u00a0<+mflorea>\u00a0I just added http://extensions.xwiki.org/xwiki/bin/view/Extension/WYSIWYG+Editor+Module#HEditin-placeanobjectproperty (I got some requests lately)  \n13:43\u00a0<Spazholio>\u00a0has quit  \n13:53\u00a0<cmarcoin>\u00a0has joined #xwiki  \n14:05\u00a0<pturcotte>\u00a0has quit  \n14:25\u00a0<xgoro>\u00a0has quit  \n14:34\u00a0<pulasthi>\u00a0has joined #xwiki  \n14:38\u00a0<vmassol>\u00a0has joined #xwiki  \n14:55\u00a0<pturcotte>\u00a0has joined #xwiki  \n15:11\u00a0<vmassol>\u00a0has left #xwiki  \n15:37\u00a0<pulasthi>\u00a0cjdelisle: hi  \n15:57\u00a0<@cjdelisle>\u00a0howdy pulasthi  \n15:59\u00a0<pulasthi>\u00a0cjdelisle: hey it turned out that my deep query implementation was wrong and the test cases i did worked because that scenario was supported already :-(  \n16:00\u00a0<pulasthi>\u00a0and i talked with Andy one of the DN developers and turnes out the way i tried to do it was wrong  \n16:04\u00a0<@cjdelisle>\u00a0Ahh I suppose my suggestion was wrong, I didn't look over the code all that carefully.  \n16:05\u00a0<@cjdelisle>\u00a0Is Andy on IRC?  \n16:06\u00a0<pulasthi>\u00a0ahh no i posted on DN forum and he replied  \n16:07\u00a0<pulasthi>\u00a0the thing i you cant change the metadata after the setupPm.makePersistent(object1); is called  \n16:07\u00a0<@cjdelisle>\u00a0Do you have a link to it? I'd be interested to see what he suggests. The typical case of joining tables is way too inefficient for this use case.  \n16:09\u00a0<pulasthi>\u00a0i didn't clearly understand what he said i thought he misunderstood what i asked  \n16:09\u00a0<pulasthi>\u00a0heres the link http://www.datanucleus.org/servlet/forum/viewthread\\_thread,6823  \n16:11\u00a0<@cjdelisle>\u00a0hang on a minute, getting coffee  \n16:11\u00a0<pulasthi>\u00a0ok  \n16:14\u00a0<@cjdelisle>\u00a0Ok so what I gather you were trying to do was swap out the \"complex\" objects for primatives before the persistable object is ever persisted.  \n16:15\u00a0<@cjdelisle>\u00a0I'm not quite sure how that would work since (in my mind) it seems like you would be creating a new class right away.  \n16:16\u00a0<pulasthi>\u00a0the only option to implement it in that manner ( expanding the fields ) is to create a new class and pass it into setupPm.makePersistent(object1); well thats what i could come up with, but creating a class dynamically is a problem. i did come across a library called ASM that says can be used to create classes dynamically http://asm.ow2.org/  \n16:17\u00a0<pulasthi>\u00a0is there any other way to create a class dynamically that you are aware of :)  \n16:17\u00a0<@cjdelisle>\u00a0Dynamicly generating classes is processor expensive.  \n16:18\u00a0<pulasthi>\u00a0but since we cant change metadata we have to edit the class and swap the complex objects with a lot of primitives and strings right?  \n16:19\u00a0<pulasthi>\u00a0ahh creating and new class was not my approach that i took  \n16:19\u00a0<cmarcoin>\u00a0has left #xwiki  \n16:20\u00a0<@cjdelisle>\u00a0I invisioned something happening at a lower level AKA DataNucleus tells the Cassandra plugin to serialize a collection and instead of turning it into one column, it turns it into a bunch of columns.  \n16:21\u00a0<pulasthi>\u00a0yes something like that happens  \n16:22\u00a0<@cjdelisle>\u00a0The main roadblock I see to making that a reality is the fact that serializers output a Bytes object.  \n16:23\u00a0<pulasthi>\u00a0what i tried and didnt work was to add new columns at the column insertion level when columns were actually created  \n16:23\u00a0<@cjdelisle>\u00a0Supposing a serializer were to take a collection as input and it output a HashMap of column data by column name, then it would be trivial to break the collection down into all of it's parts.  \n16:25\u00a0<@cjdelisle>\u00a0Hmm then there must be a missing call needed to pelops because I understand that Cassandra allows you to add columns any time you like.  \n16:25\u00a0<pulasthi>\u00a0let me explain what i understood i think im right  \n16:26\u00a0<@cjdelisle>\u00a0You have more experience with it than me so you probably are.  \n16:26\u00a0<pulasthi>\u00a0when a query is made like SELECT FROM com.spidertracks.datanucleus.basic.model.Person WHERE testString == \\\"two\\\"\"  \n16:27\u00a0<pulasthi>\u00a0the plugin checks the metadata and finds a fieldNumber associated to and the fetch is done by passing the fieldNumber  \n16:27\u00a0<pulasthi>\u00a0\u00a0\\*finds a fieldNumber associated to testString  \n16:28\u00a0<@cjdelisle>\u00a0hmm I see the problem  \n16:28\u00a0<pulasthi>\u00a0so i can add a new column but when im quiring since there is no metadata  \n16:28\u00a0<@cjdelisle>\u00a0It's easy to store structured data and hard to query it.  \n16:29\u00a0<pulasthi>\u00a0yes :-/  \n16:30\u00a0<pulasthi>\u00a0so since we cant change the metadata i think we have to alter the object itself before presisting it  \n16:30\u00a0<@cjdelisle>\u00a0SELECT FROM com.model.Thing WHERE collection[3].entry == \"two\" <-- this doesn't work because there is no field called collection[3].entry  \n16:31\u00a0<pulasthi>\u00a0yes so im not sure what is done when storing a collection  \n16:31\u00a0<@cjdelisle>\u00a0But it also doesn't work because the field contains illegal characters.  \n16:32\u00a0<@cjdelisle>\u00a0I'm not sure abour [ and ] but I know that . is not allowed in a java field name.  \n16:32\u00a0<pulasthi>\u00a0thats not the error i got  \n16:32\u00a0<pulasthi>\u00a0if you put a Primitive object in the Person object  \n16:33\u00a0<pulasthi>\u00a0and send the query SELECT FROM com.spidertracks.datanucleus.basic.model.Person WHERE primitive.testString == \\\"two\\\"\"  \n16:33\u00a0<pulasthi>\u00a0it works  \n16:33\u00a0<pulasthi>\u00a0:/  \n16:33\u00a0<@cjdelisle>\u00a0hmm  \n16:34\u00a0<@cjdelisle>\u00a0oh of course, that is a valid query and it means what it says.  \n16:35\u00a0<@cjdelisle>\u00a0DataNucleus took that query apart and it determined that you wanted a Person object where person.primitive.testString was equal to \"two\"  \n16:36\u00a0<pulasthi>\u00a0thats kind of deep query right?  \n16:36\u00a0<pulasthi>\u00a0thats the one i test and thats why thought my code worked :)  \n16:37\u00a0<@cjdelisle>\u00a0It is. If however, you use the nested table option, it will work even with no changes at all.  \n16:38\u00a0<pulasthi>\u00a0yes i found that later :-/  \n16:38\u00a0<pulasthi>\u00a0so should i try altering the object before persisting, do you think it will be too much of a performance hit  \n16:39\u00a0<@cjdelisle>\u00a0I would not try altering an opject in flight, not only because if performance problems but because I think it will lead to headaches which never end.  \n16:41\u00a0<@cjdelisle>\u00a0Now the way you would normally query for an object inside of a collection using JDOQL is like this:  \n16:42\u00a0<@cjdelisle>\u00a0SELECT com.model.Thing WHERE collection.contains(obj) AND obj.value = \"three\" VARIABLES com.model.OtherThing obj  \n16:42\u00a0<@cjdelisle>\u00a0In JPQL it's:  \n16:43\u00a0<@cjdelisle>\u00a0SELECT thing FROM com.model.Thing AS thing, IN(thing.collection) AS obj WHERE obj.value = \"three\"  \n16:44\u00a0<pulasthi>\u00a0hmm  \n16:45\u00a0<@cjdelisle>\u00a0My thinking was we might get the structured storage down first, then move on to picking away at the query engine.  \n16:48\u00a0<pulasthi>\u00a0hmm ok im not clear what i should do next :-/  \n16:50\u00a0<@cjdelisle>\u00a0Well let me take a look at what you have and I'll see if we can get moving on a lower level solution.  \n16:51\u00a0<pulasthi>\u00a0ok great, i will take a look and how the plugin actually breaks down collections and Maps  \n16:52\u00a0<@cjdelisle>\u00a0I can take a look too and offer advice and guidance if you would like.  \n16:52\u00a0<pulasthi>\u00a0cool, thanks  \n16:53\u00a0<pulasthi>\u00a0have to go for dinner :)  \n16:53\u00a0<@cjdelisle>\u00a0ok  \n16:53\u00a0<pulasthi>\u00a0i will keep in touch  \n16:53\u00a0<pulasthi>\u00a0bye  \n16:53\u00a0<@cjdelisle>\u00a0cook  \n16:53\u00a0<@cjdelisle>\u00a0\\*cool  \n16:53\u00a0<pulasthi>\u00a0has left #xwiki  \n17:31\u00a0<mflorea>\u00a0has quit  \n19:00\u00a0<pturcotte>\u00a0has quit  \n19:10\u00a0<arkub>\u00a0has quit  \n19:24\u00a0<pturcotte>\u00a0has joined #xwiki  \n19:51\u00a0<pturcotte>\u00a0has quit  \n20:50\u00a0<jvelociter>\u00a0has joined #xwiki  \n21:09\u00a0<vmassol2>\u00a0has joined #xwiki  \n21:09\u00a0<vmassol\\_>\u00a0has joined #xwiki  \n21:12\u00a0<vmassol1>\u00a0has quit  \n21:23\u00a0<vmassol\\_>\u00a0has left #xwiki  \n21:24\u00a0<vmassol2>\u00a0cjdelisle: invitation test is still failing: http://ci.xwiki.org/job/xwiki-enterprise-test-ui/org.xwiki.enterprise$xwiki-enterprise-test-ui/82/testReport/org.xwiki.test.ui.invitation/InvitationTest/testSpamReporting/  \n21:24\u00a0<vmassol2>\u00a0(fyi)  \n21:24\u00a0<vmassol2>\u00a0this one looks new though: http://ci.xwiki.org/job/xwiki-enterprise-test-ui/org.xwiki.enterprise$xwiki-enterprise-test-ui/82/testReport/org.xwiki.test.ui/CommentAsGuestTest/testReplyCommentAsAnonymous/  \n21:31\u00a0<@cjdelisle>\u00a0Hmm I was hoping the invitation test was a problem with the change not making it through. It's passing on my machine now.  \n21:51\u00a0<abusenius>\u00a0has joined #xwiki  \n22:18\u00a0<vmassol2>\u00a0has quit  \n22:24\u00a0<jvelociter\\_>\u00a0has joined #xwiki  \n22:26\u00a0<jvelociter>\u00a0has quit  \n22:26\u00a0<jvelociter\\_>\u00a0is now known as <jvelociter>  \n22:44\u00a0<jvelociter\\_>\u00a0has joined #xwiki  \n22:46\u00a0<jvelociter>\u00a0has quit  \n22:46\u00a0<jvelociter\\_>\u00a0is now known as <jvelociter>  \n\n"}