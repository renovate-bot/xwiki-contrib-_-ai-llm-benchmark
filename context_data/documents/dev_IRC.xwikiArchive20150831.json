{"id": "dev:IRC.xwikiArchive20150831", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20150831", "title": "IRC Archive for channel #xwiki on 31 August 2015 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<Denis1>\u00a0has joined #xwiki  \n01:29\u00a0<abusenius\\_>\u00a0has quit  \n01:35\u00a0<Denis1>\u00a0has quit  \n03:49\u00a0<Denis1>\u00a0has joined #xwiki  \n03:54\u00a0<Denis1>\u00a0has quit  \n04:29\u00a0<cpe>\u00a0has quit  \n04:29\u00a0<cpe\\_>\u00a0has joined #xwiki  \n04:29\u00a0<cpe\\_>\u00a0is now known as <cpe>  \n06:52\u00a0<Ramona1>\u00a0has joined #xwiki  \n06:53\u00a0<mflorea>\u00a0has joined #xwiki  \n07:05\u00a0<msmeria>\u00a0has joined #xwiki  \n08:01\u00a0<sdumitriu>\u00a0has quit  \n08:47\u00a0<sdumitriu>\u00a0has joined #xwiki  \n08:54\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n09:06\u00a0<vmassol>\u00a0has joined #xwiki  \n09:07\u00a0<vmassol>\u00a0has quit  \n09:07\u00a0<vmassol1>\u00a0has joined #xwiki  \n09:21\u00a0<mflorea>\u00a0has quit  \n09:22\u00a0<vmassol1>\u00a0good morning  \n09:22\u00a0<vmassol1>\u00a0today is release day! let's stabilize our build  \n09:22\u00a0<vmassol1>\u00a0is now known as <vmassol>  \n09:41\u00a0<mflorea>\u00a0has joined #xwiki  \n09:46\u00a0<vmassol>\u00a0mflorea: you're the RM (in case you didn't know :))  \n09:46\u00a0<mflorea>\u00a0I know :)  \n09:47\u00a0<mflorea>\u00a0there is one test failing in test-escaping related to AnnotationCode.CreateForm  \n09:47\u00a0<mflorea>\u00a0someone needs to look at it  \n09:47\u00a0<vmassol>\u00a0someone caused a clirr error in platform too:  \n09:47\u00a0<vmassol>\u00a0[ERROR] 6004: com.xpn.xwiki.XWikiConstant: Changed type of field EDIT\\_MODE\\_CLASS from org.xwiki.model.reference.EntityReference to org.xwiki.model.reference.LocalDocumentReference  \n09:47\u00a0<mflorea>\u00a0yes  \n09:47\u00a0<vmassol>\u00a0in xwiki-platform-legacy-oldcore  \n09:48\u00a0<vmassol>\u00a0checking history  \n09:48\u00a0<mflorea>\u00a0Edy should take care of the only selenium 1 test failing in administration because we removed the space switcher  \n09:49\u00a0<vmassol>\u00a0ok reverting thomas change  \n09:49\u00a0<mflorea>\u00a0I'm looking at the tests failing due to the changes made on the Create page UI  \n09:49\u00a0<vmassol>\u00a0(it was thomas for clirr)  \n09:49\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n09:51\u00a0<evalica>\u00a0has joined #xwiki  \n09:51\u00a0<vmassol>\u00a0Edy caused http://ci.xwiki.org/job/xwiki-platform/org.xwiki.platform$xwiki-platform-mail-test-tests/1767/testReport/junit/org.xwiki.mail.test.ui/MailTest/testMail/ too  \n09:52\u00a0<vmassol>\u00a0yes mflorea this one is caused by the removal of the space admin switcher too  \n09:52\u00a0<Enygma`>\u00a0has joined #xwiki  \n09:52\u00a0<mflorea>\u00a0ok  \n09:52\u00a0<vmassol>\u00a0looking for teh jira issue  \n09:52\u00a0<Denis1>\u00a0has joined #xwiki  \n09:52\u00a0<vmassol>\u00a0XWIKI-12172  \n09:53\u00a0<vmassol>\u00a0you have a jenkins link to the other failing tests for the switcher mflorea?  \n09:53\u00a0<mflorea>\u00a0yes, just a sec  \n09:53\u00a0<vmassol>\u00a0(so that I can add them in the issue too)  \n09:53\u00a0<mflorea>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-test-selenium/lastBuild/org.xwiki.enterprise$xwiki-enterprise-test-selenium/testReport/org.xwiki.test.selenium/AdministrationTest/testSettingXWikiPreferences/  \n09:53\u00a0<vmassol>\u00a0thx  \n09:55\u00a0<vmassol>\u00a0this is also fro edy I think: http://ci.xwiki.org/job/xwiki-platform/org.xwiki.platform$xwiki-platform-flamingo-skin-test-tests/1767/testReport/junit/org.xwiki.flamingo.test.ui/CreatePageAndSpaceTest/createSpaceAndPage/  \n09:55\u00a0<vmassol>\u00a0(Enygma`)  \n09:55\u00a0<vmassol>\u00a0and all the failing CreatePageTest  \n09:57\u00a0<vmassol>\u00a0Enygma`: out of 10 failing tests in platform, 9 are for you to fix :)  \n09:57\u00a0<vmassol>\u00a0this one is something else I think: http://ci.xwiki.org/job/xwiki-platform/org.xwiki.platform$xwiki-platform-wysiwyg-test-tests/1767/testReport/junit/org.xwiki.wysiwyg.test.ui/EditWYSIWYGTest/testUndoRepeatedPaste/  \n09:58\u00a0<Ramona1>\u00a0has quit  \n10:02\u00a0<Ramona1>\u00a0has joined #xwiki  \n10:06\u00a0<Slashman>\u00a0has joined #xwiki  \n10:21\u00a0<ClemensR>\u00a0has joined #xwiki  \n10:27\u00a0<mflorea>\u00a0vmassol: yes, EditWYSIWYGTest/testUndoRepeatedPaste/ was failing for M2 too, I investigated it and my conclusion was that it fails on some agents and passes on the others, but I couldn't determine the difference between the agents.  \n10:28\u00a0<vmassol>\u00a0k\u2026.. yuck....  \n10:29\u00a0<mflorea>\u00a0Enygma`: re the Create Page, I'm currently writing a page object for the document picker (which is used on Copy page also)  \n10:29\u00a0<Pbas>\u00a0has joined #xwiki  \n10:30\u00a0<Enygma`>\u00a0getting on it  \n10:40\u00a0<Enygma`>\u00a0has quit  \n10:41\u00a0<tmortagne>\u00a0has joined #xwiki  \n10:41\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:42\u00a0<vmassol>\u00a0checking the escaping test http://ci.xwiki.org/job/xwiki-enterprise-test-escaping/lastCompletedBuild/org.xwiki.enterprise$xwiki-enterprise-test-escaping/testReport/org.xwiki.test.escaping/ApplicationTest/AnnotationCode\\_CreateForm\\_xml\\_\\_page\\_\\_selectionContext\\_\\_language\\_\\_space\\_\\_wiki\\_\\_comment\\_\\_selectionOffset\\_\\_selection\\_\\_reference\\_\\_\\_testParametersInFlamingo/  \n11:00\u00a0<woshilapin>\u00a0has joined #xwiki  \n11:02\u00a0<tmortagne>\u00a0has quit  \n11:24\u00a0<tmortagne>\u00a0has joined #xwiki  \n11:32\u00a0<tmortagne>\u00a0has quit  \n11:38\u00a0<vmassol>\u00a0note: I think thomas introduced some regressions in the annotation module  \n11:39\u00a0<vmassol>\u00a0going to reopen the issue  \n11:55\u00a0<Enygma`>\u00a0gdelhumeau, vmassol: we still have no UI to go to the Administration of a space (Nested Document). To fix the failing administration tests, I`ll just build the URL by hand in the page object methods.  \n11:55\u00a0<vmassol>\u00a0hmm when is this planned?  \n11:55\u00a0<vmassol>\u00a0(the UI)  \n11:55\u00a0<gdelhumeau>\u00a0evalica: what do you think?  \n11:55\u00a0<gdelhumeau>\u00a0the space concept should be hidden in the UI normally  \n11:55\u00a0<vmassol>\u00a0Enygma`: the alternative is to implement a tree switcher  \n11:56\u00a0<vmassol>\u00a0(which could be useful)  \n11:56\u00a0<gdelhumeau>\u00a0and we should create a page admin instead  \n11:56\u00a0<gdelhumeau>\u00a0when we'll have the page administration the functionnal tests abour space admin wil not be usefull anymore  \n11:56\u00a0<vmassol>\u00a0I don't see what harm it would do to be able to switch admin page from within the admin  \n11:57\u00a0<vmassol>\u00a0gdelhumeau: most failing tests are not about that  \n11:57\u00a0<vmassol>\u00a0hmm maybe they ayre  \n11:57\u00a0<vmassol>\u00a0\\*are  \n11:58\u00a0<evalica>\u00a0since space administration is now 'page administration', the administration should be available in the 'More actions' part of the menu. But switching from global administration could be an alternative.  \n11:58\u00a0<vmassol>\u00a0for MailTest the tests is about verifying that the admin options are not available in space admins  \n11:58\u00a0<vmassol>\u00a0s/tests/test  \n11:59\u00a0<vmassol>\u00a0I guess this test should go directly to the space admin instead of navigating  \n11:59\u00a0<vmassol>\u00a0since it's not about testing the nav  \n11:59\u00a0<gdelhumeau>\u00a0that's what Edy did  \n11:59\u00a0<vmassol>\u00a0he already fixed it?  \n11:59\u00a0<gdelhumeau>\u00a0for the tests he fixed  \n12:00\u00a0<gdelhumeau>\u00a0oh sorry  \n12:00\u00a0<gdelhumeau>\u00a0not did  \n12:00\u00a0<gdelhumeau>\u00a0but will  \n12:00\u00a0<vmassol>\u00a0it depends  \n12:00\u00a0<vmassol>\u00a0that's not what he said  \n12:00\u00a0<vmassol>\u00a0he said he'd do that everywhere  \n12:00\u00a0<vmassol>\u00a0this makes sense only for tests that don't need to test the nav  \n12:00\u00a0<vmassol>\u00a0but I guess we have some tests whoe prupose is to test this nav!  \n12:01\u00a0<vmassol>\u00a0\\*whose  \n12:01\u00a0<gdelhumeau>\u00a0yes  \n12:05\u00a0<Enygma`>\u00a0vmassol: so you are proposing to change the tests instead of the page object?  \n12:05\u00a0<vmassol>\u00a0Enygma`: do you want me to fix the MailTest?  \n12:06\u00a0<vmassol>\u00a0Enygma`: depends  \n12:06\u00a0<vmassol>\u00a0some tests are wrong  \n12:06\u00a0<vmassol>\u00a0the MailTests is wrong for ex  \n12:06\u00a0<vmassol>\u00a0(well not wrong wrong but it does unnecessary testing)  \n12:06\u00a0<vmassol>\u00a0since it tests space admin swtiching which is not one of the goal of this test  \n12:07\u00a0<vmassol>\u00a0so for tests like this we could fix them instead  \n12:07\u00a0<vmassol>\u00a0however there remains the real tests which are testing the admin switching  \n12:07\u00a0<vmassol>\u00a0and for these we need an alternative  \n12:07\u00a0<vmassol>\u00a0which is why I was asking when wil we get it?  \n12:08\u00a0<vmassol>\u00a0so right now we cannot administer a space?  \n12:09\u00a0<vmassol>\u00a0(without direct url)  \n12:09\u00a0<Enygma`>\u00a0right  \n12:09\u00a0<vmassol>\u00a0that seems a blocker  \n12:09\u00a0<vmassol>\u00a0so at the very minimum RC1  \n12:09\u00a0<vmassol>\u00a0or possibly delay this release  \n12:09\u00a0<vmassol>\u00a0by one day to implement it  \n12:09\u00a0<Enygma`>\u00a0mentioned it on http://jira.xwiki.org/browse/XWIKI-12189?focusedCommentId=87405&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-87405  \n12:09\u00a0<vmassol>\u00a0because we need a solution for this for 7.2  \n12:09\u00a0<gdelhumeau>\u00a0vmassol: I can add a temproray link  \n12:09\u00a0<gdelhumeau>\u00a0to not block the release  \n12:10\u00a0<gdelhumeau>\u00a0but at the end we should drop the space admin entirely  \n12:10\u00a0<Enygma`>\u00a0we also need to think it better, since, AFAIK, only admins can access the space administration  \n12:10\u00a0<Enygma`>\u00a0and now, with ND, that`s just wrong  \n12:11\u00a0<vmassol>\u00a0Enygma`: we discussed this laready  \n12:12\u00a0<evalica>\u00a0so the simplest solution now is to add an 'Administer' in the 'More actions' menu that will take to Space Administration  \n12:13\u00a0<Enygma`>\u00a0(that is displayed only for non-terminal docs)  \n12:14\u00a0<Enygma`>\u00a0actually, if the parent does not exist, there is an issue  \n12:14\u00a0<vmassol>\u00a0yes ok for that but I think we need to fix it properly with the page admin in RC1  \n12:14\u00a0<Enygma`>\u00a0(parent of a non-terminal doc)  \n12:14\u00a0<gdelhumeau>\u00a0note that in the space admin, there is actually no mention of the term \"space\"  \n12:15\u00a0<evalica>\u00a0that's good  \n12:15\u00a0<gdelhumeau>\u00a0we could actually remove the \"edit rights\" button of a non-terminal page to have only this administration instead  \n12:15\u00a0<vmassol>\u00a0gdelhumeau: I don't think sio  \n12:15\u00a0<gdelhumeau>\u00a0and when it's a terminal doc, then, only the \"edit right button\", and \"administer parent\" maybe  \n12:15\u00a0<vmassol>\u00a0so  \n12:15\u00a0<vmassol>\u00a0because edit right is not the same as space admin ATM  \n12:17\u00a0<vmassol>\u00a0one is about edit rigth of the current doc and space admin is about edit rights of all docs of the space  \n12:17\u00a0<vmassol>\u00a0you cannot set page level rights with space admin  \n12:19\u00a0<gdelhumeau>\u00a0some ideas there already: http://jira.xwiki.org/browse/XWIKI-12219#  \n12:20\u00a0<vmassol>\u00a0yes I know  \n12:21\u00a0<vmassol>\u00a0but the idea has never been to remove page edit rights  \n12:21\u00a0<vmassol>\u00a0it was to propose both in the same UI  \n12:21\u00a0<vmassol>\u00a0(in page admin)  \n12:22\u00a0<Enygma`>\u00a0if we go for an unified page admin that handles both the current page and the space, then page edit rights needs to go  \n12:22\u00a0<vmassol>\u00a0no  \n12:22\u00a0<vmassol>\u00a0why?  \n12:22\u00a0<vmassol>\u00a0see the issue screenshots  \n12:23\u00a0<vmassol>\u00a0we need page edit rights  \n12:23\u00a0<vmassol>\u00a0why do you say we don't?  \n12:23\u00a0<vmassol>\u00a0how do you set page level rights?  \n12:23\u00a0<Enygma`>\u00a0from this new and unified \"page administration\": http://jira.xwiki.org/secure/attachment/31242/proposal1.png  \n12:24\u00a0<Enygma`>\u00a0at least according to this proposal  \n12:24\u00a0<vmassol>\u00a0Enygma`: ok we're talking cross purpose  \n12:24\u00a0<vmassol>\u00a0you said \"page edit rights\" needs to go  \n12:24\u00a0<vmassol>\u00a0but you probably meant \"the page edit rights menu entry\" insetad, right?  \n12:25\u00a0<Enygma`>\u00a0and the /edit/editor=rights template, yes  \n12:25\u00a0<vmassol>\u00a0so yes, the idea is to have a single page admin  \n12:25\u00a0<vmassol>\u00a0with all options  \n12:25\u00a0<vmassol>\u00a0and you see those options depending on your rights  \n12:25\u00a0<vmassol>\u00a0this is what we discussed in the past  \n12:26\u00a0<vmassol>\u00a0(if you have admin rights you can change space options, ie affect children)  \n12:26\u00a0<vmassol>\u00a0(and if you have only edit right you can only affect the current doc)  \n12:26\u00a0<Enygma`>\u00a0the only concern I have about this is when we want to introduce other page-only related administration/preferences, besides rights... the unified \"page administration\" UI will get crowded with all sorts of settings first for the page only and then for the page + children... so groups of 2 settings for the same option  \n12:26\u00a0<Enygma`>\u00a0which might get ugly  \n12:26\u00a0<vmassol>\u00a0yes we need to present it nicely  \n12:27\u00a0<vmassol>\u00a0but its logical to have 2 levels:  \n12:27\u00a0<vmassol>\u00a0- this page only  \n12:27\u00a0<vmassol>\u00a0- all children pages  \n12:27\u00a0<vmassol>\u00a0but indeed there are various ways to prsent this  \n12:28\u00a0<Enygma`>\u00a0yes... I am worried that we will not be able to do this for every option we want to administer...  \n12:29\u00a0<Enygma`>\u00a0I just don`t see it happening  \n12:29\u00a0<evalica>\u00a0http://design.xwiki.org/xwiki/bin/download/Improvements/PageAdministration/ContentHistory.png  \n12:29\u00a0<vmassol>\u00a0well right now we have almost nothing at page level  \n12:29\u00a0<Enygma`>\u00a0see the link Caty just pasted as a proposal of what we could administer at a page level  \n12:29\u00a0<evalica>\u00a0but this was a complex idea  \n12:29\u00a0<vmassol>\u00a0yes but I don't agree with most of them :)  \n12:29\u00a0<vmassol>\u00a0like history is not an admin thing  \n12:29\u00a0<Enygma`>\u00a0now imagine that each of those options is duplicated for both the page-only level and the pagel+children level  \n12:30\u00a0<vmassol>\u00a0Enygma`: that's easy  \n12:30\u00a0<vmassol>\u00a0that 'sa a checkbox : \"Apply to children documents\"  \n12:30\u00a0<evalica>\u00a0in this proposal: history and attachments offered BULK action from administration.  \n12:30\u00a0<vmassol>\u00a0\"Apply to children documents too\"  \n12:31\u00a0<vmassol>\u00a0evalica: yes I don't understand why it would be in admin  \n12:31\u00a0<Enygma`>\u00a0vmassol: Caty mentioned that to me too, but no... you will end up overriding the other .... you want to see at a given time what are the settings for only for the page and what are the settings for page+children  \n12:31\u00a0<vmassol>\u00a0but forget the history example  \n12:31\u00a0<vmassol>\u00a0we may still have lots of options one day if we want to provide ability to set the skin at page level, etc  \n12:32\u00a0<Enygma`>\u00a0vmassol: and remember that this is now \"page admin\" and deleting/approving comments... reverting history, deleting attachments are \"page administration\" actions that are not suited for view mode  \n12:32\u00a0<Enygma`>\u00a0yes, skin, page elements, etc  \n12:32\u00a0<Enygma`>\u00a0very useful stuff IMO  \n12:32\u00a0<vmassol>\u00a0not sure  \n12:32\u00a0<Enygma`>\u00a0that we lack right now and have to hack with layoutVariables.vm  \n12:32\u00a0<vmassol>\u00a0they haven't been useful for the past 10 years  \n12:32\u00a0<vmassol>\u00a0:)  \n12:32\u00a0<vmassol>\u00a0it's pretty edge cases  \n12:32\u00a0<vmassol>\u00a0and even more now with nested spaces  \n12:33\u00a0<Enygma`>\u00a0wdym? we use them alot with #set ($showComments = false) or something like that  \n12:33\u00a0<Enygma`>\u00a0which is a hack  \n12:34\u00a0<vmassol>\u00a0anyway I don't see a difference between:  \n12:34\u00a0<vmassol>\u00a0- 2 entry menus, one for page level admin and another one for children admin level  \n12:34\u00a0<Enygma`>\u00a0I just hope we`re not painting ourselves in a corner with this unified page admin  \n12:34\u00a0<vmassol>\u00a0- a singele page admin with 2 sections: one for page level and one for children level  \n12:34\u00a0<vmassol>\u00a0it's the same  \n12:35\u00a0<vmassol>\u00a0you can have 2 tabs  \n12:35\u00a0<vmassol>\u00a0or two left menu links or\u2026  \n12:35\u00a0<evalica>\u00a0or - a single page admin + switch between page or children mode  \n12:35\u00a0<vmassol>\u00a0but in the end it's the same as 2 links in the menu  \n12:35\u00a0<vmassol>\u00a0not more work, not less  \n12:35\u00a0<vmassol>\u00a0yes or that  \n12:35\u00a0<vmassol>\u00a0in the end we need to differentiate  \n12:36\u00a0<Enygma`>\u00a0I like Caty`s idea of using a switch (select above the left menu)  \n12:36\u00a0<vmassol>\u00a0between page level and children level  \n12:36\u00a0<Enygma`>\u00a0and it`s very easy to implement  \n12:36\u00a0<vmassol>\u00a0yes it'es good  \n12:36\u00a0<vmassol>\u00a0\\*it's  \n12:36\u00a0<Enygma`>\u00a0we`re just switching the page we are editing, but the user stays in the same UI  \n12:38\u00a0<Enygma`>\u00a0commented on the issue about this idea  \n13:18\u00a0<Denis1>\u00a0has quit  \n14:10\u00a0<Enygma`>\u00a0vmassol: why were you saying that the mail tests don`t need to perform that step (checking if the mail category appears for space administration)?  \n14:11\u00a0<vmassol>\u00a0I didn't say that :)  \n14:11\u00a0<vmassol>\u00a0I said that this test doesn't need to navigate to the space admin  \n14:11\u00a0<vmassol>\u00a0it could (and should) go to that space admin directly  \n14:11\u00a0<vmassol>\u00a0said differently  \n14:11\u00a0<vmassol>\u00a0going to the space admin should be part of the test fixture  \n14:13\u00a0<Enygma`>\u00a0you mean that instead of starting with wiki administration, it could start with space administration?  \n14:20\u00a0<vmassol>\u00a0I'm not saying that either  \n14:20\u00a0<vmassol>\u00a0ok let me be specific  \n14:20\u00a0<vmassol>\u00a0I'm talking about replacing this line:  \n14:20\u00a0<vmassol>\u00a0AdministrationPage spaceAdministrationPage = administrationPage.selectSpaceToAdminister(\"XWiki\");  \n14:21\u00a0<vmassol>\u00a0with some getUtil().gotoPage()  \n14:21\u00a0<vmassol>\u00a0(or add a static method in AdministrationPage to go directly to an admin section)  \n14:22\u00a0<vmassol>\u00a0(not admin section but space admin page)  \n14:23\u00a0<vmassol>\u00a0there's already AdministrationPage.gotoPage(), we could add AdministrationPage.gotoSpaceAdminPage(String spaceReference)  \n14:23\u00a0<Enygma`>\u00a0yes, that`s what I was shooting for as well  \n14:23\u00a0<vmassol>\u00a0ok  \n14:24\u00a0<vmassol>\u00a0cool  \n14:24\u00a0<vmassol>\u00a0cool thing is that we'll remove the hack at getDriver().waitUntilElementIsVisible(By.id(\"HAdministration:XWiki\"));  \n14:24\u00a0<vmassol>\u00a0;)  \n14:25\u00a0<vmassol>\u00a0and spaceAdministrationPage.waitUntilPageIsLoaded();  \n14:31\u00a0<Enygma`>\u00a0yes, but this might be temporary, depending on what we will implement in its place in the coming future  \n14:31\u00a0<vmassol>\u00a0why?  \n14:31\u00a0<vmassol>\u00a0again it's not the goal of this test to validate that we can switch admin from one space to another  \n14:31\u00a0<vmassol>\u00a0this test should not navigate  \n14:32\u00a0<vmassol>\u00a0so direct url is going to be still valid in the future  \n14:32\u00a0<Enygma`>\u00a0ok, I see what you meant  \n14:33\u00a0<vmassol>\u00a0said differently, there's no point in having 5 tests that validate space admin swtiching, only one func tests validating this is enough and this test should be in the admin func tests  \n14:34\u00a0<Enygma`>\u00a0the funny thing is that in reality, we end up having 5 tests indirectly testing a feature by using it in integration tests but without having a single test that directly tests the same feature :)  \n14:34\u00a0<vmassol>\u00a0yes sometimes we're missing the test in the right place  \n14:34\u00a0<Denis1>\u00a0has joined #xwiki  \n14:34\u00a0<vmassol>\u00a0we need to be careful that we do have one validating this in the admin func tests :)  \n14:35\u00a0<Enygma`>\u00a0:)  \n14:35\u00a0<vmassol>\u00a0moving annotation test from enterprise to platform now to add some new tests  \n14:35\u00a0<vmassol>\u00a0(to fix the rgeressions introduced by thomas)  \n14:35\u00a0<Enygma`>\u00a0now, about the location of this method... looking at TestUtls, I see that we have there even create\\* methods, instead of having them say in the CreatePage page object  \n14:35\u00a0<Enygma`>\u00a0so probably TestUtil is a better place for the method  \n14:36\u00a0<vmassol>\u00a0AdministrationPage seems nice to me  \n14:36\u00a0<vmassol>\u00a0\\*nicer  \n14:36\u00a0<Enygma`>\u00a0and let the pageObjects contain more actual UI testing code  \n14:36\u00a0<vmassol>\u00a0we started the gotoPage() pattern and for me it's the same pattern  \n14:36\u00a0<vmassol>\u00a0ws're just contiuing it  \n14:37\u00a0<vmassol>\u00a0the gotoPag() pattern being that each PageObject should have a way to go to it  \n14:37\u00a0<Enygma`>\u00a0maybe in this case you are right, since it retuns an AdministrationPage  \n14:37\u00a0<vmassol>\u00a0(directtly)  \n14:37\u00a0<vmassol>\u00a0yes  \n14:37\u00a0<Enygma`>\u00a0yep  \n14:41\u00a0<Enygma`>\u00a0I guess we need to start using more references in our tests  \n14:41\u00a0<Enygma`>\u00a0instead of strings  \n14:41\u00a0<vmassol>\u00a0yes, I started doing this recently and added th required infra for it  \n14:41\u00a0<vmassol>\u00a0(the resolvers)  \n14:41\u00a0<Enygma`>\u00a0I was just looking for some resolvers  \n14:42\u00a0<Enygma`>\u00a0just spotted it in TestUtils  \n14:42\u00a0<vmassol>\u00a0in TestUtils I added some resolve method  \n14:43\u00a0<tmortagne>\u00a0has joined #xwiki  \n14:48\u00a0<tmortagne>\u00a0has quit  \n14:52\u00a0<Enygma`>\u00a0wondering if the old AdministrationPage.selectSpaceToAdminister(String spaceName) method should redirect to the new static AdministrationPage.gotoSpaceAdministrationPage(String spaceReferenceString)  \n14:53\u00a0<vmassol>\u00a0you mean very temporarily till RC1?  \n14:53\u00a0<Ramona1>\u00a0has quit  \n14:53\u00a0<Enygma`>\u00a0something like that, otherwise it`s useless if it`s not working  \n14:54\u00a0<vmassol>\u00a0sure ok temporarily, the other option is to add the menu link to space admin  \n14:54\u00a0<Enygma`>\u00a0I would still modify the currently failing code to use the static method instead of this, so that we avoid still using the UI when we should not  \n14:54\u00a0<vmassol>\u00a0I'm ok for that  \n14:54\u00a0<vmassol>\u00a0make sure to add todo and possibily a jira issue to remember putting it back :)  \n14:55\u00a0<vmassol>\u00a0or add it as comment int he issue for the new page admin ui  \n14:55\u00a0<Enygma`>\u00a0\"putting it back\" > you mean to actually implement it when the new UI is up  \n14:55\u00a0<vmassol>\u00a0yes  \n14:55\u00a0<Enygma`>\u00a0ok  \n15:03\u00a0<msmeria>\u00a0has quit  \n15:08\u00a0<Denis1>\u00a0has quit  \n15:09\u00a0<Denis1>\u00a0has joined #xwiki  \n15:16\u00a0<vmassol>\u00a0hmmm some problem in my func test  \n15:16\u00a0<vmassol>\u00a015:15:09.836 [Thread-13] ERROR o.x.t.i.XWikiLogOutputStream - 2015-08-31 15:15:09,836 [http://localhost:8080/xwiki/bin/register/XWiki/Register] ERROR o.h.u.JDBCExceptionReporter \u00a0\u00a0\u00a0- invalid schema name: ${MAINWIKIID}  \n15:16\u00a0<vmassol>\u00a0debugging...  \n15:30\u00a0<tmortagne>\u00a0has joined #xwiki  \n15:35\u00a0<tmortagne>\u00a0has quit  \n15:37\u00a0<vmassol>\u00a0haha found the culprit I think  \n15:37\u00a0<vmassol>\u00a0in drawer.vm: #set ($hasHomeWikiAdmin = $xwiki.hasAccessLevel('admin', $xcontext.user, \"${mainWikiId}:XWiki.XWikiPreferences\"))  \n15:38\u00a0<vmassol>\u00a0yep and mainwikiid is defined as #set ($mainWikiId = $services.wiki.mainWikiId)  \n15:38\u00a0<vmassol>\u00a0which means it works only of the wiki module is available  \n15:38\u00a0<vmassol>\u00a0so basically any func tests that doesn't have a dep on it fails  \n15:39\u00a0<vmassol>\u00a0this is notnice  \n15:43\u00a0<gdelhumeau>\u00a0the wiki module is not considered as a basic module of the platform?  \n15:44\u00a0<vmassol>\u00a0it's never been  \n15:45\u00a0<vmassol>\u00a0remember that we come from XEM  \n15:45\u00a0<vmassol>\u00a0subwiki has never been a core notion  \n15:45\u00a0<Enygma`>\u00a0we faked it into the model :)  \n15:45\u00a0<vmassol>\u00a0not in the model  \n15:46\u00a0<vmassol>\u00a0in a separate module  \n15:46\u00a0<gdelhumeau>\u00a0yes but since 5.4 it's on XE  \n15:46\u00a0<vmassol>\u00a0there's no reason to have it in the model  \n15:46\u00a0<gdelhumeau>\u00a0and we can consider it as a basic package  \n15:46\u00a0<vmassol>\u00a0I don't see why  \n15:46\u00a0<vmassol>\u00a0I've complained sveeral times  \n15:46\u00a0<vmassol>\u00a0about the 2 ways to get the main wiki and the current wiki but nodody paid attention it seems  \n15:47\u00a0<vmassol>\u00a0which created the mess we have now  \n15:47\u00a0<gdelhumeau>\u00a0to avoid using $xcontext.mainWikiId for example  \n15:47\u00a0<Enygma`>\u00a0because multiwiki is now part of the model, don`t see why the API to handle should not be  \n15:47\u00a0<vmassol>\u00a0it's the other way around  \n15:47\u00a0<vmassol>\u00a0$services.wiki.mainWikiId is the mess  \n15:47\u00a0<vmassol>\u00a0multiwiki is not part of the model and it never has been  \n15:47\u00a0<Enygma`>\u00a0at least in the reference API (which is model) we have the notion of multiple wikis  \n15:47\u00a0<vmassol>\u00a0whether we want it to be in thef turue is naother discussion  \n15:47\u00a0<Enygma`>\u00a0a reference has a wiki which can be changed  \n15:48\u00a0<vmassol>\u00a0imagine I want to use xwiki to create a software and I need only a single wiki  \n15:48\u00a0<vmassol>\u00a0why would I have to have all the multiwiki modules in my software?  \n15:48\u00a0<Enygma`>\u00a0imagine you want to use XWiki to create a software and you need only a single space  \n15:48\u00a0<vmassol>\u00a0it's so easy to not have them  \n15:48\u00a0<Enygma`>\u00a0why would you have to have all the spaces in you software?  \n15:48\u00a0<Enygma`>\u00a0:)  \n15:48\u00a0<vmassol>\u00a0it's hard to remove the space notion  \n15:49\u00a0<vmassol>\u00a0but it's easy for the wiki part  \n15:49\u00a0<Enygma`>\u00a0this is an implementation detail  \n15:49\u00a0<vmassol>\u00a0since that's where we come from  \n15:49\u00a0<Enygma`>\u00a0at the model level you have multiple spaces and multiple wikis  \n15:49\u00a0<Enygma`>\u00a0IMO it`s a bad practice to keep seeing XWiki as a single wiki  \n15:49\u00a0<Enygma`>\u00a0this lead to hundreds of bugs  \n15:49\u00a0<Enygma`>\u00a0a good part of which I know of at least  \n15:50\u00a0<Enygma`>\u00a0it`s one thing that we come from single wiki, but that was years ago  \n15:50\u00a0<Enygma`>\u00a0IMO, we just have to stop thinking like that...  \n15:51\u00a0<Enygma`>\u00a0having a look at the annotations issue  \n15:52\u00a0<vmassol>\u00a0I'm on it  \n15:52\u00a0<vmassol>\u00a0(re annotations)  \n15:52\u00a0<vmassol>\u00a0been on it for a few hours already  \n15:52\u00a0<vmassol>\u00a0I know exactly what are the problems with it  \n15:52\u00a0<Enygma`>\u00a0ah, ok then  \n15:52\u00a0<Enygma`>\u00a0good to know :)  \n15:53\u00a0<vmassol>\u00a0I said it already on this chat earlier :)  \n15:53\u00a0<vmassol>\u00a0(that I was handling it)  \n15:53\u00a0<Enygma`>\u00a0that`s why I mentioned it because I remembered something but was not sure :)  \n15:53\u00a0<vmassol>\u00a0ok  \n15:53\u00a0<vmassol>\u00a0so you seem to be all thinking that we should bundle the wiki modules in the core. I know thomas thinks that too  \n15:54\u00a0<vmassol>\u00a0on my side I want to make the core as small as possible and this in the opposite direction  \n15:54\u00a0<vmassol>\u00a0but ok I can understand the point  \n15:54\u00a0<vmassol>\u00a0now we haven't acted till now as if it were part of the core  \n15:54\u00a0<vmassol>\u00a0so it's a change  \n15:55\u00a0<vmassol>\u00a0and we need to send a proposal or a vote for this  \n15:55\u00a0<vmassol>\u00a0there are 2 things that prove it wasn't core  \n15:55\u00a0<vmassol>\u00a01) it's no in the package plugin deps  \n15:55\u00a0<vmassol>\u00a02) in the code we have eveyrwhere things like this:  \n15:55\u00a0<vmassol>\u00a0#if (\"$!services.wiki\" != '' && $services.wiki.currentWikiId != $services.wiki.mainWikiId)  \n15:56\u00a0<vmassol>\u00a0ah maybe the discussion is about the wiki script service then ?  \n15:56\u00a0<vmassol>\u00a0because that's my real issue  \n15:57\u00a0<gdelhumeau>\u00a0what do you propose, introduce a core script service?  \n15:57\u00a0<gdelhumeau>\u00a0to get the name of the main wiki?  \n15:57\u00a0<vmassol>\u00a0we alreayd have one :)  \n15:57\u00a0<gdelhumeau>\u00a0$xcontext ?  \n15:57\u00a0<vmassol>\u00a0and we already have a model ss too  \n15:58\u00a0<vmassol>\u00a0(ah no forget core script service, was thinking about core config)  \n15:58\u00a0<vmassol>\u00a0but we have a model ss  \n15:58\u00a0<vmassol>\u00a0and a model context manager  \n15:58\u00a0<vmassol>\u00a0ModelContext I mean  \n15:58\u00a0<gdelhumeau>\u00a0so instead of $services.wiki.mainWikiId, what should we use ?  \n15:59\u00a0<vmassol>\u00a0also point 3) is that context.getMainXWiki() is not even deprecated nor is context.getWikiId()  \n16:00\u00a0<gdelhumeau>\u00a0but is \\*xcontext deprecated?  \n16:00\u00a0<vmassol>\u00a0getWikiId has even been introduced in 6.1  \n16:00\u00a0<vmassol>\u00a06.1M1  \n16:00\u00a0<vmassol>\u00a0xcontext is not deprecated  \n16:01\u00a0<vmassol>\u00a0so we need to decide if wiki script module is core or not  \n16:01\u00a0<vmassol>\u00a0(ie it has to be in a most minimal wiki we can make)  \n16:03\u00a0<vmassol>\u00a0if we say that the wiki concept is core then I guess we should also have it in the core so that velocity pages can using wiki apis  \n16:03\u00a0<gdelhumeau>\u00a0indeed  \n16:04\u00a0<vmassol>\u00a0velo scripting that is  \n16:04\u00a0<vmassol>\u00a0api.XWiki is core ATM so I guess it makes sense that wiki SS should be too  \n16:17\u00a0<vmassol>\u00a0ok mail ready, sending  \n16:18\u00a0<Enygma`>\u00a0because we come from a single wiki setup \\*and\\* because oldcore is... old and should not be extended, the wiki API is bundled in a separate module and accessible to scripting through a script service, but that does not mean that is does not make it core  \n16:18\u00a0<vmassol>\u00a0it means we didn't have to make it core  \n16:18\u00a0<vmassol>\u00a0because it was nicely done separately  \n16:18\u00a0<vmassol>\u00a0w're just loosing this advnatage  \n16:18\u00a0<Enygma`>\u00a0it was done separately out of necessity  \n16:18\u00a0<vmassol>\u00a0it's a bet that we won't need it, which is ok, just makes xwiki more heavywieght as it could be  \n16:19\u00a0<Enygma`>\u00a0but conceptually it should have been there from the start, IMO  \n16:19\u00a0<vmassol>\u00a0exactly  \n16:19\u00a0<vmassol>\u00a0and we're loosing that advatnage  \n16:19\u00a0<vmassol>\u00a0and tomorrow you're going to say that federations of wikis are core too? :)  \n16:19\u00a0<vmassol>\u00a0(playing the devil's advocate)  \n16:20\u00a0<Enygma`>\u00a0do you agree that it would suck to have to check in each velocity script that the \"spaces\" feature is activated before you use it?  \n16:20\u00a0<vmassol>\u00a0what was done was the hard part ie add multiwiki without changing the core  \n16:20\u00a0<vmassol>\u00a0we're now going the other way around of removing all the hard work done to separate them  \n16:20\u00a0<vmassol>\u00a0I'm not saying I don't agree btw,  \n16:20\u00a0<vmassol>\u00a0especially since it's me proposing it in the mail :)  \n16:21\u00a0<vmassol>\u00a0(I listened to you guys)  \n16:21\u00a0<vmassol>\u00a0Enygma`: my view is that 100% of eveyrthing should be optional  \n16:21\u00a0<vmassol>\u00a0so no I don't agree ith you on this  \n16:21\u00a0<vmassol>\u00a0what I agree with is that making everythinh optional has a cost  \n16:22\u00a0<vmassol>\u00a0when you're in a distribution you don't check for active elements  \n16:22\u00a0<vmassol>\u00a0you know they're ther'e  \n16:22\u00a0<vmassol>\u00a0\\*there  \n16:22\u00a0<Enygma`>\u00a0and I also understand your point, I`m just concerned that there are good practices applied in the not-so-good context :)  \n16:22\u00a0<vmassol>\u00a0when I write a velo script  \n16:22\u00a0<vmassol>\u00a0I don't check if the ruby macro is present before using it  \n16:23\u00a0<vmassol>\u00a0I use it because I'm in a given distribution where I have it installed  \n16:23\u00a0<vmassol>\u00a0if I were to write xwiki from scratch, I would make sure that the core is just a CLI extension manager  \n16:23\u00a0<vmassol>\u00a0and that everything else is optional  \n16:24\u00a0<gdelhumeau>\u00a0an OS actually :)  \n16:24\u00a0<vmassol>\u00a0features would be contributed by extensions a  \n16:24\u00a0<vmassol>\u00a0s/a//  \n16:24\u00a0<vmassol>\u00a0yes, xwiki is an OS  \n16:24\u00a0<vmassol>\u00a0:)  \n16:24\u00a0<Enygma`>\u00a0then you will have core XWiki modules depending on the wiki module (so that they don`t depend on it at runtime by checking if it is there) and the result when bundling those core XWiki modules is that you will indirectly make the wiki module core too :)  \n16:24\u00a0<vmassol>\u00a0if the wiki module is not there I wouldn't present the \"create wiki\" feature  \n16:25\u00a0<vmassol>\u00a0and the software will just work with a single schema  \n16:25\u00a0<Enygma`>\u00a0but for that you have to check at runtime  \n16:25\u00a0<Enygma`>\u00a0and you said you don`t check at runtime  \n16:25\u00a0<vmassol>\u00a0which incidentally is interesting if you have a backend that doesn't multiple schemas ;)  \n16:25\u00a0<vmassol>\u00a0there's a difference between the generic code and the code done by users  \n16:25\u00a0<vmassol>\u00a0users of the wiki  \n16:26\u00a0<vmassol>\u00a0and generic code should not check  \n16:26\u00a0<vmassol>\u00a0it should have extension points  \n16:26\u00a0<vmassol>\u00a0and it's the extensions that should plug in  \n16:26\u00a0<vmassol>\u00a0said differently if the annotation module wants to add some specific support for multiwiki, it should be done as a submodule inside the wiki module  \n16:26\u00a0<vmassol>\u00a0and not as a wiki module inside the annotation module  \n16:27\u00a0<vmassol>\u00a0:)  \n16:27\u00a0<vmassol>\u00a0(which requires a check)  \n16:27\u00a0<Enygma`>\u00a0so you really consider annotations core and multiwiki not core?  \n16:27\u00a0<vmassol>\u00a0no  \n16:27\u00a0<vmassol>\u00a0annotations are optional too  \n16:27\u00a0<vmassol>\u00a0why do you say that?  \n16:28\u00a0<vmassol>\u00a0I'm talking about a hypothetical annotatio feature for multiwiki here  \n16:28\u00a0<vrachieru>\u00a0has joined #xwiki  \n16:29\u00a0<vmassol>\u00a0you don't include the anno module you get neither annos nor that specific multiwiki feature for annos  \n16:29\u00a0<vmassol>\u00a0s/you don't/if you don't  \n16:30\u00a0<vmassol>\u00a0in any case these are thought experiements since we're not going to rewrite xwiki from scratch but still this is the philosohpy I'd like to have as much as possible inside xwiki  \n16:30\u00a0<vmassol>\u00a0ie make the core smaller  \n16:30\u00a0<vmassol>\u00a0and apply the IOC principle for features  \n16:31\u00a0<Enygma`>\u00a0so if I want to make an app that makes blue wikis, I can`t use the wiki services in that app to create wiki and then make them blue... I need to have the wikis module support a feature for which my app can write an extension point?  \n16:31\u00a0<vmassol>\u00a0ie extensions  \n16:32\u00a0<vmassol>\u00a0yes extensions need to provide extension points for others to use  \n16:33\u00a0<vmassol>\u00a0ofc you won't think about everytihn so what happens is that users create hacks because you don't offer the proper APIs but then you see teh need and add these new apis as you evolve your apis  \n16:33\u00a0<vmassol>\u00a0nothing special here, it's basic extension systems  \n16:33\u00a0<vmassol>\u00a0actually it's just api  \n16:34\u00a0<Enygma`>\u00a0so we kill script services and replace them with extension points?  \n16:34\u00a0<vmassol>\u00a0err?  \n16:34\u00a0<Enygma`>\u00a0why not use the script service if it is available?  \n16:34\u00a0<vmassol>\u00a0there are several kinds of \"apis\"  \n16:34\u00a0<vmassol>\u00a0- java apis  \n16:34\u00a0<vmassol>\u00a0- UI \"apis\", ie extension points  \n16:34\u00a0<Enygma`>\u00a0extension points have their purpose, but it's not to replace script services  \n16:34\u00a0<vmassol>\u00a0- config naming \"apis\"  \n16:34\u00a0<vmassol>\u00a0etc  \n16:34\u00a0<vmassol>\u00a0why do you want to have a single one?  \n16:35\u00a0<vmassol>\u00a0SS are java apis  \n16:35\u00a0<Enygma`>\u00a0\"yes extensions need to provide extension points for others to use\"  \n16:35\u00a0<vmassol>\u00a0for ui  \n16:35\u00a0<vmassol>\u00a0you were talking abtout ui  \n16:35\u00a0<Enygma`>\u00a0no  \n16:35\u00a0<vmassol>\u00a0(blue wikis)  \n16:35\u00a0<vmassol>\u00a0blue is ui for me sorry  \n16:35\u00a0<Enygma`>\u00a0lol, no, I meant an app that creates wikis for some purpose  \n16:36\u00a0<vmassol>\u00a0as I said it's just api anyway  \n16:36\u00a0<vmassol>\u00a0you can't imagine all the possible use of your api  \n16:36\u00a0<vmassol>\u00a0but then you evolve it  \n16:36\u00a0<vmassol>\u00a0it doesn't mean you should not provide any api at all  \n16:37\u00a0<vmassol>\u00a0ok could you plreoy to my mail?  \n16:37\u00a0<vmassol>\u00a0\\*reply  \n16:37\u00a0<vmassol>\u00a0I 'd like to progress and have a few +1 first  \n16:37\u00a0<vmassol>\u00a0since I'm stuck ATM  \n16:37\u00a0<Enygma`>\u00a0me too :)  \n16:38\u00a0<vmassol>\u00a0I mean I could add an epxlicit dep between anno and wiki module  \n16:38\u00a0<vmassol>\u00a0just because the anno module is using UI and thus is using thr drawer  \n16:38\u00a0<vmassol>\u00a0but that doesn't seem right  \n16:38\u00a0<vmassol>\u00a0I'd rather add that dep in the packager mojo  \n16:38\u00a0<vmassol>\u00a0but we need to agree that wiki modules are core  \n16:38\u00a0<vmassol>\u00a0hence the mail  \n16:39\u00a0<vmassol>\u00a0should be easy since you agreed here on irc :)  \n16:40\u00a0<vmassol>\u00a0btw xwiki-platform-wiki-default is already a dep of the packager plugin, just missing the SS  \n16:47\u00a0<tmortagne>\u00a0has joined #xwiki  \n17:02\u00a0<Denis1>\u00a0has quit  \n17:03\u00a0<Denis1>\u00a0has joined #xwiki  \n17:21\u00a0<vmassol>\u00a0so where do we stand on the release?  \n17:21\u00a0<vmassol>\u00a0mflorea: ?  \n17:21\u00a0<vmassol>\u00a0(you're the RM!)  \n17:21\u00a0<vmassol>\u00a0:)  \n17:21\u00a0<vmassol>\u00a0should be done in 30mn on my side  \n17:22\u00a0<vmassol>\u00a0(for the anno regression)  \n17:23\u00a0<mflorea>\u00a0vmassol: I'm fixing tests, but CI doesn't look good atm  \n17:24\u00a0<vmassol>\u00a0I'm more talking about ensuring that everyeone helps and the coordination effort to ensure we can release asap  \n17:24\u00a0<vmassol>\u00a0right now it seems today is going to be missed  \n17:25\u00a0<vmassol>\u00a0but what about tomorrow?  \n17:25\u00a0<vmassol>\u00a0do you think we could succeed tomorrow?  \n17:25\u00a0<vmassol>\u00a0we need to move the open issues too I think  \n17:28\u00a0<mflorea>\u00a0vmassol: I can't tell how long it will take to fix the failing tests. I've fixed a few and I'm investigating the others. I know Enygma` is handling the failure related to the create page changes and you are looking at the annotation failures. tmortagne is not available afaiu. gdelhumeau what are you working on?  \n17:28\u00a0<Chuguniy>\u00a0has joined #xwiki  \n17:28\u00a0<vmassol>\u00a0do we know how many are remaining overall and do we have a plan for devs to look at them?  \n17:29\u00a0<vmassol>\u00a0thomas should be here tomorrow btw  \n17:29\u00a0<vmassol>\u00a0he was just off today  \n17:29\u00a0<vmassol>\u00a0guys could you please vote on the wiki module thing?  \n17:29\u00a0<vmassol>\u00a0I'm almost ready to commit  \n17:30\u00a0<vmassol>\u00a0but I'd like some votes before I do so  \n17:32\u00a0<mflorea>\u00a0enterprise-test-selenium and enteprise-test-wysiwyg should be fine now. enteprise-test-escaping is related to annotation so I guess it will be fine after you commit. enteprise-test-ui has one failing test related to annotations. Maybe you can take a look at that too? The rest are related to copy (fixed by me) and create (going to be fixed by edy).  \n17:32\u00a0<KermitTheFragger>\u00a0has quit  \n17:32\u00a0<mflorea>\u00a0I'm currently looking at the storage tests  \n17:33\u00a0<mflorea>\u00a0edy is fixing the platform tests related to create page UI  \n17:33\u00a0<vmassol>\u00a0yes re -ui I'm on it  \n17:33\u00a0<vmassol>\u00a0I'm moving that test to platform and fixing the issue  \n17:34\u00a0<mflorea>\u00a0great, thanks  \n17:37\u00a0<mflorea>\u00a0re storage tests, there seems to be a real issue. Document rollback doesn't work for instance. I'm debugging.  \n17:38\u00a0<vrachieru>\u00a0has quit  \n17:40\u00a0<vmassol>\u00a0ok  \n17:43\u00a0<vmassol>\u00a0hmm  \n17:43\u00a0<vmassol>\u00a0seems that we need a dep on the refactoring module now for deleting a page from a func tests  \n17:43\u00a0<vmassol>\u00a0I guess most func test fail to delete right now  \n17:43\u00a0<vmassol>\u00a0you just don't see it  \n17:44\u00a0<vmassol>\u00a0I didn\"t see it until I stepped with a debugger  \n17:44\u00a0<vmassol>\u00a0and you get a bit stack trace ending with: Caused by: org.xwiki.component.manager.ComponentLookupException: Can't find descriptor for the component [role = [interface org.xwiki.job.Job] hint = [delete]]  \n17:44\u00a0<vmassol>\u00a0and that's the refactoring module missing  \n17:45\u00a0<vmassol>\u00a0so it seems this module is also core now\u2026.  \n17:45\u00a0<gdelhumeau>\u00a0the refactoring module is used by oldcore already  \n17:45\u00a0<vmassol>\u00a0(which is not logical, so I'm going to create a jira issue for not making it core)  \n17:45\u00a0<vmassol>\u00a0and for now I'm going to add it to the packager mojo  \n17:45\u00a0<gdelhumeau>\u00a0every action like rename/delete is done by the refactoring module  \n17:45\u00a0<vmassol>\u00a0I know gdelhumeau  \n17:45\u00a0<vmassol>\u00a0it still isn't correct IMO  \n17:46\u00a0<vmassol>\u00a0we discussed it here  \n17:46\u00a0<vmassol>\u00a0I don't know if you were here  \n17:46\u00a0<vmassol>\u00a0but I don't remember our conclusions, mflorea do you remember?  \n17:46\u00a0<gdelhumeau>\u00a0looking at the irc archive  \n17:47\u00a0<gdelhumeau>\u00a0I see you have talked about adding a progress bar to the rename action  \n17:47\u00a0<gdelhumeau>\u00a0I was about asking the question  \n17:48\u00a0<mflorea>\u00a0vmassol: I don't remember the conclusion, but I don't think we agree on something  \n17:48\u00a0<tmortagne>\u00a0has quit  \n17:49\u00a0<vmassol>\u00a0ok sending a mail then instead of jirz  \n17:51\u00a0<mflorea>\u00a0has quit  \n17:55\u00a0<vmassol>\u00a0sent  \n18:05\u00a0<vmassol>\u00a0FYI added refacotring to packagemojo locally  \n18:05\u00a0<vmassol>\u00a0will commit once the anno tests are passing  \n18:06\u00a0<vmassol>\u00a0actually I'll commit now  \n18:08\u00a0<vmassol>\u00a0hmmmm  \n18:08\u00a0<vmassol>\u00a0mf   \n18:08\u00a0<vmassol>\u00a0ah marius left  \n18:09\u00a0<vmassol>\u00a0I think we have a problem with TestUtil.deletePage() now  \n18:09\u00a0<vmassol>\u00a0since delete uses an async job  \n18:09\u00a0<vmassol>\u00a0deletePage is now async and that's bad  \n18:09\u00a0<vmassol>\u00a0while we could use a wait  \n18:09\u00a0<vmassol>\u00a0I think it would be better to have a query string param to make it synchronous instead  \n18:11\u00a0<vmassol>\u00a0reopened http://jira.xwiki.org/browse/XWIKI-12388# with a comment  \n18:33\u00a0<woshilapin>\u00a0has quit  \n18:33\u00a0<vmassol>\u00a0one more issue....  \n18:33\u00a0<vmassol>\u00a0geez so many errors  \n18:33\u00a0<vmassol>\u00a0I'm not progressing  \n18:34\u00a0<vmassol>\u00a0I know hte problem  \n18:36\u00a0<abusenius\\_>\u00a0has joined #xwiki  \n18:40\u00a0<vmassol>\u00a0hmm I'm a bit stuck actually  \n18:40\u00a0<vmassol>\u00a0:)  \n18:40\u00a0<vmassol>\u00a0still trying to move the annotation tests to platform but the issue now is that there's a test using xwiki syntax &.0  \n18:40\u00a0<vmassol>\u00a01.0  \n18:40\u00a0<vmassol>\u00a0and $xwiki.renderText() has been moved to legacy  \n18:43\u00a0<vmassol>\u00a0so I need a way to exclude oldcore  \n18:43\u00a0<vmassol>\u00a0ok I know  \n18:48\u00a0<evalica>\u00a0has quit  \n18:50\u00a0<Enygma`>\u00a0has quit  \n18:50\u00a0<Denis1>\u00a0has quit  \n19:30\u00a0<woshilapin>\u00a0has joined #xwiki  \n19:43\u00a0<gdelhumeau>\u00a0has quit  \n20:06\u00a0<ClemensR>\u00a0has quit  \n20:54\u00a0<MasterPiece>\u00a0has joined #xwiki  \n21:00\u00a0<MasterPiece>\u00a0has quit  \n21:04\u00a0<Ramona1>\u00a0has joined #xwiki  \n21:07\u00a0<Slashman>\u00a0has quit  \n21:08\u00a0<Ramona1>\u00a0has quit  \n21:10\u00a0<Chuguniy>\u00a0has quit  \n22:21\u00a0<woshilapin>\u00a0has quit  \n22:22\u00a0<woshilapin>\u00a0has joined #xwiki  \n22:28\u00a0<woshilapin>\u00a0has quit  \n22:30\u00a0<woshilapin>\u00a0has joined #xwiki  \n22:53\u00a0<Chuguniy>\u00a0has joined #xwiki  \n23:21\u00a0<rrodriguez>\u00a0has joined #xwiki  \n23:24\u00a0<Denis1>\u00a0has joined #xwiki  \n23:24\u00a0<rrodriguez>\u00a0has quit  \n23:25\u00a0<rrodriguez>\u00a0has joined #xwiki  \n23:45\u00a0<vmassol>\u00a0has quit  \n23:49\u00a0<Chuguniy>\u00a0has quit  \n23:56\u00a0<woshilapin>\u00a0has quit\n"}