{"id": "dev:IRC.xwikiArchive20110722", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110722", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:29\u00a0<Dan18>\u00a0has quit  \n00:56\u00a0<lucaa>\u00a0has quit  \n01:27\u00a0<abusenius>\u00a0has quit  \n02:14\u00a0<npm>\u00a0has quit  \n02:26\u00a0<npm>\u00a0has joined #xwiki  \n02:32\u00a0<npm>\u00a0has quit  \n02:44\u00a0<npm>\u00a0has joined #xwiki  \n03:13\u00a0<npm>\u00a0has quit  \n03:27\u00a0<npm>\u00a0has joined #xwiki  \n03:30\u00a0<npm>\u00a0has quit  \n03:30\u00a0<npm>\u00a0has joined #xwiki  \n03:33\u00a0<sdumitriu>\u00a0has quit  \n04:08\u00a0<DrLou>\u00a0has quit  \n06:41\u00a0<mflorea>\u00a0has joined #xwiki  \n08:01\u00a0<vmassol>\u00a0has joined #xwiki  \n08:03\u00a0<vmassol>\u00a0has quit  \n08:18\u00a0<lucaa>\u00a0has joined #xwiki  \n08:22\u00a0<lucaa>\u00a0has quit  \n08:47\u00a0<Dan18>\u00a0has joined #xwiki  \n08:47\u00a0<Dan18>\u00a0Hi  \n08:48\u00a0<Dan18>\u00a0where can i add a feature request for the annotation functionality?  \n08:49\u00a0<arkub>\u00a0has joined #xwiki  \n08:54\u00a0<Dan18>\u00a0It would be useful to be able to set the annotation color to indicate different types of annotations.  \n09:17\u00a0<vmassol>\u00a0has joined #xwiki  \n09:18\u00a0<vmassol>\u00a0good morning  \n09:56\u00a0<Dan18>\u00a0hi  \n10:02\u00a0<sburjan`>\u00a0has quit  \n10:03\u00a0<sburjan`>\u00a0has joined #xwiki  \n10:12\u00a0<Dan18>\u00a0has quit  \n10:15\u00a0<evalica>\u00a0has joined #xwiki  \n10:21\u00a0<vmassol>\u00a0snif\u2026. github integration with post hook don't work yet in jenkins: https://issues.jenkins-ci.org/browse/JENKINS-10405  \n10:21\u00a0<vmassol>\u00a0putting back the poll  \n10:29\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:38\u00a0<tmortagne>\u00a0has joined #xwiki  \n10:38\u00a0<tmortagne>\u00a0has quit  \n10:40\u00a0<Dan18>\u00a0has joined #xwiki  \n10:42\u00a0<Dan18>\u00a0Hi  \n10:43\u00a0<Dan18>\u00a0there are two mini projects i am considering, but wonder if i will have the time to do them  \n10:44\u00a0<Dan18>\u00a0i am thinking about adding color selection to annotation, so that annotations can be done in different colors  \n10:44\u00a0<Dan18>\u00a0if the annotation developer doesnt have the time or interest to do this  \n10:45\u00a0<Dan18>\u00a0and to integrate Gliffy into xWiki  \n10:53\u00a0<vmassol>\u00a0Dan18: sounds cool  \n10:53\u00a0<vmassol>\u00a0:)  \n10:53\u00a0<vmassol>\u00a0both would be awesome  \n10:55\u00a0<Dan18>\u00a0i hope to have a bit time to start looking into these early next week, but i guess i would need quite a bit of hand holding initially  \n10:56\u00a0<Dan18>\u00a0i still dont get to work quite simple wiki macro things  \n10:56\u00a0<Dan18>\u00a0so, i am still missing quite elementary items  \n10:58\u00a0<vmassol>\u00a0indeed that's supposed to be easy :)  \n10:59\u00a0<vmassol>\u00a0have you followed the tutorial?  \n10:59\u00a0<vmassol>\u00a0http://platform.xwiki.org/xwiki/bin/view/DevGuide/WikiMacroTutorial  \n11:01\u00a0<Dan18>\u00a0yes, i did a bit but some things just don't work for me, and i am not sure why  \n11:02\u00a0<Dan18>\u00a0for example i never got java script working that pulls the Gliffy diagram onto a page; now i am just using an image linked to a png  \n11:02\u00a0<Dan18>\u00a0\"hot\" generated by Gliffy  \n11:02\u00a0<Dan18>\u00a0although i finally did get the alert script to work as described in the tutorial  \n11:04\u00a0<vmassol>\u00a0works for me. You shoudl read the skin extension tutorial and use a jsx to register the js, using an on demand jsx.use  \n11:04\u00a0<@cjdelisle>\u00a0Good morning, I had an interesting thought: Why don't we start replacing our XWikiException with RuntimeException? We rairly catch XWikiException and almost never try to determine what it is and handle it accordingly, the most common usecase is served quite well by RuntimeException.  \n11:04\u00a0<vmassol>\u00a0cjdelisle: hi\u2026 bad idea but  \n11:04\u00a0<vmassol>\u00a0(we should never use runtime exception directly)  \n11:05\u00a0<vmassol>\u00a0I agree to get rid of XWikiException for a new XWikiException better designed  \n11:05\u00a0<Dan18>\u00a0i think i did do the jsx (creating a javaextension object) and trying to call it from a velocity script  \n11:05\u00a0<Dan18>\u00a0but it never was called  \n11:05\u00a0<@cjdelisle>\u00a0You say subclass Exception everywhere so it is easier to catch?  \n11:05\u00a0<vmassol>\u00a0using runtimeexception is really an antipattern, it's acutally caught and generate errors by several tools like findbugs  \n11:05\u00a0<Dan18>\u00a0there are i guess a few basic things i need to understand and can then run with those things  \n11:05\u00a0<@cjdelisle>\u00a0\\*or subclass RuntimeExecption  \n11:06\u00a0<vmassol>\u00a0yes  \n11:06\u00a0<vmassol>\u00a0depends  \n11:06\u00a0<vmassol>\u00a0ahah  \n11:06\u00a0<vmassol>\u00a0now it's the checked vs unchecked debate  \n11:06\u00a0<vmassol>\u00a0both have valid use cases  \n11:06\u00a0<Dan18>\u00a0btw is it possible to create an event handler for when an annotation object is created, changed or deleted?  \n11:06\u00a0<vmassol>\u00a0Dan18: yes  \n11:07\u00a0<@cjdelisle>\u00a0If we're going to catch them then checked makes lots of sense, most of the time though, we have no intent of handling them and we just never expect it to happen.  \n11:07\u00a0<vmassol>\u00a0cjdelisle: I'm not sure at all about the \"most of the time\". In any case we should decide on a case by case basis  \n11:07\u00a0<vmassol>\u00a0and have both types as XWiki exceptions  \n11:08\u00a0<@cjdelisle>\u00a0Also I don't see how throwing a generic XWikiException or the like is any different than throwing a generic Exception or RuntimeException  \n11:08\u00a0<Dan18>\u00a0i have this other project in mind but thats more long termed, to create some sort of extension to connect xwiki a deductive object database  \n11:08\u00a0<@cjdelisle>\u00a0It doesn't tell anyone what happened, just that something is wrong.  \n11:09\u00a0<vmassol>\u00a0cjdelisle: at least because you can differentiate them, extend them (without breaking apis)  \n11:09\u00a0<Dan18>\u00a0i see a good fit with the xwiki paradigm and the deductive object database in relation to its object-based architecture  \n11:09\u00a0<@cjdelisle>\u00a0You mean it tells you that something broke in XWiki code wheras Exception means something broke \"somewhere\"?  \n11:10\u00a0<vmassol>\u00a0that yes  \n11:10\u00a0<@cjdelisle>\u00a0Perhaps XWikiException should just be unchecked then  \n11:10\u00a0<vmassol>\u00a0I wouldn't touch teh existing one  \n11:10\u00a0<vmassol>\u00a0otherwise you're going to break everything  \n11:11\u00a0<vmassol>\u00a0instead I'd introduce new ones  \n11:11\u00a0<@cjdelisle>\u00a0This whole \"don't touch oldcore\" is :(  \n11:11\u00a0<@cjdelisle>\u00a0I mean yea that makes sense, but oldcore is weighing us down.  \n11:11\u00a0<vmassol>\u00a0in practice  \n11:11\u00a0<vmassol>\u00a0each module should have its own specific exceptions  \n11:12\u00a0<vmassol>\u00a0we've been doing that in new modules  \n11:12\u00a0<vmassol>\u00a0so it's all dandy for me re exceptions  \n11:12\u00a0<vmassol>\u00a0our goal is to slim down old core by writing new modules  \n11:12\u00a0<vmassol>\u00a0(and moving unused stuff from old core in xwiki-compatibility)  \n11:13\u00a0<@cjdelisle>\u00a0Yea but that only works when we actually start gutting the stuff from oldcore.  \n11:13\u00a0<vmassol>\u00a0(unused as in : unused by us)  \n11:13\u00a0<@cjdelisle>\u00a0Anyway.. different debate.  \n11:13\u00a0<vmassol>\u00a0personally my success will be when I/we succeed in moving rendering 1.0 outside of it  \n11:13\u00a0<vmassol>\u00a0that'll be a big chunk already  \n11:13\u00a0<vmassol>\u00a0I don't think we're far from this at all  \n11:14\u00a0<vmassol>\u00a0it's jsut that we've not worked on it too much lately  \n11:14\u00a0<@cjdelisle>\u00a0You mean for exceptions that you are expected to be catch and hande should be specific to each module right??  \n11:14\u00a0<vmassol>\u00a0yes  \n11:14\u00a0<vmassol>\u00a0they could extend a base common exception though  \n11:15\u00a0<vmassol>\u00a0(which we don't have right now - I'm not even sure it's needed)  \n11:15\u00a0<@cjdelisle>\u00a0It seems that we should still have an unchecked: \u00a0\u00a0ThisWillNeverHappenException  \n11:15\u00a0<vmassol>\u00a0well you can create a specific exception that extends runtimeexception  \n11:16\u00a0<vmassol>\u00a0but yes we could have a common one  \n11:16\u00a0<vmassol>\u00a0since it's not supposed to be caught  \n11:16\u00a0<@cjdelisle>\u00a0I find that most of the throwing that I do are cases where if it throws then you really want to just stop the request or perhaps even the server.  \n11:17\u00a0<@cjdelisle>\u00a0Like if the database isn't there, you are not really expected to try and recover...  \n11:17\u00a0<vmassol>\u00a0hmm that should not happen that often, it's a pretty critical kind of error  \n11:17\u00a0<Dan18>\u00a0ok, need to run  \n11:17\u00a0<vmassol>\u00a0if a db operation fails for ex, the server shouldn't stop  \n11:18\u00a0<Dan18>\u00a0speak to you guys later  \n11:18\u00a0<@cjdelisle>\u00a0Indeed, stopping the server is pretty dramatic, stopping the request is pretty common though  \n11:18\u00a0<vmassol>\u00a0if the db isn't there (that should be checked at init time) then yes I agree  \n11:18\u00a0<vmassol>\u00a0re DB , it can go away and reconnect a few ms later  \n11:18\u00a0<@cjdelisle>\u00a0or at least causing the velocity script that called it to blow up spectacularly  \n11:18\u00a0<vmassol>\u00a0in any case we need to improve our error handling of these kinds of error for the user  \n11:18\u00a0<vmassol>\u00a0there's even a jira for it  \n11:19\u00a0<vmassol>\u00a0that I created when joining the project  \n11:19\u00a0<@cjdelisle>\u00a0Ahh  \n11:19\u00a0<@cjdelisle>\u00a0Well, I just mentoned it because for all my cassandra stuff I'm just throwing RuntimeException because I don't expect the error to be recoverable. I can just go back later and swap them out for an ItBrokeException  \n11:20\u00a0<vmassol>\u00a0http://jira.xwiki.org/jira/browse/XWIKI-412ok  \n11:20\u00a0<vmassol>\u00a0that's one but not the one I was looking for  \n11:20\u00a0<vmassol>\u00a0(maybe I dreamed it ;))  \n11:21\u00a0<@cjdelisle>\u00a0ThisWillNeverHappenException has a nice ring to it  \n11:21\u00a0<vmassol>\u00a0ok 3 failing ui tests when runnning AllTests locally this morning  \n11:21\u00a0<vmassol>\u00a0(in sel 2.1)  \n11:22\u00a0<vmassol>\u00a0ah cool  \n11:22\u00a0<vmassol>\u00a0I have the exact same error as the ones showin up on ci  \n11:22\u00a0<vmassol>\u00a0http://ci.xwiki.org/job/xwiki-enterprise-tests/org.xwiki.enterprise$xwiki-enterprise-test-ui/843/testReport/  \n11:22\u00a0<vmassol>\u00a0so I can look at them  \n11:22\u00a0<vmassol>\u00a0btw I think I fixed the hang up in tests  \n11:22\u00a0<Dan18>\u00a0has quit  \n11:23\u00a0<vmassol>\u00a0looking at http://ci.xwiki.org/job/xwiki-enterprise-tests/org.xwiki.enterprise$xwiki-enterprise-test-ui/843/testReport/org.xwiki.test.ui.administration/ImportTest/testImportWithNewHistoryVersion/\u00a0 now  \n11:25\u00a0<abusenius>\u00a0has joined #xwiki  \n11:28\u00a0<vmassol>\u00a0hmmm seems we might have some real error: http://ci.xwiki.org/job/xwiki-enterprise-tests/org.xwiki.enterprise$xwiki-enterprise-test-ui/843/testReport/org.xwiki.test.ui.administration/ImportTest/testImportWithNewHistoryVersion/  \n11:28\u00a0<vmassol>\u00a0(check the console output)  \n11:29\u00a0<vmassol>\u00a0deleting the attachemnt failed with an error  \n11:29\u00a0<vmassol>\u00a0I've noticed it locally too  \n11:29\u00a0<vmassol>\u00a0I wonder if we've changed something recently in this area (storage)  \n11:31\u00a0<@cjdelisle>\u00a0That \"failed to commit or rollback\" is near some really odd code which I think is wrong, we can ask sdumitriu later.  \n11:34\u00a0<vmassol>\u00a0maybe but I don't recall seeing it appear in these tests so often before  \n11:36\u00a0<vmassol>\u00a0fun screenshot for the default anno test failing: http://ci.xwiki.org/job/xwiki-enterprise-tests/ws/xwiki-enterprise-test/xwiki-enterprise-test-ui/target/screenshots/AnnotationsTest-defaultAnnotationsTest.png  \n11:37\u00a0<+sburjan`>\u00a0cannot see it :(  \n11:38\u00a0<vmassol>\u00a0sburjan`: what's fialing apparenrelt is this line: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0waitUntilElementDisappears(By.className(\"annotation-box-view\"));  \n11:38\u00a0<vmassol>\u00a0and the screenshot show it's still displayed  \n11:39\u00a0<+sburjan`>\u00a0it seems I need an account to see it  \n11:39\u00a0<vmassol>\u00a0maybe yes  \n11:40\u00a0<vmassol>\u00a0just create one  \n11:40\u00a0<+sburjan`>\u00a0so it was my test written badly, or it just happens ?  \n11:40\u00a0<Enygma`>\u00a0has quit  \n11:40\u00a0<vmassol>\u00a0if I knew I'd have fixed it already  \n11:40\u00a0<vmassol>\u00a0:)  \n11:40\u00a0<Enygma`>\u00a0has joined #xwiki  \n11:40\u00a0<vmassol>\u00a0the error needs ot be analyzed first  \n11:41\u00a0<+sburjan`>\u00a0looking very forward to attend at your tpresentation about tests :D  \n11:41\u00a0<vmassol>\u00a0I didn't know that hitting escape on the body will remove the annotation box  \n11:41\u00a0<vmassol>\u00a0going to try that locally  \n11:41\u00a0<+sburjan`>\u00a0yes, will remove it. Sergiu told me that too  \n11:41\u00a0<@cjdelisle>\u00a0One thing that's noticable about xwiki/cassandra is it is blisteringly fast. That laggy \"where's the page\" feeling is completely gone.  \n11:42\u00a0<vmassol>\u00a0sburjan`: I don't understand what the escape does  \n11:42\u00a0<vmassol>\u00a0I've just tried adding an annotation  \n11:42\u00a0<vmassol>\u00a0and when you save the box dispapears  \n11:42\u00a0<vmassol>\u00a0I don't understand the need for escape  \n11:42\u00a0<@cjdelisle>\u00a0ofc it was written by someone who would do everything in C if given a chance :)  \n11:42\u00a0<+sburjan`>\u00a0sergiu told me that it will make the test run faster  \n11:43\u00a0<vmassol>\u00a0cjdelisle: sounds good (the speed, not the C)  \n11:43\u00a0<vmassol>\u00a0:)  \n11:43\u00a0<vmassol>\u00a0\"One thing that's noticable about xwiki/cassandra is it is blisteringly fast. That laggy \"where's the page\" feeling is completely gone.\". with the same number of requests hitting the DB?  \n11:44\u00a0<vmassol>\u00a0(because that's our main issue with RDBMS currently, we send tons of requests to the DB for a single page view)  \n11:44\u00a0<abusenius>\u00a0has quit  \n11:45\u00a0<@cjdelisle>\u00a0yea, I riged it up so getDocument() --> one hit  \n11:45\u00a0<@cjdelisle>\u00a0\\*rigged  \n11:45\u00a0<@cjdelisle>\u00a0hmm still no permissions stuff yet  \n11:45\u00a0<@cjdelisle>\u00a0and it's not one hit with a bunch of joins either, cassandra throws all that stuff in one table.  \n11:46\u00a0<@cjdelisle>\u00a0pb right now though is the objects are still serialized, I have to make them part of the document table.  \n11:46\u00a0<vmassol>\u00a0I don't think you'll see any difference with a single user hittinf the DB  \n11:46\u00a0<vmassol>\u00a0(between hibernate and cassandra)  \n11:46\u00a0<vmassol>\u00a0we're talking < 30-40ms  \n11:47\u00a0<vmassol>\u00a0(unless you're talking about a heavy page with hundreds of objects ;))  \n11:47\u00a0<@cjdelisle>\u00a0idk, it just feels a lot faster.  \n11:48\u00a0<vmassol>\u00a0yes but if you remove all UI and do a ?xpage=plain it's very fast too  \n11:48\u00a0<@cjdelisle>\u00a0I checked it with pagespeed and with that open it feels slow, it's probably seighing down my FF process.  \n11:48\u00a0<vmassol>\u00a0(with hibernate)  \n11:48\u00a0<vmassol>\u00a0the wieght down is caused by the 20-100 requests sent to the DB for a global page view  \n11:49\u00a0<vmassol>\u00a0unless you're comparing the same thing with cassandra  \n11:49\u00a0<vmassol>\u00a0anyway :)  \n11:49\u00a0<vmassol>\u00a0it's good to know it looks good!  \n11:49\u00a0<vmassol>\u00a0I'm eager to see it  \n11:49\u00a0<@cjdelisle>\u00a0Yea, I was a bit worried, you can do a lot of math but until it starts you don't know.  \n11:50\u00a0<@cjdelisle>\u00a0todo get a vps so I can show it off  \n12:58\u00a0<Denis>\u00a0has quit  \n13:20\u00a0<abusenius>\u00a0has joined #xwiki  \n13:37\u00a0<abusenius>\u00a0has quit  \n13:46\u00a0<DrLou>\u00a0has joined #xwiki  \n13:52\u00a0<xelister>\u00a0has joined #xwiki  \n13:54\u00a0<xelister>\u00a0yo  \n13:54\u00a0<xelister>\u00a0how good is xwiki? :P  \n13:55\u00a0<@cjdelisle>\u00a0It works  \n13:55\u00a0<+evalica>\u00a0:)  \n13:56\u00a0<@cjdelisle>\u00a0It's popular with businesses who use it to help teams collaborate better, or so I understand :)  \n13:56\u00a0<xelister>\u00a0cjdelisle: you guys looking for btc donations? ehheh =)  \n13:57\u00a0<+evalica>\u00a0we're looking for commiters :)  \n13:57\u00a0<xelister>\u00a03000 EUR for support... well I see its enterprise oriented  \n13:57\u00a0<xelister>\u00a0so it is a java application like freenet, or it runs via some tomcat or how it integrates with LAMP server?  \n13:57\u00a0<@cjdelisle>\u00a0yea but minus the P since it's not PHP  \n13:58\u00a0<xelister>\u00a0it cas easly use postgre as db?  \n13:58\u00a0<@cjdelisle>\u00a0That's what I use on my desktop dev setup.  \n14:00\u00a0<@cjdelisle>\u00a0(we kind of know eachother since I've been putsing around chatting in bitcoin channels when I'm supposed to be working...)  \n14:01\u00a0<xelister>\u00a0yea what ever happened with my platinium membership support plan anyway  \n14:01\u00a0<@cjdelisle>\u00a0heh  \n14:01\u00a0<xelister>\u00a0<cjdelisle> woo I'm selling xwiki.com platinium support for 50 BTC  \n14:01\u00a0<xelister>\u00a0<xelister> deal! sent  \n14:03\u00a0<@cjdelisle>\u00a0If you use java web stuff, you might find some of our code useful, a lot of people like using our rendering engine.  \n14:03\u00a0<@cjdelisle>\u00a0I myself have written some pretty neat transactional database stuff.  \n14:03\u00a0<xelister>\u00a0so, xwiki is an application? does it need any servers other then db (say pgsql)? like apache or tomcat?  \n14:04\u00a0<@cjdelisle>\u00a0Yea, it usually runs on tomcat but there's a light \"evaluation\" version that comes bundled with jetty and hsql database.  \n14:04\u00a0<xelister>\u00a0how to make xwiki listen on port say 8001? and perhaps on vhost like test1.foo.l  \n14:04\u00a0<xelister>\u00a0that vhosty stuff is setted up in tomcat not in xwiki?  \n14:04\u00a0<@cjdelisle>\u00a0That's mostly tomcat stuff at that end.  \n14:05\u00a0<lucaa>\u00a0has joined #xwiki  \n14:07\u00a0<lucaa>\u00a0has quit  \n14:07\u00a0<xelister>\u00a0neato  \n14:08\u00a0<@cjdelisle>\u00a0Probably the best thing I can say about it is you can define your own class (it's actually a structure) in a wiki page, you can then add \"objects\" to other wiki pages which are objects of that class.  \n14:09\u00a0<@cjdelisle>\u00a0Like we don't have a database table for users, each user is represented as a document containing an object of the class XWikiUsers.  \n14:11\u00a0<abusenius>\u00a0has joined #xwiki  \n14:27\u00a0<xelister>\u00a0hm  \n14:27\u00a0<xelister>\u00a0isn't it makeing managment more complicated  \n14:27\u00a0<xelister>\u00a0e.g. I cant have simple sql then to edit or search users  \n14:28\u00a0<@cjdelisle>\u00a0You can query using hibernate which is pretty horrible.  \n14:28\u00a0<@cjdelisle>\u00a0We also have our own query langage which is a slightly modified version of JPA.  \n14:30\u00a0<@cjdelisle>\u00a0So you could query for a user like: \u00a0\"select doc.fullName from XWikiDocument as doc, doc.object(XWiki.XWikiUsers) as obj where obj.first\\_name = 'Caleb'\"  \n14:33\u00a0<xelister>\u00a0hm  \n14:33\u00a0<xelister>\u00a0well sounds enterprisy I guess =)  \n14:33\u00a0<@cjdelisle>\u00a0The equivilent hibernate query (we use hibernate as an ORM) would be \u00a0\"select doc.fullName from XWikiDocument as doc, BaseObject as obj, StringProperty as prop where prop.name = 'first\\_name' and prop.value = 'Caleb' and prop.id = obj.id and obj.name = doc.fullName\"  \n14:35\u00a0<@cjdelisle>\u00a0I am working on porting storage over to nosql (cassandra) and since cassandra allows the addition of arbitrary columns, we will be able to stop joining all of that.  \n14:43\u00a0<xelister>\u00a0neat  \n15:17\u00a0<Enygma`>\u00a0has quit  \n15:21\u00a0<Enygma`>\u00a0has joined #xwiki  \n16:09\u00a0<vmassol>\u00a0sburjan`: trying to fix the escape key not working in anno test  \n16:10\u00a0<vmassol>\u00a0I'm wondering what's the best way to handle all this\u2026. it's not easy  \n16:10\u00a0<vmassol>\u00a0one solution would be to not display the annotation and instead to go in object mode to check if the anno is there but it would reduce the scope of the test  \n16:11\u00a0<vmassol>\u00a0in other words it's good that the test proves that hovering over the annotation displays it  \n16:12\u00a0<vmassol>\u00a0AFAIU the anno box is dismissed when the mouse moves out of the box  \n16:13\u00a0<vmassol>\u00a0escape also works manually  \n16:14\u00a0<vmassol>\u00a0I guess we're doing it on the wrong element in the test  \n16:14\u00a0<vmassol>\u00a0any idea?  \n16:23\u00a0<+sburjan`>\u00a0we could try to remove the escape key and see how it works (by escap key i reffer to press esc so the notification window disappears)  \n16:23\u00a0<vmassol>\u00a0it doesn't work  \n16:23\u00a0<vmassol>\u00a0there are several boxes displayed  \n16:24\u00a0<vmassol>\u00a0unless we refresh the page but it's not a good solution imo  \n16:25\u00a0<+sburjan`>\u00a0afaik also clicking the notification window will make it disappear  \n16:25\u00a0<+sburjan`>\u00a0i mean on the bottom notification  \n16:26\u00a0<vmassol>\u00a0bottom?  \n16:26\u00a0<vmassol>\u00a0IMO the best is to move the mouse out of the box  \n16:26\u00a0<vmassol>\u00a0as a user would do  \n16:26\u00a0<vmassol>\u00a0since this is what we are testing  \n16:26\u00a0<+sburjan`>\u00a0you're having problems with the confirmation notification, right ?  \n16:27\u00a0<+sburjan`>\u00a0I don't think I know what the problem is  \n16:28\u00a0<vmassol>\u00a0no  \n16:29\u00a0<vmassol>\u00a0in your code  \n16:29\u00a0<vmassol>\u00a0when you add an annotation you also go on it and get its content  \n16:29\u00a0<+sburjan`>\u00a0yes, when asserting  \n16:30\u00a0<vmassol>\u00a0what's not working is how to \"remove\" the box  \n16:30\u00a0<+sburjan`>\u00a0Assert.assertEquals(annotationText, annotationsLabel.getAnnotationContentByText(annotatedText));  \n16:31\u00a0<+sburjan`>\u00a0I guess you're saying about this linke  \n16:31\u00a0<+sburjan`>\u00a0line  \n16:31\u00a0<vmassol>\u00a0yes but more precisely the problem is in annotationsLabel.getAnnotationContentByText  \n16:32\u00a0<+sburjan`>\u00a0so body.sendKeys(Keys.ESCAPE); doesn not work properly  \n16:33\u00a0<+sburjan`>\u00a0the escape does not work  \n16:33\u00a0<+sburjan`>\u00a0odd, this didn't failed before  \n16:34\u00a0<vmassol>\u00a0I think the behavior changed in 2.0 final or 2.1  \n16:34\u00a0<+sburjan`>\u00a0behavior in SE or in XE ?  \n16:34\u00a0<vmassol>\u00a0SE  \n16:35\u00a0<+sburjan`>\u00a0is 2.1 already out ?  \n16:35\u00a0<vmassol>\u00a0or maybe not  \n16:35\u00a0<+sburjan`>\u00a0thinking in the meantime  \n16:35\u00a0<vmassol>\u00a0I've seen it flicker before  \n16:35\u00a0<vmassol>\u00a0now the difference  \n16:35\u00a0<vmassol>\u00a0is that it doesn't flicker anymore  \n16:35\u00a0<vmassol>\u00a0it's always not working :)  \n16:35\u00a0<vmassol>\u00a02.1 is out and we're already using it  \n16:36\u00a0<+sburjan`>\u00a0wow, they moved fast  \n16:36\u00a0<vmassol>\u00a0we moved fast too ;)  \n16:37\u00a0<+sburjan`>\u00a0true  \n16:37\u00a0<+sburjan`>\u00a0and mot many tests failing  \n16:37\u00a0<vmassol>\u00a0that's becuase I was careful  \n16:37\u00a0<vmassol>\u00a0I fixed several before pushing  \n16:38\u00a0<vmassol>\u00a0ok I think I know how to fix this  \n16:38\u00a0<vmassol>\u00a0tryinh  \n16:39\u00a0<+sburjan`>\u00a0we wither click another region on the page so that window disapprars  \n16:39\u00a0<+sburjan`>\u00a0or check the bottom tab  \n16:39\u00a0<+sburjan`>\u00a0\\*either  \n16:39\u00a0<vmassol>\u00a0that won't work  \n16:40\u00a0<vmassol>\u00a0btw this is bad:  \n16:40\u00a0<vmassol>\u00a0getDriver().findElement(By.xpath(\"//span[@id='\" + classId + \"']\"))  \n16:40\u00a0<vmassol>\u00a0you can simply use:  \n16:40\u00a0<vmassol>\u00a0findElement(By.id(\"classId\"))  \n16:41\u00a0<+sburjan`>\u00a0yes.. my bad. test is very old and I didn't knew too many things by then  \n16:41\u00a0<+sburjan`>\u00a0:)  \n16:42\u00a0<+sburjan`>\u00a0not now I'm god at it  \n16:42\u00a0<mflorea>\u00a0has quit  \n16:50\u00a0<+sburjan`>\u00a0sometimes I think we should add more unit tests instead of UI  \n16:50\u00a0<vmassol>\u00a0they have completely different purpose  \n16:51\u00a0<vmassol>\u00a0(but yes some of our functional tests need to be moved as unit tests, although that's not the case here)  \n16:52\u00a0<finbrein>\u00a0has joined #xwiki  \n16:55\u00a0<+sburjan`>\u00a0i know they are completely difernt. but sometimes is so hard to write good and stable ui tests :)  \n16:56\u00a0<vmassol>\u00a0when is hard stopping us? :)  \n16:56\u00a0<vmassol>\u00a0(if that were the case we wouldn't write software at all since it's hard! ;))  \n16:56\u00a0<vmassol>\u00a0more seriously  \n16:56\u00a0<vmassol>\u00a0we need functional as they're the only way to verify stuff works  \n16:57\u00a0<vmassol>\u00a0but not everything should be tested using functional tests  \n16:57\u00a0<vmassol>\u00a0because we live in an imperfect world and func tests take time  \n16:58\u00a0<vmassol>\u00a0I almost have it working btw  \n16:58\u00a0<vmassol>\u00a0btw why do you delete the first anno by id and the rest by text?  \n16:58\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0deleteAnnotationByID(\"ID0\");  \n16:58\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0deleteAnnotationByText(ANNOTATED\\_TEXT\\_2);  \n16:58\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0deleteAnnotationByText(ANNOTATED\\_TEXT\\_3);  \n16:58\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0deleteAnnotationByText(ANNOTATED\\_TEXT\\_4);  \n17:00\u00a0<+sburjan`>\u00a0bacause i created 2 methids, one which deletes by ID and other by text.. bascially I wanted to provide 2 methods  \n17:00\u00a0<vmassol>\u00a0why?  \n17:00\u00a0<vmassol>\u00a0you only need one for your test  \n17:00\u00a0<+sburjan`>\u00a0yes, but maybe in future we'll have a test case that needs them (I wrote them for the API)  \n17:01\u00a0<vmassol>\u00a0maybe in the future pigs will fly too :)  \n17:01\u00a0<vmassol>\u00a0YAGNI principle  \n17:01\u00a0<vmassol>\u00a0it's very disturbing in the test itself  \n17:01\u00a0<vmassol>\u00a0that you use several methods  \n17:02\u00a0<vmassol>\u00a0and without any explanation  \n17:02\u00a0<vmassol>\u00a0the reader cannot not ask himself why  \n17:02\u00a0<vmassol>\u00a0and it seems there's no good reason  \n17:04\u00a0<+sburjan`>\u00a0so it's bad because we have 2 methods of accomplishing this, or it's bad because I use both methods in my test ?  \n17:04\u00a0<vmassol>\u00a0the test part is the worse one  \n17:04\u00a0<vmassol>\u00a0the other one is not necessary but not that bad  \n17:05\u00a0<+sburjan`>\u00a0so we'l re gonna keep only one in the API or you're gonna leave them both there ?  \n17:05\u00a0<vmassol>\u00a0I'm fixing it  \n17:06\u00a0<vmassol>\u00a0I'm keeping both apis for now but removing the \"what the f\u2026ck\" when reading the test ;)  \n17:06\u00a0<vmassol>\u00a0s/\"what the f\u2026cl\"/\"what the f\u2026ck\" moment/  \n17:06\u00a0<vmassol>\u00a0actually even the api isn't really needed  \n17:07\u00a0<vmassol>\u00a0since there's a way to get the id from the text  \n17:09\u00a0<+sburjan`>\u00a0thue. I never know in what details should I get into when implementing the API  \n17:10\u00a0<+sburjan`>\u00a0I mean how deep in making API methods. one line method, or just to combine them in tests to get the neweded functionality, etc  \n17:10\u00a0<+sburjan`>\u00a0this is why I need the trainig :D  \n17:13\u00a0<vmassol>\u00a0yes but that one is more API ceration in general  \n17:13\u00a0<vmassol>\u00a0a difficult topic that we're all learning  \n17:15\u00a0<finbrein>\u00a0has quit  \n17:17\u00a0<+sburjan`>\u00a0tell me when you commit so I can take a look at the code  \n17:18\u00a0<vmassol>\u00a0I'm now having a problem when deleting annos  \n17:18\u00a0<vmassol>\u00a0ok  \n17:24\u00a0<vmassol>\u00a0I'm now stuck here:  \n17:24\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0public void deleteAnnotationById(String annotationId)  \n17:24\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0{  \n17:24\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0showAnnotationById(annotationId);  \n17:24\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0this.deleteAnnotation.click();  \n17:24\u00a0<vmassol>\u00a0the click is failing because the element is not visible (so it says)  \n17:24\u00a0<vmassol>\u00a0but I see it visible....  \n17:24\u00a0<vmassol>\u00a0wondering what's wrong  \n17:26\u00a0<vmassol>\u00a0hmmm maybe an idea\u2026. testing  \n17:30\u00a0<+sburjan`>\u00a0these workes for sure in the past  \n17:30\u00a0<+sburjan`>\u00a0\\*worked  \n17:31\u00a0<vmassol>\u00a0I know but I changed something  \n17:31\u00a0<vmassol>\u00a0basically I did one change  \n17:31\u00a0<vmassol>\u00a0which was to replace the click by a mouse move when displaying an annotation  \n17:31\u00a0<vmassol>\u00a0in order to have the mouse inside the box  \n17:31\u00a0<vmassol>\u00a0so that moving out or pressing esc work  \n17:32\u00a0<vmassol>\u00a0this part is working now  \n17:32\u00a0<vmassol>\u00a0but my guess is that calling click will for some reason move the mouse and make the box disappear  \n17:32\u00a0<vmassol>\u00a0I'm now trying with an Action  \n17:32\u00a0<vmassol>\u00a0(interaction api)  \n17:39\u00a0<+sburjan`>\u00a0btw, do we still have the js code to drag mouse over text ?  \n17:42\u00a0<vmassol>\u00a0prbably but we can remove it since the interaction api now seems to work  \n17:42\u00a0<finbrein>\u00a0has joined #xwiki  \n17:42\u00a0<vmassol>\u00a0(it wasn't last time I tried)  \n17:47\u00a0<vmassol>\u00a0has quit  \n17:54\u00a0<arkub>\u00a0has quit  \n18:16\u00a0<evalica>\u00a0has quit  \n18:17\u00a0<Enygma`>\u00a0has quit  \n18:54\u00a0<evalica>\u00a0has joined #xwiki  \n19:03\u00a0<abusenius>\u00a0has quit  \n19:45\u00a0<finbrein>\u00a0has quit  \n20:06\u00a0<vmassol>\u00a0has joined #xwiki  \n20:07\u00a0<finbrein>\u00a0has joined #xwiki  \n20:09\u00a0<xelister>\u00a0has quit  \n20:09\u00a0<vmassol>\u00a0has quit  \n22:10\u00a0<mflorea>\u00a0has joined #xwiki  \n22:19\u00a0<mflorea>\u00a0has quit  \n22:55\u00a0<vmassol>\u00a0has joined #xwiki  \n23:15\u00a0<vmassol>\u00a0has quit  \n23:36\u00a0<abusenius>\u00a0has joined #xwiki  \n\n"}