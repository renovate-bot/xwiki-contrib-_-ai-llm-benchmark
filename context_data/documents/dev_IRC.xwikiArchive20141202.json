{"id": "dev:IRC.xwikiArchive20141202", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20141202", "title": "IRC Archive for channel #xwiki on 02 December 2014 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<momomomomo>\u00a0has joined #xwiki  \n00:16\u00a0<Lyes>\u00a0has quit  \n02:18\u00a0<momomomomo>\u00a0has quit  \n02:34\u00a0<Slashman>\u00a0has quit  \n04:25\u00a0<DeadS0ul>\u00a0has joined #xwiki  \n04:25\u00a0<DeadS0ul>\u00a0!nick  \n04:28\u00a0<DeadS0ul>\u00a0is now known as <spawn57>  \n04:42\u00a0<spawn57>\u00a0hi, is it possible for a global users to be allowed to some wikis and not others?  \n04:42\u00a0<spawn57>\u00a0some subwikis and not others even  \n06:00\u00a0<Denis1>\u00a0has joined #xwiki  \n06:03\u00a0<Denis>\u00a0has quit  \n07:33\u00a0<msmeria>\u00a0has joined #xwiki  \n08:11\u00a0<cjd>\u00a0has quit  \n08:28\u00a0<vmassol>\u00a0has joined #xwiki  \n08:30\u00a0<vmassol>\u00a0has quit  \n08:56\u00a0<Denis>\u00a0has joined #xwiki  \n08:59\u00a0<Denis1>\u00a0has quit  \n09:10\u00a0<woshilapin>\u00a0has joined #xwiki  \n09:13\u00a0<cjd>\u00a0has joined #xwiki  \n09:24\u00a0<Denis1>\u00a0has joined #xwiki  \n09:25\u00a0<Denis>\u00a0has quit  \n09:39\u00a0<mflorea>\u00a0has joined #xwiki  \n09:41\u00a0<Lyes>\u00a0has joined #xwiki  \n09:46\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:48\u00a0<lucaa>\u00a0has joined #xwiki  \n10:13\u00a0<vmassol>\u00a0has joined #xwiki  \n10:46\u00a0<Denis1>\u00a0is now known as <Denis>  \n10:51\u00a0<gsmeria>\u00a0has joined #xwiki  \n10:59\u00a0<tmortagne>\u00a0mflorea: do you plan to do XWIKI-11494 in 6.4M1 .  \n10:59\u00a0<tmortagne>\u00a0?  \n11:00\u00a0<mflorea>\u00a0it's a bit of work, I'd rather leave it for M2  \n11:00\u00a0<tmortagne>\u00a0could you move it please then  \n11:00\u00a0<mflorea>\u00a0sur  \n11:00\u00a0<tmortagne>\u00a0we still need to decide what we do about XWIKI-11459...  \n11:01\u00a0<tmortagne>\u00a0sounds like a won't fix but not sure  \n11:01\u00a0<mflorea>\u00a0not easy to fix it cleanly  \n11:02\u00a0<tmortagne>\u00a0I think for XWIKI-11443 the easiest is to put flamingo in default base skin in xwiki.cfg  \n11:02\u00a0<mflorea>\u00a0yes, +1 for won't fix. We should report another issue about introducing some layout objects  \n11:02\u00a0<mflorea>\u00a0layout config objects  \n11:02\u00a0<tmortagne>\u00a0yep that's what I think too  \n11:04\u00a0<sburjan>\u00a0has joined #xwiki  \n11:04\u00a0<tmortagne>\u00a0we can also decide to decide later about XWIKI-11443, it's \"just\" a milestone  \n11:31\u00a0<mflorea>\u00a0tmortagne: are you planning to release M1 today? Should I leave XWIKI-11513 for M2? Probably.  \n11:32\u00a0<tmortagne>\u00a0well it was planned yesterday but I can wait for XWIKI-11513 :)  \n11:32\u00a0<tmortagne>\u00a0depend when you think you can finish with it  \n11:33\u00a0<mflorea>\u00a0shouldn't take long  \n11:34\u00a0<tmortagne>\u00a0I would like to fix XCOMMONS-705 anyway  \n11:59\u00a0<Enygma`>\u00a0has joined #xwiki  \n12:00\u00a0<evalica>\u00a0has joined #xwiki  \n12:06\u00a0<lucaa>\u00a0has quit  \n12:32\u00a0<AFKGeek>\u00a0has joined #xwiki  \n12:33\u00a0<vmassol>\u00a0hi guys, you probably don't have the time but Lyes and I are hesitating on an API aspect for the batch mail sender api\u2026 We've identified 4 possible APIs: http://design.xwiki.org/xwiki/bin/view/Proposal/BatchMailSenderAPI#HAPIChoices  \n12:33\u00a0<vmassol>\u00a0it's really a shame that XWiki doesn't support injecting components in constructor for perlookup components....  \n12:34\u00a0<vmassol>\u00a0all the 4 variations are because of this fact  \n12:34\u00a0<vmassol>\u00a0we have never really discussed what is our best practice when we need to have a perlookup component initialized with parameters  \n12:35\u00a0<vmassol>\u00a0actually we've probably even used various solutions in different part of our code for this need...  \n12:39\u00a0<tmortagne>\u00a0vmassol: \u00a0usually we have a init method with what we want to pass to teh component for this use case  \n12:40\u00a0<vmassol>\u00a0(I've added \"\u2014>\" symbols methods where there are differences)  \n12:40\u00a0<vmassol>\u00a0tmortagne: so solution 2  \n12:40\u00a0<vmassol>\u00a0Solution 1 is more canonical  \n12:41\u00a0<vmassol>\u00a0solution 3 is without introducing a component  \n12:41\u00a0<vmassol>\u00a0and solution 4 is \u2026 creative\u2026  \n12:41\u00a0<vmassol>\u00a0(bypasses the issue)  \n12:41\u00a0<tmortagne>\u00a0the other use case I have in mind have the same init parameters  \n12:41\u00a0<tmortagne>\u00a0I don't know yet for your use case, will need to think about it  \n12:42\u00a0<vmassol>\u00a0yes here it's even harder because the params are different  \n12:42\u00a0<tmortagne>\u00a0but different parameters sounds like differents components  \n12:42\u00a0<vmassol>\u00a0solution 4 is nice from a user API POV. It's just not perfect from an impl POV since you have a big portion of common code that you need to put in an Abstracty  \n12:43\u00a0<vmassol>\u00a0tmortagne: the only solutions that don't use varargs is solution 1 and 3  \n12:43\u00a0<vmassol>\u00a0but 3 isn't very nice, asking for CM is not very nice  \n12:43\u00a0<tmortagne>\u00a0I have to go for lunch, will look at it after  \n12:43\u00a0<vmassol>\u00a0ok thanks  \n12:43\u00a0<vmassol>\u00a0me too  \n12:43\u00a0<vmassol>\u00a0some time to think ;)  \n12:44\u00a0<Lyes>\u00a0has quit  \n12:51\u00a0<lucaa>\u00a0has joined #xwiki  \n13:15\u00a0<lucaa>\u00a0has quit  \n13:16\u00a0<lucaa>\u00a0has joined #xwiki  \n13:30\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n13:32\u00a0<lucaa>\u00a0has quit  \n13:34\u00a0<AFKGeek>\u00a0has quit  \n13:53\u00a0<Lyes>\u00a0has joined #xwiki  \n14:00\u00a0<tmortagne>\u00a0mflorea: looking at why http://ci.xwiki.org/job/xwiki-enterprise-test-rest/ is still failing and will just wait for your greenlight to start the release  \n14:00\u00a0<mflorea>\u00a0oky  \n14:02\u00a0<mflorea>\u00a0actually, you should start the release without XWIKI-11513. It's not critical and we'd have to wait for the build and tests to run again. I can commit it right after you finish the maven release  \n14:06\u00a0<tmortagne>\u00a0depends, there is a good chance your change fix http://ci.xwiki.org/job/xwiki-enterprise-test-rest/ since that's why it was failing and I probably forgot to commt something in my workaround from yesterday  \n14:09\u00a0<tmortagne>\u00a0mflorea:  \n14:09\u00a0<tmortagne>\u00a0anyway debugging it for now so either way you still have time  \n14:09\u00a0<mflorea>\u00a0ok, I'm almost done  \n14:22\u00a0<lucaa>\u00a0has joined #xwiki  \n14:28\u00a0<silverdrop>\u00a0has joined #xwiki  \n14:31\u00a0<woshilapin>\u00a0has quit  \n14:33\u00a0<woshilapin>\u00a0has joined #xwiki  \n14:34\u00a0<mflorea>\u00a0tmortagne: I don't like the fact that I have to duplicate the code from XWiki#getDefaultLanguage and XWiki#getAvailableLocales, unless I depend directly on the old core. I was think of introducing a component LocalizationConfig to expose all the options from the Localization section of the wiki admin.  \n14:34\u00a0<mflorea>\u00a0I'm not sure where to put it though  \n14:35\u00a0<tmortagne>\u00a0mflorea: you did not looked carefully getAvailableLocales, it make sure the default locale is part of ti  \n14:35\u00a0<mflorea>\u00a0it does  \n14:35\u00a0<tmortagne>\u00a0so you don't need to use both  \n14:35\u00a0<mflorea>\u00a0if I depend on oldcore  \n14:36\u00a0<tmortagne>\u00a0sure  \n14:36\u00a0<mflorea>\u00a0othewise, if I use the configuration source I have to duplicate code  \n14:37\u00a0<tmortagne>\u00a0note that currently the solr module depends on oldcore but at some point yes we need to have those option somewhere else  \n14:38\u00a0<mflorea>\u00a0this is not in the solr-api module, but in solr-query module which doesn't depend directly on oldcore. It depends on solr-api so indirectly on oldcore, but still I would have to add a dep on old core to the solr-query module if I use XWiki#getAvailableLocales directly  \n14:39\u00a0<mflorea>\u00a0I don't like it that much  \n14:41\u00a0<tmortagne>\u00a0introducing this new API is probably a bit short for 6.4M1  \n14:42\u00a0<mflorea>\u00a0yes  \n14:43\u00a0<tmortagne>\u00a0on my side I don't have the same behavior locally and in the last jetty/hsqldb built by jetty so I have to debug it and see if it's really up to date but I guess I should find quickly why it's not the same  \n14:44\u00a0<tmortagne>\u00a0finishing on it and I will see how much time I have to do the maven/git release today  \n15:07\u00a0<msmeria>\u00a0has quit  \n15:11\u00a0<OSIMasson>\u00a0has joined #xwiki  \n15:14\u00a0<silverdrop>\u00a0has quit  \n15:29\u00a0<Slashman>\u00a0has joined #xwiki  \n15:31\u00a0<silverdrop>\u00a0has joined #xwiki  \n15:51\u00a0<AFKGeek>\u00a0has joined #xwiki  \n16:01\u00a0<Lyes>\u00a0has quit  \n16:18\u00a0<vmassol>\u00a0ok done for http://jira.xwiki.org/browse/XWIKI-11490 now need to add PR to ResetPassword.xml  \n16:23\u00a0<tmortagne>\u00a0release tomorrow morning (GMT+1) I think  \n16:24\u00a0<vmassol>\u00a0hmm so I'll need to wait as I don't want my commit in 6.4M1  \n16:24\u00a0<vmassol>\u00a0(I'm not fully ready yet)  \n16:25\u00a0<tmortagne>\u00a0I have to move in half an hour and I doubt I will have time to fully do the release when I get back  \n16:29\u00a0<vmassol>\u00a0ok  \n16:49\u00a0<momomomomo>\u00a0has joined #xwiki  \n16:56\u00a0<AFKGeek>\u00a0has quit  \n17:03\u00a0<tmortagne>\u00a0has quit  \n17:12\u00a0<gsmeria>\u00a0has quit  \n17:32\u00a0<sdumitriu>\u00a0has quit  \n17:36\u00a0<sdumitriu>\u00a0has joined #xwiki  \n17:37\u00a0<KermitTheFragger>\u00a0has quit  \n17:53\u00a0<momomomomo>\u00a0has quit  \n17:54\u00a0<vmassol>\u00a0guys, what's the easiest way to check if a document has PR?  \n17:54\u00a0<vmassol>\u00a0(the current doc)  \n17:56\u00a0<vmassol>\u00a0I've just realized that using ContextualAuthorizationManager checks the current user for PR  \n17:56\u00a0<vmassol>\u00a0but I need to check the current doc for P  \n17:56\u00a0<vmassol>\u00a0\\*PR  \n17:58\u00a0<mflorea>\u00a0has quit  \n17:58\u00a0<vmassol>\u00a0Denis: any idea? is it possible with teh security module?  \n18:02\u00a0<Denis>\u00a0there is not helper for that in the new security module  \n18:02\u00a0<woshilapin>\u00a0has quit  \n18:03\u00a0<vmassol>\u00a0I see it has all the code to do it but yes there's no api  \n18:03\u00a0<vmassol>\u00a0so I have to get the sdoc  \n18:03\u00a0<vmassol>\u00a0then get the author ref  \n18:03\u00a0<vmassol>\u00a0and then check if that author has PR?  \n18:03\u00a0<vmassol>\u00a0or do we have some helper somewhere else?  \n18:04\u00a0<Denis>\u00a0Yes, this is basically what we do in org.xwiki.security.authorization.internal.XWikiCachingRightService#hasProgrammingRights(com.xpn.xwiki.doc.XWikiDocument, com.xpn.xwiki.XWikiContext)  \n18:05\u00a0<Denis>\u00a0but  \n18:05\u00a0<Denis>\u00a0you are wrong  \n18:07\u00a0<Denis>\u00a0using the ContextualAuthorizationManager do the job for you  \n18:07\u00a0<vmassol>\u00a0when I use it I get  \n18:08\u00a0<vmassol>\u00a0\"org.xwiki.security.authorization.AccessDeniedException: Access denied when checking [programming] access to [Main Wiki] for user [xwiki:XWiki.Admin]\"  \n18:08\u00a0<Denis>\u00a0which function do you use ?  \n18:08\u00a0<vmassol>\u00a0checkRight(Right.PROGRAM)  \n18:08\u00a0<vmassol>\u00a0(I want the exception)  \n18:08\u00a0<Denis>\u00a0you mean checkAccess()  \n18:09\u00a0<vmassol>\u00a0yes sorry checkAccess  \n18:10\u00a0<Denis>\u00a0are you sure xwiki:XWiki.Admin has PR ?  \n18:10\u00a0<vmassol>\u00a0it hasn't  \n18:10\u00a0<vmassol>\u00a0I'm testing some feature that I coded  \n18:10\u00a0<vmassol>\u00a0and I'm simulating a user without PR  \n18:10\u00a0<vmassol>\u00a0what I did:  \n18:10\u00a0<vmassol>\u00a0- removed PR for admin  \n18:11\u00a0<vmassol>\u00a0- saved a doc so that it doesn't have PR for sure  \n18:11\u00a0<Denis>\u00a0so, if your document content author is xwiki:XWiki.Admin, this is the expected behavior, what is the problem ?  \n18:11\u00a0<vmassol>\u00a0the problem is not the exception  \n18:11\u00a0<vmassol>\u00a0I want that exception!  \n18:11\u00a0<vmassol>\u00a0it's the content of the exception which isn't right  \n18:11\u00a0<vmassol>\u00a0I don't care if the current user has PR or not  \n18:11\u00a0<vmassol>\u00a0what I want is to check is the doc author has PR  \n18:11\u00a0<vmassol>\u00a0s/is the doc/if the doc  \n18:12\u00a0<vmassol>\u00a0I want the exception to say:  \n18:12\u00a0<Denis>\u00a0this is what happen, isn't your document authored by xwiki:XWiki.Admin ?  \n18:12\u00a0<vmassol>\u00a0The document [XWiki.ResetPassword] was saved by a user who doesn't have the right [Programming]  \n18:12\u00a0<vmassol>\u00a0yes it' is  \n18:13\u00a0<vmassol>\u00a0I also don't understand how your API can be used for 2 use cases  \n18:13\u00a0<vmassol>\u00a0- check if the current user has PR  \n18:13\u00a0<vmassol>\u00a0- check if the doc author of the current doc has PR  \n18:14\u00a0<Denis>\u00a0in fact the CAM, just call the AM with the correct user for your use case, the exception does not get caught and changed for the special backward compatibility use case, if we consider our futur  \n18:15\u00a0<Denis>\u00a0however, it does not check the current user, only the content author  \n18:15\u00a0<Denis>\u00a0checking the current user would be a security breach  \n18:15\u00a0<vmassol>\u00a0so with your API it's actually not possible to check if the current user has PR?  \n18:16\u00a0<cjd>\u00a0has quit  \n18:16\u00a0<vmassol>\u00a0also in the code it says \"// Backward compatibility for the old way of assigning programming right.\"  \n18:16\u00a0<vmassol>\u00a0what's the new way?  \n18:17\u00a0<Denis>\u00a0signed script, upcoming :)  \n18:17\u00a0<vmassol>\u00a0arf you're getting ahead of time...  \n18:17\u00a0<Denis>\u00a0I am a bit in advance on time  \n18:17\u00a0<vmassol>\u00a0indeed  \n18:18\u00a0<vmassol>\u00a0ok so my use case is fulfilled, I'd just nee some improvement to the exception  \n18:18\u00a0<vmassol>\u00a0\\*need  \n18:18\u00a0<vmassol>\u00a0cool  \n18:19\u00a0<Denis>\u00a0what are you attempting to achieve exactly with your exception ?  \n18:20\u00a0<vmassol>\u00a0when sedning a mail using th script service  \n18:20\u00a0<vmassol>\u00a0and the permission is refused (I have several impl of the permissiosn check, one of them is based on the current doc having PR)  \n18:20\u00a0<vmassol>\u00a0I display the error to the user  \n18:20\u00a0<vmassol>\u00a0with nested exceptions  \n18:21\u00a0<vmassol>\u00a0right now I get this:  \n18:21\u00a0<Denis>\u00a0appart from the phrasing of it, which is generic, it will always be throw for the content user of the current security doc, but if the security doc does not exists, it will be against the current user.  \n18:21\u00a0<vmassol>\u00a0https://gist.githubusercontent.com/vmassol/e665fe1e02336c63ad93/raw/65471ea02cbab6f350d47bad02a4d823b001b376/gistfile1.txt  \n18:21\u00a0<vmassol>\u00a0I wanted the user to understand clearly  \n18:21\u00a0<vmassol>\u00a0that the problem is that the doc XWiki.ResetPassword needs to have PR  \n18:22\u00a0<vmassol>\u00a0I didn't want to have to get the current doc myself just to put that info in the exception ;)  \n18:22\u00a0<vmassol>\u00a0I wanted to just call checkAccess(...)  \n18:24\u00a0<Denis>\u00a0you just have too, would be a pity if you could not. But knowing if the user check is the current user or the content author is difficult  \n18:25\u00a0<Denis>\u00a0and knowing about the content doc, is also not easy at the moment  \n18:25\u00a0<Denis>\u00a0this code has been written in the idea that it is compatibility  \n18:26\u00a0<vmassol>\u00a0yes I saw that, maybe I should reimplement it in my code...  \n18:26\u00a0<vmassol>\u00a0too bad we don't have a helper somewhere  \n18:26\u00a0<Denis>\u00a0in my opinion, writing code that take the document content author to explain to the user, will be in a very bad position when we will use signed script  \n18:26\u00a0<vmassol>\u00a0when we use signed zcripts, we won't use the \"programmingrights\" component impl :)  \n18:26\u00a0<Denis>\u00a0(with a flag for backcompat)  \n18:27\u00a0<vmassol>\u00a0we'll use the \"signedscript\" one  \n18:27\u00a0<vmassol>\u00a0;)  \n18:27\u00a0<Denis>\u00a0there will be a point where we will have both  \n18:27\u00a0<vmassol>\u00a0(for the ScriptServicePermissionChecker impl)  \n18:27\u00a0<vmassol>\u00a0it's a configuration  \n18:27\u00a0<Denis>\u00a0and a configuration to enable back-compat  \n18:27\u00a0<Denis>\u00a0this will be done in the CAM  \n18:28\u00a0<vmassol>\u00a0https://gist.githubusercontent.com/vmassol/d752938351bc4ba38357/raw/966bbd6860a3a19729f4c899cc999b43fc5c5b94/gistfile1.txt  \n18:28\u00a0<Denis>\u00a0this will not necessarily had to be changed  \n18:29\u00a0<Denis>\u00a0the way you get PR will change  \n18:29\u00a0<vmassol>\u00a0I won't need any check when there are signed scripts  \n18:29\u00a0<vmassol>\u00a0so we would use \"alwaysallow\"  \n18:30\u00a0<vmassol>\u00a0since it's the signed script macro that will perform the check AFAIU  \n18:30\u00a0<vmassol>\u00a0right?  \n18:31\u00a0<vmassol>\u00a0which, incidentally, makes me think I should name the hint \"nocheck\" instead of \"alwaysallow\" ;)  \n18:32\u00a0<vmassol>\u00a0FYI this ScriptServicePermissionChecker is not just for checking PR  \n18:32\u00a0<Denis>\u00a0not sure I get what you expect. When you will have signed script, a script that is signed will respond true if you ask for PR, no more  \n18:32\u00a0<vmassol>\u00a0it can be used to also check if a given mail should be sent or not  \n18:32\u00a0<vmassol>\u00a0for example based on its size  \n18:32\u00a0<vmassol>\u00a0or it's destination  \n18:32\u00a0<vmassol>\u00a0or anything else  \n18:32\u00a0<vmassol>\u00a0Denis: err?  \n18:32\u00a0<vmassol>\u00a0when we have SS  \n18:33\u00a0<vmassol>\u00a0I expect the signedscript macro to not execute its content if modified  \n18:33\u00a0<vmassol>\u00a0(by a user who isn't trusted)  \n18:33\u00a0<Denis>\u00a0of course, it will not, but not all script will be signed  \n18:34\u00a0<Denis>\u00a0moreover, we could also accept the idea that a script is signed by an author which is not trusted  \n18:34\u00a0<vmassol>\u00a0yes ok  \n18:35\u00a0<vmassol>\u00a0so what do you recommend in the end?  \n18:35\u00a0<vmassol>\u00a0that I use your API or that I recode it?  \n18:35\u00a0<lucaa>\u00a0has quit  \n18:35\u00a0<lucaa1>\u00a0has joined #xwiki  \n18:35\u00a0<Denis>\u00a0signed script will basically provide the content author with certainty, it will not prevent a script to be run if the author has not PR  \n18:35\u00a0<vmassol>\u00a0ok  \n18:35\u00a0<Denis>\u00a0I recommend to use the API  \n18:35\u00a0<vmassol>\u00a0ok good, thanks  \n18:36\u00a0<Denis>\u00a0I understand you want a clear report to the user, but you cannot really be that clever on your end  \n18:36\u00a0<vmassol>\u00a0yup which is why I was counting on checkAccess() :)  \n18:36\u00a0<vmassol>\u00a0anyway, I'm good on my side now...  \n18:36\u00a0<Denis>\u00a0it is not more clever than you in the end  \n18:37\u00a0<vmassol>\u00a0ready to commit after 6.4M1 is released tomorrow...  \n18:37\u00a0<vmassol>\u00a0actually i could commit now \u2026 hmmm  \n18:38\u00a0<vmassol>\u00a0nah I'l resist and wait...  \n18:38\u00a0<vmassol>\u00a0:)  \n19:24\u00a0<cjd>\u00a0has joined #xwiki  \n19:25\u00a0<cjd>\u00a0has left #xwiki  \n19:26\u00a0<lucaa1>\u00a0has quit  \n19:35\u00a0<Slashman>\u00a0has quit  \n19:37\u00a0<evalica>\u00a0has quit  \n19:38\u00a0<Enygma`>\u00a0has quit  \n20:16\u00a0<mflorea>\u00a0has joined #xwiki  \n21:21\u00a0<Denis>\u00a0has quit  \n21:21\u00a0<Denis>\u00a0has joined #xwiki  \n21:31\u00a0<momomomomo>\u00a0has joined #xwiki  \n21:46\u00a0<OSIMasson>\u00a0has quit  \n22:12\u00a0<vmassol>\u00a0has quit  \n22:30\u00a0<OSIMasson>\u00a0has joined #xwiki  \n22:55\u00a0<Emenems>\u00a0has quit  \n22:56\u00a0<Emenems>\u00a0has joined #xwiki  \n23:37\u00a0<OSIMasson>\u00a0has quit  \n23:42\u00a0<mflorea>\u00a0has quit  \n23:42\u00a0<momomomomo>\u00a0has quit  \n23:43\u00a0<OSIMasson>\u00a0has joined #xwiki\n"}