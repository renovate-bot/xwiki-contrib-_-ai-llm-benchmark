{"id": "dev:IRC.xwikiArchive20100514", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100514", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\narkub left at 00:28 (Ping timeout: 240 seconds  \narkub joined #xwiki at 00:35  \narkub left at 01:40 (Quit: Leaving  \nlucaa left at 02:18 (Ping timeout: 245 seconds  \njvelociter left at 02:31 (Quit: jvelociter  \nabusenius left at 02:40 (Ping timeout: 260 seconds  \nsdumitriu left at 04:20 (Ping timeout: 276 seconds  \nmflorea joined #xwiki at 06:51  \nDenis left at 07:01 (Read error: Connection reset by peer  \nDenis joined #xwiki at 07:08  \nplunden joined #xwiki at 08:05  \nlucaa joined #xwiki at 08:39  \narkub joined #xwiki at 09:21  \nvmassol joined #xwiki at 09:25  \nEnygma` joined #xwiki at 09:30  \nevalica joined #xwiki at 09:30  \nlucaa left at 09:32 (Quit: Leaving.  \nlucaa joined #xwiki at 09:32  \nflorinciu joined #xwiki at 09:39  \nflorinciu left at 09:50 (Quit: Leaving.  \nflorinciu1 joined #xwiki at 09:50  \nflorinciu1 left #xwiki at 09:51  \nflorinciu1 joined #xwiki at 09:51  \ntmortagne joined #xwiki at 09:52  \nnpm left at 10:04 (Quit: Leaving.  \nflorinciu joined #xwiki at 10:04  \nnpm joined #xwiki at 10:07  \nabusenius joined #xwiki at 10:20  \nvmassol left at 10:34 (Quit: Leaving.  \nflorinciu left at 11:07 (Read error: Connection reset by peer  \nDenis left at 11:15 (Quit: Leaving.  \nDenis joined #xwiki at 11:18  \nmflorea - (11:29): tmortagne: I have this issue http://jira.xwiki.org/jira/browse/XWIKI-5186 . The problem is that the XHTML parser fails when encountering names anchors like <p><a name=\"foo\">bar</a></p> although this is valid XHTML. I'd like to move this issue to the rendering component, is this fine with you?  \ntmortagne - (11:30): mflorea: sure, i will look at that, i don't see what that does not work in XHTML parser  \nmflorea - (11:30): hmm, the question is what to generate for the named anchor  \nmflorea - (11:30): what wiki syntax  \nmflorea - (11:31): the closest match is the id macro, but the named anchor comes from office doc, so there are no macro markers  \ntmortagne - (11:32): i would say (%name=\"foo\"%)bar(%%) is the closest choice  \ntmortagne - (11:32): id macro ?  \ntmortagne - (11:32): id macro has an id  \ntmortagne - (11:32): so its very different  \nmflorea - (11:32): wait  \ntmortagne - (11:32): what you have behave more like a span than an id i think  \ntmortagne - (11:34): in any case it should not fail  \nmflorea - (11:34): you're right, the id macro generated <span id=\"someName\"></span>  \nmflorea - (11:34): but then, (%name=\"foo\"%)bar(%%) doesn't generate an anchor  \ntmortagne - (11:35): that's not the point i think, what is important is to have the closest bahavior  \ntmortagne - (11:35): why someone do <a name=\"foo\">bar</a> ?  \nmflorea - (11:37): to create an anchor in the page to be able to write <a href=\"#foo\">go to foo</a>. but this code comes from office doc, do it wasn't written by hand, but generated by the office TOC  \nsilviar joined #xwiki at 11:37  \ntmortagne - (11:37): mflorea: you are saying that name has the same behavior than id ?  \nmflorea - (11:37): yes, for anchors  \ntmortagne - (11:37): i did not know that, so ideed that's a IDBlock  \ntmortagne - (11:38): i though #something was only about id whatever the element  \nmflorea - (11:38): on http://www.w3schools.com/tags/tag\\_a.asp the say \"To create a bookmark inside a document, by using the name attribute\"  \nmflorea - (11:39): both ways are valid I think  \ntmortagne - (11:39): ok so i will take care of that and generate an onId() event  \ntmortagne - (11:39): should not be too hard  \nmflorea - (11:40): ok, then I'll move the issue  \ntmortagne - (11:40): hmm but the parser is at wikimodel level so i can't do that that easily actuelly untill we move it to pure XWiki parser  \ntmortagne - (11:41): anyway more the issue yes  \nmflorea - (11:41): ok  \ntmortagne - (11:41): s/more/move/  \nmflorea left at 11:49 (Quit: Leaving.  \narkub left at 12:20 (Ping timeout: 258 seconds  \nmariusbutuc joined #xwiki at 12:30  \nmariusbutuc left #xwiki at 12:31  \nlucaa left at 12:40 (Ping timeout: 276 seconds  \njvelociter joined #xwiki at 12:52  \nsdumitriu joined #xwiki at 12:54  \nflorinciu1 left at 13:30 (Ping timeout: 246 seconds  \nlucaa joined #xwiki at 13:31  \nmflorea joined #xwiki at 13:51  \nEnygma` left at 14:19 (Ping timeout: 260 seconds  \nEnygma` joined #xwiki at 14:20  \nplunden left #xwiki at 14:30  \nvmassol joined #xwiki at 14:38  \nKermitTheFragger joined #xwiki at 14:45  \nlucaa left at 14:51 (Quit: Leaving.  \nvmassol left at 15:03 (Ping timeout: 265 seconds  \nvmassol joined #xwiki at 15:07  \narkub joined #xwiki at 15:20  \njvelociter - (15:25): Hi guys  \nsdumitriu - (15:25): Hi jvelociter  \njvelociter - (15:25): quick question : is the store ready when ApplicationStartedEvent is sent ?  \njvelociter - (15:27): and if not, should we add an \"ApplicationReadyEvent\" or similar ?  \nsdumitriu - (15:28): I don't think it is  \nsdumitriu - (15:28): But I'm not sure  \njvelociter - (15:29): yeah I think it's not  \njvelociter - (15:29): vmassol: tmortagne , any idea?  \ntmortagne - (15:29): no it's not, ApplicationStartedEvent is sent when the application is starting, i.e. when component are initialized and XWiki class is initialized only when the first page is requested  \ntmortagne - (15:30): what need to be done is improve the storage not add a new event  \ntmortagne - (15:30): there is no technical reason to not be able to access the storage when ApplicationStartedEvent is sent except a bad design of the XWiki class  \njvelociter - (15:32): tmortagne: yep I agree. Could we have an event sent at the end of XWiki#initXWiki, for the time being ?  \njvelociter - (15:32): it's a shame that we have all the observation infra needed, but still are not able to have component initialize XWiki classes for example  \njvelociter - (15:32): it would be sort of a bridge event  \njvelociter - (15:32): XWikiInitializedEvent  \njvelociter - (15:32): wdyt?  \ntmortagne - (15:33): i don't like that but should be ok if XWikiInitializedEvent is in the bridge module so that it's clear it's not a \"proper\" event  \njvelociter - (15:34): XWikiInitializedBridgeEvent  \njvelociter - (15:34): in the bridge module  \njvelociter - (15:35): this way it's clear :)  \njvelociter - (15:35): I'll send a proposal on devs  \ntmortagne - (15:36): yep (anyway it will need a vote in the mailing list and i will let you \u00a0fight with Vincent for it ;))  \ntmortagne - (15:37): jvelociter: if you do it please also fix the wiki macro initialization hack with it  \njvelociter - (15:37): yep  \nvmassol - (15:37): sorry guys I'm on holiday today (I may have forgotten to notify you\u2026 sorry about that) - will be avail later today if anything urgent required  \njvelociter - (15:37): tmortagne: point in case is to not do that same hack again for wiki components  \njvelociter - (15:37): (and to fix that)  \ntmortagne - (15:38): ok  \ntmortagne - (15:39): guys small vote waiting on dev mailing list ;)  \ntmortagne - (15:39): even +0 would do (i want to get rid of all this modification in my local sources :))  \nvmassol left at 15:40 (Quit: Leaving.  \nvmassol joined #xwiki at 15:40  \njvelociter - (15:43): tmortagne: which vote >  \njvelociter - (15:43): ?  \nsdumitriu - (15:44): rendering cache  \njvelociter - (15:44): or maybe I didn't receive it yet. seems my mail client has some delay fetching maiuls  \ntmortagne - (15:44): i sent it 10 minutes ago so it's not old, maybe you did not received it yet  \nDenis - (15:59): tmortagne: is it working in a farm ?  \ntmortagne - (16:00): Denis: it's based on full document references so yes it's working on a farm  \nDenis - (16:00): and the configuration is global or local ?  \ntmortagne - (16:02): in first version it's xwiki.properties but it's easy to add in preferences too whithout changing anything except several lines in DefaultRenderingCacheConfiguration  \nDenis - (16:03): I just wonder what would be the meaning of pattern globally  \ntmortagne - (16:06): Denis: don't know except someone that would want to cache the whole farm for some reason maybe, lets say i did the more generic version and it's easy to then add more configuration possibilities based on it  \nDenis - (16:06): adding configuration in preferences is really a must I think for farm. Does it also include more flexibility (removing the needs to restart the container) without causing issues ?  \ntmortagne - (16:07): Denis: sure and as i said it's easy to add (and i planned to do it) i just want the general system to be commited first  \nDenis - (16:08): so this is for you a good start for a complete caching solution for rendrered contents ?  \ntmortagne - (16:09): it's one aspect of rendering caching, the other main one would be cache macro  \ntmortagne - (16:09): but this one require more work and will only work with xwiki/2.0 so i started with the other one  \ntmortagne - (16:10): this one=macro  \nDenis - (16:10): is there some spec for the macro ?  \ntmortagne - (16:11): Denis: http://jira.xwiki.org/jira/browse/XWIKI-4322  \ntmortagne - (16:12): but it's not really detailed  \ntmortagne - (16:12): specs and dependencies are in my head for now :)  \ntmortagne - (16:13): the difficult part is to be able to find a unique identifier for a macro anywhere in the farm to associate the result of the macro to it  \ntmortagne - (16:13): it require information not yet given to macro (that would be sources context, etc...)  \nDenis - (16:15): with your implementation, a {{nocache}} macro would be more appropriate, do you think that it could be done ?  \ntmortagne - (16:18): Denis: i don't think so, cache macro is for distributed applications that want to cache thing they know can be slow, this is very different from pages an admin want to cache without touching at the page or because he want to cache in one pattern lot's of similar pages  \ntmortagne - (16:18): cache maco=developer  \ntmortagne - (16:18): configuration based cache=admin  \ntmortagne - (16:18): {{nocache}} why not but i'm not sure it's really needed  \ntmortagne - (16:19): anyway it's another subject that could come latter  \nDenis - (16:19): agreed, what I means is that developper may want to preserve their page from admins that could be not aware of detailled implementation  \ntmortagne - (16:20): maybe  \nDenis - (16:20): not easy for an admin to choose proper patterns  \nDenis - (16:20): by the way, what was the initial use case ?  \ntmortagne - (16:22): a very intensive accessed wiki that is not modified very often (more about communication than real wiki)  \nDenis - (16:22): and do you have measure the impact of the cache ?  \ntmortagne - (16:23): me no, but they seems very pleased with it  \ntmortagne - (16:24): AFAIK it was a lot faster  \ntmortagne - (16:24): especially since they had pages executing request on database  \ntmortagne - (16:24): i don't know very well the details of there use case  \njvelociter - (16:24): tmortagne: the observation module does not support dynamic eventlistener registration, right ? (I mean you have to explicitely add the listener to the manager, just registering the component is not enough)  \nEnygma` left at 16:24 (Quit: Leaving.  \ntmortagne - (16:25): jvelociter: yes it does, you just need a EventListener component and it will be registred automatically  \ntmortagne - (16:25): that's the way it's used everywhere  \njvelociter - (16:25): tmortagne: even if registered at run time ?  \ntmortagne - (16:26): ha that one no i missread  \ntmortagne - (16:26): it does not but it could  \njvelociter - (16:26): that would be cool indeed  \ntmortagne - (16:26): since he can listen to componenet events  \njvelociter - (16:26): would match great the wiki component use case  \njvelociter - (16:26): ok  \nvmassol - (16:26): it does support dynamic registration  \njvelociter - (16:26): does it ?  \ntmortagne - (16:27): vmassol: you sure ? i don't remember seing thing like that in the code  \nvmassol - (16:27): yes  \nvmassol - (16:27): just call register on it  \nvmassol - (16:27): there's an api  \ntmortagne - (16:27): \"it\" ?  \nvmassol - (16:27): obersvation manager  \ntmortagne - (16:27): vmassol: we are not talking about adding event listener programmatically  \njvelociter - (16:27): yes but it's not automatic  \nvmassol - (16:27): it's dynamic  \njvelociter - (16:28): the OM could listen to CM events  \ntmortagne - (16:28): we are talking about registering a component than happen to be an event listener  \njvelociter - (16:28): and do it by itself  \nvmassol - (16:28): \"the observation module does not support dynamic eventlistener registration, right \"  \njvelociter - (16:28): well , maybe not the best choice of words indeed  \ntmortagne - (16:28): vmassol: that's why i said it does at first ;)  \nvmassol - (16:29): it's of course possible to add a wiki macro-like system on top of the register api  \njvelociter - (16:29): but WDYT of the OM listening to CM events to automatically add new EventListeners  \njvelociter - (16:30): (without doing so explicitely)  \ntmortagne - (16:30): jvelociter: +1  \nvmassol - (16:30): I'm not sure  \nvmassol - (16:30): I'm not 100% that in all use cases you want a listener to be reigstered automatically  \nvmassol - (16:30): you might want to load a jar with annotatiobn  \nvmassol - (16:30): containing a listener  \nvmassol - (16:30): but only register it later on when some action occurs  \nvmassol - (16:31): but I haven't really thought about it  \nvmassol - (16:31): so maybe it's good i don't know  \njvelociter - (16:32): ok. discussion for later.  \nvmassol - (16:32): OSGi has a better solution for this I believe  \njvelociter - (16:32): the use case w/ wiki components declaring EventListeners is interesting  \nvmassol - (16:33): actually don't know if it's better \u2026. it's less \"'automated\" and more tedious but allows for more use cases  \nvmassol - (16:33): the osgi notion of CM events is the activator, which can make some operation when a bundle is loaded  \nvmassol - (16:33): so it's fine-grained at the level of the bundle  \njvelociter - (16:35): I see  \nvmassol - (16:35): hmm i don't remember if we allow an event listener to register itself with Initializable  \nvmassol - (16:35): I think I remember that an event listener shouldn't have a ref to the CM but I don't remember the details  \njvelociter - (16:36): right. it needs to go throught the Composable to avoid a infinite initialization or something like this  \nvmassol - (16:36): composable is not allowed  \nvmassol - (16:37): (it won't work anyway)  \nvmassol - (16:37): (composable is now something internal used only by the CM)  \ntmortagne - (16:37): i don't think there is any issue for an eventlistener to get the CM  \nvmassol - (16:37): ah s/CM/OM/ above  \nvmassol - (16:38): I think I remember that an event listener shouldn't have a ref to the OM but I don't remember the details  \ntmortagne - (16:39): vmassol: that's because OM @require the list of event listener so if you require the OM in an event listener you have an infinite loop  \nvmassol - (16:39): right  \njvelociter - (16:41): tmortagne: re wiki components, we might want a way to add extra proxied interfaces, besides the role one given by ComponentClass  \njvelociter - (16:41): (I'm thinking of the Initializable use case for example)  \njvelociter - (16:44): we could have an extra ComponentInterfaceClass with a name property, for that  \ntmortagne - (16:44): jvelociter: was about to say \"right, so other objects (of class ImplementsInterfaceClass for example) to list them\"  \njvelociter - (16:44): yep  \ntmortagne - (16:46): i would prefer to not put \"Component\" in the name because it's not directly related to component and we could imagine using this xclass to design a more generic wiki java class (implementing a java class in wiki pages)  \ntmortagne - (16:47): it would work pretty much the same but for any java object instead of just components  \ntmortagne - (16:48): anyway it's not needed right now so just this xclass for wiki components will be enough, just something to keep in mind ;)  \ntmortagne - (16:49): as you want  \nsilviar left at 17:23 (Quit: Leaving.  \nmflorea left at 17:27 (Quit: Leaving.  \nevalica left at 17:28 (Read error: Connection reset by peer  \ntmortagne - (17:34): sdumitriu: you removed a public methods used by wiki manager  \nsdumitriu - (17:35): Oh  \nsdumitriu - (17:35): I asked about it on IRC  \nsdumitriu - (17:35): Didn't see it used in the core  \ntmortagne - (17:35): you should have asked in mail to remove a public method...  \ntmortagne - (17:35): it's supposed to be deprecated anyway  \ntmortagne - (17:36): (i mean we are supposed to deprecate before deleting a public method)  \nDenis left at 17:45 (Quit: Leaving.  \nabusenius left at 18:32 (Ping timeout: 240 seconds  \narkub left at 19:12 (Ping timeout: 258 seconds  \nflorinciu joined #xwiki at 19:24  \nflorinciu left at 19:30 (Quit: Leaving.  \nKermitTheFragger left at 19:34 (Remote host closed the connection  \njvelociter - (20:14): tmortagne: re ComponentInterfaceClass I thought it would be nicer if all XClasses related to the feature were sort of \"packed together\" in the class editor (meaning the appear one next to another), but indeed it's arguable and we can find better names  \ntmortagne - (20:15): I did not tough about that indeed  \ntmortagne left at 20:44 (Quit: Leaving.  \nabusenius joined #xwiki at 20:50  \ndegro joined #xwiki at 21:26  \ndegro left #xwiki at 21:34  \ntmortagne joined #xwiki at 23:00  \ntmortagne left at 23:00 (Client Quit  \ndegro joined #xwiki at 23:21  \nabusenius - (23:28): hi all  \nabusenius - (23:28): can somebody tell me what project do velocity pages from web/standard belong to?  \nabusenius - (23:29): is it core?  \ndegro left #xwiki at 23:31  \nvmassol - (23:37): abusenius: you mean in jira?  \nabusenius - (23:37): ye  \nabusenius - (23:38): s  \nvmassol - (23:38): yes it's XWiki Core  \nvmassol - (23:38): component: Templates  \nabusenius - (23:38): thanks  \nvmassol - (23:39): \"Templates & User Interface\" to be precise  \nnpm left at 23:39 (Ping timeout: 240 seconds  \nnpm joined #xwiki at 23:41  \n\n"}