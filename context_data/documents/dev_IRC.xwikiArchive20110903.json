{"id": "dev:IRC.xwikiArchive20110903", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20110903", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n02:32\u00a0<SvenDowideit>\u00a0has quit  \n02:33\u00a0<SvenDowideit>\u00a0has joined #xwiki  \n04:23\u00a0<DrLou>\u00a0has quit  \n05:51\u00a0<DrLou>\u00a0has joined #xwiki  \n06:01\u00a0<DrLou>\u00a0has quit  \n07:59\u00a0<pulasthi>\u00a0has joined #xwiki  \n07:59\u00a0<pulasthi>\u00a0has quit  \n08:00\u00a0<pulasthi>\u00a0has joined #xwiki  \n09:59\u00a0<@cjdelisle>\u00a0pulasthi: howdy  \n10:00\u00a0<@cjdelisle>\u00a0I have discovered that the method I was planning on using to realize document/object queries is simply not possible with cassandra's query model no matter what we do.  \n10:02\u00a0<@cjdelisle>\u00a0The problem is that the query would end up looking like: \u00a0document.object[1].prop = x OR document.object[2].prop = x OR document.object[3].prop = x OR document.object[n].prop = x  \n10:02\u00a0<@cjdelisle>\u00a0since we have no idea how many objects a document might have, that's just plain impossible.  \n10:03\u00a0<@cjdelisle>\u00a0RDBMS databases handle it because they normalize the data far more.  \n10:03\u00a0<pulasthi>\u00a0cjdelisle : hi  \n10:04\u00a0<@cjdelisle>\u00a0But if we put each object in it's own table in cassandra, it will be slower but it will make this kind of query possible using:  \n10:05\u00a0<@cjdelisle>\u00a0SELECT FROM PersistableXWikiDocument WHERE fullName == \"XWiki.WebHome\"  \n10:05\u00a0<@cjdelisle>\u00a0and  \n10:06\u00a0<@cjdelisle>\u00a0SELECT FROM SomeObjectType WHERE docuent == \"XWiki.WebHome\"  \n10:06\u00a0<pulasthi>\u00a0cjdelisle: andy also mentiond about embedding  \n10:08\u00a0<@cjdelisle>\u00a0Yes, I gave that a try. It didn't work for me because I was trying to embed a collection (wishfull thinking)  \n10:09\u00a0<pulasthi>\u00a0can you embed a collection of Persons if Person is a table  \n10:10\u00a0<@cjdelisle>\u00a0The problem with embedding a collection is you don't know how big it's going to be  \n10:12\u00a0<pulasthi>\u00a0hmm  \n10:15\u00a0<pulasthi>\u00a0so how should we proceed  \n10:16\u00a0<@cjdelisle>\u00a0What I would like to do is start testing to see if I can get normalized objects to function properly.  \n10:18\u00a0<@cjdelisle>\u00a0Since querying against members of a list will not work with cassandra's limitations, the \"deep querying\" which I described will not be usefull. Sorry for leading you astray.  \n10:19\u00a0<pulasthi>\u00a0ohh its ok im still learning so this is the time i can go in wrong paths  \n10:19\u00a0<pulasthi>\u00a0:)  \n10:20\u00a0<@cjdelisle>\u00a0I like to say: Success doesn't come from wanting it, it comes from thinking of every possible way you could fail and making provision for all of them.  \n10:20\u00a0<pulasthi>\u00a0:)  \n10:20\u00a0<@cjdelisle>\u00a0Also: The sooner you can identify failure and get turned around back in the right direction, the less effect that mistake will have.  \n10:22\u00a0<pulasthi>\u00a0so what can i do next  \n10:22\u00a0<pulasthi>\u00a0andy aksed if i could let them know if i improve the plugin  \n10:23\u00a0<pulasthi>\u00a0so if i can migrate the plugin to DN 3 that would be useful  \n10:23\u00a0<pulasthi>\u00a0since i have added JPQL  \n10:24\u00a0<@cjdelisle>\u00a0yes, absolutely.  \n10:24\u00a0<@cjdelisle>\u00a0I have been lagging, the first thing I should do is merge your changes into my fork I think I will do that right now.  \n10:25\u00a0<pulasthi>\u00a0so what else can i do to help this project :)  \n10:26\u00a0<pulasthi>\u00a0btw im working in the Apache team at my WSO2 for the next month so back to Java from JavaScript  \n10:26\u00a0<@cjdelisle>\u00a0Cool  \n10:27\u00a0<@cjdelisle>\u00a0FTR I think I like javascript more than java because it's inherently signal based. OTOH Java's static typing is nicer.  \n10:28\u00a0<@cjdelisle>\u00a0If you feel like migrating to DN3 that is great or if you want to start trying to store objects in their own tables, that would be great too.  \n10:29\u00a0<@cjdelisle>\u00a0If you want to try storing objects in tables, let me know I can see a few issues which will have to be resolved for load/store functionality.  \n10:31\u00a0<pulasthi>\u00a0ok ill give a try to upgrade to DN3 first. may be spend today and tomorrow. and put some time into storing objects in tables next week :)  \n10:32\u00a0<pulasthi>\u00a0i want be able to commit any time to this in the week days because of the Apache team work  \n10:32\u00a0<@cjdelisle>\u00a0That's fine, congradulations on working with Apache.  \n10:32\u00a0<@cjdelisle>\u00a0Ok, I will be doing object tables today after I get all of your changes merged in. Once that is done then we ony have to map over XWQL which is a bit different from JPQL with the schema I'm imagining.  \n10:33\u00a0<pulasthi>\u00a0cool :)  \n10:46\u00a0<@cjdelisle>\u00a0pulasthi: can I ask why you are pulling in groovy-all? That is an 8MB dependency and for other users it will be a major blow to the plugin's usability.  \n10:56\u00a0<pulasthi>\u00a0ohh i think that was something i did before and forgot to remove it  \n10:56\u00a0<pulasthi>\u00a0i think there want be any problem in removing it  \n10:56\u00a0<pulasthi>\u00a0let me take a look  \n10:56\u00a0<@cjdelisle>\u00a0I just commented it out and tests started failing whch was o\\_O  \n10:57\u00a0<pulasthi>\u00a0really thats strange  \n10:57\u00a0<pulasthi>\u00a0wait i will give it a try  \n11:02\u00a0<evalica>\u00a0has joined #xwiki  \n11:07\u00a0<evalica>\u00a0has quit  \n11:08\u00a0<pulasthi>\u00a0has quit  \n11:17\u00a0<vmassol>\u00a0has quit  \n11:17\u00a0<pulasthi>\u00a0has joined #xwiki  \n11:17\u00a0<pulasthi>\u00a0\u00a0cjdelisle: hi i just built it after removing the groovy dependency from the pom.xml and there were no test errors  \n11:18\u00a0<pulasthi>\u00a0:-/  \n11:18\u00a0<@cjdelisle>\u00a0I just realized that they are there with or without the dependency.  \n11:18\u00a0<@cjdelisle>\u00a0try: git status  \n11:18\u00a0<@cjdelisle>\u00a0to see if you forgot to add a dile  \n11:18\u00a0<@cjdelisle>\u00a0\\*file  \n11:18\u00a0<vmassol>\u00a0has joined #xwiki  \n11:19\u00a0<pulasthi>\u00a0you mean there are test errors  \n11:20\u00a0<@cjdelisle>\u00a0Actually they are test failures, not errors which doesn't make a lot of sense.  \n11:21\u00a0<@cjdelisle>\u00a0ahh sorry, my mistake  \n11:21\u00a0<@cjdelisle>\u00a0I had another cassandra process running on the poer it was trying to bind to.  \n11:22\u00a0<pulasthi>\u00a0ahh :)  \n11:22\u00a0<pulasthi>\u00a0i am not getting any failures or errors  \n11:22\u00a0<pulasthi>\u00a0so i was wondering if had pushed the wrong branch :)  \n11:23\u00a0<@cjdelisle>\u00a0Yup, no errors.  \n11:23\u00a0<pulasthi>\u00a0:)  \n11:24\u00a0<@cjdelisle>\u00a0Now I think the JPQL tests ought to go in JPQLBasicTest.java instead of JDOQLBasicTest.java, does that make sense?  \n11:24\u00a0<pulasthi>\u00a0yes i was just thinking to do that  \n11:25\u00a0<pulasthi>\u00a0having jpql tests in jdoql tests is wrong  \n11:25\u00a0<pulasthi>\u00a0ill make that change  \n11:27\u00a0<@cjdelisle>\u00a0Why is checkFilterValidity public?  \n11:29\u00a0<florinciu>\u00a0has joined #xwiki  \n11:29\u00a0<pulasthi>\u00a0err that should be private :/  \n11:29\u00a0<pulasthi>\u00a0my bad  \n11:30\u00a0<@cjdelisle>\u00a0Since it's duplicated between JPQL and JDOQL I think it makes sense to merge them into a utility class so we can do both at once.  \n11:32\u00a0<pulasthi>\u00a0you mean to create a new utility \u00a0class and put it there  \n11:34\u00a0<@cjdelisle>\u00a0Yup, there are a couple ways to do that, I'm looking at it trying to see if I can determine which is right in this case.  \n11:35\u00a0<@cjdelisle>\u00a0Also do you still have the branch with XWiki's checkstyle enabled? I think if you run it, it will find some typos in JPQLQuery.  \n11:38\u00a0<pulasthi>\u00a0ahh no, can u tell me how to set the check style  \n11:39\u00a0<mflorea>\u00a0has joined #xwiki  \n11:40\u00a0<@cjdelisle>\u00a0let me look  \n11:48\u00a0<@cjdelisle>\u00a0pulasthi: if you check my fork, I just pushed the checkstyle patch into the master so you can merge that in.  \n11:48\u00a0<pulasthi>\u00a0ok i will check  \n11:49\u00a0<@cjdelisle>\u00a0\u00a0\u00a0\u00a0\u00a0public boolean nonIndexedQuery = true; \u00a0oops ;)  \n11:53\u00a0<pulasthi>\u00a0err have a bad habit with modifiers it seems :/  \n11:55\u00a0<@cjdelisle>\u00a0I would like to refactor your version and Todd's, I see a bunch of stuff that isn't the way I would do it but it would be pretty hard to describe how I would want to do it.  \n11:57\u00a0<pulasthi>\u00a0thats ok  \n12:31\u00a0<@cjdelisle>\u00a0wow, having non-private fields and extending the class creates gigantic messes  \n12:32\u00a0<vmassol1>\u00a0has joined #xwiki  \n12:33\u00a0<JuanDaugherty>\u00a0has joined #xwiki  \n12:34\u00a0<JuanDaugherty>\u00a0the IRC archine doesn't appear to be an archive as such; that or it hung about 3 weeks ago.  \n12:34\u00a0<JuanDaugherty>\u00a0\\*archive  \n12:35\u00a0<vmassol>\u00a0has quit  \n12:37\u00a0<florinciu>\u00a0has quit  \n12:37\u00a0<pulasthi>\u00a0:/  \n12:38\u00a0<@cjdelisle>\u00a0pulasthi: it wasn't you, it's how Andy designed it.  \n12:39\u00a0<@cjdelisle>\u00a0JuanDaugherty: Probably xwikibot stopped and nobody restarted it, it doesn't have an autrestart function although it should.  \n12:39\u00a0<JuanDaugherty>\u00a0well, also an archive has you know archives  \n12:40\u00a0<pulasthi>\u00a0cjdelisle: ahh your refactoring his code also  \n12:40\u00a0<JuanDaugherty>\u00a0ah, just a minute, I may have bm'ed a particular entry  \n12:40\u00a0<@cjdelisle>\u00a0no, I'm just complaining about it :P  \n12:40\u00a0<pulasthi>\u00a0:)  \n12:41\u00a0<JuanDaugherty>\u00a0yeah, my bad, all is well  \n12:48\u00a0<mflorea>\u00a0has quit  \n12:50\u00a0<JuanDaugherty>\u00a0has quit  \n13:06\u00a0<lpereira>\u00a0has joined #xwiki  \n13:15\u00a0<@cjdelisle>\u00a0pulasthi: were you able to pull the checkstyle changes from my fork?  \n13:51\u00a0<pulasthi>\u00a0cjdelisle: yes thanks  \n13:51\u00a0<@cjdelisle>\u00a0cool  \n13:52\u00a0<pulasthi>\u00a0i will push with the changes in a while :)  \n13:52\u00a0<DrLou>\u00a0has joined #xwiki  \n13:52\u00a0<@cjdelisle>\u00a0cool  \n14:10\u00a0<florinciu>\u00a0has joined #xwiki  \n14:13\u00a0<vmassol1>\u00a0has quit  \n14:23\u00a0<vmassol>\u00a0has joined #xwiki  \n14:26\u00a0<vmassol>\u00a0has quit  \n14:53\u00a0<florinciu>\u00a0has quit  \n15:01\u00a0<florinciu>\u00a0has joined #xwiki  \n15:22\u00a0<lpereira>\u00a0has quit  \n15:46\u00a0<florinciu>\u00a0has quit  \n15:51\u00a0<lpereira>\u00a0has joined #xwiki  \n16:58\u00a0<jvdrean>\u00a0has joined #xwiki  \n17:55\u00a0<pulasthi>\u00a0cjdelisle: hi i pushed the changes  \n18:12\u00a0<@cjdelisle>\u00a0cool, I've been refactoring JDOQLQuery  \n18:13\u00a0<lpereira>\u00a0has quit  \n18:35\u00a0<pulasthi>\u00a0has left #xwiki  \n19:46\u00a0<JuanDaugherty>\u00a0has joined #xwiki  \n19:50\u00a0<JuanDaugherty>\u00a0there's no prexisting component, extenstion, plugin, or other infrastructure in the standard 3.1 distribution for interwiki communication, is that right?  \n19:50\u00a0<JuanDaugherty>\u00a03.1 plus the current set of extensions  \n19:51\u00a0<JuanDaugherty>\u00a0\\*extension  \n19:51\u00a0<@cjdelisle>\u00a0There is some code for managing interwiki links.  \n19:52\u00a0<@cjdelisle>\u00a0I am not sure entirely how it works though, it is old and not in common use.  \n19:52\u00a0<JuanDaugherty>\u00a0i meant live communication between two wiki apps  \n19:52\u00a0<@cjdelisle>\u00a0ahh, nope  \n19:52\u00a0<@cjdelisle>\u00a0They would have to communicate via getUrlContent() calls  \n19:52\u00a0<JuanDaugherty>\u00a0thx, was pretty clear that was the case but wanted to check  \n20:05\u00a0<JuanDaugherty>\u00a0although jvelociter has an extension which demonstrates a file pull  \n20:06\u00a0<JuanDaugherty>\u00a0s/extension/snippet/  \n20:07\u00a0<JuanDaugherty>\u00a0(not really what I meant by communication)  \n20:23\u00a0<JuanDaugherty>\u00a0has quit  \n21:59\u00a0<lpereira>\u00a0has joined #xwiki  \n22:10\u00a0<JuanDaugherty>\u00a0has joined #xwiki  \n22:23\u00a0<amon>\u00a0quit  \n22:23\u00a0<amon>\u00a0has quit  \n22:35\u00a0<mflorea>\u00a0has joined #xwiki  \n23:15\u00a0<mflorea>\u00a0has quit  \n\n"}