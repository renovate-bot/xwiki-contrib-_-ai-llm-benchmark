{"id": "extensions:Extension.LLM Application.Authenticator.WebHome", "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/", "title": "Token-based authentication for the LLM Application (BETA)", "collection": ["Eval", "Eval-Small", "Eval-Large"], "mimetype": "text/markdown", "language": "en", "content": "\n\n\n| cog | **Token-based authentication for the LLM Application.** |\n| --- | --- |\n\n\n\n| Type | XAR |\n| --- | --- |\n| Category | Authenticator |\n| Developed by | Unknown |\n| Rating | *  * [1](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Poor\") * [2](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Satisfactory\") * [3](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Good\") * [4](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Very good\") * [5](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Excellent\")    0\u00a0Votes |\n| License | GNU Lesser General Public License 2.1 |\n\n\n\n| Compatibility | 16.2.0 and above |\n| --- | --- |\n\n[Sources](https://github.com/xwiki-contrib/ai-llm/tree/main/application-ai-llm-authentication/application-ai-llm-authentication-ui)[Issues](https://jira.xwiki.org/browse/LLMAI)\n\nTable of contents\n\n* [Description](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/#HDescription)\n\t+ [Configuration](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/#HConfiguration)\n\t\t- [Authorized Applications Configuration](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/#HAuthorizedApplicationsConfiguration)\n\t+ [Token Generation](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/#HTokenGeneration)\n# Description\n\nThis extension provides a way for external applications that, e.g., embed the chat provided by the [LLM Application (BETA)](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/) to authenticate users with signed [JSON Web Tokens](https://en.wikipedia.org/wiki/JSON_Web_Token) (JWT). Users are directly created or updated based on the information provided in the token. There is currently no support for using a token as authentication for an existing user that hasn't been created through this authenticator. The authenticator supports authenticating users from several applications that are mapped to distinct user accounts. When no token is present in the request, the authenticator falls back on a configurable authenticator and it should thus be able to combine this token authenticator with any other authenticator.\n\n## Configuration\n\nYou can enable this token authenticator by setting the xwiki.authentication.authclass\u00a0property in\u00a0xwiki.properties file to org.xwiki.contrib.llm.authentication.JWTTokenAuth. Alternatively, you can select the \"JWT Token Authenticator for the LLM AI Application\" in the [authentication configuration](https://xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HChoosetheauthenticator).\n\nWhen there is no token in the request (see below), the authenticator falls back to the default authenticator. You can set the llm.authentication.jwt.authenticator property in xwiki.properties file to the authenticator that shall be used as fallback instead of the default authenticator.\n\n### Authorized Applications Configuration\n\nThe extension adds a new \"Authorized Applications\" entry to the \"Applications\" list (see top left of the following screenshot). It allows managing which applications are allowed to generate tokens for the use with this authenticator.\n\n![Screenshot of the main screen of the Authorized Applications application, showing the entries list with one entry](https://extensions.xwiki.org/xwiki/bin/download/Extension/LLM%20Application/Authenticator/WebHome/AuthorizedApplications.png?width=960&height=375&rev=1.1)\n\nBy clicking on \"Add new entry\", you can add a new authorized application. You can configure the following properties:\n\n* Title - the title of the application, this is just for display purposes\n* URL - the URL of the application. This is the identifier of the application and must match the \"issuer\" field in the generated tokens (see below)\n* The public key - this must be an Ed25519 public key in PEM format that corresponds to the private key that is used for signing the tokens (see below)\n* Group format - the format for the groups. To avoid that external applications create users with groups like XWikiAdminGroup that would grant admin right on the wiki, it is highly recommended to configure a unique prefix and possibly also suffix, e.g., by using \"Example${group}Group\" where ${group} will be replaced by the group name that is provided in the token.\n\n![Screenshot of an authorized application entry](https://extensions.xwiki.org/xwiki/bin/download/Extension/LLM%20Application/Authenticator/WebHome/ExampleApplication.png?width=650&height=435&rev=1.1)\n\n## Token Generation\n\nThis authenticator expects a JWT token that is signed with an Ed25519 key. A suitable signing key can, e.g., be generated using the [OpenSSL](https://www.openssl.org/) command line utility and the following two commands:\n\nopenssl genpkey -algorithm ed25519 -outform PEM -out private.pem  \nopenssl pkey -in private.pem -pubout -outform PEM -out public.pemThe files \"private.pem\" and \"public.pem\" then contain the private and public key in PEM format, respectively.\n\nThe JWT token needs to contain the following claims:\n\n* \"exp\": the expiration time, must be in the future but not more than 24 hours in the future\n* \"iss\": the issuer, corresponding to the URL property configured in the authorized applications\n* \"sub\": the subject, used for deriving the username\n* \"aud\": the audience, must contain the URL of the XWiki installation in the form https://www.example.com/ without path. Both a single string and an array of strings are supported. If the expected URL isn't passed, an error is logged with the expected URL.\n\nOptional:\n\n* \"given\\_name\": used to set the first name field of the user profile\n* \"family\\_name\": used to set the last name field of the user profile\n* \"email\": used to set the email field of the user profile\n* \"groups\": a list of groups (as list of strings). Used to set the groups of the user.\n* \"iat\": issued at, the time when the token was issued. Tokens older than 24 hours and tokens issued in the future aren't accepted.\n* \"nbf\": not before, the token is rejected if this time is in the future.\n\nThe token needs to be present in the \"Authorization\" header in the form \"Bearer TOKEN\" where TOKEN is the signed JWT token as described above.\n\n\n"}