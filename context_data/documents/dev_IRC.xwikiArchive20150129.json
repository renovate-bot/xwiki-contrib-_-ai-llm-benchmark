{"id": "dev:IRC.xwikiArchive20150129", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20150129", "title": "IRC Archive for channel #xwiki on 29 January 2015 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<momomomomo>\u00a0has quit  \n00:01\u00a0<vmassol>\u00a0has quit  \n00:13\u00a0<woshilapin>\u00a0has quit  \n00:16\u00a0<fmancinelli>\u00a0has quit  \n00:19\u00a0<Chuguniy>\u00a0has joined #xwiki  \n00:23\u00a0<vmassol>\u00a0has joined #xwiki  \n00:41\u00a0<sburjan`>\u00a0has joined #xwiki  \n00:44\u00a0<vmassol>\u00a0has quit  \n00:45\u00a0<sburjan>\u00a0has quit  \n00:45\u00a0<sburjan`>\u00a0is now known as <sburjan>  \n02:00\u00a0<Chuguniy>\u00a0has quit  \n05:24\u00a0<Chuguniy>\u00a0has joined #xwiki  \n05:57\u00a0<Chuguniy>\u00a0has quit  \n06:00\u00a0<Denis>\u00a0has quit  \n06:00\u00a0<Denis1>\u00a0has joined #xwiki  \n07:11\u00a0<msmeria>\u00a0has joined #xwiki  \n07:42\u00a0<RamonaConoro>\u00a0has joined #xwiki  \n08:03\u00a0<gsmeria>\u00a0has joined #xwiki  \n08:08\u00a0<vmassol>\u00a0has joined #xwiki  \n08:14\u00a0<gsmeria>\u00a0has quit  \n08:18\u00a0<gsmeria>\u00a0has joined #xwiki  \n08:26\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n09:01\u00a0<[d\\_\\_d]>\u00a0has quit  \n09:03\u00a0<[d\\_\\_d]>\u00a0has joined #xwiki  \n09:22\u00a0<vrachieru>\u00a0has joined #xwiki  \n09:26\u00a0<cjd>\u00a0has joined #xwiki  \n09:30\u00a0<woshilapin>\u00a0has joined #xwiki  \n09:42\u00a0<mflorea>\u00a0has joined #xwiki  \n09:46\u00a0<vmassol>\u00a0mflorea: good morning  \n09:46\u00a0<vmassol>\u00a0would you have any quick idea as to why this would fail in the wysiwyg editor: http://jira.xwiki.org/browse/XWIKI-11695# (see my comments and especially the last one)?  \n09:51\u00a0<mflorea>\u00a0vmassol: good morning, checking  \n09:52\u00a0<vmassol>\u00a0checking when it stopped working by testing on earlier versions now  \n09:53\u00a0<vmassol>\u00a0works in 6.2.4  \n09:53\u00a0<bouquetf>\u00a0has quit  \n09:55\u00a0<vmassol>\u00a0probably something thomas worked on I'd say  \n09:56\u00a0<vmassol>\u00a0he worked on velocity isolation AFAIK so it could be related  \n09:58\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n10:01\u00a0<bouquetf>\u00a0has joined #xwiki  \n10:01\u00a0<lucaa>\u00a0has joined #xwiki  \n10:04\u00a0<mflorea>\u00a0it works in inline edit mode (which uses the edit action also)  \n10:07\u00a0<vmassol>\u00a0mflorea: I think it could be caused by http://jira.xwiki.org/browse/XWIKI-11403  \n10:07\u00a0<vmassol>\u00a0and in edit mode somewhere we're missing a call to VelocityEngine#startedUsingMacroNamespace  \n10:07\u00a0<vmassol>\u00a0thus each velocity execution is isolated  \n10:07\u00a0<mflorea>\u00a0no, as I said, it works in edit mode when inline  \n10:07\u00a0<vmassol>\u00a0yes but there can be some different paths used  \n10:07\u00a0<vmassol>\u00a0for inline and for edit  \n10:08\u00a0<mflorea>\u00a0but the distinction here is that the content of the wysowyg editor is taken by rendering a velocity template  \n10:08\u00a0<mflorea>\u00a0/edit/Space/Page?xpage=wysiwyginput  \n10:08\u00a0<mflorea>\u00a0let's see if we can reproduce with another template  \n10:09\u00a0<vmassol>\u00a0thomas has changed the behavior and has fixed several places but my guess is that he forgot some  \n10:09\u00a0<mflorea>\u00a0it may be the wysiwyg script service  \n10:09\u00a0<mflorea>\u00a0which does the rendering  \n10:09\u00a0<vmassol>\u00a0hmm actually no it's the opposite  \n10:09\u00a0<mflorea>\u00a0https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-server/src/main/java/org/xwiki/wysiwyg/server/script/DefaultWysiwygEditorScriptService.java#L90  \n10:09\u00a0<vmassol>\u00a0he made it automatic AFAICS in teh code  \n10:11\u00a0<mflorea>\u00a0actually this is called https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-server/src/main/java/org/xwiki/wysiwyg/server/script/DefaultWysiwygEditorScriptService.java#L120  \n10:11\u00a0<Chuguniy>\u00a0has joined #xwiki  \n10:12\u00a0<tmortagne>\u00a0has joined #xwiki  \n10:13\u00a0<vmassol>\u00a0tmortagne: good morning, I need your input :)  \n10:13\u00a0<vmassol>\u00a0(you can check the last 3 comments on http://jira.xwiki.org/browse/XWIKI-11695# )  \n10:13\u00a0<tmortagne>\u00a0vmassol: sure, give me a few minutes to wakeup  \n10:13\u00a0<vmassol>\u00a0I'm trying to understand your change  \n10:13\u00a0<vmassol>\u00a0in DVE  \n10:14\u00a0<vmassol>\u00a0DefaultVelocityEngine  \n10:14\u00a0<vmassol>\u00a0about startedUsingMacroNamespaceInternal/stop\\*  \n10:14\u00a0<mflorea>\u00a0vmassol: I can reproduce in a wiki page by calling  \n10:14\u00a0<mflorea>\u00a0{{{$services.wysiwyg.toAnnotatedXHTML($myDoc.content, $myDoc.syntax.toIdString())}}}  \n10:14\u00a0<vmassol>\u00a0ok  \n10:14\u00a0<mflorea>\u00a0where $myDoc is the doc that has the content you posted in your comment  \n10:15\u00a0<vmassol>\u00a0to me it looks lile some namespace stuff  \n10:15\u00a0<vmassol>\u00a0but tmortagne will know better  \n10:15\u00a0<mflorea>\u00a0yes  \n10:15\u00a0<tmortagne>\u00a0vmassol: did you checked http://www.xwiki.org/xwiki/bin/view/ReleaseNotes/ReleaseNotesXWiki64#HCleanupunprotectednamespaces ?  \n10:16\u00a0<tmortagne>\u00a0it explain the change with an example  \n10:17\u00a0<mflorea>\u00a0toAnnotatedXHTML calls this https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-server/src/main/java/org/xwiki/wysiwyg/server/internal/converter/DefaultHTMLConverter.java#L145  \n10:17\u00a0<tmortagne>\u00a0did not looked at the detail but from what I understand it looks like the issue is that the wysiwyg does not declare a transformation id for the content it execute  \n10:17\u00a0<mflorea>\u00a0this is probably the job of DefaultHTMLConverter, in toHTML  \n10:17\u00a0<tmortagne>\u00a0TransformationManager#performTransformations is automatically taking care of that so I guess it means the wysig execute its own txs  \n10:18\u00a0<mflorea>\u00a0yes, because it executes only macro transformaitons  \n10:18\u00a0<mflorea>\u00a0see https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-wysiwyg/xwiki-platform-wysiwyg-server/src/main/java/org/xwiki/wysiwyg/server/internal/converter/DefaultHTMLConverter.java#L145  \n10:18\u00a0<tmortagne>\u00a0ok will look at the code  \n10:19\u00a0<vmassol>\u00a0so we need to wrap the toHTML() with a start/stop?  \n10:19\u00a0<mflorea>\u00a0#parseAndRender should be fixed too (also in DefaultHTMLConverter)  \n10:19\u00a0<tmortagne>\u00a0by the way it mean the wysiwyg used to leak velocity macros  \n10:20\u00a0<tmortagne>\u00a0vmassol: basically when you think it's possible that you execute several script you need to use start/stop  \n10:21\u00a0<tmortagne>\u00a0most of the time you use transformation manager and other APIs that take care of that for you so you don't really care but sometime you are doing cutom stuff  \n10:23\u00a0<fmancinelli>\u00a0has joined #xwiki  \n10:25\u00a0<tmortagne>\u00a0I think I can find some criteria to fix the issue directly in MacroTransformation  \n10:25\u00a0<tmortagne>\u00a0should reduce issues with custom codes that use only this tx  \n10:27\u00a0<tmortagne>\u00a0vmassol: can I assign XWIKI-11695 to me ?  \n10:28\u00a0<tmortagne>\u00a0or do you want do to it with some pointers maybe ?  \n10:28\u00a0<vmassol>\u00a0tmortagne: sniff my BFD issue goes away\u2026 :) go ahead I'll find another one  \n10:28\u00a0<tmortagne>\u00a0I can give you some advice on how it could be fixed if you want  \n10:28\u00a0<vmassol>\u00a0yes maybe it's better  \n10:28\u00a0<vmassol>\u00a0so that I understand the changes you made  \n10:30\u00a0<tmortagne>\u00a0vmassol: in MacroTransformation#transform you get a TransformationContext which among other things contains a transformation id, you can compare it to th current transformation id (RenderingContext#getTransformationId) and if it's not the same put the whole transformation around a start/stop with the transformation id from the TransformationContext  \n10:31\u00a0<Guest16855>\u00a0has joined #xwiki  \n10:32\u00a0<vmassol>\u00a0ok  \n10:32\u00a0<tmortagne>\u00a0that way the whole transformation will share the same namespace  \n10:33\u00a0<tmortagne>\u00a0actually you don't even need to check if it's the same since start/stop hard a stack internally so if the current id is already the right one it's ok too, it's just useless, as you want  \n10:34\u00a0<vmassol>\u00a0ok so the code checks the stack and it's the same it doesn't create a new element on the stack?  \n10:34\u00a0<vmassol>\u00a0\\*same id  \n10:34\u00a0<vmassol>\u00a0will check the code  \n10:35\u00a0<tmortagne>\u00a0vmassol: also don't forget to update the rendering context since that's probably another bug of the WYSIWYG, if it does not start/stop I guess it also does not make sure to update the rendering context  \n10:35\u00a0<tmortagne>\u00a0you can look at transformationmanager code for all this  \n10:35\u00a0<vmassol>\u00a0yep I'm reaing it now  \n10:35\u00a0<vmassol>\u00a0\\*reading  \n10:35\u00a0<tmortagne>\u00a0we are starting to ave code that count on rendering context to be right so we need to make sure it's always right  \n10:36\u00a0<vmassol>\u00a0this starts to be quite complex overall though...  \n10:39\u00a0<vmassol>\u00a0tmortagne: why did you introduce MutableRenderingContext instead of refactoring RenderingContext?  \n10:39\u00a0<vmassol>\u00a0this forces ugly casts  \n10:39\u00a0<tmortagne>\u00a0vmassol: I did not  \n10:40\u00a0<tmortagne>\u00a0Denis did  \n10:40\u00a0<tmortagne>\u00a0MutableRenderingContext is internal  \n10:40\u00a0<tmortagne>\u00a0and RenderingContext was supposed to be read only  \n10:40\u00a0<vmassol>\u00a0still there's a problem  \n10:40\u00a0<tmortagne>\u00a0he did not wanted to have it modifiable  \n10:40\u00a0<vmassol>\u00a0((MutableRenderingContext) this.renderingContext).transformInContext(transformation, context, block);  \n10:40\u00a0<vmassol>\u00a0is not nice  \n10:40\u00a0<tmortagne>\u00a0it's not supposed to be used much  \n10:41\u00a0<vmassol>\u00a0why do this:  \n10:41\u00a0<vmassol>\u00a0@Inject  \n10:41\u00a0<vmassol>\u00a0private RenderingContext renderingContext;  \n10:41\u00a0<vmassol>\u00a0instead of being inject a mutable RC?  \n10:41\u00a0<vmassol>\u00a0\\*injected  \n10:41\u00a0<tmortagne>\u00a0the role is RenderingContext  \n10:41\u00a0<vmassol>\u00a0yes with a different role then  \n10:41\u00a0<tmortagne>\u00a0would be a different context  \n10:41\u00a0<vmassol>\u00a0AFAICS all the RenderingContext stuff is 6.0 so still unstable  \n10:41\u00a0<tmortagne>\u00a0different role means different instance  \n10:41\u00a0<Denis1>\u00a0the mutable aspect of it is not public API  \n10:42\u00a0<vmassol>\u00a0I know Denis1 but the impl is ugly  \n10:42\u00a0<tmortagne>\u00a0vmassol: you can propose something else  \n10:42\u00a0<vmassol>\u00a0yes sure like I have the time to redo eveything Denis did :)  \n10:43\u00a0<vmassol>\u00a0I don't think the answer is to ask someone finding a problem to redo everything others did :)  \n10:43\u00a0<vmassol>\u00a0I'm just questioning the need for the cast which IMO is a design smell  \n10:43\u00a0<Denis1>\u00a0this is the best I could do at the time it has been done, and if you consider that we should get rid of the mutable aspect, I do not see where you have a problem  \n10:44\u00a0<vmassol>\u00a0what I know is that if I have to design something from scratch I 'll never force c ast  \n10:44\u00a0<vmassol>\u00a0\\*cast  \n10:44\u00a0<Denis1>\u00a0is now known as <Denis>  \n10:44\u00a0<Denis>\u00a0I do not want to keep a MutableContext in the end  \n10:44\u00a0<vmassol>\u00a0now I don't know enough about what was done to suggest something ATM  \n10:44\u00a0<Denis>\u00a0so if you have the time to refactor what need be to get rid of it, go on :)  \n10:45\u00a0<tmortagne>\u00a0vmassol: the answer is not to just say \"that's crap\" without any counter proposal, Denis tough a lot about it and did what he could  \n10:45\u00a0<Denis>\u00a0as you said, I am inheriting of someone else work, and we can always redo what as been done  \n10:45\u00a0<vmassol>\u00a0what I meant  \n10:46\u00a0<Denis>\u00a0s/can/can't  \n10:46\u00a0<vmassol>\u00a0is that this new concept of Rendering Context is new  \n10:46\u00a0<vmassol>\u00a0still new  \n10:46\u00a0<vmassol>\u00a0but not for a long time more  \n10:46\u00a0<Denis>\u00a0the RenderingContext as non-mutable is clean  \n10:46\u00a0<vmassol>\u00a0(it's going to be out of unstable)  \n10:46\u00a0<Denis>\u00a0the mutable stuff is internal  \n10:46\u00a0<vmassol>\u00a0and if we wait too long  \n10:46\u00a0<vmassol>\u00a0we'll have no options  \n10:46\u00a0<tmortagne>\u00a0MutableRenderingContext is internal, we can change it anytime we want  \n10:46\u00a0<Denis>\u00a0we should not be afraid  \n10:46\u00a0<vmassol>\u00a0you don't understand tmortagne  \n10:46\u00a0<Denis>\u00a0the dirty aspect has been kept internal  \n10:46\u00a0<vmassol>\u00a0I'm talking design  \n10:47\u00a0<vmassol>\u00a0and you're talking impl  \n10:47\u00a0<tmortagne>\u00a0again what is public is only the read only part and there is no issue there  \n10:47\u00a0<tmortagne>\u00a0nobody need to cast anything to get the current rendering context properties  \n10:48\u00a0<tmortagne>\u00a0anything else IS impl so you are talking about impl  \n10:48\u00a0<Denis>\u00a0the designed aspect is clean Vincent, there is no issue there. This is why I done it that way  \n10:49\u00a0<Denis>\u00a0I really do not get why you are worried  \n10:49\u00a0<vmassol>\u00a0ok so you consider casting clean we're not going to agree on that :)  \n10:49\u00a0<vmassol>\u00a0let's stop here  \n10:49\u00a0<Denis>\u00a0this is implementation details in internal stuffs  \n10:49\u00a0<vmassol>\u00a0internal impl doesn't mean it has to be hackish  \n10:49\u00a0<Denis>\u00a0this has nothing to do with the our public API  \n10:49\u00a0<vmassol>\u00a0of course I could use relfection everywehre  \n10:49\u00a0<vmassol>\u00a0instead of calling setters  \n10:50\u00a0<Denis>\u00a0ok, if you have plenty of time, change it !  \n10:50\u00a0<vmassol>\u00a0it'll still work  \n10:50\u00a0<vmassol>\u00a0and still be internal  \n10:50\u00a0<vmassol>\u00a0but it wouldn't be right  \n10:50\u00a0<vmassol>\u00a0let's stop here because I don't hae the time to change and you think it's right  \n10:51\u00a0<Denis>\u00a0to get rid of that casting, there is a lot to do, I have evaluate it, and taking timing aspect into consideration, I have made the current implementation. If you do not like it, and you have more time, you can improve. I have not cut your options  \n10:51\u00a0<vmassol>\u00a0ok I prefer this answer :)  \n10:51\u00a0<Denis>\u00a0do we have ever say something else ?  \n10:51\u00a0<vmassol>\u00a0that you know it's not right but you did it for time considerations  \n10:51\u00a0<vmassol>\u00a0I can accept taht  \n10:52\u00a0<vmassol>\u00a0yes thomas was saying it was right  \n10:52\u00a0<Denis>\u00a0since the beginning, I said that the mutable aspect of the RC should be get rid of  \n10:52\u00a0<tmortagne>\u00a0vmassol: I said the public API was right...  \n10:53\u00a0<Denis>\u00a0exactly  \n10:53\u00a0<Denis>\u00a0and to get the public API right, I have introduce that cast  \n10:53\u00a0<tmortagne>\u00a0re XWIKI-11695 the best would probably be to allow passing transformations to TransformationManager  \n10:53\u00a0<Denis>\u00a0until we have time to really not need it  \n10:53\u00a0<tmortagne>\u00a0that way TransformationManager will take care of rendering context and stuff  \n10:54\u00a0<vmassol>\u00a0all I know is that this is one more complex thing to understand  \n10:54\u00a0<Denis>\u00a0that should, and currently we have tons of place where you can really use it  \n10:54\u00a0<Denis>\u00a0this is where the design was flawed  \n10:54\u00a0<vmassol>\u00a0and I defy anyone to write code that is correct  \n10:54\u00a0<Denis>\u00a0and this not my work  \n10:54\u00a0<vmassol>\u00a0the proof is the bug I'm trying to fix  \n10:54\u00a0<vmassol>\u00a0if you check the wysiwyg code it has to understand the cast apparently  \n10:54\u00a0<tmortagne>\u00a0setting the rendering context is not supposed to be common stuff, that's why it's internal  \n10:55\u00a0<vmassol>\u00a0yes we probabmy need a way  \n10:55\u00a0<vmassol>\u00a0to execute only some transformations  \n10:55\u00a0<vmassol>\u00a0and not let that to users of the api  \n10:55\u00a0<vmassol>\u00a0to figure out  \n10:55\u00a0<tmortagne>\u00a0and I just suggested who to do it in a cleaner way  \n10:55\u00a0<tmortagne>\u00a0\"he best would probably be to allow passing transformations to TransformationManager\"  \n10:55\u00a0<tmortagne>\u00a0s/who/how/  \n10:56\u00a0<vmassol>\u00a0yes \u00a0I agree and I believe we even discussed that at the beginning of the rendering module but we didn't do it  \n10:56\u00a0<vmassol>\u00a0I think I didn't do it initially becasue it was suppose to be easy just to look up one Tx and execute t  \n10:57\u00a0<vmassol>\u00a0\\*it  \n10:57\u00a0<vmassol>\u00a0but it's now complex  \n10:57\u00a0<vmassol>\u00a0since there are several stuff to prepare  \n10:58\u00a0<tmortagne>\u00a0the bug you are working on is not about rendering context  \n10:58\u00a0<vmassol>\u00a0I'm talking about transformations here  \n10:58\u00a0<tmortagne>\u00a0I'm just talling you that there is probably others bugs because of that  \n10:58\u00a0<tmortagne>\u00a0s/talling/telling/  \n10:58\u00a0<vmassol>\u00a0well you shell that to yourself because you introduced the change :)  \n10:58\u00a0<vmassol>\u00a0\\*should tell  \n10:58\u00a0<vmassol>\u00a0so better check it out  \n10:59\u00a0<vmassol>\u00a0all places that calls Tx diretly  \n10:59\u00a0<tmortagne>\u00a0again Denis introduced it  \n10:59\u00a0<tmortagne>\u00a0if you don't want to do it don't do it  \n10:59\u00a0<vmassol>\u00a0I'm talking about the isoaltion stuff  \n10:59\u00a0<vmassol>\u00a0velocity isoaltion  \n10:59\u00a0<tmortagne>\u00a0since you were working on it I tough it was a good thing to check other things to  \n11:00\u00a0<Bugendolf>\u00a0has quit  \n11:02\u00a0<Denis>\u00a0When I introduce the RC, I had check out to my best all places that are running transformation, and I was disappointed to see so much duplicated code, but a complete refactoring was out of my reach at that time  \n11:02\u00a0<Denis>\u00a0hence the cast stuff which was the cleanest way to solve it out for the moment  \n11:08\u00a0<lucaa>\u00a0has quit  \n11:08\u00a0<Bugendolf>\u00a0has joined #xwiki  \n11:10\u00a0<vmassol>\u00a0Denis: ok  \n11:10\u00a0<vmassol>\u00a0thanks for the explanations  \n11:15\u00a0<vmassol>\u00a0tmortagne: so if I understand correctly when you create a new TransformationContext you should always pass an id as otherwise there's no open/close done  \n11:15\u00a0<vmassol>\u00a0so why not make the id part of the constructor and deprecate the current constructors not taking an id, to make it mandaotry?  \n11:15\u00a0<tmortagne>\u00a0you mean when you call transformationmanager ?  \n11:15\u00a0<vmassol>\u00a0no I mean when calling new TransformationContet()  \n11:16\u00a0<tmortagne>\u00a0TransformationContet does not call any start/stop  \n11:16\u00a0<vmassol>\u00a0AFAICS in XWikiRenderingContext  \n11:16\u00a0<vmassol>\u00a0if the id is not set then no open/vlose  \n11:16\u00a0<vmassol>\u00a0yes but with the code in XWikiRenderingContext we kind of require an id or it won't work properly  \n11:16\u00a0<tmortagne>\u00a0so you are talking about RenderingContext  \n11:17\u00a0<vmassol>\u00a0I'm talking about user code  \n11:17\u00a0<vmassol>\u00a0if someone writes new TransformationContext() the nit's likely to not work  \n11:18\u00a0<tmortagne>\u00a0if you don't give an id it means you want to stay with the current id AFAIK  \n11:18\u00a0<vmassol>\u00a0ok then all this needs to be documented  \n11:18\u00a0<vmassol>\u00a0right now when I read the javadoc for Tx I don't understand that  \n11:18\u00a0<vmassol>\u00a0fixing it  \n11:19\u00a0<vmassol>\u00a0so our problem is that we're not inside any current Tx  \n11:19\u00a0<vmassol>\u00a0(and thus no id is set)  \n11:20\u00a0<vmassol>\u00a0maybe there's a way to check that in our code automatically  \n11:20\u00a0<tmortagne>\u00a0yes that's RederingContext job  \n11:21\u00a0<tmortagne>\u00a0it contain the current rendering related properties  \n11:21\u00a0<tmortagne>\u00a0this is why I suggested you to check it before calling start/stop in my first message  \n11:22\u00a0<vmassol>\u00a0yes but I don't care here I think  \n11:23\u00a0<vmassol>\u00a0unless toHTML and parseAndRender are called recusrively  \n11:23\u00a0<lucaa>\u00a0has joined #xwiki  \n11:24\u00a0<vmassol>\u00a0ok I'll do the \"clean\" way just to prove I understand :)  \n11:26\u00a0<tmortagne>\u00a0vmassol: I don't know much about toHTML but if it's just a helper to convert a XDOM to HTML with macro execution it might be reused by a macro or something  \n11:27\u00a0<tmortagne>\u00a0the question is more do we want toHTML to be isolated or not  \n11:27\u00a0<vmassol>\u00a0tmortagne: any best practice for naming a tx id?  \n11:28\u00a0<vmassol>\u00a0planning to use \"wysiwygtxid\"  \n11:30\u00a0<tmortagne>\u00a0we don't really have naming rules right now, the template path is used for template and the document reference for document rendering  \n11:30\u00a0<tmortagne>\u00a0you don't need to worry about two thread using the same namespace the velocityengine is taking care of that  \n11:31\u00a0<vmassol>\u00a0yep seen that code  \n11:43\u00a0<vmassol>\u00a0tmortagne: we're already in a tx actually  \n11:44\u00a0<vmassol>\u00a0id = \"/skins/flamingo/wysiwyginput.vm\"  \n11:44\u00a0<vmassol>\u00a0so it means this tx has not set an id  \n11:44\u00a0<vmassol>\u00a0or has not called start/stop  \n11:45\u00a0<vmassol>\u00a0so when we parse a template we create a tx now?  \n11:45\u00a0<tmortagne>\u00a0\"the template path is used for template\"  \n11:46\u00a0<tmortagne>\u00a0there id when executing a template yes  \n11:46\u00a0<vmassol>\u00a0why is there a Tx when executing a template?  \n11:46\u00a0<vmassol>\u00a0and how do I differentitate a template tx from other tx?  \n11:46\u00a0<tmortagne>\u00a0transplates are content executed  \n11:47\u00a0<tmortagne>\u00a0some are only velocity and some are wiki syntax  \n11:47\u00a0<vmassol>\u00a0this one is velocity  \n11:47\u00a0<tmortagne>\u00a0but you still need to indicate what is the current id used  \n11:47\u00a0<vmassol>\u00a0that's what I don't understand  \n11:47\u00a0<tmortagne>\u00a0it's the same  \n11:47\u00a0<tmortagne>\u00a0the transformation id is the id used to execute script  \n11:47\u00a0<vmassol>\u00a0so the velocity execution goes throgh the Rendering as a Velocity Macro being executed?  \n11:47\u00a0<tmortagne>\u00a0the source being wiki syntaxe or directly velocity it's the same you still execute something  \n11:47\u00a0<tmortagne>\u00a0like if you had only a velocity macro in your wiki content  \n11:48\u00a0<tmortagne>\u00a0it does not create a XDOM no to not spend time on useless stuff but it still properly set the rendering context for anyone to reuse a transformation id, velocity namespace etc  \n11:49\u00a0<vmassol>\u00a0why is the template exectuion not calling start/stop? imagine there's two velcocity macros in a template?  \n11:49\u00a0<tmortagne>\u00a0it does  \n11:50\u00a0<vmassol>\u00a0hmm \u00a0then I don't understand why the wysiwyg doesn't work  \n11:50\u00a0<tmortagne>\u00a0no idea, you could put a breakpoint in the velocity engine to see what namespaces are used  \n11:51\u00a0<vmassol>\u00a0ok I'll debug further  \n11:51\u00a0<tmortagne>\u00a0but I don't think we want to reuse the template id anyway  \n11:51\u00a0<tmortagne>\u00a0the WYSIWYF should execute what he want to execute in an isolated way IMO  \n11:51\u00a0<tmortagne>\u00a0to not pollute the WYSIWYG template  \n11:51\u00a0<vmassol>\u00a0but we don't have a way to differentiate template tx from non template tx do we?  \n11:52\u00a0<tmortagne>\u00a0like document rendering use it's own namespace  \n11:52\u00a0<vmassol>\u00a0ok then we shouldn't do the \"if\" you suggested right?  \n11:52\u00a0<tmortagne>\u00a0vmassol: it depends what is executed exactly here  \n11:52\u00a0<vmassol>\u00a0or we could  \n11:53\u00a0<vmassol>\u00a0but just to not recreate a new id when the current id is the wysiwyg one  \n11:53\u00a0<vmassol>\u00a0just in case it's called recursively there after  \n11:53\u00a0<vmassol>\u00a0i'l do that  \n11:53\u00a0<tmortagne>\u00a0I suggested a if mostly for the macro transformation to not break anything but maybe the WYSIWYG should force an isolation  \n11:53\u00a0<tmortagne>\u00a0I don't know exactly the use case  \n11:53\u00a0<vmassol>\u00a0still going to see what namespace is used. I'm curious  \n11:55\u00a0<tmortagne>\u00a0vmassol: the id used in practice is the one in the transformation context when executing a velocity macro so the issue is probably with null in the velocity macro  \n11:55\u00a0<tmortagne>\u00a0what is in the renderingcontext is an information that we try to keep up to date  \n11:56\u00a0<tmortagne>\u00a0maybe its generating a namespace instead of using the current one  \n11:57\u00a0<vmassol>\u00a0namespace used is \"unknown namespace\"  \n11:57\u00a0<tmortagne>\u00a0probably because of the null in the transformation context indeed then  \n11:57\u00a0<vmassol>\u00a0yes apprently  \n11:59\u00a0<vmassol>\u00a0so  \n11:59\u00a0<vmassol>\u00a0if you don't set an id, even if you're inside a Tx, velocity scripts will be ioslated  \n12:00\u00a0<vmassol>\u00a0we treat \"unknown namespace\" in a psecial way?  \n12:00\u00a0<vmassol>\u00a0(need to check that part)  \n12:00\u00a0<vmassol>\u00a0apparently not  \n12:00\u00a0<vmassol>\u00a0hmm then I don't get it  \n12:01\u00a0<vmassol>\u00a0the 2 velocity macros shoiuld both use \"unknown namespace\" as their namespace  \n12:02\u00a0<vmassol>\u00a0tmortagne: I don't understand this code in DefaultVelocityEngine:  \n12:02\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0startedUsingMacroNamespaceInternal(namespace);  \n12:03\u00a0<vmassol>\u00a0ah I understand  \n12:04\u00a0<vmassol>\u00a0it works because it's a put in a Map so it's not going to create a new \"namespace\"  \n12:04\u00a0<tmortagne>\u00a0lunch time, back in 1 or 2h  \n12:04\u00a0<vmassol>\u00a0so if it's empty then no isolation...  \n12:38\u00a0<gsmeria>\u00a0has quit  \n12:44\u00a0<Slashman>\u00a0has joined #xwiki  \n12:49\u00a0<cjd>\u00a0has quit  \n12:54\u00a0<Guest16855>\u00a0hello can i hava a help with a problem with xwiki 6.4 after upgrade from 6.3 ?  \n13:05\u00a0<vmassol>\u00a0Guest16855: hi, you need to state your problem or we won't be able to help you :)  \n13:31\u00a0<Guest16855>\u00a0ok thanks  \n13:32\u00a0<Guest16855>\u00a0after upgrade xwiki from 6.3 to 6.4, i have a problem with solr  \n13:32\u00a0<vmassol>\u00a0yep  \n13:32\u00a0<Guest16855>\u00a0org.apache.solr.common.SolrException: Error loading class 'org.xwiki.search.solr.internal.XWikiDismaxQParserPlugin'  \n13:32\u00a0<vmassol>\u00a0http://www.xwiki.org/xwiki/bin/view/ReleaseNotes/ReleaseNotesXWiki64  \n13:32\u00a0<vmassol>\u00a0it's in red letters to make it easy to notice :)  \n13:39\u00a0<Guest16855>\u00a0ok thanks it's allright  \n13:40\u00a0<Guest16855>\u00a0remove solr directory  \n13:40\u00a0<Guest16855>\u00a0yesterday, i have clean the directory and not delete  \n13:40\u00a0<Guest16855>\u00a0and in this case, problem  \n14:03\u00a0<lucaa1>\u00a0has joined #xwiki  \n14:03\u00a0<lucaa>\u00a0has quit  \n14:12\u00a0<vmassol>\u00a0Guest16855: ok  \n14:19\u00a0<tmortagne>\u00a0vmassol: something weird on mail test, maybe you forgot to commit something:  \n14:19\u00a0<tmortagne>\u00a0[ERROR] /home/hudsonagent/jenkins\\_root/workspace/xwiki-platform/xwiki-platform-core/xwiki-platform-mail/xwiki-platform-mail-test/xwiki-platform-mail-test-tests/src/test/it/org/xwiki/mail/test/ui/MailTest.java:[100,21] cannot find symbol \u00a0\u00a0symbol: \u00a0\u00a0method setDiscardSuccessStatuses(boolean) \u00a0\u00a0location: variable sendMailPage of type org.xwiki.mail.test.po.SendMailAdministrationSectionPage  \n14:19\u00a0<vmassol>\u00a0hmm thanks tmortagne, checking  \n14:20\u00a0<vmassol>\u00a0it's building fine here  \n14:21\u00a0<vmassol>\u00a0this means the pageobjets module wasn't built which is strange  \n14:22\u00a0<vmassol>\u00a0seems to be there though: https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-mail/xwiki-platform-mail-test/xwiki-platform-mail-test-pageobjects/src/main/java/org/xwiki/mail/test/po/SendMailAdministrationSectionPage.java#L87  \n14:22\u00a0<vmassol>\u00a0looks like a problem on jenkins somewehre  \n14:23\u00a0<vmassol>\u00a0but I don't see how it could not build the pageobjects  \n14:24\u00a0<vmassol>\u00a0apparently it didn't build the pageobjects in this bild  \n14:24\u00a0<vmassol>\u00a0\\*build  \n14:24\u00a0<vmassol>\u00a0at http://ci.xwiki.org/job/xwiki-platform/789/console  \n14:25\u00a0<vmassol>\u00a0there's a test depednency on it though  \n14:25\u00a0<tmortagne>\u00a0vmassol: jenkins is configured for partial build so sometimes it fail and then \u00a0not build what was not built in the previous run  \n14:25\u00a0<vmassol>\u00a0so I don't know what happened but a full build shuld solve it  \n14:26\u00a0<tmortagne>\u00a0should be ok if you start platform build by hand, will rebuild the whole thing  \n14:31\u00a0<Guest16855>\u00a0has quit  \n14:31\u00a0<cjd>\u00a0has joined #xwiki  \n14:40\u00a0<vmassol>\u00a0gdelhumeau: errro html export doesn't work at all for me on 7.0, it's just hanging...  \n14:41\u00a0<gdelhumeau>\u00a0it is very long now  \n14:41\u00a0<vmassol>\u00a0so that's a bug regression  \n14:41\u00a0<vmassol>\u00a0it's not usable a tall for me  \n14:41\u00a0<vmassol>\u00a0I've waited over 1 minute and still nothing  \n14:41\u00a0<vmassol>\u00a0it used to be immediate, after 1 second  \n14:42\u00a0<tmortagne>\u00a0gdelhumeau: I can understand the time spend on less build but less build is not 1 minute  \n14:42\u00a0<gdelhumeau>\u00a0it is compiled multiple times  \n14:42\u00a0<vmassol>\u00a0and it shouldn't recompile here either  \n14:43\u00a0<vmassol>\u00a0in any case that's a blocker regression gdelhumeau  \n14:43\u00a0<gdelhumeau>\u00a0it's better on 6.2.x, maybe some page using LESS in SSX  \n14:43\u00a0<tmortagne>\u00a0what is the creteria to rebuild it in the same html export ?  \n14:43\u00a0<tmortagne>\u00a0criteria  \n14:43\u00a0<gdelhumeau>\u00a0I was hopping that less4j would solve this  \n14:43\u00a0<vmassol>\u00a0no  \n14:43\u00a0<gdelhumeau>\u00a0tmortagne: the URL  \n14:43\u00a0<vmassol>\u00a0no tool will ever solve this  \n14:43\u00a0<gdelhumeau>\u00a0the url for a CSS is not the same for then main page  \n14:43\u00a0<vmassol>\u00a0there's an intrinsic problem  \n14:44\u00a0<vmassol>\u00a0exporting HTML is already a complex process, adding overhead is just not going to to doit  \n14:44\u00a0<tmortagne>\u00a0gdelhumeau: you mean an URL in the page which is exported ?  \n14:44\u00a0<gdelhumeau>\u00a0yes  \n14:44\u00a0<tmortagne>\u00a0why ?  \n14:45\u00a0<Chuguniy>\u00a0has quit  \n14:45\u00a0<vmassol>\u00a0my cpu is going crazy too during the export  \n14:46\u00a0<tmortagne>\u00a0you mean each css included in the page produce a new less build ?  \n14:46\u00a0<gdelhumeau>\u00a0those which uses LESS  \n14:46\u00a0<tmortagne>\u00a0in standard it's what ? just style.css ?  \n14:46\u00a0<tmortagne>\u00a0if I export an empty page in XE for example it generate how many builds ?  \n14:47\u00a0<vmassol>\u00a01 minute 22 seconds  \n14:47\u00a0<vmassol>\u00a0to export the sandbox.webhome page  \n14:47\u00a0<tmortagne>\u00a0is it only the first time or nothing is cached ?  \n14:47\u00a0<vmassol>\u00a0used to be areound 1 second  \n14:47\u00a0<gdelhumeau>\u00a0everything is explained there: http://jira.xwiki.org/browse/XWIKI-11658#  \n14:47\u00a0<vmassol>\u00a0I don't understan dhow you can consdier this acceptable/normal gdelhumeau  \n14:48\u00a0<vmassol>\u00a0...  \n14:48\u00a0<vmassol>\u00a0and why it wasn't raised  \n14:48\u00a0<vmassol>\u00a0is there are jira issue?  \n14:48\u00a0<gdelhumeau>\u00a0it was good for 6.2.x for which I've made it  \n14:48\u00a0<vmassol>\u00a0(for the html export)  \n14:48\u00a0<gdelhumeau>\u00a0but I don't know why 6.4 is so long  \n14:48\u00a0<vmassol>\u00a0it doesn't that you don't know why  \n14:48\u00a0<vmassol>\u00a0the \u00a0minimum to do if you knew bout it  \n14:48\u00a0<vmassol>\u00a0was to raise a bocker  \n14:48\u00a0<vmassol>\u00a0\\*blocker  \n14:49\u00a0<vmassol>\u00a0do we have a jira issue?  \n14:49\u00a0<gdelhumeau>\u00a0no  \n14:49\u00a0<vmassol>\u00a0ok creating one  \n14:49\u00a0<vmassol>\u00a0sigh\u2026 one more blocker :(  \n14:49\u00a0<tmortagne>\u00a0I'm surprise we don't get a timeout in the HTMLExportTest test if it's that long  \n14:51\u00a0<tmortagne>\u00a0we should probably put a shorter timeout there  \n14:52\u00a0<vmassol>\u00a0tmortagne: we should include export performance tests in the test report too maybe?  \n14:53\u00a0<tmortagne>\u00a0vmassol: a timeout in the automated test would catch it way quicker  \n14:53\u00a0<tmortagne>\u00a0since we already have such a test  \n14:53\u00a0<vmassol>\u00a0yes but it'll never work good enough  \n14:53\u00a0<vmassol>\u00a0if you put a timeout at 3 seconds  \n14:53\u00a0<vmassol>\u00a0the tests will fail too often  \n14:54\u00a0<vmassol>\u00a0and if you put it at 30 seconds it's too long, even 3 seconds is too long for exporting 1 pzage  \n14:54\u00a0<vmassol>\u00a0\\*\u00e2ge  \n14:54\u00a0<vmassol>\u00a0grr  \n14:54\u00a0<vmassol>\u00a0\\*page  \n14:54\u00a0<tmortagne>\u00a0sure but you are talking about something that takes more than 1 minutes here, putting 10 or 20 s should not produce too many false positive  \n14:54\u00a0<tmortagne>\u00a0it's not going to be less than 3s  \n14:55\u00a0<tmortagne>\u00a0building less takes 8s itself already  \n14:55\u00a0<vmassol>\u00a0then we should drop less  \n14:55\u00a0<cjd>\u00a0you're not making the azerty keyboard seem easy to use  \n14:55\u00a0<vmassol>\u00a0we cannot penalize all our features becaude of less  \n14:55\u00a0<vmassol>\u00a0I'm getting seriously pissed by less  \n14:55\u00a0<vmassol>\u00a0it's \u00a0a nightmare  \n14:55\u00a0<vmassol>\u00a0did I say I hate generators :)  \n14:56\u00a0<tmortagne>\u00a0it's better with less4j according to gdelhumeau but probably still slow  \n14:56\u00a0<vmassol>\u00a0it's never going to be fast enough  \n14:56\u00a0<tmortagne>\u00a0but there is probably things we can prebuild, right now we rebuild everything all the time  \n14:56\u00a0<vmassol>\u00a0one option is to forget dynamcity and precompile stuff  \n14:57\u00a0<gdelhumeau>\u00a0then it's a regression  \n14:57\u00a0<vmassol>\u00a0less itself is a regression on the performance aspect in several places  \n14:57\u00a0<tmortagne>\u00a0gdelhumeau: is thare caching or html export rebuild everything each time ?  \n14:57\u00a0<vmassol>\u00a0it brings some new feature but at too high a cost ATM  \n14:57\u00a0<tmortagne>\u00a0we have cache in view and it's dine  \n14:57\u00a0<tmortagne>\u00a0fine  \n14:57\u00a0<gdelhumeau>\u00a0tmortagne: no cache  \n14:57\u00a0<gdelhumeau>\u00a0it used to have one  \n14:58\u00a0<gdelhumeau>\u00a0but it was breaking icons  \n14:58\u00a0<vmassol>\u00a0even view is not fine tmortagne, it's taking too long on the first run  \n14:58\u00a0<tmortagne>\u00a0there is a specific blocker or just do not had time to look at it ?  \n14:59\u00a0<tmortagne>\u00a0vmassol: it's taking 8s on the very fist run among many other stuff, less is not the only thing happening on first run  \n14:59\u00a0<vmassol>\u00a0thaty's not tre tmortagne  \n14:59\u00a0<vmassol>\u00a0your confusing stuff  \n14:59\u00a0<vmassol>\u00a0the first page accessed  \n14:59\u00a0<vmassol>\u00a0and when you make changes later on in xobjets  \n14:59\u00a0<vmassol>\u00a0for example  \n14:59\u00a0<vmassol>\u00a0or in skin  \n14:59\u00a0<vmassol>\u00a0so you do get the timeout several times  \n14:59\u00a0<vmassol>\u00a0it's a pain  \n15:00\u00a0<vmassol>\u00a0and make xwiki slugglish  \n15:00\u00a0<tmortagne>\u00a0sure but the skin is not something you modify all the time  \n15:00\u00a0<vmassol>\u00a0as a feeling  \n15:01\u00a0<tmortagne>\u00a0not many people experience the first slow run unless your wiki restart all the time  \n15:01\u00a0<vmassol>\u00a0personally I feel we've regressed because of LESS (in term of overall perf)  \n15:01\u00a0<vmassol>\u00a0re memory I hope the cache is not taking too much either  \n15:02\u00a0<msmeria>\u00a0has quit  \n15:02\u00a0<tmortagne>\u00a0I would not say overall perfs, once it's built it's just css so it's not slowing down the whole thing  \n15:02\u00a0<tmortagne>\u00a0only the first access is impacted, which is not very nice for devs I agree but not that visible for users  \n15:03\u00a0<tmortagne>\u00a0but if html export does not cache anything that's another mater  \n15:03\u00a0<tmortagne>\u00a0I agree that i html export is that slow all the time it's quite bad  \n15:05\u00a0<tmortagne>\u00a0anyway if gdelhumeau said it was ok in 6.2.x it should be debugged first  \n15:05\u00a0<tmortagne>\u00a0vmassol: on the memory side I think is a filesystem cache, right gdelhumeau ?  \n15:06\u00a0<gdelhumeau>\u00a0right  \n15:06\u00a0<gdelhumeau>\u00a0but we store a mutex for each less ressource  \n15:06\u00a0<tmortagne>\u00a0sure but a mutex is nothing  \n15:07\u00a0<vmassol>\u00a0ok that's good if it's not taking memory  \n16:04\u00a0<tmortagne>\u00a06.4.1 will be welcome indeed  \n16:05\u00a0<vmassol>\u00a0:(  \n16:05\u00a0<vmassol>\u00a0I have the feeling we're generating lots of bugs/regressions  \n16:06\u00a0<vmassol>\u00a0we're surely missing tests  \n16:06\u00a0<vmassol>\u00a0we need to improve and get better, it's taking too long to stabilize ATM  \n16:09\u00a0<tmortagne>\u00a0or we rush too much during BFD (the issue vrachieru fixed was a typo introduce in a BFD issue)  \n16:10\u00a0<vmassol>\u00a0yes we definitely rush too much by not taking the time to always have a test to prove that what is fixed will continue to work thereafter  \n16:10\u00a0<vmassol>\u00a0(I know I've done this mistake myself several time in order to do more issues....)  \n16:34\u00a0<KermitTheFragger>\u00a0has quit  \n16:49\u00a0<Chuguniy>\u00a0has joined #xwiki  \n16:55\u00a0<RamonaConoro>\u00a0has quit  \n17:04\u00a0<tmortagne>\u00a0has quit  \n17:21\u00a0<Bugen\\_do>\u00a0has joined #xwiki  \n18:01\u00a0<gdelhumeau>\u00a0has quit  \n18:04\u00a0<fmancinelli>\u00a0has quit  \n18:07\u00a0<cjd>\u00a0has quit  \n18:22\u00a0<lucaa1>\u00a0has quit  \n18:27\u00a0<tmortagne>\u00a0has joined #xwiki  \n18:34\u00a0<woshilapin>\u00a0has quit  \n18:41\u00a0<vmassol>\u00a0[ERROR] Failed to execute goal org.apache.maven.plugins:maven-remote-resources-plugin:1.4:process (xwiki-license-resources) on project xwiki-enterprise: Resources archive cannot be found. Could not find artifact org.xwiki.commons:xwiki-commons-tool-license-resources:jar:7.0-SNAPSHOT  \n18:41\u00a0<vmassol>\u00a0[ERROR]  \n18:41\u00a0<vmassol>\u00a0oops  \n18:41\u00a0<vmassol>\u00a0\u00a0sorry  \n18:41\u00a0<vmassol>\u00a0bazd paste  \n18:43\u00a0<mflorea>\u00a0has quit  \n19:19\u00a0<sdumitriu>\u00a0has quit  \n19:24\u00a0<sdumitriu>\u00a0has joined #xwiki  \n19:40\u00a0<tmortagne>\u00a0has quit  \n19:47\u00a0<Slashman>\u00a0has quit  \n20:15\u00a0<lucaa>\u00a0has joined #xwiki  \n20:48\u00a0<momomomomo>\u00a0has joined #xwiki  \n20:56\u00a0<bblfish\\_>\u00a0has joined #xwiki  \n21:01\u00a0<fmancinelli>\u00a0has joined #xwiki  \n21:08\u00a0<Bugen\\_do>\u00a0has quit  \n21:29\u00a0<kyndel>\u00a0has joined #xwiki  \n21:30\u00a0<kyndel>\u00a0Hello. I have a new wiki on the wikifarm and I'm wondering how to make it viewable without being logged in  \n22:01\u00a0<lucaa>\u00a0has quit  \n22:19\u00a0<momomomomo>\u00a0has quit  \n22:30\u00a0<momomomomo>\u00a0has joined #xwiki  \n22:52\u00a0<vmassol>\u00a0kyndel: what wikifarm?  \n22:52\u00a0<vmassol>\u00a0(Hi)  \n22:53\u00a0<vmassol>\u00a0has quit  \n23:11\u00a0<kyndel>\u00a0myxwiki.org  \n23:12\u00a0<kyndel>\u00a0also, how do i make a page horizontally scrollable, so if i have a really big table it doens't squish all the rows  \n23:19\u00a0<kyndel>\u00a0or rather, how do i increase the minimum row width  \n23:21\u00a0<bblfish\\_>\u00a0has quit  \n23:34\u00a0<sburjan>\u00a0has quit  \n23:37\u00a0<kyndel>\u00a0also, how do i edit the wiki description i see in the \"Wiki Information\" Gadget??  \n23:39\u00a0<sburjan>\u00a0has joined #xwiki  \n23:39\u00a0<fmancinelli>\u00a0has quit  \n23:43\u00a0<vrachieru>\u00a0has quit\n"}