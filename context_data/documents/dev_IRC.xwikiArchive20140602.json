{"id": "dev:IRC.xwikiArchive20140602", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20140602", "title": "IRC Archive for channel #xwiki on 02 June 2014 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<abusenius>\u00a0has quit  \n03:31\u00a0<teekay>\u00a0has joined #xwiki  \n03:53\u00a0<teekay>\u00a0has quit  \n08:06\u00a0<vmassol>\u00a0has joined #xwiki  \n08:16\u00a0<msmeria>\u00a0has joined #xwiki  \n08:25\u00a0<evalica>\u00a0has joined #xwiki  \n08:33\u00a0<tmortagne>\u00a0has joined #xwiki  \n08:39\u00a0<kaisen>\u00a0has joined #xwiki  \n08:41\u00a0<mflorea>\u00a0has joined #xwiki  \n08:47\u00a0<kaisen>\u00a0@evalica here a screenshot of our wiki \u00a0http://www.zimagez.com/zimage/screenshot-02062014-084532.php thanks again for the help  \n08:49\u00a0<evalica>\u00a0@kaisen looks nice. It is a version <3.4 XE?  \n08:49\u00a0<evalica>\u00a0< 3.4 :)  \n08:49\u00a0<kaisen>\u00a0Should be the current 6.0  \n08:49\u00a0<evalica>\u00a0aaa\u2026 than you manually removed the round corners :) k  \n08:50\u00a0<kaisen>\u00a0;)  \n08:50\u00a0<evalica>\u00a0@kaisen thanks for sharing  \n08:52\u00a0<kaisen>\u00a0One other question, is there a change to export the complete content of a space?  \n08:52\u00a0<vmassol>\u00a0change?  \n08:52\u00a0<kaisen>\u00a0chance  \n08:53\u00a0<vmassol>\u00a0not quite  \n08:53\u00a0<vmassol>\u00a0see http://platform.xwiki.org/xwiki/bin/view/Features/Exports#HPDFExport  \n08:53\u00a0<vmassol>\u00a0there are some parameters you can pass  \n08:53\u00a0<vmassol>\u00a0you could build the \"pages\" param list with a XWQL query for ex  \n08:54\u00a0<kaisen>\u00a0You men a list of all pages which I than use to build the URL to export the pages?  \n08:54\u00a0<vmassol>\u00a0yes  \n08:55\u00a0<vmassol>\u00a0honestly I don't know why we're not doing this by default :)  \n08:55\u00a0<kaisen>\u00a0Ok will give a try thanks  \n08:55\u00a0<vmassol>\u00a0by supporting wildcards  \n08:55\u00a0<vmassol>\u00a0you're talking about PDF export right?  \n08:56\u00a0<vmassol>\u00a0asking because the HMTL export does support wildcards  \n08:57\u00a0<kaisen>\u00a0No I wont to move all pages from a space into a new subwiki  \n08:57\u00a0<vmassol>\u00a0ah  \n08:57\u00a0<vmassol>\u00a0so XAR export?  \n08:57\u00a0<kaisen>\u00a0yes  \n08:57\u00a0<vmassol>\u00a0then you can use one of the exsiting XAR export extension  \n08:58\u00a0<vmassol>\u00a0for ex: http://extensions.xwiki.org/xwiki/bin/view/Extension/Multipage+Export+Application  \n08:58\u00a0<vmassol>\u00a0BTW just noticed that this app is supposed to support PDF too ;)  \n08:58\u00a0<kaisen>\u00a0ok :)  \n09:05\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n09:16\u00a0<cjd>\u00a0has joined #xwiki  \n09:18\u00a0<Lyes>\u00a0has joined #xwiki  \n09:29\u00a0<Lyes>\u00a0has quit  \n09:30\u00a0<Lyes>\u00a0has joined #xwiki  \n09:37\u00a0<woshilapin>\u00a0has joined #xwiki  \n09:50\u00a0<vmassol>\u00a0mflorea: one supporter for the idea: http://dev.xwiki.org/xwiki/bin/view/GoogleSummerOfCode/IntegratetheCKEditorWYSIWYGEditor ;) (you've probably seen it already)  \n09:54\u00a0<mflorea>\u00a0vmassol: yes, seen it :)  \n10:02\u00a0<Denis1>\u00a0has joined #xwiki  \n10:02\u00a0<Denis1>\u00a0is now known as <Denis>  \n10:16\u00a0<Lyes1>\u00a0has joined #xwiki  \n10:17\u00a0<Lyes>\u00a0has quit  \n10:17\u00a0<Lyes1>\u00a0has left #xwiki  \n10:20\u00a0<Lyes>\u00a0has joined #xwiki  \n10:22\u00a0<Lyes1>\u00a0has joined #xwiki  \n10:23\u00a0<Lyes1>\u00a0has quit  \n10:23\u00a0<Lyes>\u00a0has quit  \n10:23\u00a0<Lyes1>\u00a0has joined #xwiki  \n11:24\u00a0<fmancinelli>\u00a0has joined #xwiki  \n11:28\u00a0<cjd>\u00a0tmortagne: If I have made an extension, is there a way for me to specify that this extension must never be installed on a subwiki, only at the farm level ?  \n11:28\u00a0<cjd>\u00a0(to trigger an error in the EM if someone tries to install it ona subwiki)  \n11:29\u00a0<tmortagne>\u00a0cjd: no  \n11:30\u00a0<tmortagne>\u00a0but that's an information that should probably be added some way  \n11:31\u00a0<cjd>\u00a0ok, I know it's not really your business but can you suggest a way that my extension on a subwiki might detect itself on the main wiki and yield to the other instance?  \n11:32\u00a0<cjd>\u00a0or perhaps I am just being too complex and I should document and blame the user (and wait until this kind of feature makes it into the EM)  \n11:35\u00a0<vmassol>\u00a0cjd: it shoudl be easy to know if you're on the main wiki or not.  \n11:35\u00a0<vmassol>\u00a0and adjust your UI accordingly  \n11:35\u00a0<vmassol>\u00a0$context.isMainWiki() for ex  \n11:35\u00a0<tmortagne>\u00a0cjd: it depends on your context  \n11:35\u00a0<tmortagne>\u00a0you want to detect that when ?  \n11:35\u00a0<cjd>\u00a0If I'm in a subwiki but I'm the only subwiki with this extension, it actually does work (but perhaps I shoudl break it)  \n11:36\u00a0<tmortagne>\u00a0at runtime ? right after being installed ?  \n11:36\u00a0<cjd>\u00a0if I'm in a subwiki and it's installed in any other subwiki, it is not going to work (ever)  \n11:36\u00a0<tmortagne>\u00a0and why don't you extension work in a subwiki by the way ?  \n11:36\u00a0<cjd>\u00a0it binds a port and I just didn't think ahead :)  \n11:37\u00a0<tmortagne>\u00a0you could just take a free port and display it somwhere  \n11:37\u00a0<cjd>\u00a0if I'm in a subwiki and it's installed in the main wiki, it will work if I yield to the other instance  \n11:37\u00a0<cjd>\u00a0well the port needs to be opened via the firewall so it makes sense that this extension should just never ever be installed anywhere but the main wiki  \n11:38\u00a0<cjd>\u00a0s/via/in/  \n11:38\u00a0<cjd>\u00a0basically it's going to demand admin attention one way or another so installing it in a subwiki is weird  \n11:39\u00a0<tmortagne>\u00a0ok but then I guess the guy know what he is doing and is not going to install it on all subwikis ;)  \n11:39\u00a0<cjd>\u00a0I suppose that works, document well and blame the user ;)  \n11:39\u00a0<tmortagne>\u00a0(anyway yes it could be usefull infirmation to add in the extension metadat)  \n11:40\u00a0<vmassol>\u00a0cjd: jsut make your extension not work in a subwiki  \n11:40\u00a0<vmassol>\u00a0with a warning message if installed in a subwiki  \n11:40\u00a0<vmassol>\u00a0s/warning/error/  \n11:40\u00a0<cjd>\u00a0logged to catalina.out ?  \n11:40\u00a0<Slashman>\u00a0has joined #xwiki  \n11:40\u00a0<vmassol>\u00a0no  \n11:40\u00a0<vmassol>\u00a0screen  \n11:40\u00a0<vmassol>\u00a0there's no UI?  \n11:41\u00a0<vmassol>\u00a0no admin for configuring it?  \n11:41\u00a0<cjd>\u00a0it's a \"middleware\" extension which exists only to provide other extensions with a coherent method of obtaining a websocket  \n11:41\u00a0<vmassol>\u00a0ok then indeed in the logs I guess is better than nothing...  \n11:42\u00a0<cjd>\u00a0I suppose I could blow it up with an Exception when someone calls the velocity $services.... function  \n11:42\u00a0<cjd>\u00a0it's not very nice but it makes a point :)  \n11:43\u00a0<vmassol>\u00a0yes that's the way  \n11:43\u00a0<vmassol>\u00a0the velocity macro will report it  \n11:44\u00a0<cjd>\u00a0meh unfortunatyle it's usually called from velocity inside of a jsx extension so it's not so easy  \n11:44\u00a0<cjd>\u00a0var sock = new WebSocket(\"$services.websocket.getURL('my-websocket-handler-id')\"); \u00a0<-- that's basically how it's called  \n12:01\u00a0<cjd>\u00a0Ok I feel like I know how I want to approach this problem, one more question: Do you know how I can (from the main wiki) get access to the ComponentManager for a given subwiki ? \u00a0Even though I'm forcing the websocket to be for the main wiki only, I still need to support extensions which use that websocket being installed in various subwikis.  \n12:02\u00a0<tmortagne>\u00a0cjd: ComponentManagerManager#getComponentManager(String id, boolean create)  \n12:02\u00a0<cjd>\u00a0thanks  \n12:02\u00a0<tmortagne>\u00a0the id of a the CM for a wiki is wiki:wikiid  \n12:02\u00a0<cjd>\u00a0ComponentManagerManager :D  \n12:03\u00a0<tmortagne>\u00a0yep  \n12:03\u00a0<tmortagne>\u00a0I know  \n12:03\u00a0<tmortagne>\u00a0but that's what it does  \n12:03\u00a0<cjd>\u00a0heh  \n12:04\u00a0<cjd>\u00a0http://dutchrush.com/wp-content/uploads/2013/04/photo-11.jpg  \n12:06\u00a0<tmortagne>\u00a0cjd: it also depend what you are doing  \n12:06\u00a0<tmortagne>\u00a0from what you said it does not really sounds like accessing subwiki CM from main wiki  \n12:06\u00a0<tmortagne>\u00a0but more getting the current CM  \n12:06\u00a0<tmortagne>\u00a0the fact that the code running is installed on main wiki does not really matter  \n12:07\u00a0<cjd>\u00a0What happens is in the subwiki I'll have an extension which will ask for a websocket URL, the websocket infra will make up a magical url with a big random key so that it can't be guessed (because this port is open to the world)  \n12:07\u00a0<cjd>\u00a0then it will catch the incoming message and at this point it's not really in any state because the message didn't come into tomcat, it came in this side-port  \n12:08\u00a0<cjd>\u00a0so I need to figure out what wiki that websocket connection is really destine for and what user is responsible for it and put together some kind of context then call the code which originally asked websocket for the URL  \n12:08\u00a0<tmortagne>\u00a0you have too choices, either you set context informations and inject the CM with @Named(\"context\") or you explicitely search yourself or the right CM directly  \n12:09\u00a0<cjd>\u00a0I'll do the second but I'll put the name of the subwiki inside of the url  \n12:09\u00a0<tmortagne>\u00a0ok  \n12:09\u00a0<cjd>\u00a0the url is essentially a cookie which is passed to the user and he passes it back when he connects to this other socket  \n12:18\u00a0<evalica>\u00a0has quit  \n12:20\u00a0<evalica>\u00a0has joined #xwiki  \n12:47\u00a0<vierfzweievieraz>\u00a0has joined #xwiki  \n12:56\u00a0<Denis>\u00a0has quit  \n13:09\u00a0<Lyes>\u00a0has joined #xwiki  \n13:09\u00a0<Lyes1>\u00a0has quit  \n13:14\u00a0<Lyes1>\u00a0has joined #xwiki  \n13:16\u00a0<Lyes>\u00a0has quit  \n13:18\u00a0<Lyes1>\u00a0has quit  \n13:19\u00a0<Lyes>\u00a0has joined #xwiki  \n13:30\u00a0<evalica>\u00a0has quit  \n13:30\u00a0<evalica>\u00a0has joined #xwiki  \n13:41\u00a0<evalica>\u00a0has quit  \n13:55\u00a0<vierfzweievieraz>\u00a0hi, i am having a dependecy problem while testing  \n13:55\u00a0<vierfzweievieraz>\u00a0http://pastebin.com/raw.php?i=XUtz35CD  \n13:56\u00a0<vierfzweievieraz>\u00a0is anyone aware of this?  \n13:58\u00a0<evalica>\u00a0has joined #xwiki  \n13:59\u00a0<vierfzweievieraz>\u00a0brb  \n14:05\u00a0<D-Spair>\u00a0has quit  \n14:11\u00a0<D-Spair>\u00a0has joined #xwiki  \n14:16\u00a0<D-Spair>\u00a0has quit  \n14:24\u00a0<D-Spair>\u00a0has joined #xwiki  \n14:32\u00a0<tmortagne>\u00a0vierfzweievieraz: you need to add dependency to javax.servlet:servlet-api  \n14:33\u00a0<tmortagne>\u00a0you are trying to use oldcore outside of XWiki or is it just for running your unit tests ?  \n14:33\u00a0<tmortagne>\u00a0https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-oldcore/pom.xml#L155  \n14:34\u00a0<Lyes1>\u00a0has joined #xwiki  \n14:34\u00a0<Lyes>\u00a0has quit  \n14:36\u00a0<vmassol>\u00a0make sure you use a runtime scope  \n14:36\u00a0<vmassol>\u00a0(for servlet api)  \n14:37\u00a0<Lyes>\u00a0has joined #xwiki  \n14:37\u00a0<Lyes1>\u00a0has quit  \n14:38\u00a0<evalica>\u00a0has quit  \n14:39\u00a0<evalica>\u00a0has joined #xwiki  \n14:39\u00a0<Lyes>\u00a0has left #xwiki  \n14:41\u00a0<andreic>\u00a0has joined #xwiki  \n14:41\u00a0<andreic>\u00a0has quit  \n14:53\u00a0<DSpair>\u00a0has joined #xwiki  \n15:07\u00a0<Lyes>\u00a0has joined #xwiki  \n15:09\u00a0<vmassol>\u00a0Lyes: do you have a pom for the new mail module already or should I prepare one?  \n15:09\u00a0<vmassol>\u00a0tmortagne: would be great if you could reply to our proposal mail on the list ;)  \n15:09\u00a0<vmassol>\u00a0(I can walk you through it if need be)  \n15:13\u00a0<vmassol>\u00a0ok creating pom\u2026  \n15:13\u00a0<Lyes>\u00a0has quit  \n15:13\u00a0<Lyes1>\u00a0has joined #xwiki  \n15:22\u00a0<cjd>\u00a0vmassol: you are too easy, like a moth into the light xD  \n15:26\u00a0<evalica>\u00a0has quit  \n15:27\u00a0<evalica>\u00a0has joined #xwiki  \n15:30\u00a0<DSpair>\u00a0has quit  \n15:34\u00a0<evalica>\u00a0has quit  \n15:50\u00a0<DSpair>\u00a0has joined #xwiki  \n15:57\u00a0<Lyes>\u00a0has joined #xwiki  \n15:57\u00a0<msmeria>\u00a0has quit  \n15:59\u00a0<Lyes1>\u00a0has quit  \n15:59\u00a0<vierfzweievieraz>\u00a0tmortagne: thank you! just got it running now....  \n16:00\u00a0<vierfzweievieraz>\u00a0just for the unit tests  \n16:00\u00a0<tmortagne>\u00a0ok  \n16:05\u00a0<Lyes>\u00a0has quit  \n16:09\u00a0<Lyes>\u00a0has joined #xwiki  \n16:13\u00a0<Lyes>\u00a0vmassol: You can prepare one  \n16:13\u00a0<vmassol>\u00a0Lyes: I've started preparing some maven structure  \n16:13\u00a0<vmassol>\u00a0+ started adding the Java API  \n16:14\u00a0<Lyes>\u00a0yes i just see on github  \n16:14\u00a0<Lyes>\u00a0thanks  \n16:15\u00a0<vmassol>\u00a0Lyes: \u00a0the emails go on the notifications list, are you subscribed there?  \n16:17\u00a0<Lyes>\u00a0yes  \n16:17\u00a0<vmassol>\u00a0ok cool  \n16:26\u00a0<Slashman>\u00a0has quit  \n16:26\u00a0<Slashman>\u00a0has joined #xwiki  \n16:50\u00a0<Lyes>\u00a0has quit  \n16:50\u00a0<cjd>\u00a0oh you're going to hate me  \n16:50\u00a0<cjd>\u00a0I need another jira project for the websocket integration  \n16:50\u00a0<cjd>\u00a0and now I'm going to be in charge of more projects than you xD  \n16:50\u00a0<cjd>\u00a0(contrib projects)  \n16:51\u00a0<Lyes>\u00a0has joined #xwiki  \n16:51\u00a0<vmassol>\u00a0you'll soon realize why it's a \u00a0bad idea to create too many projects  \n16:51\u00a0<vmassol>\u00a0we had this in the past and regrouping them together was the best decision we took :)  \n16:52\u00a0<cjd>\u00a0heh yeah I can see costs and benefits  \n16:52\u00a0<cjd>\u00a0I'm a big follower of the micro-library pattern, give the user inter-operable pieces rather than an all-encompasing environment  \n16:52\u00a0<cjd>\u00a0but it makes a small bit of paperwork turn into an explosion of paperwork if it's not automated  \n16:53\u00a0<cjd>\u00a0inb4: ``oh hi guys, I need a jira project for my script that generates and releases jira projects''  \n16:57\u00a0<lucaa>\u00a0has joined #xwiki  \n16:59\u00a0<vmassol>\u00a0cjd: it's not just paperwork, it's the maintenance  \n16:59\u00a0<vmassol>\u00a0you have an explosion of the compatibility matrix  \n17:01\u00a0<kaisen>\u00a0has quit  \n17:04\u00a0<cjd>\u00a0well it's a unidirectional graph, each project depends only on what's lower than itself  \n17:05\u00a0<cjd>\u00a0when I update a lower level of the dependency tree, it's usually because an upper level needs a new API, that means both get released and the new version gets it's minimum version of the dependency set to the most recent version  \n17:08\u00a0<Lyes>\u00a0has quit  \n17:08\u00a0<cjd>\u00a0I admit though, things get really sticky when you break backward compat and don't update all of the downstream dependencies because you have min and max compatible versions  \n17:08\u00a0<Lyes>\u00a0has joined #xwiki  \n17:17\u00a0<webczat>\u00a0has joined #xwiki  \n17:18\u00a0<webczat>\u00a0Hello. How do you download extensions without an ext manager if the ext description has no link?  \n17:18\u00a0<webczat>\u00a0I'm trying to install a wiki without import of default xar  \n17:18\u00a0<mflorea>\u00a0has quit  \n17:19\u00a0<vmassol>\u00a0webczat: link?  \n17:19\u00a0<tmortagne>\u00a0webczat: all extension installable with extension manager have a download link on http://extensions.xwiki.org  \n17:20\u00a0<tmortagne>\u00a0but there is extensions there that are not supported by extension manager  \n17:20\u00a0<webczat>\u00a0Except the extension manager itself? :P  \n17:20\u00a0<vmassol>\u00a0and it's not because there's no link that it's not supported  \n17:20\u00a0<vmassol>\u00a0:)  \n17:20\u00a0<tmortagne>\u00a0i.e. if you can't download it, EM cannot either  \n17:21\u00a0<vmassol>\u00a0for some extensions we just need to fix a few things to make them installable through EM  \n17:21\u00a0<vmassol>\u00a0anyway  \n17:21\u00a0<vmassol>\u00a0just give us the link of the extension you have in mind for which there's no link and we can check it out  \n17:21\u00a0<tmortagne>\u00a0webczat: no, again a valid extension (from extension manager point of view) always have a download button  \n17:22\u00a0<webczat>\u00a0As I said, it is the ext manager itself that I wanted to install.  \n17:22\u00a0<webczat>\u00a0http://extensions.xwiki.org/xwiki/bin/view/Extension/Extension+Manager+Application#information  \n17:22\u00a0<tmortagne>\u00a0then you are not looking at the right page  \n17:22\u00a0<tmortagne>\u00a0ok I understand now  \n17:23\u00a0<tmortagne>\u00a0you can find EM on http://maven.xwiki.org  \n17:24\u00a0<webczat>\u00a0Aha.  \n17:24\u00a0<tmortagne>\u00a0http://maven.xwiki.org/releases/org/xwiki/platform/xwiki-platform-extension-ui/ for the UI  \n17:24\u00a0<tmortagne>\u00a0everything is on http://maven.xwiki.org, http://extensions.xwiki.org is usually used only for documentation for the standard XE extensions  \n17:25\u00a0<webczat>\u00a0Btw: if I would like to integrate ldap with xwiki but in a wayy that makes xwiki an account manager for ldap, like I want xwiki to export accounts to ldap. Is it possible to intercept a password when it is changed?  \n17:25\u00a0<tmortagne>\u00a0or maybe better http://nexus.xwiki.org since you can search in nexus  \n17:25\u00a0<webczat>\u00a0Thanks.  \n17:26\u00a0<tmortagne>\u00a0webczat: with a hack but yes it could be done, let me give you an example  \n17:26\u00a0<tmortagne>\u00a0https://github.com/xwiki-contrib/xwiki-authenticator-jdbc does it  \n17:27\u00a0<tmortagne>\u00a0in https://github.com/xwiki-contrib/xwiki-authenticator-jdbc/blob/master/src/main/java/org/xwiki/contrib/authentication/jdbc/internal/UserEventListener.java  \n17:30\u00a0<vmassol>\u00a0tmortagne: we should import http://extensions.xwiki.org/xwiki/bin/view/Extension/Extension+Manager+Application#information anyway  \n17:30\u00a0<vmassol>\u00a0(the XAR)  \n17:36\u00a0<webczat>\u00a0Hey, I don't actually see the place where this thing deals with passwords.  \n17:38\u00a0<tmortagne>\u00a0webczat: http://maven.xwiki.org/releases/org/xwiki/platform/xwiki-platform-extension-ui/ does not do much, it's mostly a placeholder to insert the UI (which is actually in templates in the WAR for most part)  \n17:39\u00a0<tmortagne>\u00a0password handling is done in each repository handler  \n17:39\u00a0<tmortagne>\u00a0see https://github.com/xwiki/xwiki-commons/tree/master/xwiki-commons-core/xwiki-commons-extension/xwiki-commons-extension-repositories  \n17:40\u00a0<webczat>\u00a0:) I meant this ldap things  \n17:40\u00a0<tmortagne>\u00a0https://github.com/xwiki-contrib/xwiki-authenticator-jdbc \u00a0is not about LDAP  \n17:40\u00a0<tmortagne>\u00a0it's storing password in a database as it's name indicates  \n17:41\u00a0<tmortagne>\u00a0what's important for you is how it gets the password  \n17:41\u00a0<webczat>\u00a0What form does the password have when it stores it?  \n17:42\u00a0<vierfzweievieraz>\u00a0has left #xwiki  \n17:43\u00a0<webczat>\u00a0When a document event is generated, it seems like it just writes data to jdbc, not sure about passwords.  \n17:44\u00a0<tmortagne>\u00a0webczat: https://github.com/xwiki-contrib/xwiki-authenticator-jdbc/blob/master/src/main/java/org/xwiki/contrib/authentication/jdbc/internal/DefaultUserSynchronizer.java#L172 looks very password related to me  \n17:44\u00a0<Lyes>\u00a0has left #xwiki  \n17:44\u00a0<tmortagne>\u00a0its not saving only password  \n17:44\u00a0<Lyes>\u00a0has joined #xwiki  \n17:44\u00a0<tmortagne>\u00a0it's updating any information including password  \n17:45\u00a0<webczat>\u00a0But it does not have special handling for passwords, does it?  \n17:45\u00a0<tmortagne>\u00a0I don't understand what you mean, you are asking how it gets a hand on password, that's how  \n17:45\u00a0<tmortagne>\u00a0then you do whatever you want with the password in your module  \n17:46\u00a0<webczat>\u00a0Yes, but what format does the password have? encrypted, hashed, plaintext or whatever?  \n17:47\u00a0<webczat>\u00a0Ldap would require directly handling a password.  \n17:47\u00a0<tmortagne>\u00a0this is the way to get the plain password of course  \n17:48\u00a0<tmortagne>\u00a0it's encrypted when stored in the DB  \n17:48\u00a0<webczat>\u00a0You mean passwords in xwiki are not hashed?  \n17:49\u00a0<tmortagne>\u00a0they are when stored  \n17:49\u00a0<tmortagne>\u00a0but XWiki receive plain passwords from the browser before storing them  \n17:50\u00a0<tmortagne>\u00a0this code is getting it just before it's stored in XWiki DB  \n17:50\u00a0<tmortagne>\u00a0(stored and hashed)  \n17:50\u00a0<tmortagne>\u00a0so it's working only exactly when the user is changing it  \n17:50\u00a0<tmortagne>\u00a0you can use that for an existing user  \n17:51\u00a0<tmortagne>\u00a0s/can/cannot/  \n17:51\u00a0<tmortagne>\u00a0sorry I have to go  \n17:56\u00a0<tmortagne>\u00a0has quit  \n18:03\u00a0<OSIMasson>\u00a0has joined #xwiki  \n18:07\u00a0<webczat>\u00a0has left #xwiki  \n18:11\u00a0<gdelhumeau>\u00a0has quit  \n18:14\u00a0<OSIMasson>\u00a0has quit  \n18:14\u00a0<woshilapin>\u00a0has quit  \n18:34\u00a0<Lyes1>\u00a0has joined #xwiki  \n18:41\u00a0<Lyes1>\u00a0has left #xwiki  \n18:41\u00a0<Lyes1>\u00a0has joined #xwiki  \n18:41\u00a0<cjd>\u00a0has quit  \n18:42\u00a0<fmancinelli>\u00a0has quit  \n18:43\u00a0<vmassol>\u00a0Lyes1: I've added this section http://design.xwiki.org/xwiki/bin/view/Proposal/MailModule#HConfigurationParameters  \n18:43\u00a0<vmassol>\u00a0(proposing it now)  \n18:45\u00a0<tmortagne>\u00a0has joined #xwiki  \n18:46\u00a0<Lyes1>\u00a0has quit  \n18:47\u00a0<Lyes>\u00a0has joined #xwiki  \n18:47\u00a0<Lyes>\u00a0has quit  \n18:52\u00a0<OSIMasson>\u00a0has joined #xwiki  \n19:04\u00a0<tmortagne>\u00a0has quit  \n19:27\u00a0<Slashman>\u00a0has quit  \n20:03\u00a0<lucaa>\u00a0has quit  \n20:14\u00a0<abusenius>\u00a0has joined #xwiki  \n20:17\u00a0<fmancinelli>\u00a0has joined #xwiki  \n20:47\u00a0<fmancinelli>\u00a0has quit  \n21:05\u00a0<sdumitriu>\u00a0has quit  \n21:06\u00a0<sdumitriu>\u00a0has joined #xwiki  \n21:13\u00a0<OSIMasson>\u00a0has quit  \n21:14\u00a0<Denis>\u00a0has joined #xwiki  \n21:18\u00a0<OSIMasson>\u00a0has joined #xwiki  \n22:08\u00a0<vmassol>\u00a0has quit\n"}