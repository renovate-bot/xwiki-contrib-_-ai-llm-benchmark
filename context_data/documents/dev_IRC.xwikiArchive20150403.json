{"id": "dev:IRC.xwikiArchive20150403", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20150403", "title": "IRC Archive for channel #xwiki on 03 April 2015 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<lucaa>\u00a0has quit  \n01:06\u00a0<vrachieru>\u00a0has joined #xwiki  \n01:10\u00a0<vrachieru>\u00a0has quit  \n03:01\u00a0<woshilapin>\u00a0has quit  \n03:02\u00a0<woshilapin>\u00a0has joined #xwiki  \n04:44\u00a0<vrachieru>\u00a0has joined #xwiki  \n04:48\u00a0<vrachieru>\u00a0has quit  \n06:02\u00a0<Denis>\u00a0has quit  \n06:02\u00a0<Denis>\u00a0has joined #xwiki  \n06:32\u00a0<vrachieru>\u00a0has joined #xwiki  \n06:37\u00a0<vrachieru>\u00a0has quit  \n07:11\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n07:49\u00a0<sburjan>\u00a0has quit  \n08:20\u00a0<cjd>\u00a0has quit  \n08:21\u00a0<vrachieru>\u00a0has joined #xwiki  \n08:26\u00a0<vrachieru>\u00a0has quit  \n08:37\u00a0<vrachieru>\u00a0has joined #xwiki  \n08:40\u00a0<vmassol>\u00a0has joined #xwiki  \n09:02\u00a0<martin-h>\u00a0has joined #xwiki  \n09:11\u00a0<Chuguniy>\u00a0has joined #xwiki  \n09:36\u00a0<mflorea>\u00a0has joined #xwiki  \n09:44\u00a0<cjd>\u00a0has joined #xwiki  \n09:46\u00a0<Bugendolf>\u00a0has quit  \n09:53\u00a0<lucaa>\u00a0has joined #xwiki  \n09:55\u00a0<Bugendolf>\u00a0has joined #xwiki  \n10:02\u00a0<tmortagne>\u00a0has joined #xwiki  \n10:10\u00a0<vmassol>\u00a0mflorea: good morning  \n10:10\u00a0<vmassol>\u00a0I noticed the following when I start XE  \n10:10\u00a0<vmassol>\u00a0\"2015-04-03 10:09:46,359 [coreLoadExecutor-5-thread-1] WARN \u00a0o.a.s.c.RequestHandlers \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Multiple requestHandler registered to the same name: /update ignoring: org.apache.solr.handler.UpdateRequestHandler \"  \n10:10\u00a0<evalica>\u00a0has joined #xwiki  \n10:14\u00a0<Slashman>\u00a0has joined #xwiki  \n10:15\u00a0<Enygma`>\u00a0has joined #xwiki  \n10:49\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n10:53\u00a0<mflorea>\u00a0vmassol: I found this https://issues.apache.org/jira/browse/SOLR-6499  \n10:53\u00a0<mflorea>\u00a0first comment explains the issue \"This is because the \"/update\" handler was made implicit SOLR-6302 \u00a0(so even if it's not in your solrconfig.xml, it will be created) but \u00a0was also left in the example solrconfig.xml (for the reasons noted in \u00a0the SOLR-6302 comments.\"  \n10:53\u00a0<vmassol>\u00a0do we have a jira issue in our jira?  \n10:54\u00a0<vmassol>\u00a0creating one as I don't recall one  \n10:54\u00a0<mflorea>\u00a0I don't think we have  \n10:54\u00a0<mflorea>\u00a0let me double check  \n10:55\u00a0<vmassol>\u00a0http://jira.xwiki.org/browse/XWIKI-11991  \n10:55\u00a0<vmassol>\u00a0I'll let you comment with your findings ok?  \n10:56\u00a0<vmassol>\u00a0(and fix it if you can! :))  \n10:56\u00a0<mflorea>\u00a0ok, an upgrade to 5.0 will fix it  \n12:19\u00a0<xwikibot>\u00a0has joined #xwiki  \n12:34\u00a0<Enygma`>\u00a0has quit  \n12:35\u00a0<Enygma`>\u00a0has joined #xwiki  \n13:42\u00a0<Trefex>\u00a0has joined #xwiki  \n14:47\u00a0<lucaa>\u00a0has quit  \n15:55\u00a0<Enygma`>\u00a0Hi  \n15:55\u00a0<Enygma`>\u00a0I need some help with requirejs  \n15:55\u00a0<Enygma`>\u00a0and webjars  \n15:56\u00a0<Enygma`>\u00a0I have a js library that I require with webjars  \n15:56\u00a0<Enygma`>\u00a0and then I also require some modules defined by this js library  \n15:56\u00a0<Enygma`>\u00a0however, those modules, while defining themselves, also have some dependencies on other modules (of this library)  \n15:57\u00a0<Enygma`>\u00a0so they do something like define([\"../../lib/codemirror\"], mod);  \n15:57\u00a0<cjd>\u00a0../../../doing/it/wrong  \n15:57\u00a0<Enygma`>\u00a0and that resolves to http://localhost:8080/xwiki/bin/webjars/css/css  \n15:57\u00a0<Enygma`>\u00a0i.e. I don`t have a baseUrl set  \n15:57\u00a0<Enygma`>\u00a0or something like that  \n15:58\u00a0<cjd>\u00a0generally speaking, I don't ever trust requirejs to behave correctly with relative URLs  \n15:58\u00a0<cjd>\u00a0it's a good technology but that's where all of the bugs lie  \n15:58\u00a0<Enygma`>\u00a0well, that`s how this library defines its internal modules, so I have no control over that  \n15:58\u00a0<cjd>\u00a0ok  \n15:59\u00a0<Enygma`>\u00a0how could I make sure that its internal dependencies resolve correctly if they are given relatively?  \n15:59\u00a0<Enygma`>\u00a0I require the internal module this way: \"$services.webjars.url('codemirror', 'mode/css/css.js')\"  \n15:59\u00a0<cjd>\u00a0I'm thinking set baseUrl before invoking that specific program...  \n16:00\u00a0<cjd>\u00a0hmm  \n16:00\u00a0<Enygma`>\u00a0I did a little test but it seems to ignore it  \n16:00\u00a0<Enygma`>\u00a0let me try a bit more  \n16:00\u00a0<cjd>\u00a0I wish I could be more helpful, I tend to just hack at it until it works correctly then run  \n16:01\u00a0<cjd>\u00a0or I use config/path: { ... }  \n16:02\u00a0<Enygma`>\u00a0I was thinking that specifying explicit paths for all my modules would be the last resort  \n16:02\u00a0<Enygma`>\u00a0however, what is the lifespan of that require.config call?  \n16:02\u00a0<Enygma`>\u00a0I did not get it from the docs  \n16:02\u00a0<Enygma`>\u00a0though I admit I rushed a bit through the docs  \n16:02\u00a0<cjd>\u00a0page load AFAIK  \n16:02\u00a0<cjd>\u00a0/nod  \n16:03\u00a0<vrachieru>\u00a0has quit  \n16:03\u00a0<Enygma`>\u00a0so it's a global configuration of the requirejs module  \n16:03\u00a0<cjd>\u00a0it feels like a last resort hack but basically (as of my investigation) requirejs just wasn't stable enough w/ relative URLs  \n16:03\u00a0<Enygma`>\u00a0i.e. if I set a baseurl, I might affect other code using require  \n16:03\u00a0<cjd>\u00a0yes  \n16:03\u00a0<cjd>\u00a0s/might/will/  \n16:03\u00a0<Enygma`>\u00a0myeah...  \n16:04\u00a0<cjd>\u00a0but only if they're using relative URLs too :)  \n16:04\u00a0<Enygma`>\u00a0the require docs seems to highly recommend relative urls  \n16:04\u00a0<cjd>\u00a0setting paths: { blahModule: /entire/path } is the best  \n16:05\u00a0<cjd>\u00a0yeah, they also don't mention requirejs bugs :)  \n16:05\u00a0<Enygma`>\u00a0ok, thanks for now  \n16:05\u00a0<Enygma`>\u00a0will see how it goes  \n16:05\u00a0<cjd>\u00a0if you really get in deep, you can plunk an iframe and load it in there with whatever basepath hackery you need  \n16:06\u00a0<Enygma`>\u00a0sounds messy  \n16:07\u00a0<cjd>\u00a0yeah, at that point it's damage control  \n16:17\u00a0<vrachieru>\u00a0has joined #xwiki  \n16:19\u00a0<DarkKnightCZ>\u00a0has quit  \n16:38\u00a0<Enygma`>\u00a0cjd: this is what I have http://hastebin.com/kulicomayi.js  \n16:38\u00a0<Enygma`>\u00a0but the result is URLs like http://localhost:8080/xwiki/bin/webjars/resources/path?value=codemirror%2F5.1/lib/codemirror  \n16:38\u00a0<Enygma`>\u00a0i.e. the require module does not add the .js file extension  \n16:38\u00a0<Enygma`>\u00a0if I add the extension to that URL, the webjars action gives me the right file  \n16:39\u00a0<Enygma`>\u00a0if I add the .js extension to the require path (require([\"cm/lib/codemirror.js\") I get URLs like http://localhost:8080/xwiki/bin/view/Main/cm/lib/codemirror.js  \n16:39\u00a0<Enygma`>\u00a0so the require module ignores my path  \n16:40\u00a0<cjd>\u00a0oh I didn't know that worked  \n16:40\u00a0<Enygma`>\u00a0AFAIK, the require module was supposed to add .js extensions  \n16:41\u00a0<cjd>\u00a0there are rules...  \n16:41\u00a0<Enygma`>\u00a0followed this http://stackoverflow.com/questions/23708157/requirejs-codemirror-sql-mode-how-to-make-it-work  \n16:41\u00a0<cjd>\u00a0if ther'es a ? then no .js added  \n16:42\u00a0<Enygma`>\u00a0so is our webjar module the problem here?  \n16:42\u00a0<Enygma`>\u00a0the URL it uses?  \n16:42\u00a0<cjd>\u00a0well... the interaction is the issue  \n16:42\u00a0<Enygma`>\u00a0if it was http://localhost:8080/xwiki/bin/webjars/codemirror/5.1 would it have worked?  \n16:43\u00a0<cjd>\u00a0afaik yes  \n16:43\u00a0<Enygma`>\u00a0indeed... I get http://localhost:8080/xwiki/bin/webjars/codemirror/5.1/lib/codemirror.js  \n16:44\u00a0<cjd>\u00a0as far as using cm/lib/codemirror, I've never tried that way before  \n16:44\u00a0<cjd>\u00a0if it works it works  \n16:44\u00a0<cjd>\u00a0I always used require(['blahwhatever'], ...  \n16:44\u00a0<cjd>\u00a0make sure to prefix your stuff since when you do a path, it's global  \n16:44\u00a0<cjd>\u00a0so 'cm' is bad...  \n16:45\u00a0<cjd>\u00a0'SyntaxHighlightingExtension\\_cm' or something would be better  \n16:45\u00a0<cjd>\u00a0name of your extension  \n16:45\u00a0<Enygma`>\u00a0I`ll get to that :)  \n16:45\u00a0<cjd>\u00a0:)  \n16:45\u00a0<Enygma`>\u00a0but right now I still don`t have a solution to make it work  \n16:46\u00a0<cjd>\u00a0/nod  \n16:46\u00a0<Enygma`>\u00a0if I don`t define paths, the inner modules don`t get resolved dependenceis  \n16:46\u00a0<cjd>\u00a0how do you build the extension ? is it a xar ?  \n16:46\u00a0<cjd>\u00a0or a jar ?  \n16:46\u00a0<Enygma`>\u00a0well, a xar  \n16:47\u00a0<Enygma`>\u00a0but why is this relevant?  \n16:47\u00a0<cjd>\u00a0how are you pulling in codemirror? is it in maven?  \n16:47\u00a0<Enygma`>\u00a0I will pull it through maven as a webjar dep  \n16:47\u00a0<cjd>\u00a0ok  \n16:47\u00a0<Enygma`>\u00a0but that is not the issue right now since I am working in the wiki  \n16:48\u00a0<Enygma`>\u00a0so... IMO we`re not doing right the webjar action URL  \n16:48\u00a0<Enygma`>\u00a0since everybody using require seems to assume they can easily use paths  \n16:48\u00a0<Enygma`>\u00a0https://codemirror.net/doc/manual.html#modloader  \n16:49\u00a0<Enygma`>\u00a0vmassol: ping  \n16:49\u00a0<cjd>\u00a0it'll probably work if you drop the ?  \n16:49\u00a0<vmassol>\u00a0Enygma`: yes?  \n16:50\u00a0<Enygma`>\u00a0vmassol: tl;dr: any reason for us not to use a webjar URL similar to http://localhost:8080/xwiki/bin/webjars/codemirror/5.1/lib/codemirror.js instead of the current http://localhost:8080/xwiki/bin/webjars/resources/path?value=codemirror%2F5.1 ?  \n16:50\u00a0<Enygma`>\u00a0apparently requirejs does not like \"?\"s in the URl when dealing with relative module paths  \n16:50\u00a0<vmassol>\u00a0I don't like the mixup, why do you think it's better?  \n16:51\u00a0<Enygma`>\u00a0it does not add the \".js\" extension of the resolved path  \n16:51\u00a0<vmassol>\u00a0not quite  \n16:51\u00a0<vmassol>\u00a0I stumbled upon this too  \n16:51\u00a0<cjd>\u00a0+1 for moving away from the ?, putting paths in query parameters is 'strange' -- asside from the fact that it breaks requirejs  \n16:51\u00a0<vmassol>\u00a0I commented in javascript.vm for example  \n16:52\u00a0<cjd>\u00a0unless ofc there's some technical reason why it's better on the servlet side  \n16:52\u00a0<Enygma`>\u00a0vmassol: are you sure it's the same thing?  \n16:52\u00a0<Enygma`>\u00a0I don`t have too many \".js\" s  \n16:52\u00a0<Enygma`>\u00a0I have too few :)  \n16:53\u00a0<vmassol>\u00a0don't know  \n16:53\u00a0<vmassol>\u00a0FYI I'm working on the webjars URL rightn ow :)  \n16:53\u00a0<vmassol>\u00a0but the format I'm using so far is:  \n16:53\u00a0<Enygma`>\u00a0great time to change the url format ;)  \n16:53\u00a0<vmassol>\u00a0http://localhost:8080/xwiki/webjars?resource=angularjs/1.1.5/angular.js  \n16:54\u00a0<vmassol>\u00a0because I don't like mixing semantics  \n16:54\u00a0<vmassol>\u00a0but it's possible to change it  \n16:54\u00a0<Enygma`>\u00a0as cjd mentions, why put paths in requrest parameters?  \n16:54\u00a0<vmassol>\u00a0it's an open dicussion  \n16:54\u00a0<Enygma`>\u00a0we have to escape it, etc  \n16:54\u00a0<vmassol>\u00a0it's of course more complex  \n16:54\u00a0<vmassol>\u00a0but it's possible  \n16:54\u00a0<vmassol>\u00a0no  \n16:54\u00a0<vmassol>\u00a0it's not true  \n16:54\u00a0<vmassol>\u00a0any URL needs to be escaped whether it's inside the path or not  \n16:54\u00a0<Enygma`>\u00a0right  \n16:55\u00a0<Enygma`>\u00a0but still, why not make it transparent that we get to \"explore\" the js package directly?  \n16:55\u00a0<Enygma`>\u00a0similar to zip explorer  \n16:55\u00a0<vmassol>\u00a0right now my only comment is that it's more complex to handle and we mix semantics  \n16:55\u00a0<vmassol>\u00a0it's funny  \n16:55\u00a0<vmassol>\u00a0because the have the information and we mix it  \n16:55\u00a0<vmassol>\u00a0so when you need to access it you need to unmix it  \n16:55\u00a0<vmassol>\u00a0it's really not nice from this POV nor performant  \n16:56\u00a0<Enygma`>\u00a0it is nice from a client`s point of view  \n16:56\u00a0<Enygma`>\u00a0since that is unnecessary detail we are exposing  \n16:56\u00a0<cjd>\u00a0premature optimization  \n16:56\u00a0<cjd>\u00a0my gut says this is no bottleneck  \n16:56\u00a0<vmassol>\u00a0it's a stupid format IMO  \n16:57\u00a0<vmassol>\u00a0which doesn't scale  \n16:57\u00a0<vmassol>\u00a0btw we don't have only one parameter but several  \n16:57\u00a0<Enygma`>\u00a0does the webjars action need any other parameter than \"resource\" ?  \n16:57\u00a0<vmassol>\u00a0yes  \n16:57\u00a0<vmassol>\u00a0they could be kept as parameter though  \n16:57\u00a0<vmassol>\u00a0anyway I'm not -1 about the idea  \n16:58\u00a0<vmassol>\u00a0I jsut wouldn't like to rush anything  \n16:58\u00a0<cjd>\u00a0if webjars needs parameters other than the path, maybe it's not a very good design  \n16:58\u00a0<vmassol>\u00a0URL is not \u00a0good design then  \n16:58\u00a0<vmassol>\u00a0because it accepts parmaeters  \n16:58\u00a0<vmassol>\u00a0strange way to think cjd :)  \n16:58\u00a0<cjd>\u00a0because what everyone outside of the java world does is unzip projects into subdirectories on the httpd and that doesn't need any parameters  \n16:58\u00a0<vmassol>\u00a0saying thag nothing requires params  \n16:58\u00a0<vmassol>\u00a0\\*that  \n16:59\u00a0<cjd>\u00a0haha cute trick  \n16:59\u00a0<cjd>\u00a0needs/accepts  \n16:59\u00a0<cjd>\u00a0that's called a strawman falacy  \n16:59\u00a0<vmassol>\u00a0so the other param right now is evaluate=true|false  \n16:59\u00a0<vmassol>\u00a0again this could remain a parameter  \n16:59\u00a0<Enygma`>\u00a0but aren`t the compatibilty problems with the require module enough reason to consider it  \n16:59\u00a0<Enygma`>\u00a0I mean, in my case, I am kind of out of solutions  \n16:59\u00a0<vmassol>\u00a0the problem is the \"/\" for me  \n17:00\u00a0<vmassol>\u00a0if there was only one I'd agree without thinking more  \n17:00\u00a0<vmassol>\u00a0but here we cannot even say we'd have a rest url format  \n17:00\u00a0<cjd>\u00a0mm well since 'evaluate' is a rare occurance -- and something completely nonstandard -- we can probably leave that one as a magic url parameter, and without it webjars should behave mostly like a normal httpd with a directory structure  \n17:01\u00a0<vmassol>\u00a0Enygma`: I haven't researched your problem and I cannot say at this point that it's not possible to make requirejs work with ?  \n17:01\u00a0<vmassol>\u00a0are you 100% sure it's not possible?  \n17:02\u00a0<vmassol>\u00a0anyway I propose that we discuss this on the list for the format  \n17:02\u00a0<vmassol>\u00a0rightnow this is the least of my problems in my refacotring :)  \n17:02\u00a0<cjd>\u00a0'make work' is an extreme, you can 'make' xwiki work on a raspberry pi 2 ..  \n17:02\u00a0<vmassol>\u00a0(meaning that it's easy to change)  \n17:02\u00a0<cjd>\u00a0'expect to work' == probably not  \n17:03\u00a0<vmassol>\u00a0right now I need to fininsh stuff so that I can push things  \n17:03\u00a0<vmassol>\u00a0if we were to change the format we would also need to handle backward compat probabmy  \n17:03\u00a0<vmassol>\u00a0which is naother problem  \n17:03\u00a0<vmassol>\u00a0that I had not thought about and that I need to handle too on my side....  \n17:03\u00a0<vmassol>\u00a0actually maybe not  \n17:04\u00a0<vmassol>\u00a0since we have a method to generate webjar urls (script service)  \n17:04\u00a0<vmassol>\u00a0:)  \n17:04\u00a0<Enygma`>\u00a0that`s why I don`t consider it a problem, since everybody should be using the script service  \n17:05\u00a0<vmassol>\u00a0it's not so simple  \n17:05\u00a0<vmassol>\u00a0the format is exposed whether we want it or not and people may do URL rewriting and the like  \n17:06\u00a0<vmassol>\u00a0but a change is acceptable \u00a0IMO with proper release notes  \n17:06\u00a0<vmassol>\u00a0and since I'm changing the resource type for webjars it's a good time to change if we want to do that  \n17:07\u00a0<vmassol>\u00a0now I don't know when I'd be able to commit what I'm working on  \n17:07\u00a0<vmassol>\u00a0(if ever :))  \n17:07\u00a0<Enygma`>\u00a0I will keep digging on my end...  \n17:08\u00a0<vmassol>\u00a0sorry I can't help you dig but I need to try to progress on my stuff ATM  \n17:09\u00a0<vmassol>\u00a0(I'm also no requirejs expert at all)  \n17:09\u00a0<vmassol>\u00a0so to summarize I'm not against changing the webjars foramt  \n17:09\u00a0<vmassol>\u00a0\\*format  \n17:09\u00a0<vmassol>\u00a0if you want that  \n17:09\u00a0<vmassol>\u00a0you should send a mail on the list if you want to change it  \n17:10\u00a0<Enygma`>\u00a0ok, if I don`t come up with anything, I`ll send the mail  \n17:11\u00a0<vmassol>\u00a0ok  \n17:16\u00a0<Enygma`>\u00a0has quit  \n17:17\u00a0<Enygma`>\u00a0has joined #xwiki  \n17:27\u00a0<Enygma`>\u00a0has quit  \n17:30\u00a0<Enygma`>\u00a0has joined #xwiki  \n17:30\u00a0<KermitTheFragger>\u00a0has quit  \n17:32\u00a0<vrachieru>\u00a0has quit  \n17:35\u00a0<woshilapin>\u00a0has quit  \n17:50\u00a0<Trefex>\u00a0has quit  \n18:05\u00a0<Bugen\\_do>\u00a0has joined #xwiki  \n18:08\u00a0<cjd>\u00a0has quit  \n18:13\u00a0<Enygma`>\u00a0has quit  \n18:13\u00a0<Enygma`>\u00a0has joined #xwiki  \n18:21\u00a0<evalica>\u00a0has quit  \n18:39\u00a0<Enygma`>\u00a0vmassol: mail sent  \n18:39\u00a0<vmassol>\u00a0ok  \n18:39\u00a0<Enygma`>\u00a0has quit  \n19:13\u00a0<mflorea>\u00a0has quit  \n19:28\u00a0<woshilapin>\u00a0has joined #xwiki  \n20:11\u00a0<tmortagne>\u00a0has quit  \n20:40\u00a0<Slashman>\u00a0has quit  \n21:56\u00a0<vrachieru>\u00a0has joined #xwiki  \n21:59\u00a0<martin-h>\u00a0has quit  \n22:09\u00a0<woshilapin>\u00a0has quit  \n22:10\u00a0<martin-h>\u00a0has joined #xwiki  \n22:19\u00a0<vmassol>\u00a0has quit  \n22:20\u00a0<vmassol>\u00a0has joined #xwiki  \n22:20\u00a0<vmassol>\u00a0has quit  \n22:41\u00a0<vrachieru>\u00a0has quit  \n23:23\u00a0<\\_1\\_Fabian>\u00a0has joined #xwiki  \n23:30\u00a0<\\_1\\_Fabian>\u00a0Hi  \n23:56\u00a0<\\_1\\_Fabian>\u00a0has quit\n"}