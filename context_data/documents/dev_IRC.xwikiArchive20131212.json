{"id": "dev:IRC.xwikiArchive20131212", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20131212", "title": "IRC Archive for channel #xwiki on 12 December 2013 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<OSIMasson>\u00a0has quit  \n00:13\u00a0<OSIMasson>\u00a0has joined #xwiki  \n00:15\u00a0<mflorea>\u00a0has quit  \n00:21\u00a0<vmassol>\u00a0has joined #xwiki  \n00:37\u00a0<OSIMasson>\u00a0has quit  \n00:43\u00a0<OSIMasson>\u00a0has joined #xwiki  \n00:58\u00a0<lucaa>\u00a0has joined #xwiki  \n01:30\u00a0<abusenius>\u00a0has quit  \n01:35\u00a0<lucaa>\u00a0has quit  \n01:49\u00a0<OSIMasson>\u00a0has left #xwiki  \n07:17\u00a0<mflorea>\u00a0has joined #xwiki  \n07:48\u00a0<mflorea>\u00a0sdumitriu: I commented on your last commit  \n07:52\u00a0<vmassol>\u00a0has quit  \n07:59\u00a0<sdumitriu>\u00a0mflorea: Fixed  \n07:59\u00a0<mflorea>\u00a0thanks!  \n08:00\u00a0<sdumitriu>\u00a0Sorry for the mess, I was in a hurry and wanted to fix it before leaving  \n08:00\u00a0<mflorea>\u00a0np :)  \n08:16\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n08:34\u00a0<DarkKnightCZ>\u00a0what is the preferred way to get document inside component using its full name?  \n08:36\u00a0<camil7>\u00a0has joined #xwiki  \n08:37\u00a0<mflorea>\u00a0inject DocumentAccessBridge  \n08:37\u00a0<mflorea>\u00a0but it depends on what you need from that document  \n08:37\u00a0<DarkKnightCZ>\u00a0working with attachments  \n08:38\u00a0<DarkKnightCZ>\u00a0e.g. accessing attachment stream, removing, adding  \n08:39\u00a0<mflorea>\u00a0I think DocumentAccessBridge is limited in this regard (you should check it nevertheless) so you'll have to access the XWiki context, and then do xcontext.getWiki().getDocument(...)  \n08:39\u00a0<mflorea>\u00a0let me give you a link  \n08:40\u00a0<mflorea>\u00a0actually it's all described here http://platform.xwiki.org/xwiki/bin/view/DevGuide/WritingComponents#HAccessingLegacycode  \n08:40\u00a0<DarkKnightCZ>\u00a0ok, thanks... i already have the context (using provider), but xcontext.getWiki().getDocument() (by fullName) is deprecated and on delete it gives me bunch of 3301 errors (error while switching database)  \n08:40\u00a0<mflorea>\u00a0both DocumentAccessBridge solution and accessing the XWiki context  \n08:41\u00a0<mflorea>\u00a0well, you should work with DocumentReference in Java/components. You can use a DocumentReferenceResolver to obtain a DocumentReference from a full name (Space.Page)  \n08:43\u00a0<mflorea>\u00a0the full name doesn't include the wiki name, so unless you have a single wiki, you also need to pass a parameter to the resolver so that the full name is resolved relative to another reference that has the wiki specified  \n08:47\u00a0<DarkKnightCZ>\u00a0oh, i thought its resolved from context... so i can create DocumentReference object by parsing document full name and adding wiki name?  \n08:51\u00a0<cjd>\u00a0has joined #xwiki  \n08:54\u00a0<j-simard>\u00a0has joined #xwiki  \n09:11\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n09:11\u00a0<vmassol>\u00a0has joined #xwiki  \n09:20\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n09:47\u00a0<vrachieru>\u00a0has joined #xwiki  \n09:48\u00a0<sburjan>\u00a0has joined #xwiki  \n09:48\u00a0<j-simard>\u00a0has quit  \n09:50\u00a0<j-simard>\u00a0has joined #xwiki  \n09:55\u00a0<j-simard>\u00a0has quit  \n09:57\u00a0<tmortagne>\u00a0has joined #xwiki  \n10:00\u00a0<j-simard>\u00a0has joined #xwiki  \n10:02\u00a0<Denis>\u00a0has joined #xwiki  \n10:17\u00a0<ekarlso>\u00a0has quit  \n10:34\u00a0<evalica>\u00a0has joined #xwiki  \n10:37\u00a0<evalica1>\u00a0has joined #xwiki  \n10:37\u00a0<evalica>\u00a0has quit  \n10:37\u00a0<evalica1>\u00a0is now known as <evalica>  \n10:39\u00a0<sburjan>\u00a0hello. BFD today ? Or release day ?  \n10:39\u00a0<vmassol>\u00a0both! :)  \n11:03\u00a0<j-simard>\u00a0has quit  \n11:05\u00a0<j-simard>\u00a0has joined #xwiki  \n11:05\u00a0<lucaa>\u00a0has joined #xwiki  \n11:10\u00a0<sburjan>\u00a0vmassol: we already have the build for 5.3 final ? I can see the war on maven.xwiki.org  \n11:10\u00a0<DarkKnightCZ>\u00a0what is the safest way to add attachment to document in component? (i have file (1mb-1gb)) on server filesystem and i need to add it to certain document)  \n11:11\u00a0<cjd>\u00a0post to xwiki/bin/upload/document the same way the user uploads through the web interface  \n11:11\u00a0<cjd>\u00a0and you'll want to have FS attachments enabled  \n11:14\u00a0<DarkKnightCZ>\u00a0wouldn't be there a problem with authentication? i doubt component has login session  \n11:14\u00a0<DarkKnightCZ>\u00a0i know about Document.addAttachment(name, inputstream, context), i just don't know if its safe to use  \n11:16\u00a0<cjd>\u00a0mmm I'm not 100% sure if it will work as expected  \n11:17\u00a0<cjd>\u00a0it's not a commonly used method of uploading attachments so I can't guarantee there is no byte array in there which tries to put the attachment in ram  \n11:20\u00a0<msmeria>\u00a0has joined #xwiki  \n11:37\u00a0<DarkKnightCZ>\u00a0hmm, so there is problem with XWikiException :) if i get document and try to add attachment, it throws com.xpn.xwiki.XWikiException: Error number 3202 in 3: Exception while reading document (Wrapped Exception: Error number 3301 in 3: Exception while switching to database ...)  \n11:38\u00a0<cjd>\u00a0can you paste up the stack trace to a pastebin such as ezcrypt.it ?  \n11:52\u00a0<DarkKnightCZ>\u00a0sure  \n11:53\u00a0<DarkKnightCZ>\u00a0https://ezcrypt.it/IB7n#TJunHQuKxLf7OFx9rGR5m3b8  \n11:54\u00a0<DarkKnightCZ>\u00a0empty line with ... is deleted stack from my code  \n11:55\u00a0<cjd>\u00a0hmm  \n11:56\u00a0<cjd>\u00a0Denis: do you know why this error might happen?  \n11:56\u00a0<cjd>\u00a0NPE at com.xpn.xwiki.store.migration.AbstractDataMigrationManager.getXWikiContext(AbstractDataMigrationManager.java:284)  \n12:04\u00a0<camil7>\u00a0maybe this is not called from inside a servlet container, but some command line app ?  \n12:14\u00a0<vmassol>\u00a0has quit  \n12:20\u00a0<vmassol>\u00a0has joined #xwiki  \n12:20\u00a0<evalica>\u00a0has quit  \n12:20\u00a0<GuillaumeF>\u00a0has joined #xwiki  \n12:35\u00a0<DarkKnightCZ>\u00a0camil7: its called from component  \n12:35\u00a0<DarkKnightCZ>\u00a0but it could be fixed in 5.3, i test it on 5.1  \n12:36\u00a0<camil7>\u00a0if the component is called from a background task and not from web request, it might explain why it lack the \"context\"  \n12:38\u00a0<DarkKnightCZ>\u00a0hmm, page calls scriptservice, which extracts context and pass it to component, then component creates thread with task (converting video) and when the conversion is done, then this part of code is called (context.getWiki().getDocument(DocumentReference, context).addAttachment(filename, inputstream, context) )  \n12:39\u00a0<DarkKnightCZ>\u00a0but context still exists, if i only create the document and print fullname, it works  \n12:42\u00a0<vmassol>\u00a0has quit  \n12:43\u00a0<Slashman>\u00a0has joined #xwiki  \n12:46\u00a0<camil7>\u00a0ah: \"creates thread with task\" .... that task gets a separate \"execution context\"  \n12:46\u00a0<camil7>\u00a0and it does not know which wiki \u00a0it is talking to etc, unless set up \"properly\"  \n12:52\u00a0<camil7>\u00a0I have never tried myself, but I guess you are better off e.g. with the \u00a0using derived class from org.xwiki.job.internal.AbstractJob when running tasks in the background  \n12:52\u00a0<camil7>\u00a0that way the task gets a proper \"context\" with database connection and such  \n12:54\u00a0<DarkKnightCZ>\u00a0hmm, i can't find any evidence of AbstractJob :) not even on nexus  \n12:55\u00a0<camil7>\u00a0it should be in xwiki-commons-job-\\*.jar  \n12:55\u00a0<camil7>\u00a0in ../org/xwiki/commons, not platform  \n12:58\u00a0<DarkKnightCZ>\u00a0ok, thanks  \n13:00\u00a0<camil7>\u00a0setting up these job classes seem to need some extra scaffolding, not sure if there is documentation for it ...  \n13:10\u00a0<DarkKnightCZ>\u00a0ok, i will look onto it, thanks  \n13:12\u00a0<lucaa>\u00a0has quit  \n13:13\u00a0<Denis>\u00a0has quit  \n13:17\u00a0<mflorea>\u00a0has quit  \n13:20\u00a0<evalica>\u00a0has joined #xwiki  \n13:22\u00a0<msmeria1>\u00a0has joined #xwiki  \n13:26\u00a0<msmeria>\u00a0has quit  \n13:26\u00a0<DarkKnightCZ>\u00a0hmm, so is there a way how to get context inside AbstractJob? or should i pass it as parameter?  \n13:29\u00a0<camil7>\u00a0no, it must be initialized properly, and then the \"execution\" service will have the context \"magically\"  \n13:31\u00a0<camil7>\u00a0the magic only works with quite some extra scaffolding ... I am actually looking at org.xwiki.wikistream.internal.job.WikiStreamConverterJob andtrying to figure .. but maybe there is a simpler solution  \n13:32\u00a0<evalica>\u00a0has quit  \n13:35\u00a0<Denis>\u00a0has joined #xwiki  \n13:37\u00a0<evalica>\u00a0has joined #xwiki  \n13:38\u00a0<lucaa>\u00a0has joined #xwiki  \n13:48\u00a0<DarkKnightCZ>\u00a0ok, so i can inspire with wikistreamconverter, but in that case my component can't be singleton, since it will be constructed multiple times (or i dont even have to use component, just some class, right?)  \n13:58\u00a0<vmassol>\u00a0has joined #xwiki  \n13:59\u00a0<vmassol>\u00a0DarkKnightCZ: hi, you seem very active on using xwiki, this is very cool! Do you also post on the xwiki mailing list  \n13:59\u00a0<vmassol>\u00a0?  \n14:00\u00a0<vmassol>\u00a0I'm curious to link who's behind DarkKnightCZ with a user I may know from the list or from github pull requests :)  \n14:01\u00a0<DarkKnightCZ>\u00a0vmassol: nope, i don't use mailing list, but i can start :) and i doubt you know me :) i've just started using/maintaining xwiki a month ago :)  \n14:02\u00a0<vmassol>\u00a0from czech republic? :)  \n14:02\u00a0<DarkKnightCZ>\u00a0yep  \n14:02\u00a0<vmassol>\u00a0cool, I've lived in Poland for a year  \n14:02\u00a0<vmassol>\u00a0not too far  \n14:03\u00a0<DarkKnightCZ>\u00a0hehe, exactly :) about 30km from my position right now :)  \n14:03\u00a0<vmassol>\u00a0nice  \n14:04\u00a0<camil7>\u00a0DarkKnightCZ: with the WikiStreamConverterJob it is actually exactly the same issues, must have one job for each conversion. I think the @InstantiationStrategy(ComponentInstantiationStrategy.PER\\_LOOKUP) \u00a0does exactly that (and the rest of the magic, i.e. the WikiStreamJobManager, too)  \n14:06\u00a0<camil7>\u00a0tmortagne: for DarkKnightCZ' problem: is the WikiStreamConverterJob is instanciated per conversion attempt? so he can do something similar for a similar kind of \"converter job\" ?  \n14:08\u00a0<vmassol1>\u00a0has joined #xwiki  \n14:10\u00a0<gdelhumeau>\u00a0has quit  \n14:10\u00a0<cjd>\u00a0has quit  \n14:12\u00a0<vmassol>\u00a0has quit  \n14:14\u00a0<vmassol>\u00a0has joined #xwiki  \n14:14\u00a0<vmassol1>\u00a0has quit  \n14:23\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n14:29\u00a0<cjd>\u00a0has joined #xwiki  \n14:55\u00a0<xwikibot>\u00a0has joined #xwiki  \n15:08\u00a0<UCC>\u00a0has joined #xwiki  \n15:22\u00a0<mflorea>\u00a0has joined #xwiki  \n15:33\u00a0<evalica1>\u00a0has joined #xwiki  \n15:33\u00a0<evalica>\u00a0has quit  \n15:58\u00a0<vmassol1>\u00a0has joined #xwiki  \n16:01\u00a0<UCC>\u00a0has quit  \n16:03\u00a0<vmassol>\u00a0has quit  \n16:13\u00a0<tmortagne>\u00a0camil7, DarkKnightCZ: you can make any component being a different instance per call to getInstance using @InstantiationStrategy(ComponentInstantiationStrategy.PER\\_LOOKUP)  \n16:17\u00a0<DarkKnightCZ>\u00a0tmortagne: thanks, so following ScriptWikiStreamConverterJob should be the right way?  \n16:22\u00a0<tmortagne>\u00a0DarkKnightCZ: I did not followed your use case actually  \n16:22\u00a0<tmortagne>\u00a0you want to create a job for some task of yours ?  \n16:24\u00a0<DarkKnightCZ>\u00a0yep, http://lists.xwiki.org/pipermail/devs/2013-December/055722.html  \n16:28\u00a0<tmortagne>\u00a0DarkKnightCZ: checking at something, I may have a simpler example than this one  \n16:28\u00a0<DarkKnightCZ>\u00a0ok, thanks  \n16:32\u00a0<tmortagne>\u00a0DarkKnightCZ: https://github.com/xwiki/xwiki-platform/blob/master/xwiki-platform-core/xwiki-platform-search/xwiki-platform-search-solr/xwiki-platform-search-solr-api/src/main/java/org/xwiki/search/solr/internal/DefaultSolrIndexer.java#L542  \n16:33\u00a0<tmortagne>\u00a0it's probably one of the simplest example or starting a job in a background thread which need access to XWikiContext and XWiki  \n16:33\u00a0<tmortagne>\u00a0the main thing you were missing I think is ExecutionContextRunnable wrapper  \n16:34\u00a0<tmortagne>\u00a0it deal with properly initializing a ExecutionContext and then you use inject XWikiContext provider where you needs it  \n16:35\u00a0<tmortagne>\u00a0I need to find some time to make dealing with jobs more obvious  \n16:37\u00a0<DarkKnightCZ>\u00a0ok, thanks, i will look into it tomorow :) got to go  \n16:37\u00a0<tmortagne>\u00a0answering on the mailing list too  \n16:38\u00a0<DarkKnightCZ>\u00a0great, thanks :)  \n16:38\u00a0<DarkKnightCZ>\u00a0has left #xwiki  \n16:43\u00a0<msmeria1>\u00a0gdelhumeau: seems like XWIKI-9737 isn't fixed on 5.3rc1  \n16:45\u00a0<maxr\\_>\u00a0has joined #xwiki  \n16:48\u00a0<maxr\\_>\u00a0Hi I want to debug my custom javascript but the code is minified. In your documentation, they say to use ?minify=false, but it does not seem to works. Any idea ?  \n16:52\u00a0<msmeria1>\u00a0gdelhumeau: I think I know why this happens: after creating the subwiki I get the DW which suggests I install \"XWiki Enterprise - UI - Main Wiki All\" on the new subwiki  \n16:53\u00a0<msmeria1>\u00a0iirc that's the UI that has the Admin user  \n16:55\u00a0<cjd>\u00a0maxr\\_: you'll need to use minify=false when actually pulling in the script itself, not just in the page which you're viewing  \n16:56\u00a0<cjd>\u00a0if you include the script using $xwiki.jsx.use('Page.Name') then change that to \u00a0\u00a0$xwiki.jsx.use('Page.Name', {'minify':'false'})  \n16:59\u00a0<maxr\\_>\u00a0cjd: ok. In fact, I created a JavascriptExtension.  \n17:03\u00a0<cjd>\u00a0mm if you set it to be included all of the time then AFAIK (others might know better) there is no way to make it be unminified  \n17:03\u00a0<cjd>\u00a0the workaround is to set it to be used \"on demand\" and then use {{velocity}}$xwiki.jsx.use('Page.Name', {'minify':'false'}){{/velocity}} in your page  \n17:04\u00a0<maxr\\_>\u00a0cjd: ok, thanks  \n17:50\u00a0<ekarlso>\u00a0has quit  \n17:50\u00a0<sdumitriu1>\u00a0has joined #xwiki  \n17:51\u00a0<ekarlso>\u00a0has joined #xwiki  \n17:54\u00a0<gdelhumeau>\u00a0msmeria1: yes, it is not normal that DW proposed you that  \n17:56\u00a0<evalica1>\u00a0has quit  \n17:59\u00a0<camil7>\u00a0tmortagne: sorry to bother again, but if I define an input conversion and an output conversion, where does the WikiStream write the its results to? I tried an url:file:///path/to/export.xar as \"target\" for the output, but WikiStream seems not write to that file, but just finishes the job  \n18:01\u00a0<tmortagne>\u00a0camil7: not sure I understand exactly your environment, you are in tests ? in the UI ? directly in Java using the API ?  \n18:01\u00a0<camil7>\u00a0sorry, in the web UI  \n18:01\u00a0<camil7>\u00a0in http://localhost:8080/xwiki/bin/view/WikiStream/WebHome \u00a0so to say  \n18:02\u00a0<camil7>\u00a0picking an input (of type confluence+xml) and try to convert it to a \\*.xar  \n18:02\u00a0<tmortagne>\u00a0hmm yes looks like OutputTargetConverter require some work  \n18:03\u00a0<tmortagne>\u00a0it support a lot of things but when it's a string it just create a StringWriterOutputTarget... which is obviously useless  \n18:03\u00a0<tmortagne>\u00a0if you don't put anything you should get a download I think  \n18:03\u00a0<tmortagne>\u00a0at least you are supposed to  \n18:04\u00a0<camil7>\u00a0ah, ok, so I could dig in a InputTargetConverter and see if I get it running? \u00a0\u00a0... ah, no, sorry, no download happend, it seems  \n18:04\u00a0<tmortagne>\u00a0let me check that  \n18:04\u00a0<tmortagne>\u00a0I tested a lot the input but not that much the output...  \n18:05\u00a0<tmortagne>\u00a0the ui is supposed to put the response outputstream in the target when the target is empty, maybe there is a bug in the velocity code  \n18:05\u00a0<tmortagne>\u00a0checking that  \n18:07\u00a0<tmortagne>\u00a0camil7: I may not have much time left today (XWiki 10 years etc), would be cool if you could create a jira issue about the output target handling in the wikistream UI and I will fix it tomorrow  \n18:07\u00a0<camil7>\u00a0yes, ok, thanks for the info, as I can see where to hack in to get a quickfix :)  \n18:07\u00a0<gdelhumeau>\u00a0has quit  \n18:08\u00a0<tmortagne>\u00a0has quit  \n18:08\u00a0<cjd>\u00a0has quit  \n18:10\u00a0<j-simard>\u00a0has quit  \n18:17\u00a0<j-simard>\u00a0has joined #xwiki  \n18:18\u00a0<vmassol1>\u00a0has quit  \n18:20\u00a0<KermitTheFragger>\u00a0has quit  \n18:21\u00a0<j-simard>\u00a0has quit  \n18:25\u00a0<j-simard>\u00a0has joined #xwiki  \n18:27\u00a0<j-simard>\u00a0has quit  \n18:37\u00a0<camil7>\u00a0has quit  \n18:41\u00a0<msmeria1>\u00a0has quit  \n19:05\u00a0<GuillaumeF>\u00a0has quit  \n19:12\u00a0<mflorea>\u00a0has quit  \n19:21\u00a0<GuillaumeF>\u00a0has joined #xwiki  \n19:31\u00a0<lucaa>\u00a0has quit  \n19:35\u00a0<GuillaumeF>\u00a0has quit  \n19:36\u00a0<abusenius>\u00a0has joined #xwiki  \n19:40\u00a0<UCC>\u00a0has joined #xwiki  \n19:44\u00a0<UCC>\u00a0has quit  \n19:52\u00a0<GuillaumeF>\u00a0has joined #xwiki  \n21:53\u00a0<evalica>\u00a0has joined #xwiki  \n21:57\u00a0<evalica>\u00a0has quit  \n22:08\u00a0<vmassol>\u00a0has joined #xwiki  \n22:36\u00a0<vmassol>\u00a0has quit  \n22:40\u00a0<cjd>\u00a0has joined #xwiki  \n22:43\u00a0<sdumitriu1>\u00a0has quit  \n23:01\u00a0<cjd>\u00a0has quit\n"}