{
  "id": "extensions:Extension.LLM Application.Authenticator.WebHome",
  "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/",
  "title": "Token-based authentication for the LLM Application (BETA)",
  "collection": "Eval_de",
  "mimetype": "text/markdown",
  "language": "de",
  "content": "| cog | **Token-basierte Authentifizierung für die LLM-Anwendung.** |\n| --- | --- |\n\n| Typ | XAR |\n| --- | --- |\n| Kategorie | Authentifikator |\n| Entwickelt von | Unbekannt |\n| Bewertung | *  * [1](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Schlecht\") * [2](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Befriedigend\") * [3](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Gut\") * [4](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Sehr gut\") * [5](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/ \"Ausgezeichnet\")    0 Stimmen |\n| Lizenz | GNU Lesser General Public License 2.1 |\n\n| Kompatibilität | 16.2.0 und höher |\n| --- | --- |\n\n[Quellen](https://github.com/xwiki-contrib/ai-llm/tree/main/application-ai-llm-authentication/application-ai-llm-authentication-ui)[Probleme](https://jira.xwiki.org/browse/LLMAI)\n\nInhaltsverzeichnis\n\n* [Beschreibung](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/#HDescription)\n\t+ [Konfiguration](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/#HConfiguration)\n\t\t- [Konfiguration autorisierter Anwendungen](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/#HAuthorizedApplicationsConfiguration)\n\t+ [Token-Generierung](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/Authenticator/#HTokenGeneration)\n# Beschreibung\n\nDiese Erweiterung bietet eine Möglichkeit für externe Anwendungen, die z.B. den von der [LLM-Anwendung (BETA)](https://extensions.xwiki.org/xwiki/bin/view/Extension/LLM%20Application/) bereitgestellten Chat einbetten, Benutzer mit signierten [JSON Web Tokens](https://en.wikipedia.org/wiki/JSON_Web_Token) (JWT) zu authentifizieren. Benutzer werden direkt basierend auf den im Token bereitgestellten Informationen erstellt oder aktualisiert. Derzeit gibt es keine Unterstützung dafür, ein Token zur Authentifizierung eines bestehenden Benutzers zu verwenden, der nicht durch diesen Authentifikator erstellt wurde. Der Authentifikator unterstützt die Authentifizierung von Benutzern aus mehreren Anwendungen, die verschiedenen Benutzerkonten zugeordnet sind. Wenn im Antrag kein Token vorhanden ist, fällt der Authentifikator auf einen konfigurierbaren Authentifikator zurück und sollte daher in der Lage sein, diesen Token-Authentifikator mit jedem anderen Authentifikator zu kombinieren.\n\n## Konfiguration\n\nSie können diesen Token-Authentifikator aktivieren, indem Sie die Eigenschaft xwiki.authentication.authclass in der xwiki.properties-Datei auf org.xwiki.contrib.llm.authentication.JWTTokenAuth setzen. Alternativ können Sie den \"JWT Token Authenticator for the LLM AI Application\" in der [Authentifizierungskonfiguration](https://xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Authentication/#HChoosetheauthenticator) auswählen.\n\nWenn im Antrag kein Token vorhanden ist (siehe unten), fällt der Authentifikator auf den Standard-Authentifikator zurück. Sie können die Eigenschaft llm.authentication.jwt.authenticator in der xwiki.properties-Datei auf den Authentifikator setzen, der anstelle des Standard-Authentifikators als Fallback verwendet werden soll.\n\n### Konfiguration autorisierter Anwendungen\n\nDie Erweiterung fügt der Liste \"Anwendungen\" einen neuen Eintrag \"Autorisierte Anwendungen\" hinzu (siehe oben links im folgenden Screenshot). Damit können Sie verwalten, welche Anwendungen berechtigt sind, Tokens für die Verwendung mit diesem Authentifikator zu generieren.\n\n![Screenshot des Hauptbildschirms der Anwendung \"Autorisierte Anwendungen\", der die Eintragsliste mit einem Eintrag zeigt](https://extensions.xwiki.org/xwiki/bin/download/Extension/LLM%20Application/Authenticator/WebHome/AuthorizedApplications.png?width=960&height=375&rev=1.1)\n\nDurch Klicken auf \"Neuen Eintrag hinzufügen\" können Sie eine neue autorisierte Anwendung hinzufügen. Sie können die folgenden Eigenschaften konfigurieren:\n\n* Titel - der Titel der Anwendung, dies dient nur Anzeigezwecken\n* URL - die URL der Anwendung. Dies ist der Bezeichner der Anwendung und muss mit dem Feld \"issuer\" in den generierten Tokens übereinstimmen (siehe unten)\n* Der öffentliche Schlüssel - dies muss ein Ed25519-öffentlicher Schlüssel im PEM-Format sein, der dem privaten Schlüssel entspricht, der zum Signieren der Tokens verwendet wird (siehe unten)\n* Gruppenformat - das Format für die Gruppen. Um zu vermeiden, dass externe Anwendungen Benutzer mit Gruppen wie XWikiAdminGroup erstellen, die Admin-Rechte im Wiki gewähren würden, wird dringend empfohlen, ein eindeutiges Präfix und möglicherweise auch ein Suffix zu konfigurieren, z.B. durch Verwendung von \"Example${group}Group\", wobei ${group} durch den im Token angegebenen Gruppennamen ersetzt wird.\n\n![Screenshot eines Eintrags einer autorisierten Anwendung](https://extensions.xwiki.org/xwiki/bin/download/Extension/LLM%20Application/Authenticator/WebHome/ExampleApplication.png?width=650&height=435&rev=1.1)\n\n## Token-Generierung\n\nDieser Authentifikator erwartet ein JWT-Token, das mit einem Ed25519-Schlüssel signiert ist. Ein geeigneter Signaturschlüssel kann z.B. mit dem [OpenSSL](https://www.openssl.org/) Befehlszeilenprogramm und den folgenden zwei Befehlen generiert werden:\n\nopenssl genpkey -algorithm ed25519 -outform PEM -out private.pem  \nopenssl pkey -in private.pem -pubout -outform PEM -out public.pemDie Dateien \"private.pem\" und \"public.pem\" enthalten dann den privaten und öffentlichen Schlüssel im PEM-Format.\n\nDas JWT-Token muss die folgenden Ansprüche enthalten:\n\n* \"exp\": die Ablaufzeit, muss in der Zukunft liegen, aber nicht mehr als 24 Stunden in der Zukunft\n* \"iss\": der Aussteller, entsprechend der in den autorisierten Anwendungen konfigurierten URL-Eigenschaft\n* \"sub\": das Subjekt, wird zur Ableitung des Benutzernamens verwendet\n* \"aud\": das Publikum, muss die URL der XWiki-Installation in der Form https://www.example.com/ ohne Pfad enthalten. Sowohl ein einzelner String als auch ein Array von Strings werden unterstützt. Wenn die erwartete URL nicht übergeben wird, wird ein Fehler mit der erwarteten URL protokolliert.\n\nOptional:\n\n* \"given\\_name\": wird verwendet, um das Feld \"Vorname\" des Benutzerprofils zu setzen\n* \"family\\_name\": wird verwendet, um das Feld \"Nachname\" des Benutzerprofils zu setzen\n* \"email\": wird verwendet, um das Feld \"E-Mail\" des Benutzerprofils zu setzen\n* \"groups\": eine Liste von Gruppen (als Liste von Strings). Wird verwendet, um die Gruppen des Benutzers zu setzen.\n* \"iat\": ausgestellt am, die Zeit, zu der das Token ausgestellt wurde. Tokens, die älter als 24 Stunden sind und Tokens, die in der Zukunft ausgestellt wurden, werden nicht akzeptiert.\n* \"nbf\": nicht vor, das Token wird abgelehnt, wenn diese Zeit in der Zukunft liegt.\n\nDas Token muss im \"Authorization\"-Header in der Form \"Bearer TOKEN\" vorhanden sein, wobei TOKEN das signierte JWT-Token wie oben beschrieben ist."
}