{"id": "dev:IRC.xwikiArchive20120521", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20120521", "title": "IRC Archive for channel #xwiki on 21 May 2012 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n00:00\u00a0<@cjd>\u00a0try cd xwiki-commons && git pull && mvn clean install  \n00:00\u00a0<@cjd>\u00a0then cd ../xwiki-rendering && git pull && mvn clean install  \n00:00\u00a0<@cjd>\u00a0then back to platform  \n00:00\u00a0<@cjd>\u00a0looks like your version of xwiki-rendering is old  \n00:01\u00a0<jssol>\u00a0ok let me try that  \n00:01\u00a0<qwebirc84308>\u00a0whats the link for the enterprise web app?  \n00:02\u00a0<mflorea>\u00a0has quit  \n00:02\u00a0<@cjd>\u00a0http://enterprise.xwiki.org/xwiki/bin/view/Main/Download  \n00:02\u00a0<@cjd>\u00a0.war is for a tomcat server  \n00:02\u00a0<@cjd>\u00a0.exe and .zip are for a standalone  \n00:03\u00a0<slugz>\u00a0has quit  \n00:04\u00a0<@cjd>\u00a0when you use a big server like tomcat or glassfish, you have to worry about their bugs too...  \n00:04\u00a0<qwebirc84308>\u00a0Is it this one \u00a0- A Debian repository containing a set a Debian packages to install XWiki on any Debian based distribution.?  \n00:04\u00a0<jssol>\u00a0to confirm, the xwiki-platform, common, and rendering folders should all be at the same level?  \n00:04\u00a0<jssol>\u00a0or should common and rendering be inside the platform folder  \n00:05\u00a0<@cjd>\u00a0qwebirc84308: sorry i don't know anything about the debian packages, I've not used them  \n00:05\u00a0<@cjd>\u00a0no, commons, rendering, platform are all in the same dir  \n00:05\u00a0<@cjd>\u00a0https://github.com/xwiki/xwiki-trunks  \n00:06\u00a0<qwebirc84308>\u00a0Which enterprise web app have you used?  \n00:06\u00a0<@cjd>\u00a0we use that for keeping track of them  \n00:06\u00a0<@cjd>\u00a0qwebirc84308: I've used the war, and zip versions extensively, I recommand the zip version if you don't already have a tomcat application server  \n00:07\u00a0<qwebirc84308>\u00a0okay, cool :-)  \n00:09\u00a0<qwebirc84308>\u00a0Btw: I have a Godaddy Shared Host, but im guessing ill need something with more power?  \n00:09\u00a0<@cjd>\u00a0yes, shared hosting will not work unless it's shared java hosting  \n00:09\u00a0<@cjd>\u00a0shared php hosting is not enough.  \n00:10\u00a0<qwebirc84308>\u00a0so standalone is also included as a web app?  \n00:11\u00a0<qwebirc84308>\u00a0standalone = web app OR both?  \n00:13\u00a0<@cjd>\u00a0yes, the standalone .zip file is also a webapp.  \n00:13\u00a0<qwebirc84308>\u00a0aWesome :-)  \n00:13\u00a0<@cjd>\u00a0The different is that the .war distribution is meant to run under a server like tomcat.  \n00:13\u00a0<qwebirc84308>\u00a0any host you guys recommend?  \n00:14\u00a0<@cjd>\u00a0My recommendation is to use a VPS rather than shared tomcat hosting.  \n00:14\u00a0<@cjd>\u00a0As far as good vps provders... Not entirely sure.  \n00:14\u00a0<qwebirc84308>\u00a0Java VPS?  \n00:15\u00a0<qwebirc84308>\u00a0Cool, Ill have a look around.  \n00:15\u00a0<@cjd>\u00a0just a normal vps is enough as long as you're sutably experienced with the linux command line to install java yourself  \n00:15\u00a0<qwebirc84308>\u00a0Ah okay, i see.  \n00:17\u00a0<qwebirc84308>\u00a0Sweet thanks guys. See ya :-)  \n00:17\u00a0<qwebirc84308>\u00a0has quit  \n00:22\u00a0<abusenius>\u00a0has quit  \n00:25\u00a0<jssol>\u00a0hi @cjd, so i was able to build commons succesfully but not rendering  \n00:25\u00a0<jssol>\u00a0here is the error: https://ezcrypt.it/Wa5n#h9LQMIBu7or6pt7ZcUYX8Pis  \n00:25\u00a0<jssol>\u00a0i think i'm missing a dependency d4j?  \n00:25\u00a0<jssol>\u00a0\\*dom4j  \n00:25\u00a0<@cjd>\u00a0hmm no that looks like a bug on out end  \n00:26\u00a0<@cjd>\u00a0\\*our  \n00:29\u00a0<@cjd>\u00a0everything looks right  \n00:32\u00a0<jssol>\u00a0hmm, i tried again pulling straight from xwiki's github and still get the same error. here it is with -e https://ezcrypt.it/Xa5n#EksvQZcMoRYSkghLyRdTkHRP  \n00:32\u00a0<@cjd>\u00a0the background on your error is that the <version> for dom4j is unspecified  \n00:32\u00a0<@cjd>\u00a0but it's specified in xwiki-commons  \n00:32\u00a0<@cjd>\u00a0and rendering inherits from commons  \n00:32\u00a0<@cjd>\u00a0so it should work  \n00:33\u00a0<@cjd>\u00a0try: \u00a0mvn --version  \n00:33\u00a0<jssol>\u00a0https://ezcrypt.it/Ya5n#tdf6vtv8UiR6uLB2I0ZkQ9yR  \n00:34\u00a0<@cjd>\u00a0that should be fine  \n00:34\u00a0<@cjd>\u00a0try this:  \n00:35\u00a0<@cjd>\u00a0rm ~/.m2/repository/\\* -r  \n00:35\u00a0<@cjd>\u00a0cd ../xwiki-commons  \n00:35\u00a0<@cjd>\u00a0mvn clean install  \n00:35\u00a0<@cjd>\u00a0cd ../xwiki-renderinf  \n00:35\u00a0<@cjd>\u00a0mvn clean install  \n00:35\u00a0<@cjd>\u00a0\\*rendering  \n00:35\u00a0<@cjd>\u00a0let me know what happens  \n00:35\u00a0<@cjd>\u00a0I'll try the same here.  \n00:36\u00a0<jssol>\u00a0this is a typo right? cd ../xwiki-renderinf  \n00:36\u00a0<jssol>\u00a0oh it is  \n00:36\u00a0<jssol>\u00a0sorry!  \n00:41\u00a0<@cjd>\u00a0for dir in `ls`; do [ -d $dir ] && cd $dir && git reset --hard && git clean -dxf && git checkout master && git reset --hard && git clean -dxf && git pull && cd ..; done  \n00:42\u00a0<@cjd>\u00a0^^ nice way to update all of your sub-repos at once  \n00:42\u00a0<@cjd>\u00a0hrm no that script has a bug  \n00:45\u00a0<@cjd>\u00a0for dir in `ls`; do [ -d $dir ] && ( cd $dir && git reset --hard && git clean -dxf && git checkout master && git reset --hard && git clean -dxf && git pull && echo \"$dir Success\" ); done  \n00:45\u00a0<@cjd>\u00a0that one seems to work :)  \n00:46\u00a0<qwebirc46003>\u00a0has joined #xwiki  \n00:55\u00a0<qwebirc46003>\u00a0hello, one more question. it was mentioned earlier that xwiki requires at least 1 gig, is this referring to storage space or the actual server ram?  \n00:56\u00a0<qwebirc46003>\u00a0pricing starts to get quite costly when upsizing ram...  \n00:59\u00a0<@cjd>\u00a0that's ram, you can probably get away with less but it starts to get tight  \n01:00\u00a0<@cjd>\u00a0256M is just not going to happen  \n01:00\u00a0<qwebirc46003>\u00a0okay, so 1 gig of ram, but more if you can affort.  \n01:00\u00a0<qwebirc46003>\u00a0afford \\*\\*\\*  \n01:00\u00a0<@cjd>\u00a0512M is possible but extremely tight and you'll probably end up with OOM issues  \n01:01\u00a0<@cjd>\u00a0yes, 1G is possible, it will likely run into issues when it scales to a large wiki but it will get you off the ground comfortably  \n01:01\u00a0<@cjd>\u00a0oh  \n01:01\u00a0<@cjd>\u00a0make sure not to use a 64 bit system  \n01:01\u00a0<@cjd>\u00a0more specifically, don't use 64 bit java  \n01:02\u00a0<@cjd>\u00a0because one thing Sun fails at is using ram efficiently (obviously) and in 64 bit java, all of their mistakes are amplified twice as much.  \n01:03\u00a0<qwebirc46003>\u00a0great, thanks for the advice! noted.  \n01:07\u00a0<qwebirc46003>\u00a0has quit  \n01:08\u00a0<cjd>\u00a0has quit  \n01:09\u00a0<jssol>\u00a0hi cjd, i'm still getting the same error  \n01:09\u00a0<jssol>\u00a0common builds correctly, and rendering has issue with dom4j  \n01:10\u00a0<cjd>\u00a0has joined #xwiki  \n01:10\u00a0<jssol>\u00a0hi cjd, i'm still getting the same error  \n01:10\u00a0<jssol>\u00a0common builds correctly, and rendering has issue with dom4j  \n01:10\u00a0<cjd>\u00a0is now known as <Guest84285>  \n01:11\u00a0<Guest84285>\u00a0trying it myself  \n01:12\u00a0<Guest84285>\u00a0has quit  \n01:12\u00a0<cjd\\_>\u00a0has joined #xwiki  \n01:28\u00a0<@cjd\\_>\u00a0I'm getting a build success  \n01:31\u00a0<jssol>\u00a0hmmm, my folder directory looks like: xwik/xwiki-commons; xwik/xwiki-platform; xwik/xwiki-rendering  \n01:31\u00a0<jssol>\u00a0and do you need to install anything besides maven ( a plugin or sth?), i just did apt-get install maven  \n01:33\u00a0<@cjd\\_>\u00a0I'm going to try an older version of java, I wouldn't be surprised if this is a java version thing  \n01:34\u00a0<jssol>\u00a0ok  \n01:34\u00a0<@cjd\\_>\u00a0I'm using 2.6\\_30  \n01:36\u00a0<jssol>\u00a0that's probably it then since it seems i'm quite far behind  \n01:36\u00a0<jssol>\u00a0java version \"1.6.0\\_24\" OpenJDK Runtime Environment (IcedTea6 1.11.1) (6b24-1.11.1-4ubuntu2) OpenJDK 64-Bit Server VM (build 20.0-b12, mixed mode)  \n01:45\u00a0<@cjd\\_>\u00a0hmm commons doesn't compile 1.6\\_21  \n01:46\u00a0<@cjd\\_>\u00a0anyway, try using the newest version and see if that solves your problem, I'm running almost the same version of maven so it should all \"just work\" the same.  \n01:47\u00a0<jssol>\u00a0alright, doing that right now. thanks!  \n02:28\u00a0<sburjan`>\u00a0has quit  \n02:54\u00a0<npm>\u00a0I'm still seeing something like http://jira.xwiki.org/browse/XWIKI-6180 in XE 3.5 -- my macro becomes unregistered after restart. have to resave as Admin to get it working again  \n02:57\u00a0<jssol>\u00a0i'm still having issues. i'm using what seems to be the latest version avaiable  \n02:57\u00a0<jssol>\u00a0java version \"1.7.0\\_04\" Java(TM) SE Runtime Environment (build 1.7.0\\_04-b20) Java HotSpot(TM) 64-Bit Server VM (build 23.0-b21, mixed mode)  \n02:57\u00a0<jssol>\u00a0i'm not sure how you got 2.6\\_30?  \n03:10\u00a0<@cjd\\_>\u00a0ahh, I downloaded it back when it was the newest  \n03:10\u00a0<@cjd\\_>\u00a0that was kind of a long shot anyway  \n03:10\u00a0<@cjd\\_>\u00a0I've seen odd version dependent issues EG: commons doesn't compile with 1.6.0\\_21  \n03:15\u00a0<jssol>\u00a0woudn't 2.6 be newer than 1.7?  \n03:15\u00a0<jssol>\u00a0in any regards, any other ideas?  \n03:15\u00a0<@cjd\\_>\u00a0sorry, 1.6.0\\_30  \n03:15\u00a0<@cjd\\_>\u00a0typo  \n03:52\u00a0<@cjd\\_>\u00a0jssol: I assume your ~/.m2/settings.xml is exactly what is here: http://dev.xwiki.org/xwiki/bin/view/Community/Building  \n03:53\u00a0<@cjd\\_>\u00a0I just built with that and it build commons and rendering ok  \n04:19\u00a0<jssol>\u00a0yes, i did c&p  \n04:20\u00a0<@cjd\\_>\u00a0that's weird  \n04:20\u00a0<jssol>\u00a0it is interesting that i can build commons without a hitch  \n04:20\u00a0<@cjd\\_>\u00a0vmassol might know more since he's an ex-maven developer  \n04:21\u00a0<cjd\\_>\u00a0is now known as <cjd>  \n04:21\u00a0<jssol>\u00a0what would be the best way to contact him? should i ask on the mailing list?  \n04:22\u00a0<@cjd>\u00a0he'll be here in about 6 or 7 hours from now  \n04:24\u00a0<jssol>\u00a0also, another question if i did a fix for jira, since it was just deleting text from translation  \n04:24\u00a0<jssol>\u00a0do i need to mark it, or will the person managing the pull request manage it  \n04:26\u00a0<@cjd>\u00a0you mean there's an issue on jira and you fixed it, you're wondering if you need to make note that you fixed it?  \n04:26\u00a0<@cjd>\u00a0or you're wondering if you need to create an issue to get your PR pulled?  \n04:26\u00a0<jssol>\u00a0the first  \n04:27\u00a0<@cjd>\u00a0I think you should somehow communicate that it fixes the other issue so that the issue is closed as it should be.  \n04:28\u00a0<jssol>\u00a0i wrote the link in the pull request (the issue: http://jira.xwiki.org/browse/XWIKI-7678)  \n04:31\u00a0<@cjd>\u00a0you know a lot of languages ;)  \n04:32\u00a0<@cjd>\u00a0in my experience, these kinds of things require the most discussion and can be the most difficult types of issues to get consensus on.  \n04:32\u00a0<@cjd>\u00a0it's something the user will see...  \n04:32\u00a0<@cjd>\u00a0http://en.wikipedia.org/wiki/Parkinson's\\_Law\\_of\\_Triviality  \n04:33\u00a0<@cjd>\u00a0So the thing to do (IMO) is ask on the devs list if that change makes sense.  \n04:33\u00a0<jssol>\u00a0aha, i assumed it was where the period was. my newness is showing  \n04:34\u00a0<jssol>\u00a0ok, i will go ahead and do that. thanks for all your help cjd!  \n04:35\u00a0<@cjd>\u00a0sure thing  \n04:57\u00a0<ssavi>\u00a0has joined #xwiki  \n05:27\u00a0<qwebirc26754>\u00a0has joined #xwiki  \n05:28\u00a0<qwebirc26754>\u00a0Hey, where abouts is the database stored in xwiki enterprise? Is it in the folder named database? There are several files in there...  \n05:30\u00a0<@cjd>\u00a0yes, that's the storage for the HyperSQL database.  \n05:31\u00a0<qwebirc26754>\u00a0Are those the files I need to backup?  \n05:33\u00a0<@cjd>\u00a0yes  \n05:33\u00a0<qwebirc26754>\u00a0Cool.  \n05:34\u00a0<@cjd>\u00a0backing up the whole directory is nice if you have incremental backup so it doesn't take up too much space  \n05:34\u00a0<qwebirc26754>\u00a0Could I copy the database and paste it into another instance of xwiki?  \n05:34\u00a0<@cjd>\u00a0It should be possible but I've not done it, you might want to try just to make sure.  \n05:35\u00a0<qwebirc26754>\u00a0Okay will do  \n05:35\u00a0<qwebirc26754>\u00a0Have u heard of a host named arvixie?  \n05:36\u00a0<@cjd>\u00a0nope  \n05:37\u00a0<qwebirc26754>\u00a0$4 per month to host xwiki...  \n05:37\u00a0<qwebirc26754>\u00a0Sounds pretty good  \n05:38\u00a0<@cjd>\u00a0nice  \n05:41\u00a0<qwebirc26754>\u00a0I'm wondering what the downside is...  \n05:42\u00a0<@cjd>\u00a0with a lot of those, the downside is they oversell so when they get more customers, you find you don't have as much ram as they promised  \n05:42\u00a0<@cjd>\u00a0or processes randomly get terminated because they're out of ram  \n05:42\u00a0<@cjd>\u00a0but if they're not full then they can oversell all they want...  \n05:44\u00a0<qwebirc26754>\u00a0Ah I see, yah it is shared VIPs...  \n05:44\u00a0<qwebirc26754>\u00a0Vos  \n05:44\u00a0<qwebirc26754>\u00a0VIPs  \n05:44\u00a0<qwebirc26754>\u00a0Sorry, iPad correcting my text  \n05:44\u00a0<qwebirc26754>\u00a0Cool  \n05:45\u00a0<@cjd>\u00a0heh yeap  \n05:45\u00a0<qwebirc26754>\u00a0Okay and how do you back up attachments?  \n05:46\u00a0<@cjd>\u00a0by default, attachments are stored in the database  \n05:46\u00a0<@cjd>\u00a0so I recommend you either switch to FS attachments (there are instructions on xwiki.org) or switch to mysql since it's better about large data sets.  \n05:47\u00a0<rrodriguez>\u00a0has joined #xwiki  \n05:52\u00a0<qwebirc26754>\u00a0Okay understand :)  \n06:05\u00a0<qwebirc26754>\u00a0has quit  \n06:54\u00a0<rrodriguez>\u00a0has quit  \n07:03\u00a0<Denis1>\u00a0has joined #xwiki  \n07:03\u00a0<Denis>\u00a0has quit  \n07:06\u00a0<jssol>\u00a0has quit  \n07:28\u00a0<ssavi>\u00a0has quit  \n07:29\u00a0<ssavi>\u00a0has joined #xwiki  \n07:42\u00a0<rrodriguez>\u00a0has joined #xwiki  \n07:45\u00a0<mflorea>\u00a0has joined #xwiki  \n07:46\u00a0<sburjan`>\u00a0has joined #xwiki  \n07:56\u00a0<rrodriguez>\u00a0has quit  \n08:07\u00a0<polx>\u00a0has joined #xwiki  \n08:11\u00a0<vmassol>\u00a0has joined #xwiki  \n08:27\u00a0<tmortagne>\u00a0has joined #xwiki  \n08:28\u00a0<polx>\u00a0has quit  \n08:54\u00a0<mflorea>\u00a0has quit  \n09:33\u00a0<mflorea>\u00a0has joined #xwiki  \n09:34\u00a0<tmortagne1>\u00a0has joined #xwiki  \n09:35\u00a0<tmortagne>\u00a0has quit  \n09:56\u00a0<polx>\u00a0has joined #xwiki  \n09:58\u00a0<lucaa>\u00a0has joined #xwiki  \n10:05\u00a0<polx>\u00a0has quit  \n10:12\u00a0<sburjan>\u00a0has joined #xwiki  \n10:18\u00a0<tmortagne1>\u00a0has quit  \n10:29\u00a0<tmortagne>\u00a0has joined #xwiki  \n10:32\u00a0<CIA-74>\u00a0Vincent Massol\u000f master\u000f \\* r6865666\u000f https://github.com/xwiki/xwiki-rendering/commit/6865666b161678345d8c17382ad50ffed0306d6c \u000f/ (6 files in 3 dirs):\u000f XRENDERING-205: Add support for Metadata Syntax different than the Syntax being tested in the CTS - http://git.io/lT4ZrA  \n10:32\u00a0<vmassol>\u00a0tmortagne: do you know if the following was supported in XWiki Syntax 1.0: \"This is \\* bold \\*\"  \n10:32\u00a0<vmassol>\u00a0right now it's failing  \n10:33\u00a0<vmassol>\u00a0going to try it  \n10:34\u00a0<jvdrean>\u00a0has joined #xwiki  \n10:34\u00a0<vmassol>\u00a0answer: it wasn't supported  \n10:35\u00a0<vmassol>\u00a0cool I'll make the test not applicable  \n10:36\u00a0<CIA-74>\u00a0Vincent Massol\u000f master\u000f \\* rff88625\u000f https://github.com/xwiki/xwiki-rendering/commit/ff88625b68653052a92ae7d3fa3b7a9d947cf1a4 \u000f/ xwiki-rendering-syntaxes/xwiki-rendering-syntax-xwiki10/src/test/resources/xwiki10/config.properties :\u000f [CTS] Whitespaces inside bold are not supported in XWiki Syntax 1.0 - http://git.io/gJnmWg  \n10:41\u00a0<jvdrean>\u00a0has quit  \n10:41\u00a0<jvdrean>\u00a0has joined #xwiki  \n11:11\u00a0<CIA-74>\u00a0Marius Dumitru Florea\u000f master\u000f \\* rc17768a\u000f https://github.com/xwiki/xwiki-enterprise/commit/c17768a817fc269da533db4c3d8d00f31525c62e \u000f/ (6 files in 4 dirs):\u000f Drop support for Firefox 3.x - http://git.io/nRhsVA  \n11:16\u00a0<ssavi>\u00a0has left #xwiki  \n11:28\u00a0<tmortagne>\u00a0has quit  \n11:48\u00a0<polx>\u00a0has joined #xwiki  \n12:14\u00a0<polx>\u00a0has quit  \n12:16\u00a0<polx>\u00a0has joined #xwiki  \n12:25\u00a0<Enygma`>\u00a0has joined #xwiki  \n12:26\u00a0<evalica>\u00a0has joined #xwiki  \n12:43\u00a0<sburjan>\u00a0has quit  \n12:47\u00a0<sburjan>\u00a0has joined #xwiki  \n13:00\u00a0<CIA-74>\u00a0Vincent Massol\u000f master\u000f \\* rced76d1\u000f https://github.com/xwiki/xwiki-rendering/commit/ced76d134afac4db091e841710423c144e4ba53a \u000f/ (6 files in 4 dirs):\u000f [CTS] Added table1 tests for more syntaxes - http://git.io/CCpNyQ  \n13:09\u00a0<polx>\u00a0has quit  \n13:11\u00a0<+sburjan>\u00a0Hello. I was able to start a job for testing our ui-tests on IE8, but it seems we still have 3 tests that fail on Jenkins that should be excluded. \u00a0Should I create a separate issue, re-open the one we have, or do nothing on jira ? the issue I am talking about is http://jira.xwiki.org/browse/XE-1147  \n13:11\u00a0<vmassol>\u00a0any issue closed it closed  \n13:11\u00a0<vmassol>\u00a0if the release has been made  \n13:12\u00a0<vmassol>\u00a0so you should create a new one if the version correpsponding to the fixfor has been released  \n13:12\u00a0<vmassol>\u00a0(since obviously we cannot un-release ;))  \n13:12\u00a0<+sburjan>\u00a0it was fixedFor 4.0 M1 .. so it has been released  \n13:12\u00a0<+sburjan>\u00a04.0M2, sorry  \n13:12\u00a0<+sburjan>\u00a0okay, creating a new one  \n13:12\u00a0<+sburjan>\u00a0thanks. I'll create a pull request today  \n13:13\u00a0<vmassol>\u00a0@sburjan: if you reopne it it means the code committers against it will not have existed  \n13:13\u00a0<vmassol>\u00a0which isn't true  \n13:13\u00a0<vmassol>\u00a0because the issue won't be listed int eh list of issues done for that release  \n13:13\u00a0<vmassol>\u00a0you see the rationale?  \n13:13\u00a0<vmassol>\u00a0s/committers/cmmitted/  \n13:14\u00a0<+sburjan>\u00a0vmassol: yes, I guess only way to re-open it would be if the issue was a regression, but it's not a regression  \n13:14\u00a0<vmassol>\u00a0why?  \n13:14\u00a0<vmassol>\u00a0why would you reopne for a regression?  \n13:15\u00a0<vmassol>\u00a0you mean something that is meant to be fixed but is not fixed?  \n13:15\u00a0<+sburjan>\u00a0basically something changed, or the environment is diferent on the Jenkins agent, this is why the 3 tests are failing  \n13:15\u00a0<+sburjan>\u00a0no, I wouldn, it's \\_not\\_ a regression  \n13:15\u00a0<+sburjan>\u00a0I wqas agreeing with your point :)  \n13:15\u00a0<vmassol>\u00a0yes I agree that we could/should reopen for something marked to be fixed but not fixed  \n13:16\u00a0<vmassol>\u00a0except if some part has been fixed...  \n13:16\u00a0<vmassol>\u00a0which is usually the case  \n13:16\u00a0<vmassol>\u00a0so we never reopen  \n13:16\u00a0<+sburjan>\u00a0yepp  \n13:16\u00a0<+sburjan>\u00a0I agree  \n13:19\u00a0<vmassol>\u00a0Guys, we need to fix the platform build failure due to CLIRR  \n13:19\u00a0<vmassol>\u00a0if someone knows why it's failing please let me know  \n13:19\u00a0<vmassol>\u00a0mflorea: you have some idea?  \n13:20\u00a0<+mflorea>\u00a0vmassol: no, but I will take a look  \n13:20\u00a0<vmassol>\u00a0I started to look at it yesterday but haven't finished  \n13:20\u00a0<vmassol>\u00a0going to decompile 4.0 and 4.1 and compare  \n13:21\u00a0<vmassol>\u00a0btw we had a talk about it with cjd yesterday, see IRC histo  \n13:21\u00a0<vmassol>\u00a0hmm would be nice to have an irc bot command to get the url of a irc archive  \n13:21\u00a0<vmassol>\u00a0http://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20120520  \n13:23\u00a0<+mflorea>\u00a0vmassol: could this be related to http://jira.xwiki.org/browse/XWIKI-7833 Sergiu suspected it has to do with the order in which maven plugins goals are executed  \n13:24\u00a0<vmassol>\u00a0I'll need to read that issue, I haven't followed it, I'll check it too  \n13:26\u00a0<mflorea>\u00a0has quit  \n13:28\u00a0<vmassol>\u00a0so in the aspect we have: private XWikiNotificationManager XWiki.notificationManager;  \n13:28\u00a0<vmassol>\u00a0this translates to: \u00a0public XWikiNotificationManager ajc$interField$com\\_xpn\\_xwiki\\_XWikiCompatibilityAspect$notificationManager;  \n13:29\u00a0<vmassol>\u00a0that's in 4.0  \n13:29\u00a0<vmassol>\u00a0now checking why it would have been removed in 4.1snap  \n13:31\u00a0<vmassol>\u00a0indeed, in 4.1snap I have: \u00a0private XWikiNotificationManager notificationManager;  \n13:32\u00a0<vmassol>\u00a0now the question is: why? :)  \n13:37\u00a0<vmassol>\u00a0one idea is that maybe we've changed the aspectj version, checking  \n13:38\u00a0<vmassol>\u00a0indeed we've done that: http://jira.xwiki.org/jira/browse/XCOMMONS-156  \n13:38\u00a0<vmassol>\u00a0checking more  \n13:49\u00a0<vmassol>\u00a0ok that's it  \n13:49\u00a0<vmassol>\u00a0at least we know why now :)  \n13:50\u00a0<vmassol>\u00a0note that there are still 2 real issues not caused by this:  \n13:50\u00a0<vmassol>\u00a0[ERROR] com.xpn.xwiki.doc.merge.MergeUtils: Class com.xpn.xwiki.doc.merge.MergeUtils removed  \n13:50\u00a0<vmassol>\u00a0[ERROR] com.xpn.xwiki.objects.ObjectInterface: Method 'public com.xpn.xwiki.objects.classes.BaseClass getXClass(com.xpn.xwiki.XWikiContext)' has been added to an interface  \n13:56\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n13:59\u00a0<vmassol>\u00a0ok so ATM the only good solution I can think of is:  \n14:00\u00a0<Enygma`>\u00a0has quit  \n14:00\u00a0<vmassol>\u00a0Step 1: add exclusions for ajc$ stuff  \n14:00\u00a0<vmassol>\u00a0Step 2: RM must absolutely remove them and test with aspectj 1.3 before the release to ensure we don't add breakages  \n14:01\u00a0<vmassol>\u00a0it'll be autofixed once 4.1 final is released  \n14:01\u00a0<vmassol>\u00a0I'll comment in the pom  \n14:01\u00a0<Enygma`>\u00a0has joined #xwiki  \n14:06\u00a0<@cjd>\u00a0These magic ajc$ functions are (undocumented) API?  \n14:07\u00a0<vmassol>\u00a0don't know  \n14:07\u00a0<vmassol>\u00a0haven't checked that far  \n14:07\u00a0<vmassol>\u00a0now what worries me is that someone of us has added the clirr excludes without discussing it or commenting abou tit!  \n14:07\u00a0<vmassol>\u00a0that's really bad  \n14:08\u00a0<vmassol>\u00a0let's see who did this :)  \n14:08\u00a0<@cjd>\u00a0IMO those functions are injected by aspectj so that it can handle it's internal doings and we should never expect them to last even a minute, let alone a release.  \n14:09\u00a0<@cjd>\u00a0So anyone who uses an ajc$ function deserves to be broken.  \n14:09\u00a0<vmassol>\u00a0ok it's segiu in 6bb610b2347324cb3c9d9bc50874e8939e76740e  \n14:09\u00a0<vmassol>\u00a0sergiu  \n14:09\u00a0<vmassol>\u00a0nobody will ever use that  \n14:09\u00a0<vmassol>\u00a0that's not the issue  \n14:10\u00a0<vmassol>\u00a0cjd: here's the comment I'm adding:  \n14:10\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0<!-- The following excludes are needed because we've upgraded from AspectJ 1.6.7 to AspectJ 1.6.11  \n14:10\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0in 4.0-milestone-1 and it seems that AspectJ has changed the way they weave stuff in class files thus  \n14:10\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0leading to false CLIRR errors.  \n14:10\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Thus we have to add those excludes. However those excludes could hide real breakages and thus before  \n14:10\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the release is done the Release Manager must absolutely remove those excludes below and try running  \n14:10\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CLIRR with AspectJ 1.6.7 to verify that no breakages have been added. To do so simply edit the  \n14:10\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Legacy OldCore pom.xml and add <version>1.6.7</version> for aspectjrt and <version>1.3</version> for  \n14:10\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0the AspectJ Maven plugin version.  \n14:10\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-->  \n14:10\u00a0<Enygma`>\u00a0has quit  \n14:10\u00a0<Enygma`1>\u00a0has joined #xwiki  \n14:10\u00a0<vmassol>\u00a0cjd: is that understandable?  \n14:11\u00a0<@cjd>\u00a0However those excludes could hide real breakages <-- not true  \n14:11\u00a0<vmassol>\u00a0errr?  \n14:11\u00a0<@cjd>\u00a0java bans the use of the $ in function names so no \"real\" function can ever have a $ in it.  \n14:11\u00a0<vmassol>\u00a0no no  \n14:11\u00a0<evalica1>\u00a0has joined #xwiki  \n14:11\u00a0<vmassol>\u00a0you don't undestand  \n14:11\u00a0<vmassol>\u00a0let me explain  \n14:12\u00a0<vmassol>\u00a0we're excluding com/xpn/xwiki/XWiki for ex  \n14:12\u00a0<evalica>\u00a0has quit  \n14:12\u00a0<@cjd>\u00a0oh  \n14:12\u00a0<vmassol>\u00a0imagine someone adds a new public method to it or removes one or change a signature  \n14:12\u00a0<@cjd>\u00a0indeed, that should be excluded for oldcore only  \n14:12\u00a0<vmassol>\u00a0since we're excluding it  \n14:12\u00a0<vmassol>\u00a0it won't be noticed  \n14:12\u00a0<@cjd>\u00a0not for legacy-oldcore  \n14:12\u00a0<vmassol>\u00a0yes there's nothing to exlude from legacy modules  \n14:12\u00a0<vmassol>\u00a0by definition  \n14:13\u00a0<vmassol>\u00a0of legacy modules  \n14:13\u00a0<vmassol>\u00a0:)  \n14:13\u00a0<vmassol>\u00a0(except for exceptional cases that we vote obviously)  \n14:13\u00a0<vmassol>\u00a0(but we've not done that yet)  \n14:13\u00a0<@cjd>\u00a0so the exclude is necessary to make oldcore build, but it should not be applied to -legacy-oldcore  \n14:13\u00a0<vmassol>\u00a0no  \n14:13\u00a0<vmassol>\u00a0the way we do it is:  \n14:13\u00a0<vmassol>\u00a0we don't run clirr on oldcore at all  \n14:14\u00a0<vmassol>\u00a0so oldcore always build  \n14:14\u00a0<vmassol>\u00a0the clirr check is only done in legacy modules  \n14:14\u00a0<vmassol>\u00a0because  \n14:14\u00a0<vmassol>\u00a0we need to run it \\*after\\* apsects have been weaved  \n14:14\u00a0<vmassol>\u00a0got it? :)  \n14:14\u00a0<@cjd>\u00a0hmm, then I am indeed confused since those excludes should not be necessary as far as I can see.  \n14:14\u00a0<vmassol>\u00a0well read my comment  \n14:15\u00a0<vmassol>\u00a0if it's not clear I need to improve it  \n14:15\u00a0<vmassol>\u00a0aspectj has changed  \n14:15\u00a0<Enygma`1>\u00a0has quit  \n14:15\u00a0<@cjd>\u00a0ok, I'd like to try it out on my desktop too and see if I notice anything  \n14:16\u00a0<vmassol>\u00a0sure no pb  \n14:16\u00a0<vmassol>\u00a0ask le if you have any question because it's quite clear for me now  \n14:16\u00a0<vmassol>\u00a0s/le/me/  \n14:16\u00a0<@cjd>\u00a0excluding $ajc\\* makes perfect sense since aj might add or remove \"internal\" functions at it's own whim.  \n14:16\u00a0<vmassol>\u00a0we cannot do that  \n14:16\u00a0<vmassol>\u00a0it's not possible  \n14:17\u00a0<@cjd>\u00a0ahh, that is a pain :(  \n14:17\u00a0<vmassol>\u00a0I wanted to check the clirr sources to see how hard it would be to add this  \n14:17\u00a0<vmassol>\u00a0btw I talked with the clirr creator back in 2000s about it  \n14:18\u00a0<vmassol>\u00a0but he didn't get the time to do it and then the project hasn't been touched by anyone else  \n14:18\u00a0<vmassol>\u00a0(btw fyi I had the idea of clirr and the guy implemented it based on my idea, that was cool ;))  \n14:18\u00a0<@cjd>\u00a0heh nice  \n14:19\u00a0<Enygma`>\u00a0has joined #xwiki  \n14:19\u00a0<@cjd>\u00a0I'd like to stage 4.1M2 as soon as possible so we can have some time to test it and actually meet the release date (!)  \n14:19\u00a0<@cjd>\u00a0what are your thoughts on a date  \n14:20\u00a0<@cjd>\u00a0(how soon is ok from your end)  \n14:21\u00a0<vmassol>\u00a0well we need to ask mflorea and tmortagne  \n14:21\u00a0<vmassol>\u00a0since they're the one having the mos timportant stuff for it  \n14:21\u00a0<mflorea>\u00a0has joined #xwiki  \n14:21\u00a0<vmassol>\u00a0and sdumitriu too for the page generation module  \n14:21\u00a0<vmassol>\u00a0what's the date btw?  \n14:21\u00a0<vmassol>\u00a0cheking`...  \n14:21\u00a0<vmassol>\u00a028th  \n14:21\u00a0<Enygma`>\u00a0has quit  \n14:21\u00a0<Enygma`1>\u00a0has joined #xwiki  \n14:22\u00a0<vmassol>\u00a0so IMO we should start asking devs about their status  \n14:22\u00a0<vmassol>\u00a0this week  \n14:22\u00a0<vmassol>\u00a0so that we're ready by end of week  \n14:22\u00a0<vmassol>\u00a0ready = ready to stage  \n14:22\u00a0<lucaa>\u00a0has quit  \n14:22\u00a0<vmassol>\u00a0s/stage/start staging/  \n14:23\u00a0<@cjd>\u00a0If we want to release monday then we would need to be in staging for friday.  \n14:23\u00a0<@cjd>\u00a0at the least  \n14:24\u00a0<vmassol>\u00a0mflorea: this week is the last week before 4.1M2  \n14:24\u00a0<vmassol>\u00a0(on next Monday)  \n14:25\u00a0<vmassol>\u00a0hope you can have the merge UI ready by end of week :)  \n14:25\u00a0<+mflorea>\u00a0I know, I hope too, I'm writing documentation now.. :)  \n14:25\u00a0<+mflorea>\u00a0(to be able to close my issues)  \n14:26\u00a0<@cjd>\u00a0end of the week == postpone the release, because that would only have us into staging by monday and then we'd need 2 or 3 more days for a decent release  \n14:26\u00a0<vmassol>\u00a0cjd: not really  \n14:26\u00a0<vmassol>\u00a0this is a milestone  \n14:26\u00a0<vmassol>\u00a0there's no staging  \n14:26\u00a0<vmassol>\u00a0that's the point of milestone  \n14:26\u00a0<vmassol>\u00a0:)  \n14:26\u00a0<vmassol>\u00a0otehrwise we don't need milestone  \n14:26\u00a0<+mflorea>\u00a0cjd did staging for M1 afaik  \n14:26\u00a0<vmassol>\u00a0it's either staging or milestones/rcs  \n14:27\u00a0<vmassol>\u00a0yes but that's not our strategy  \n14:27\u00a0<vmassol>\u00a0they're about achieving the same result  \n14:27\u00a0<@cjd>\u00a0Do we do any testing of milestones before releasing?  \n14:28\u00a0<vmassol>\u00a0well 2 things:  \n14:28\u00a0<vmassol>\u00a0- devs must test their stuff  \n14:28\u00a0<vmassol>\u00a0it's a must not a should  \n14:28\u00a0<vmassol>\u00a0:)  \n14:28\u00a0<vmassol>\u00a0- sburjan tries to test as much as possible but it's a best effort  \n14:28\u00a0<vmassol>\u00a0his only strong commitment is a full func test before RC  \n14:29\u00a0<@cjd>\u00a0ok and this is post-release testing when it's for a milestone?  \n14:29\u00a0<vmassol>\u00a0(before or after rc is released, not sure anymore the exact proces)  \n14:29\u00a0<vmassol>\u00a0the idea of milestones is basically to put it in the wid  \n14:29\u00a0<vmassol>\u00a0to let our community a chance to test it for rea  \n14:29\u00a0<vmassol>\u00a0real  \n14:30\u00a0<vmassol>\u00a0s/wid/wild  \n14:30\u00a0<@cjd>\u00a0I think whatever the process we use for finals and RCs we should also use for milestones  \n14:30\u00a0<@cjd>\u00a0because then everything is a rehersal  \n14:30\u00a0<@cjd>\u00a0perhaps the process should be abridged  \n14:31\u00a0<vmassol>\u00a0sure , make a proposal  \n14:31\u00a0<vmassol>\u00a0explain the issue and make a proposal  \n14:31\u00a0<vmassol>\u00a0but  \n14:31\u00a0<vmassol>\u00a0what wouldn't be good  \n14:31\u00a0<vmassol>\u00a0is if you make the whole process longer  \n14:31\u00a0<vmassol>\u00a0in your propsoal  \n14:32\u00a0<vmassol>\u00a0the other bad thing would be if it requires more energy  \n14:32\u00a0<vmassol>\u00a0from xwiki devs  \n14:32\u00a0<vmassol>\u00a0the idea here is to spread energy  \n14:32\u00a0<vmassol>\u00a0between devs and users so that users who get something free can contribute a bit too and help out  \n14:32\u00a0<vmassol>\u00a0personally  \n14:33\u00a0<vmassol>\u00a0I'm all for removing milestones/rcs compeltely  \n14:33\u00a0<vmassol>\u00a0I've even propsoed that a few times ont he list  \n14:33\u00a0<vmassol>\u00a0but that requires some conditions \u00a0and we were not ready so far  \n14:33\u00a0<@cjd>\u00a0How do you see it working, I'm interested in hearing this..  \n14:33\u00a0<@cjd>\u00a0?  \n14:33\u00a0<vmassol>\u00a0btw this is what I've been doing on several others projets before xwiki  \n14:34\u00a0<vmassol>\u00a0it's simple but it requires good understanding from all devs  \n14:34\u00a0<vmassol>\u00a0in short:  \n14:34\u00a0<vmassol>\u00a0- you need good test coverage (about 70%)  \n14:34\u00a0<vmassol>\u00a0- short releases  \n14:34\u00a0<vmassol>\u00a0(around every 2 weeks)  \n14:35\u00a0<@cjd>\u00a0Do we have major-ish releases every month and minor releases every 2 weeks?  \n14:36\u00a0<vmassol>\u00a0you mean right now or in the scheme I'm dsicussing?  \n14:36\u00a0<@cjd>\u00a0your proposal  \n14:36\u00a0<@cjd>\u00a0or all releases are the same?  \n14:36\u00a0<vmassol>\u00a0release are teh same  \n14:36\u00a0<vmassol>\u00a0you just break big stuff  \n14:36\u00a0<vmassol>\u00a0into smaller chunks  \n14:36\u00a0<@cjd>\u00a0hmm  \n14:36\u00a0<@cjd>\u00a0this is interesting  \n14:36\u00a0<vmassol>\u00a0max is 2 weeks chunks  \n14:36\u00a0<@cjd>\u00a0what kind of time span for staging?  \n14:36\u00a0<vmassol>\u00a0ah another thing  \n14:37\u00a0<vmassol>\u00a0anothe condition for success with this strategy  \n14:37\u00a0<vmassol>\u00a0- you need to be able to easily upgrade an xwiki instance  \n14:37\u00a0<@cjd>\u00a0upgrade button :D  \n14:37\u00a0<vmassol>\u00a0the idea is that if someone get broken, you can be sure it'll be fixed within 2 weeks  \n14:37\u00a0<vmassol>\u00a0(if it slips though)  \n14:37\u00a0<vmassol>\u00a0but you need to be able to easily upgrade  \n14:37\u00a0<vmassol>\u00a0so all users are almost always on the latest versions  \n14:38\u00a0<vmassol>\u00a0you can have LTE though  \n14:38\u00a0<vmassol>\u00a0LTS  \n14:38\u00a0<@cjd>\u00a0so I think we need an autoupgrade feature if this is going to work  \n14:38\u00a0<vmassol>\u00a0btw this can easily be implemented  \n14:39\u00a0<vmassol>\u00a0using git feature branches  \n14:39\u00a0<vmassol>\u00a0cjd: this is what we're currently developing :)  \n14:39\u00a0<vmassol>\u00a0(autoupgrade)  \n14:39\u00a0<@cjd>\u00a0how will it work?  \n14:39\u00a0<vmassol>\u00a0this is why I was saying that till now we've not ready to do this kind of process  \n14:39\u00a0<@cjd>\u00a0I see  \n14:39\u00a0<vmassol>\u00a0re TPC we're about 40-50% overall I think  \n14:40\u00a0<vmassol>\u00a0I need to recomput eit  \n14:40\u00a0<@cjd>\u00a0including functional tests?  \n14:40\u00a0<vmassol>\u00a0yes  \n14:40\u00a0<vmassol>\u00a0let me check the latest figure I have put online  \n14:40\u00a0<@cjd>\u00a0that means there is dead code IMO  \n14:40\u00a0<vmassol>\u00a0http://dev.xwiki.org/xwiki/bin/view/Community/Testing#HTestCoverage  \n14:40\u00a0<vmassol>\u00a0http://maven.xwiki.org/site/clover/20101017/  \n14:40\u00a0<vmassol>\u00a053% at the time  \n14:40\u00a0<vmassol>\u00a0not bad  \n14:41\u00a0<vmassol>\u00a0so once we have autouprgade + 70% we're good to go! :)  \n14:41\u00a0<vmassol>\u00a0we're getting closer  \n14:41\u00a0<vmassol>\u00a0;)  \n14:42\u00a0<vmassol>\u00a0back to CLIRR, I'm checking why we have: \"[ERROR] com.xpn.xwiki.doc.merge.MergeUtils: Class com.xpn.xwiki.doc.merge.MergeUtils removed\"  \n14:43\u00a0<@cjd>\u00a0How about the not shipping legacy? I didn't see any real decision on the list about not shipping it.  \n14:43\u00a0<vmassol>\u00a0we're ok with the principle  \n14:43\u00a0<vmassol>\u00a0now someone needs to propose how to do it in practice  \n14:43\u00a0<vmassol>\u00a0we're ok with the principle = it's been voted  \n14:44\u00a0<@cjd>\u00a0My concern is that not removing code is not a sustainable development method.  \n14:44\u00a0<vmassol>\u00a0that' s different  \n14:44\u00a0<vmassol>\u00a0that's the vote we did  \n14:44\u00a0<vmassol>\u00a0and you voted +1  \n14:44\u00a0<@cjd>\u00a0ok so now I have to propose breaking everyone and making them swap jar files around :D  \n14:44\u00a0<vmassol>\u00a0if you have new doubt syou could start a new thread\u2026.  \n14:45\u00a0<vmassol>\u00a0personally I don't see a problem  \n14:45\u00a0<vmassol>\u00a0it takes a bit of time to move stuff to aspects sure but I don't think the time it takes is so huge that we shouldn't do it  \n14:45\u00a0<@cjd>\u00a0...which I happen to think is the proper level of difficulty given they are askign us to support old and potentially broken APIs which need to go away for the good of the code.  \n14:47\u00a0<@cjd>\u00a0also moving more code out into legacy will help our non-legacy test coverage if we isolate and move out dead code, helping us in the other direction as well.  \n14:48\u00a0<vmassol>\u00a0sure  \n14:48\u00a0<vmassol>\u00a0this is our objective  \n14:48\u00a0<vmassol>\u00a0re Mergeutils I've found the culprit: it's tmortagne in 550d59b77caf5d44e40d422d2d3ab740e8d8d943  \n14:49\u00a0<vmassol>\u00a0strange commit message: \"XWIKI-7761: The string merging is not very good during XAR merge\"  \n14:49\u00a0<vmassol>\u00a0he's changed from package com.xpn.xwiki.doc.merge; to package com.xpn.xwiki.internal.merge;  \n14:50\u00a0<vmassol>\u00a0I see in the issue: \"Making MergeUtils internal and moving to JDiff which provide a real 3-ways merge  \n14:50\u00a0<vmassol>\u00a0API for now until we create a clean diff/merge tool (probably in commons).\"  \n14:51\u00a0<evalica1>\u00a0is now known as <evalica>  \n14:51\u00a0<vmassol>\u00a0thomas is giving a training right now, waiting for him to finish  \n14:52\u00a0<vmassol>\u00a0last issue is [ERROR] com.xpn.xwiki.objects.ObjectInterface: Method 'public com.xpn.xwiki.objects.classes.BaseClass getXClass(com.xpn.xwiki.XWikiContext)' has been added to an interface  \n14:52\u00a0<vmassol>\u00a0checking it  \n14:53\u00a0<jvdrean1>\u00a0has joined #xwiki  \n14:54\u00a0<vmassol>\u00a0that's more of a problem  \n14:54\u00a0<jvdrean>\u00a0has quit  \n14:56\u00a0<vmassol>\u00a0I don't have a good solution for this one except not adding the new method to this interface and instead adding a new interface  \n14:56\u00a0<vmassol>\u00a0or deciding to break some users ofc...  \n14:58\u00a0<@cjd>\u00a0my feeling is that it's reasonable to expect that we have the only implementation of that interface. We might be wrong there but it's certainly not going to be like taking away searchDocuments or something.  \n14:58\u00a0<vmassol>\u00a0well anyone having a custom displayer will be impacted  \n14:59\u00a0<@cjd>\u00a0ahh  \n14:59\u00a0<@cjd>\u00a0I glossed over it since there are so many interfaces which only exist to provide interchangability between our own internal implementations.  \n14:59\u00a0<vmassol>\u00a0but my point is more general  \n14:59\u00a0<vmassol>\u00a0how do we do to not break anything  \n15:00\u00a0<vmassol>\u00a0I could only find 2 solutions:  \n15:00\u00a0<vmassol>\u00a01) introduce a new interface and do some instanceof when using new methods  \n15:00\u00a0<vmassol>\u00a02) add aspectj-like feature to the xwiki runtime (ie execute aspects at runtime)  \n15:01\u00a0<vmassol>\u00a0for 2) it means introducing a default implementation of new methods when they're not provided  \n15:01\u00a0<vmassol>\u00a0(with sensible default behaviors)  \n15:02\u00a0<vmassol>\u00a0what thomas did cjd is just to add a new method to ObjectInterface  \n15:02\u00a0<vmassol>\u00a0he added:  \n15:02\u00a0<vmassol>\u00a0public BaseClass getXClass(XWikiContext context) throws XWikiException;  \n15:03\u00a0<vmassol>\u00a0and he removed public BaseClass getxWikiClass(XWikiContext context) throws XWikiException; which he added back in an aspect  \n15:04\u00a0<vmassol>\u00a0so the default impl of getXClass is simple here :)  \n15:04\u00a0<vmassol>\u00a0just call getxWikiClass  \n15:04\u00a0<vmassol>\u00a0(or rather do the same thing)  \n15:04\u00a0<vmassol>\u00a0anyway 2) is some serious work  \n15:04\u00a0<@cjd>\u00a0What would a custom displayer be?  \n15:05\u00a0<vmassol>\u00a0well any class implementing ObjectInterface is impacted  \n15:05\u00a0<vmassol>\u00a0and if you check our code you'll see  \n15:05\u00a0<vmassol>\u00a0BaseClass, BooleanClass, ListClass, ....  \n15:06\u00a0<vmassol>\u00a0so if you have your own MyTypeClass you're impacted  \n15:06\u00a0<vmassol>\u00a0ie you need to recompile your code and add implementation for the new method  \n15:07\u00a0<vmassol>\u00a0in this case I'm not sure why thomas did this since we want to rewrite displayers in the future anyway  \n15:08\u00a0<@cjd>\u00a0ahh ok  \n15:09\u00a0<@cjd>\u00a0indeed that is real, whereas a lot of interfaces would have almost no risk of impacting anyone  \n15:11\u00a0<@cjd>\u00a0reminds me of the interface in hamcrest which has a function  \n15:11\u00a0<vmassol>\u00a0btw that's till JDK 7 :)  \n15:11\u00a0<@cjd>\u00a0\\_do\\_not\\_implement\\_this\\_interface\\_instead\\_extend\\_that\\_class()  \n15:12\u00a0<@cjd>\u00a0oh yeah, that reminds me that we need to decide how we define \"support java 6\" because commons does not compile with 1.6.0\\_21 anymore  \n15:12\u00a0<@cjd>\u00a0I gether they change the compiler a lot more than they do the vm  \n15:16\u00a0<vmassol>\u00a0cjd: http://www.baptiste-wicht.com/2010/05/java-7-add-public-defender-methods-to-java-interfaces/  \n15:24\u00a0<@cjd>\u00a0haha multiple inheritence  \n15:24\u00a0<@cjd>\u00a0the circle of life has completed, and we're back at C++  \n15:24\u00a0<vmassol>\u00a0I don't see it as multiple inheritance  \n15:25\u00a0<@cjd>\u00a0I suppose it's ok as long as people don't start using it that way  \n15:26\u00a0<CIA-74>\u00a0Vincent Massol\u000f master\u000f \\* r747fb06\u000f https://github.com/xwiki/xwiki-platform/commit/747fb0685a30bf50310c0019c86c21fa36109135 \u000f/ xwiki-platform-core/pom.xml :\u000f Add some CLIRR excludes and explain why - The Release Manager for 4.1 needs to read this carefullly... - http://git.io/dEderw  \n15:26\u00a0<vmassol>\u00a0cjd: since you're the one who's going to release 4.1M2 and later you should check this last commit and tell me if you're ok with it  \n15:27\u00a0<vmassol>\u00a0note: I still need to exclude MergeUtils+ObjectInterface but I want to add a discussion with thomas first  \n15:27\u00a0<vmassol>\u00a0(and it's not exactly the same topic)  \n15:28\u00a0<@cjd>\u00a0indeed  \n15:28\u00a0<@cjd>\u00a0perhaps we can script this into maven?  \n15:28\u00a0<@cjd>\u00a0profile based?  \n15:28\u00a0<vmassol>\u00a0this is just one shot  \n15:28\u00a0<vmassol>\u00a0you can do pass the versions on the command line if you want  \n15:28\u00a0<vmassol>\u00a0s/do//  \n15:29\u00a0<@cjd>\u00a0I'm quite sure that aj still uses these magic functions, I tested for them in M1 the other day  \n15:29\u00a0<vmassol>\u00a0functions yes  \n15:29\u00a0<vmassol>\u00a0but this is not about functions  \n15:29\u00a0<vmassol>\u00a0it's about fields  \n15:30\u00a0<vmassol>\u00a0the functions are located in a class named after the aspect  \n15:30\u00a0<vmassol>\u00a0whereas the fields were injected in the weaved class in 1.6.7  \n15:30\u00a0<vmassol>\u00a0they're still injected in 1.6.11 but as private and without special ajc$ stuff  \n15:31\u00a0<@cjd>\u00a0ahh  \n15:31\u00a0<vmassol>\u00a0ideally we should be able to find that in the relzase notes of http://www.eclipse.org/aspectj/  \n15:33\u00a0<vmassol>\u00a0found it I think  \n15:33\u00a0<@cjd>\u00a0public static com.xpn.xwiki.XWiki com.xpn.xwiki.api.XWiki.ajc$get$xwiki(com.xpn.xwiki.api.XWiki)  \n15:33\u00a0<vmassol>\u00a0ep  \n15:33\u00a0<vmassol>\u00a0:)  \n15:34\u00a0<vmassol>\u00a0here: http://www.eclipse.org/aspectj/doc/released/README-169.html  \n15:34\u00a0<vmassol>\u00a0search for \"Intertype fields preserve visibility and name  \n15:34\u00a0<vmassol>\u00a0\"  \n15:34\u00a0<@cjd>\u00a0public com.xpn.xwiki.XWikiContext com.xpn.xwiki.api.XWiki.ajc$superDispatch$com\\_xpn\\_xwiki\\_api\\_XWiki$getXWikiContext()  \n15:34\u00a0<@cjd>\u00a0^^this is 4.1M1  \n15:34\u00a0<@cjd>\u00a0I just listed declared methods  \n15:34\u00a0<@cjd>\u00a0and there are indeed public \"magic methods\"  \n15:34\u00a0<@cjd>\u00a0which we must assume will come and go as they please.  \n15:35\u00a0<@cjd>\u00a0And I gather this is with the new version of aj  \n15:37\u00a0<CIA-74>\u00a0Vincent Massol\u000f master\u000f \\* r8225050\u000f https://github.com/xwiki/xwiki-platform/commit/822505056407d574a3ecb870dcac2e867a56f4b2 \u000f/ xwiki-platform-core/pom.xml :\u000f Add more information - http://git.io/4Q6aWA  \n15:37\u00a0<@cjd>\u00a0So I think we must assume that aj is going to cause clirr errors basicly every time we modify anything todo with aj.  \n15:37\u00a0<vmassol>\u00a0probably  \n15:39\u00a0<vmassol>\u00a0clirr sources are here: http://clirr.cvs.sourceforge.net/viewvc/clirr/clirr/  \n15:39\u00a0<@cjd>\u00a0so this means it adds to the workload of the RM in every release, not just one-off  \n15:39\u00a0<vmassol>\u00a0not really  \n15:40\u00a0<vmassol>\u00a0only if we change aspectj maven plugin  \n15:40\u00a0<vmassol>\u00a0and that's not often  \n15:41\u00a0<@cjd>\u00a0if we move a function to an aspect and it then needs to access private fields, it seems to me that it will inject another one of these secret accessor methods  \n15:43\u00a0<vmassol>\u00a0it should be pretty easy to modify clirr to support excluding at method or field level IMO  \n15:44\u00a0<vmassol>\u00a0the info is already there, see http://clirr.cvs.sourceforge.net/viewvc/clirr/clirr/core/src/java/net/sf/clirr/core/ApiDifference.java?revision=1.8&view=markup  \n15:45\u00a0<vmassol>\u00a0I think we just need to change implementation of DiffListener: http://clirr.cvs.sourceforge.net/viewvc/clirr/clirr/core/src/java/net/sf/clirr/core/DiffListener.java?revision=1.3&view=markup  \n15:46\u00a0<vmassol>\u00a0the info is \u00a0even already there in the xml diff listener: http://clirr.cvs.sourceforge.net/viewvc/clirr/clirr/core/src/java/net/sf/clirr/core/XmlDiffListener.java?revision=1.4&view=markup  \n15:47\u00a0<vmassol>\u00a0IMO we don't even need to make a single line change in clirr itself  \n15:47\u00a0<vmassol>\u00a0checking the mavne clirr plugin now  \n15:52\u00a0<jvelo>\u00a0has joined #xwiki  \n15:53\u00a0<@cjd>\u00a0Hi jvelo, what did you want to know about DataNucleusStore?  \n15:56\u00a0<polx>\u00a0has joined #xwiki  \n15:56\u00a0<vmassol>\u00a0cjd: ok I've checked the sources, it's easy to improve :)  \n15:57\u00a0<@cjd>\u00a0awesome, I spent all that time trying to get cvs working...  \n15:57\u00a0<vmassol>\u00a0you're looking at the wrog project :)  \n15:57\u00a0<@cjd>\u00a0so glad we use git, everything else feels like a toy in comparison  \n15:57\u00a0<vmassol>\u00a0as I said the clirr sources are ok they already provide the information  \n15:57\u00a0<vmassol>\u00a0ie class, method, field  \n15:57\u00a0<vmassol>\u00a0the only thing we need to improve is the clirr maven plugin  \n15:57\u00a0<vmassol>\u00a0and that's easy to do  \n15:58\u00a0<@cjd>\u00a0ahh so it's just the clirr maven plugin then  \n15:58\u00a0<vmassol>\u00a0right now  \n15:58\u00a0<vmassol>\u00a0the excludes is just used to filter what sources to add to the check  \n15:58\u00a0<vmassol>\u00a0what we need is another set of exludes  \n15:58\u00a0<vmassol>\u00a0to ignore violations  \n15:58\u00a0<vmassol>\u00a0for whateever field or method we specify  \n16:03\u00a0<jvelo>\u00a0Hi cjd . I've been looking at the code of \"xwiki-platform-store-datanucleus-base\" and I'm trying to unweave your vision about it :) I understand that the persistable class issued to store XClass definitions (defined as groovy JDO classes is that right ?) and that the persistable object is here of storing object instances. Now I'm trying to figure out how - and if - all that should fit with the notion of wiki documents (but not tal  \n16:03\u00a0<vmassol>\u00a0I think I can modify the clirr plugin in 1 ?2 hours to add support for this\u2026 but not right now\u2026 ;)  \n16:03\u00a0<jvelo>\u00a0about xwiki-platform-store-datanucleus-documents which is legacy for the \"old core\")  \n16:04\u00a0<jvelo>\u00a0cjd: I see there is a JavaClassNameDocumentReferenceSerializer.java in base  \n16:04\u00a0<@cjd>\u00a0f wiki documents (but not tal|<-- cut off  \n16:05\u00a0<jvelo>\u00a0cjd: \"the notion of wiki documents (but not talking about xwiki-platform-store-datanucleus-documents which is legacy for the \"old core\")\"  \n16:05\u00a0<jvelo>\u00a0sorry for the long post :)  \n16:05\u00a0<@cjd>\u00a0-base is meant to be generic so it will work looking forward  \n16:06\u00a0<@cjd>\u00a0the idea is that a user can define classes in the editor in the browser, they will be saved and instances can be persisted  \n16:06\u00a0<jvelo>\u00a0OK. so it could actually be used outside XWiki  \n16:06\u00a0<@cjd>\u00a0so a large amount of the server can actually exist inside of the database and take advantage of the versioning  \n16:07\u00a0<@cjd>\u00a0yes, it's not xwiki(1.0) specific  \n16:07\u00a0<jvelo>\u00a0cjd: yep I've figured that out, the browser IDE part  \n16:07\u00a0<@cjd>\u00a0i wanted to prototype a possible way forward into xwiki2.0 model  \n16:07\u00a0<@cjd>\u00a0basicly users write first class java (groovy) classes and persist them  \n16:07\u00a0<jvelo>\u00a0cjd: I actually think this base should not even know the notion of wiki documents  \n16:08\u00a0<vmassol>\u00a0cjd: FTR I've reported http://jira.codehaus.org/browse/MCLIRR-48 for now and I'll implement it when I get 2 hours of free time  \n16:08\u00a0<@cjd>\u00a0The reason for the document element is because storage wants there to be a single reasonably small element like document  \n16:09\u00a0<jvelo>\u00a0you mean like a container ?  \n16:09\u00a0<@cjd>\u00a0storage systems like cassandra and mongodb want to have a single document like thing which is not too big and they can scan a table of them  \n16:10\u00a0<jvelo>\u00a0I see  \n16:10\u00a0<@cjd>\u00a0everything inside of the document is colocated together so it's fast to load, outside of the document it's an indexed table so it's fast to find a single one  \n16:10\u00a0<jvelo>\u00a0and then objects reference that document is ?  \n16:10\u00a0<jvelo>\u00a0ok  \n16:10\u00a0<@cjd>\u00a0the way it's currently setup, every PersistableObject is in the table along with the document  \n16:11\u00a0<@cjd>\u00a0there is a bug which I intend on fixing, DataNucleus puts the class name before the object name which breaks my db organization  \n16:11\u00a0<@cjd>\u00a0I want to have the document be followed by each of it's objects to they are all adjacent to one another in the table  \n16:12\u00a0<@cjd>\u00a0hence the careful creation of ID strings  \n16:14\u00a0<@cjd>\u00a0the solution is to reorder the ID string so the class name follows the traditional ID rather than preceeding it, then Cassandra will place all objects of a document next to the document in storage and also allow for the loading of them all in a single range query.  \n16:14\u00a0<jvelo>\u00a0but ultimately such documents doesn't have to be XWiki documents, right ? I mean this system could live outside XWiki ; and document IDs not be xwiki model representation  \n16:14\u00a0<@cjd>\u00a0correct  \n16:14\u00a0<vmassol>\u00a0mflorea: have you seen http://ci.xwiki.org/job/xwiki-platform/org.xwiki.platform$xwiki-platform-index-test-tests/2012/testReport/junit/org.xwiki.index.test.ui/AllDocsTest/org\\_xwiki\\_index\\_test\\_ui\\_AllDocsTest/ ? Have you changed FF on this agent?  \n16:15\u00a0<+mflorea>\u00a0which agent?  \n16:15\u00a0<vmassol>\u00a0agent1  \n16:15\u00a0<@cjd>\u00a0of course it is documents with objects and classes, it \"walks like a duck and quacks\" so it's arguable that it is xwiki even if it's entirely a cleanroom implementation.  \n16:15\u00a0<+mflorea>\u00a0yep, FF11  \n16:15\u00a0<vmassol>\u00a0it's failing  \n16:15\u00a0<+mflorea>\u00a0will ping infra  \n16:15\u00a0<vmassol>\u00a0ok  \n16:16\u00a0<jvelo>\u00a0cjd: sure, but in terms of nomenclature you don't necessarily have to call it a duck ;) you could call it a \"node\" for instance  \n16:16\u00a0<jvelo>\u00a0and it would make sense  \n16:16\u00a0<@cjd>\u00a0yes, it's designed to be generic  \n16:17\u00a0<jvelo>\u00a0All this is very interesting. I want to experiment with the web IDE part  \n16:17\u00a0<@cjd>\u00a0one nice fact about the \"code as data\" design is you can update a swarm of \"cloud\" nodes without having to login to each one.  \n16:18\u00a0<jvelo>\u00a0yep. one drawback I see is that you lose the powerful features of the SCM  \n16:18\u00a0<jvelo>\u00a0your data history is not going to be as powerful as what Git can bring for instance  \n16:18\u00a0<@cjd>\u00a0git integration is a possibility once I get versioning to work.  \n16:19\u00a0<@cjd>\u00a0I might not be up to implementing branching and merging  \n16:19\u00a0<jvelo>\u00a0one thing that can be very nice is linking dynamically a DNS subdomain to a version of the code  \n16:20\u00a0<@cjd>\u00a0hmm indeed  \n16:20\u00a0<@cjd>\u00a0or any kind of url match  \n16:20\u00a0<jvelo>\u00a0yep  \n16:20\u00a0<jvelo>\u00a0subdomain is good, because it doesn't interfere with your app URL api  \n16:21\u00a0<@cjd>\u00a0either have to bake it directly in to the code or have some aweful magic with the latest version checking out an older version  \n16:22\u00a0<@cjd>\u00a0and potentially not something you want people being able to do  \n16:29\u00a0<jvelo>\u00a0cjd: also, I gave a try to your wiki-nodes.sh  \n16:29\u00a0<jvelo>\u00a0this runs with an embedded cassandra ?  \n16:29\u00a0<@cjd>\u00a0yes, cassandra is in-vm with all of that stuff  \n16:30\u00a0<@cjd>\u00a0I'd like to eventually look at optimizing around thrift so it's a single thread from HTTP to disk and back.  \n16:30\u00a0<jvelo>\u00a0ok, it's kind of the hsqldb of nosql  \n16:30\u00a0<@cjd>\u00a0IMO it's the best way.  \n16:30\u00a0<jvelo>\u00a0cjd: but not in production ?  \n16:30\u00a0<@cjd>\u00a0Saves a huge amount of ram since java is \\*cough\\* pig \\*cough\\* not optimized that well  \n16:31\u00a0<@cjd>\u00a0I don't see why it should not be used in production.  \n16:31\u00a0<jvelo>\u00a0ok  \n16:32\u00a0<jvelo>\u00a0well then it has only advantages I guess:) caus' it also simplifies deployment  \n16:32\u00a0<@cjd>\u00a0If there are solid reasons then I'm glad to hear them but I feel like people put together highly fragile and bug prone stacks just because they use lots of big brand name applications and that is just silly  \n16:35\u00a0<jvelo>\u00a0cjd: but the in-vm setup is different than installing cassandra on the machine right ?  \n16:35\u00a0<jvelo>\u00a0I mean, is this something they recommend ?  \n16:35\u00a0<@cjd>\u00a0no, they don't recommend it at all  \n16:36\u00a0<@cjd>\u00a0they don't say it's bad, they don't seem to consider the possiblity at all  \n16:36\u00a0<sdumitriu>\u00a0has joined #xwiki  \n16:36\u00a0<@cjd>\u00a0I want control over the stack so I can handle bugs  \n16:37\u00a0<jvelo>\u00a0I see  \n16:37\u00a0<jvelo>\u00a0there's no performance penalty ?  \n16:37\u00a0<@cjd>\u00a0no because there are always too many threads for whatever you're doing  \n16:37\u00a0<jvelo>\u00a0how does it work, like an in-memory store ?  \n16:38\u00a0<@cjd>\u00a0nah, it memory maps big files  \n16:38\u00a0<@cjd>\u00a0which is why it's slow on 32 bit machines  \n16:38\u00a0<@cjd>\u00a0on 32 bit it has to use NIO which is slower than mmap()ing the whole file  \n16:49\u00a0<jvelo>\u00a0cjd: how do you see thrift fit in this picture ?  \n16:50\u00a0<@cjd>\u00a0the only place where thrift plays a part is as the annoying thing which sits between me and cassandra  \n16:50\u00a0<jvelo>\u00a0isn't thrift an IDL ?  \n16:50\u00a0<@cjd>\u00a0IDL?  \n16:50\u00a0<jvelo>\u00a0iterface definition language  \n16:50\u00a0<jvelo>\u00a0like CORBA  \n16:50\u00a0<@cjd>\u00a0ahh yes it's serialization and RPC  \n16:50\u00a0<@cjd>\u00a0but the cassandra devs don't seem to like it too much  \n16:51\u00a0<@cjd>\u00a0new features need to be implemented inside of cassandra then added to the thrift client  \n16:51\u00a0<@cjd>\u00a0so it's likely to be deprecated over time  \n16:52\u00a0<@cjd>\u00a0What I'm interested in is getting the internal listening code in cassandra and figuring out how to hook it so I can have the same performance as HSQL  \n17:02\u00a0<tmortagne>\u00a0has joined #xwiki  \n17:22\u00a0<gdelhumeau>\u00a0has quit  \n17:27\u00a0<vmassol>\u00a0fixing remainig 2 clirr excludes  \n17:35\u00a0<polx>\u00a0has quit  \n17:37\u00a0<polx>\u00a0has joined #xwiki  \n17:40\u00a0<polx>\u00a0has quit  \n17:50\u00a0<tmortagne>\u00a0has quit  \n17:54\u00a0<+sburjan>\u00a0http://jira.xwiki.org/browse/XE-1175?focusedCommentId=70604#comment-70604  \n17:55\u00a0<sburjan>\u00a0has quit  \n18:02\u00a0<npm>\u00a0I'm seeing something like http://jira.xwiki.org/browse/XWIKI-7549 happen for my macros (not extensions) after restart. Saving as user w/ programming rights seems to make them stop giving \"unknown macro\" error after tomcat restart  \n18:03\u00a0<npm>\u00a0is that issue fixed in 3.5.1? (i'm on 3.5)  \n18:05\u00a0<npm>\u00a0this didn't happen back when it was setup as a non-virtual wiki, but when i switched to virtual, http://www.nielsmayer.com/bin/view/Macros/YouTubeCaptioner\\_Test would poot regularly after a restart  \n18:09\u00a0<npm>\u00a0what i'm seeing is more like http://jira.xwiki.org/browse/XWIKI-6180  \n18:09\u00a0<npm>\u00a0Wiki Macro loses its PR and becomes unregistered  \n18:10\u00a0<mflorea>\u00a0has quit  \n18:15\u00a0<mflorea>\u00a0has joined #xwiki  \n18:28\u00a0<Enygma`1>\u00a0has quit  \n18:28\u00a0<Enygma`>\u00a0has joined #xwiki  \n18:44\u00a0<evalica>\u00a0has quit  \n18:47\u00a0<Enygma`>\u00a0has quit  \n19:03\u00a0<npm>\u00a0i've just confirmed that the issue w/ macros has to do w/ them being \"global\" if set to \"current wiki\" then they work after restart in a virtual wiki  \n19:03\u00a0<npm>\u00a0on 3.5  \n19:04\u00a0<npm>\u00a0is this fixed in 3.5.1 or 4.X?  \n19:04\u00a0<npm>\u00a0or should I reopen http://jira.xwiki.org/browse/XWIKI-6180  \n19:14\u00a0<jvdrean1>\u00a0has quit  \n19:42\u00a0<rrodriguez>\u00a0has joined #xwiki  \n19:58\u00a0<abusenius>\u00a0has joined #xwiki  \n20:08\u00a0<mflorea>\u00a0has quit  \n20:42\u00a0<polx>\u00a0has joined #xwiki  \n20:53\u00a0<mflorea>\u00a0has joined #xwiki  \n21:56\u00a0<jvdrean>\u00a0has joined #xwiki  \n22:01\u00a0<sburjan`>\u00a0has quit  \n22:01\u00a0<sburjan`>\u00a0has joined #xwiki  \n22:37\u00a0<Denis1>\u00a0for velocity date manipulation, what is better: datetool or jodatime ?  \n22:37\u00a0<Denis1>\u00a0is now known as <Denis>  \n22:37\u00a0<@sdumitriu>\u00a0Depends  \n22:38\u00a0<@sdumitriu>\u00a0Jodatime is better for more complex date manipulation  \n22:38\u00a0<@sdumitriu>\u00a0Btw, which datetool?  \n22:38\u00a0<+Denis>\u00a0$datetool  \n22:39\u00a0<+Denis>\u00a0this is velocity datetool, and I wonder why we have both in fact  \n22:40\u00a0<@sdumitriu>\u00a0datetool is good for smaller tasks  \n22:40\u00a0<+Denis>\u00a0I prefer yodatime, easier to develop, but I would like to know if it is a good choice, since what I should do is simple: add 1 day, and format ISO 850 and 8601  \n22:41\u00a0<@sdumitriu>\u00a0And I'd say it's better to use that one, since $xwiki.jodatime is using a deprecated mechanism (plugins) and it's going to be replaced by a service soon enough  \n22:41\u00a0<+Denis>\u00a0ok  \n22:41\u00a0<@sdumitriu>\u00a0Well, $datetool doesn't have a simple \"add one day\" method  \n22:41\u00a0<@sdumitriu>\u00a0So it's better to use joda here  \n22:44\u00a0<+Denis>\u00a0a Calendar could do that  \n22:45\u00a0<+Denis>\u00a0and datetool provide toCalendar()  \n23:00\u00a0<+Denis>\u00a0but you cannot do anything with it :(  \n23:00\u00a0<+Denis>\u00a0so Joda is my friend !  \n23:17\u00a0<mflorea>\u00a0has quit  \n23:29\u00a0<vmassol>\u00a0has quit  \n23:34\u00a0<slugz>\u00a0has joined #xwiki  \n23:51\u00a0<abusenius>\u00a0has quit  \n23:53\u00a0<slugz>\u00a0has quit  \n\n"}