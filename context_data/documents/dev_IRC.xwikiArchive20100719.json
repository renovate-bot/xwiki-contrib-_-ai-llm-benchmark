{"id": "dev:IRC.xwikiArchive20100719", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20100719", "title": "IRC Archive for channel #xwiki - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\nabusenius left at 00:37 (Ping timeout: 265 seconds  \nlucaa joined #xwiki at 00:59  \nlucaa left at 01:06 (Ping timeout: 252 seconds  \nlucaa joined #xwiki at 01:14  \nSvenDowideit left at 01:16 (Changing host  \nSvenDowideit joined #xwiki at 01:16  \nmarta1 left at 01:31 (Ping timeout: 248 seconds  \nsdumitriu left at 03:17 (Ping timeout: 248 seconds  \nvmassol left at 07:49 (Quit: Leaving.  \nlucaa left at 09:02 (Ping timeout: 252 seconds  \nlucaa joined #xwiki at 09:27  \nsburjan joined #xwiki at 09:45  \njvdrean joined #xwiki at 09:54  \nKermitTheFragger joined #xwiki at 09:55  \nkeeeko joined #xwiki at 10:02  \nkeeeko - (10:03): hi  \nkeeeko - (10:03): is there a way i can limit the displayed 'recent changes' on the dashboard to fewer entries. im looking through Main.RecentChanges right now but dont see \u00a0a way how to do it  \nlpereira joined #xwiki at 10:11  \nkeeeko - (10:11): found it :)  \nvmassol joined #xwiki at 10:12  \nabusenius joined #xwiki at 10:14  \nkeeeko left at 10:15 (Quit: Page closed  \nEnygma` joined #xwiki at 10:50  \nsilviar joined #xwiki at 11:31  \nCalebJamesDeLisl - (11:44): http://www.tarsnap.com/scrypt/scrypt.pdf  \nabusenius - (11:47): CalebJamesDeLisl, I'm improving the password based encryption  \nCalebJamesDeLisl - (11:47): How?  \nabusenius - (11:48): added iv, using a better method to generate key  \nCalebJamesDeLisl - (11:48): I'm planning on doing the same.  \nCalebJamesDeLisl - (11:48): I'm planning to add protectPassword and comparePassword to the interface and use those.  \nabusenius - (11:49): I'm ready, will commit in a few minutes  \nCalebJamesDeLisl - (11:49): They will take a specified amount of time and ram.  \nCalebJamesDeLisl - (11:50): I realize that the current key derivation is completely broken (I cloned openssl which seems to be the worst choice.)  \nabusenius - (11:52): committed  \nCalebJamesDeLisl - (11:58): That's an interesting trick but bruit force is still pretty fast.  \nabusenius - (11:58): which trick?  \nCalebJamesDeLisl - (11:59): Initializing a prng and taking it's output.  \nCalebJamesDeLisl - (11:59): Is there a paper or rfc which specifies that?  \nabusenius - (12:00): this is what you tried to do :)  \nabusenius - (12:00): probably  \nabusenius - (12:00): I saw it in several places  \nCalebJamesDeLisl - (12:00): I copied openssl pretty carefully.  \nabusenius - (12:00): TLS uses that for example  \nCalebJamesDeLisl - (12:00): It turns out openssl is just about the worst kdf out there.  \nCalebJamesDeLisl - (12:01): This isn't like a laptop with 4096 vs. a wrench. These passwords are going to be public so we really need to make reversing them hard.  \nabusenius - (12:01): it might be one of the algorithms used for prng  \nabusenius - (12:01): but there is no need to reimplement it  \nabusenius - (12:02): how about adding a pepper?  \nCalebJamesDeLisl - (12:02): How do you define pepper?  \nabusenius - (12:02): + for protectPassword() you can hash several times  \nabusenius - (12:02): secret seed  \nCalebJamesDeLisl - (12:02): The problem with that is it invites parallel cracking.  \nabusenius - (12:03): it is not always needed, so should be optional  \nabusenius - (12:03): parallel cracking is always possible  \nCalebJamesDeLisl - (12:03): Don't think supercomputer in a govt lab, think GTX-8000 on some kid's computer.  \nabusenius - (12:04): well, thats why we should use pepper  \nCalebJamesDeLisl - (12:04): No you can prevent parallel attacks by 1. having state (hash the hash many times) and 2 using lots of ram.  \nabusenius - (12:04): how do you plan to use lot of ram?  \nCalebJamesDeLisl - (12:04): I don't like this \"let's try this, let's try that\" approach. Have you looked at the paper I linked to?  \nabusenius - (12:05): no, we cant prevent parallel attacks by having hash100x  \nabusenius - (12:05): you can just try multiple passwords in parallel  \nabusenius - (12:06): and pepper multiplies number of tries by 2^size  \nCalebJamesDeLisl - (12:06): We can never stop them running multiple words in parallel. But we can stop them running multiple guesses for pepper in parallel.  \nabusenius - (12:06): hm?  \nCalebJamesDeLisl - (12:06): Feed the output to the input. more like 1000+ times.  \nabusenius - (12:07): it's not \"lets try this\" approach, this is what everybody uses  \nCalebJamesDeLisl - (12:07): I know, and everybody uses bad security.  \nabusenius - (12:07): I have not invented this, this is something they tell you on the first crypto lecture  \nabusenius - (12:08): no, I'm talking about \\*good\\* security practices  \nabusenius - (12:09): so, how do you want to feed the input to input?  \nabusenius - (12:09): \\*output  \nCalebJamesDeLisl - (12:09): Take a look at the paper I linked to. That's real mathematicians taking about how to do things right. And it's Berkley, nobody does security like Berkley.  \nabusenius - (12:09): I have, so what am I doing wrong?  \nCalebJamesDeLisl - (12:10): #1 it's fast to try passwords. #2 it's memory cheap to try passwords.  \nabusenius - (12:10): so?  \nCalebJamesDeLisl - (12:10): Check page 6 of the paper, they have 10 lines of pseudocode.  \nabusenius - (12:11): looking...  \nCalebJamesDeLisl - (12:12): They make the computer take the output from a hash way back in history so there's no way to run the algorithm without storing all of the intermediate hashes.  \nCalebJamesDeLisl - (12:12): Parallel cracking becomes a lot less fun when each run takes 500k + 1 second.  \njvdrean left at 12:12 (Quit: Leaving.  \nabusenius - (12:13): ok,  \nabusenius - (12:14): interesting approach, however, why do you think this is much better than pepper?  \nabusenius - (12:14): I mean, yes, one run takes longer and needs more resources  \nCalebJamesDeLisl - (12:14): Isn't that the definition of better if your trying to prevent brute force?  \nabusenius - (12:15): but, the same effect is achieved by multiplying number of runs by 2^20  \nabusenius - (12:15): yes  \nCalebJamesDeLisl - (12:15): Takes more ram?  \nabusenius - (12:15): just compare:  \nabusenius - (12:17): your algo takes 100M ram + 1s per run, so you need 100y to brute-force 2^35 password  \nabusenius - (12:17): (or algo from the paper)  \nabusenius - (12:18): normal try takes 1K ram + 1\u00b5s to run, so add 3 bytes of pepper and you have your slowdown of 1000000x  \nabusenius - (12:18): (actually much more)  \nvmassol left at 12:18 (Quit: Leaving.  \nCalebJamesDeLisl - (12:19): 3 bytes of pepper can still be cracked in parallel.  \nabusenius - (12:19): since nobody has 3x10^30 processors anyway, parallezation doesnt matter  \nabusenius - (12:19): no  \nCalebJamesDeLisl - (12:19): cuda  \nabusenius - (12:19): it is the same time  \nabusenius - (12:19): you have 3000000000 passwords to try  \nabusenius - (12:19): try them all in parallel  \nabusenius - (12:19): it is perfectly parallelizable  \nCalebJamesDeLisl - (12:20): My point is that a scholarly peer reviewed paper which appears to give mathematical proof is a better guide than a couple of people on IRC.  \nabusenius - (12:20): :D  \nabusenius - (12:21): do you believe in papers? :)  \nCalebJamesDeLisl - (12:21): Yes I do. I know my limits with cryptography.  \nabusenius - (12:22): I'm not saying they are wrong, I'm just saying that it is not so much better than a normal approach  \nCalebJamesDeLisl - (12:22): the cost of a hardware brute-force attack against scrypt is roughly 4000 times greater than the cost of a similar attack against bcrypt (to find the same password), and 20000 times greater than a similar attack against PBKDF2  \nCalebJamesDeLisl - (12:22): \"\"  \nabusenius - (12:22): 12 bit of pepper  \nabusenius - (12:23): :)  \nCalebJamesDeLisl - (12:23): Where do they refer to this pepper?  \nabusenius - (12:23): no, thats what I'm saying, 4000x better = 12 additional bit you need to brute-force  \nCalebJamesDeLisl - (12:24): Here's an implementation. C wonderful C \u00a0http://www.tarsnap.com/scrypt/scrypt-1.1.6.tgz  \nabusenius - (12:24): how nice  \nCalebJamesDeLisl - (12:24): I'm going to keep reading this until I can get a grasp on how it works.  \nabusenius - (12:24): ok, here are my arguments:  \nabusenius - (12:25): 1. slowdown of one run by X times is no better than X times more passwords  \nabusenius - (12:26): 2. pepper is ridiculously simple to implement, unlike other more complex solutions  \nabusenius - (12:26): 3. using more resources even for a valid operation can only be done to some limit anyway  \nlpereira left at 12:27 (Quit: Leaving.  \nabusenius - (12:27): 4. there are more important problems around than how we salt the passwords  \nCalebJamesDeLisl - (12:27): I disagree with 1 because processor hard opperations are easy to do on a video card.  \nCalebJamesDeLisl - (12:28): Can you cite any papers where they advocate for pepper?  \nabusenius - (12:28): add 100x X and your card is dead  \nCalebJamesDeLisl - (12:28): 100x X?  \nabusenius - (12:28): (I'll look, wait a minute)  \nabusenius - (12:28): the X from 1.  \nCalebJamesDeLisl - (12:29): Not a big deal, each thread on the card (1000 threads) runs until completion.  \nabusenius - (12:29): 5. we are not a bank, we don't \\*need\\* the best of the best for security  \nabusenius - (12:29): 10000x  \nabusenius - (12:29): :)  \nabusenius - (12:29): number of threads x100 :)  \nCalebJamesDeLisl - (12:30): 5. Password cracking is cheap and easy. How do we expect out users to use a different password here than at their bank if we can't use state of the art password obfuscation?  \nabusenius - (12:30): 6. a simple, easy to understand but effective algorithm is better than one that is as effective but complex  \nabusenius - (12:31): thats really their problem  \nCalebJamesDeLisl - (12:31): The US govt had some info copied out because people were using the same password many places so passwords should be regarded as sensitive personal identity info.  \nabusenius - (12:31): users can send passwords unencrypted, nobody can help them  \nabusenius - (12:31): we are not here to save the world  \nCalebJamesDeLisl - (12:31): Only keep my own corner of it clean.  \nabusenius - (12:32): how do you want to do it with xwiki? :)  \nabusenius - (12:32): oh and btw.  \nabusenius - (12:33): 7. single persons don't have the resources to brute-force, large organizations and govs have better methods  \nCalebJamesDeLisl - (12:33): cuda  \nabusenius - (12:33): (like law enforcement)  \nabusenius - (12:33): cuda is way too slow  \nabusenius - (12:34): it is not magic  \nabusenius - (12:34): it is just 1000x faster, this is \\*very\\* little  \nabusenius - (12:34): (10 bit)  \nCalebJamesDeLisl - (12:35): http://www.elcomsoft.com/edpr.html  \nabusenius - (12:36): \"by a factor of 50\" lol  \nabusenius - (12:36): look, exponential runtime is something that no parallelization can solve  \nabusenius - (12:37): even if you take all computers on the earth, which is something like 10\\*10^9  \nabusenius - (12:38): it is just 2^33  \nCalebJamesDeLisl - (12:38): I want to cite either an rfc or a paper.  \nabusenius - (12:38): if each of them can crack 2^32 passwords per second  \nabusenius - (12:39): its 2^65 passwords per second  \nabusenius - (12:39): good luck with cracking 2^128  \nabusenius - (12:39): (searching for pepper papers)  \nsdumitriu joined #xwiki at 12:45  \nkibahop joined #xwiki at 12:48  \nkibahop left #xwiki at 12:48  \nlucaa left at 12:56 (Ping timeout: 240 seconds  \nztane joined #xwiki at 12:59  \nsdumitriu left at 12:59 (Ping timeout: 276 seconds  \nmarta1 joined #xwiki at 13:09  \nztane - (13:11): hi, broken links appear to be generated on many pages (XWikiUserProfileSheet, admin dashboard etc) on fresh 3.3.2, apparently because of {{html clean=\"false\" wiki=\"true\"}} not being ended, transforming \"Edit\" icons into wikilinks.  \nztane - (13:11): As I am very new to XWiki I am wondering if I only have something wrong on my installation  \nztane - (13:13): or is this a bug  \nCalebJamesDeLisl - (13:15): \"Edit\" icons in the dashboard list of documents?  \nztane - (13:16): hmm let me check...  \nztane - (13:16): but at least the edit icon on \"personal information\" on user profile  \nCalebJamesDeLisl - (13:17): Ok, looking...  \nztane - (13:17): yeah  \nztane - (13:17): if I go to dashboard and move the cursor on top of a link in \"Spaces\"  \nztane - (13:19): XWikiUserProfileSheet was fixed by adding an extra {{html clean=\"false\" wiki=\"false\"}} around the edit link.  \nCalebJamesDeLisl - (13:20): They seem to work ok for me. A couple of them have '?' but that's because I created pages without creating a WebHome in that space.  \nCalebJamesDeLisl - (13:21): Can you say exactly which links were broken in your profile?  \nztane - (13:21): Main.Spaces seems to be broken. It works unless i move the cursor over a link  \nztane - (13:22): I can post a screenshot...  \nsdumitriu joined #xwiki at 13:24  \nsdumitriu - (13:37): CalebJamesDeLisl: Can you please vote for the release?  \nCalebJamesDeLisl - (13:37): Ok. It won't be all that well informed but I have been running 2.4 without any problem.  \nztane - (13:39): ok no screenshot, but text there http://pastebin.com/7bRZYEAU  \nztane - (13:40): (and ofc it was 2.3.2 and not 3.3.2)  \nCalebJamesDeLisl - (13:43): so I'm to gather the problem is that <a href=\" \u00a0\u00a0is missing?  \nCalebJamesDeLisl - (13:44): might be better to paste the entire page source although a real screencap is the best.  \nztane - (13:44): :)  \nztane - (13:45): no, the problem is that the urls are being converted into wikilinks by {{html wiki=\"true\")  \nztane - (13:45): \\*{{html wiki=\"true\"}}  \nCalebJamesDeLisl - (13:46): Not happening to me (I am running 2.4) \u00a0I think such a bug would have been discovered before shipping.  \nztane - (13:46): hmm i added an extra html wiki=\"false\" on Main.Spaces too, and it is those 2 icons that appear on the right on hover  \nztane - (13:46): hmm  \nztane - (13:46): me too :)  \nztane - (13:46): as I said i am new to xwiki, installed it a couple of days ago and it occurred on fresh 2.3.2  \nztane - (13:47): maybe should go for 2.4 rc 1 then  \nCalebJamesDeLisl - (13:47): Are you using tomcat/apache? is there any other info about your configuration?  \nztane - (13:48): tomcat, bridged over apache yes  \nCalebJamesDeLisl - (13:48): Hmm. It doesn't sound like your problem but I know apache has some issues sometimes with the server not knowing it's address/  \nztane - (13:49): hmm do not think this is it :)  \nCalebJamesDeLisl - (13:49): Are you sure you are using the right version of the xar file?  \njvelo joined #xwiki at 13:49  \nztane - (13:49): yep, that was what i suspected first, but i have checked it  \nCalebJamesDeLisl - (13:49): There were some changes to the rendering engine not so long ago.  \njvelo - (13:50): hi guys  \nsdumitriu - (13:50): silviar, sburjan: Any problems showed up during your tests?  \nsdumitriu - (13:50): Hi jvelo  \nsdumitriu - (13:50): Good that you're here, i need votes for the release  \njvelo - (13:50): sdumitriu: silviar are color themes per space supported in XE 2.3 ?  \nztane - (13:50): hmm ... could it be...  \njvelo - (13:51): sdumitriu: ok for the votes, will try to do that  \nztane - (13:51): bc it is converting urls thta start with http://  \nsdumitriu - (13:52): Re Color themes per space: no, not yet  \nztane - (13:52): that i have put an absolute uri in configs where I should have put the relative location  \nsdumitriu - (13:52): It is possible, but it's difficult to configure  \nsdumitriu - (13:53): CalebJamesDeLisl: Some invitation tests are failing on Hudson, although locally they run fine  \njvelo - (13:53): what's the trick ?  \nztane - (13:53): hmm  \nCalebJamesDeLisl - (13:53): Ok. Looking...  \nsdumitriu - (13:54): http://hudson.xwiki.org/job/xwiki-product-enterprise-tests-2.4/com.xpn.xwiki.products$xwiki-enterprise-test-ui/13/testReport/org.xwiki.it.ui.invitation/  \nsdumitriu - (13:54): jvelo: Let me remember it  \nsdumitriu - (13:55): It's like:  \nsdumitriu - (13:55): - you must have a local skin document (local to the space)  \nsdumitriu - (13:55): - the skin must have the style.css in it, as a property  \nsdumitriu - (13:56): I think there was something else, but can't remember what  \njvelo - (13:56): ok, thanks  \nztane - (13:56): CalebJamesDeLisl: the problem is that $doc.getURL() returns an absolute URI with http://, and that inside {{html wiki=\"true\"}} is rendered by the wiki engine as a link...  \nsdumitriu - (13:56): The goal is to force skin URLs to pass through the space  \njvelo - (13:56): sounds tricky indeed  \njvelo - (13:56): are there plans on maling it easier ?  \nsdumitriu - (13:56): Yes, but it's not easy to fix  \njvelo - (13:57): ok  \nztane - (13:57): CalebJamesDeLisl: might be that when using other web containers, getURL could return a relative link instead, thus avoiding the issue  \nCalebJamesDeLisl - (14:02): Coffee time. bbiab  \nabusenius - (14:15): CalebJamesDeLisl: it seems that finding papers about pepper is not that easy, it is like searching for papers where passwords were invented...  \nabusenius - (14:15): anyway, here is the paper about adding pepper to UNIX passwords: http://www.usenix.org/events/sec99/full\\_papers/kedem/kedem.pdf  \nabusenius - (14:16): they refer to applied cryptography by bruce schneier as the reference for that scheme  \nvmassol joined #xwiki at 14:16  \nabusenius - (14:17): I guess cryptography books is the right place to look for that things  \nsilviar - (14:17): sdumitriu: hi; only the problem with the annotations which we talked to anca about  \nlucaa joined #xwiki at 14:18  \nsburjan - (14:23): sdumitriu : that with the annotations, and the minor one with the search button from admin panel :P  \nsdumitriu - (14:24): Annotations should be fixed  \nsburjan - (14:24): sdumitriu : I have an issue with xpath. do you have some minutes to spare ?  \nsdumitriu - (14:24): sburjan: Sure  \nsburjan - (14:25): here or in private ? :P  \nevalica joined #xwiki at 14:26  \njvdrean joined #xwiki at 14:26  \nsdumitriu - (14:26): Here  \nsburjan - (14:26): ok  \nsburjan - (14:27): I want to select using xpath the deletebutton from an attachment with a given name  \nsburjan - (14:27): I've tried with Dan 2 possible expressions, but none works  \nsburjan - (14:27): I'm pasting them  \nsburjan - (14:27): first: //div[@id='attachmentscontent']/div/div/div[div/span/a/text() = '\" + attachmentName + \"']/div/span[2]/a[1]\")).click();  \nsburjan - (14:28): second: a[@class='deletelink' and @href[contains(., '\" + attachmentName + \"')]]\")).click();  \nsburjan - (14:28): where attachmentName is a String that is the name of the attachment  \nsdumitriu - (14:30): You know about .. right?  \nsburjan - (14:30): yes. it's tne inpur parameter to my method  \nsdumitriu - (14:30): So you want the delete button for a named attachment  \nsburjan - (14:30): exactly  \nsburjan - (14:34): I'm using the Xpather plugin for FF  \nsburjan - (14:34): and the odd thing I get is that the first element from the selection is a little bit strange  \nCalebJamesDeLisl - (14:34): hmm. 1999. To it's credit it's not as old as duke nukem forever but it's 10 years older than scrypt.  \nsburjan - (14:36): the content of the first result is always empty.. and I can't figure it why  \nsburjan - (14:37): or maybe it's a bug in the plugin  \nsdumitriu - (14:38): //div[@id='attachmentscontent']//a[text()='\" + attachmentName + \"']/../../span[2]/a[@class='deletelink']  \nsburjan - (14:39): let me give it a try  \nsburjan - (14:41): Unable to lcoate element  \nsburjan - (14:42): although the parameter I give to the method is propelly recognised and used  \nsdumitriu - (14:43): Where do you try?  \nsburjan - (14:43): org.openqa.selenium.NoSuchElementException: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@id='attachmentscontent']//a[text()='Attachment2']/../../span[2]/a[@class='deletelink']\"}  \nsburjan - (14:43): from eclipse.. I start the test  \nabusenius - (14:43): CalebJamesDeLisl: public key krypto is from 70s  \nsdumitriu - (14:44): K  \nsburjan - (14:44): the odd thing is that Xpather plugin recognizes it ..  \nCalebJamesDeLisl - (14:44): Yup. that's why everyone needs to be thinking about curves.  \nsburjan - (14:44): your expression  \nsdumitriu - (14:44): Are you sure Attachment2 is the right name?  \nabusenius - (14:44): salt and pepper is something that everybody should know and use since 20 years by now  \nsburjan - (14:45): yes  \nsburjan - (14:45): because I used it in another test to upload it there  \nsburjan - (14:45): and now I'm trying to delete id  \nsburjan - (14:45): it's already uploaded  \nsdumitriu - (14:46): Are you sure the tab is loaded?  \nCalebJamesDeLisl - (14:46): McEllice is really exciting because it uses the same anti-parallelism techniques to frustrate quantum cracking algorithms.  \nsburjan - (14:46): yes  \nsdumitriu - (14:46): Try to wait for the button first  \nabusenius - (14:46): you mean \\*hypothetical\\* quantum crypto algorithms? :)  \nCalebJamesDeLisl - (14:47): Indeed they are :) however it also is useful against conventional parallel attacks.  \nabusenius - (14:47): they are still trying to factor the number 15 afaik :)  \nsburjan - (14:50): yes, with waiting it works  \nsdumitriu - (14:51): sburjan: Great  \nsburjan - (14:51): thanks  \nCalebJamesDeLisl - (14:52): If I recall they factored 15 but didn't observe entanglement.  \nsburjan - (14:54): Do you have any idea how can I wait for an element that is defined in my PageOject as WebElement ? i see that By has other methods, but none that waits for that(as I can see)  \nsburjan - (14:55): i have something like this @FindBy(className = \"deletelink\")  \nsburjan - (14:55): \u00a0\u00a0\u00a0\u00a0private WebElement deleteLink;  \nsburjan - (14:55): and I want to wait unil element deleteLink appears  \nsburjan - (14:55): using the WebElement as param ..  \nsdumitriu - (14:55): sburjan: Looking  \nsburjan - (14:55): no the CssSelector  \nsdumitriu - (14:57): sburjan: You can't get a By from the element  \nsburjan - (14:59): okay  \nsburjan - (15:00): i want to use the wait so I can wait on the first delete that appears .. this method will always delete the FIRST attachment  \nsburjan - (15:00): and want to add this check in this case too  \nsburjan - (15:01): this would be the general case  \nlucaa - (15:03): sdumitriu: I  \nlucaa - (15:04): I'm installing xwiki war and .xar on mysql and if all works fine I will give the +1 for the rel  \nlucaa - (15:04): 10 mins I estimate  \nabusenius - (15:05): sburjan, why don't you just wait on By(something)?  \nabusenius - (15:05): you can't wait on an element that is not there yet  \nsdumitriu - (15:05): lucaa: OK  \nabusenius - (15:06): only on a condition that is false when the element is not there and true when it appears  \nsburjan - (15:06): I am guessing that if I use Annotations for defining an element .. the program will automatically wait for that element to be displayed  \nsburjan - (15:07): because I had the wait problem only when i invoke directly the driver (which I use in dynamic situations .. like multiple attachments, etc)  \nabusenius - (15:08): no, it will look it up every time you access it afair  \nsburjan - (15:09): yes, that is true also  \nabusenius - (15:10): but I'm not sure if there is a difference between annotation and direct lookup  \nsburjan - (15:10): annotation acts like a proxy  \njvelo - (15:12): sdumitriu: re. Any idea why blog rss links do not work in IE7 ? (IE forces you to download a file)  \njvelo - (15:12): (while the wiki RSS works fine, in IE7)  \nsdumitriu - (15:13): jvelo: Probably wrong mimetype  \nsdumitriu - (15:13): I'll take a look  \njvelo - (15:13): ok  \njvelo - (15:16): sdumitriu: the blog one says xml+rdf  \nlucaa - (15:17): guys, i know normally the idea of $blacklistedSpaces is deprecated but how about blacklisting the AnnotationCode space?  \njvelo - (15:17): does not work any better with rss+xml  \nlucaa - (15:22): actually my bad, I was admin. The annoCode space is blacklisted  \nsdumitriu - (15:24): jvelo: Could be simply that IE7 is blatantly stupid?  \njvelo - (15:25): yeah. but the other feeds work  \njvelo - (15:25): (the ones generated by ROME)  \njvelo - (15:25): with text/xml it works, though  \njvelo - (15:26): creating a JIRA  \nCalebJamesDeLisl - (15:26): Hey speaking about deprecated, how about deprecating the hidden parameter? It seems to cause admins more trouble than any one else and it could be a security vulnerabulity.  \njvelo - (15:27): XABLOG-108  \nlucaa - (15:28): guys, I cannot seem to get any results for the search  \nlucaa - (15:28): I went to the admin section and it says:  \nlucaa - (15:28): InfoValueNumber of indexed elements274  \nlucaa - (15:28): Number of elements in indexing queue0  \nlucaa - (15:28): under status  \nlucaa - (15:28): so I would guess all docs on the wiki are indexed  \nlucaa - (15:29): however, I have this document called Sandbox.Test  \nlucaa - (15:29): I just created  \nlucaa - (15:29): and I search for Test and I don't get it  \nlucaa - (15:29): I only get the XWiki.XWikiPreferences .xar attachment I put for installation purposes  \nlucaa - (15:29): I search for WebHome and I get no result  \nlucaa - (15:29): is this normal?  \nlucaa - (15:30): I search for Welcome (which is in the main page of the wiki) and I don't get any result  \njvelo - (15:31): guys, section edit in syntax still does not work in 2.3.2 ?  \njvdrean - (15:37): jvelo: it should, what's the problem ?  \njvelo - (15:37): s/in syntax/in syntax 2.0/  \njvelo - (15:38): the section edit links do appear, but when you click the WYSIWYG offers the whole document to edit  \njvelo - (15:38): (jvdrean: )  \nsdumitriu - (15:38): jvelo: How important is it to have feeds displayed in IE7?  \njvelo - (15:38): depends for whom  \njvelo - (15:39): for some XWiki SAS customers it might be important ;)  \nsdumitriu - (15:39): text/xml is wrong  \nsdumitriu - (15:39): But it's the only one that IE7 can display  \njvelo - (15:39): indeed. aren't there alternatives ?  \nsdumitriu - (15:40): Well, we could check the UserAgent  \nlucaa - (15:40): ok, I asked for reindex  \nlucaa - (15:40): and now search works fine  \njvelo - (15:42): ok  \nlucaa - (15:45): btw, the RSS is not handled properly by google chrome either  \nlucaa - (15:45): the dashboard is displayed as plaintext and the blog is downloaded  \njvelo - (15:48): sdumitriu: everyone, what's the syntax in XWQL to express negation ?  \njvelo - (15:48): something like \"not member of\"  \njvelo - (15:48): vmassol: maybe you know that ?  \nsdumitriu - (15:48): No idea  \nlucaa - (15:49): have you tried like that jvelo ?  \njvelo - (15:49): yes  \nlucaa - (15:50): you can also try as a function  \nlucaa - (15:50): not(condition)  \nlucaa - (15:50): then I give up, look into the code  \njvelo - (15:50): I tried thqt too  \nlucaa - (16:03): actually google chrome seems to have a more deep problem with rss...  \nsdumitriu - (16:05): Ah, Chrome doesn't understand RSS  \nsdumitriu - (16:05): At least it didn't when I tested it some time ago  \nlucaa - (16:05): it does... only some RSS...  \nlucaa - (16:05): surprising enough  \nsdumitriu - (16:06): https://chrome.google.com/extensions/detail/nlbjncdgjeocebhnmkbbbdekmmmcbfjd  \nsdumitriu - (16:06): http://www.readwriteweb.com/archives/finally\\_-\\_get\\_rss\\_support\\_for\\_google\\_chrome.php  \nlucaa - (16:07): ah no it does not  \nlucaa - (16:07): I was lost in the interface of some things which seem to return different things depending on the user agent  \nsdumitriu - (16:10): Apparently they try to make you use Google Reader for that  \nsdumitriu left at 16:15 (Remote host closed the connection  \nsdumitriu joined #xwiki at 16:15  \nabusenius - (16:18): CalebJamesDeLisl: are you ok with testing DefaultPasswdCryptoService as component?  \nabusenius - (16:19): or do you plan to not use it at component at all?  \nabusenius - (16:19): \\*as  \nabusenius - (16:25): oh, and have you intentionally chosen textToEncrypt to be a multiple of block size? :)  \nCalebJamesDeLisl - (16:27): No it should be a component and no I didn't make textToEncrypt a multiple of block size.  \nCalebJamesDeLisl - (16:27): \\*intentionally.  \nCalebJamesDeLisl - (16:28): In fact I didn't write textToEncrypt.  \nvmassol left at 16:28 (Quit: Leaving.  \nabusenius - (16:30): ok, I've fixed the test and added some non-aligned tests to test the padding  \nabusenius - (16:31): and we have AES crypto service now :)  \nCalebJamesDeLisl - (16:35): AES, CAST5 any block cipher will do. the weak spot is the password.  \nCalebJamesDeLisl - (16:35): You did use CBC right?  \nabusenius - (16:37): yes  \nabusenius - (16:37): there is not much choice it seems  \njvelo - (16:37): guys, tmortagne is not working today ?  \nCalebJamesDeLisl - (16:37): haha AES-256 you revealed the secret about my implementation.  \nabusenius - (16:38): :D  \nCalebJamesDeLisl - (16:38): Well if you're going to do that, then CAST6 it is.  \nsdumitriu - (16:39): jvelo: No, tmortagne is on vacation  \nCalebJamesDeLisl - (16:39): This is a joke we have military grade ciphers and absolutely no side channel attack mitigation. Any groovy script can read the keys.  \njvelo - (16:40): k thanks  \nsdumitriu - (16:40): jvelo: Most devs are  \nabusenius - (16:42): well, we are planning to fix groovy at least ^^  \nCalebJamesDeLisl - (16:48): How so?  \nabusenius - (16:48): well, security manager  \nCalebJamesDeLisl - (16:49): I'm guessing the security manager looks up the stack for a groovy looking class and denies access?  \nabusenius - (16:49): no, groovy has support for setting it afaik  \nabusenius - (16:50): I haven't looked into the details yet  \nsdumitriu - (16:50): CalebJamesDeLisl: Doesn't a keystore normally prevent read access to the keys?  \nCalebJamesDeLisl - (16:50): reflection  \nCalebJamesDeLisl - (16:51): just reflect Unsafe from Random and read memory addresses if you want.  \nCalebJamesDeLisl - (16:52): Java also \\*cough\\* prevents you from using larger than 128 bit cipher keys \\*cough\\*.  \nsdumitriu - (16:53): OK then, the solution is simple, we need to rewrtie XWiki in C  \nCalebJamesDeLisl - (16:54): :) What we need is to have everything under a security manager which prevents reflection with only a few exceptions.  \nCalebJamesDeLisl - (16:57): I actually like java for it's hackableness. I can just decompile the libraries, find what I want and use it.  \nsdumitriu - (17:03): CalebJamesDeLisl: Any luck with the invitation tests?  \nCalebJamesDeLisl - (17:03): They fail on my machine. Looked like they aren't trying the right page.  \nCalebJamesDeLisl - (17:04): Did you rearrange some calls?  \nsdumitriu - (17:04): Failed on mine now, too  \nsdumitriu - (17:04): Nope, none that I remember  \nCalebJamesDeLisl - (17:04): I'll try upping to before your change and run it again.  \nCalebJamesDeLisl - (17:06): I'm actually working on implementing PBKDF2 (PKCS#5) which is part of scrypt, a memory intensive way to hash passwords.  \nabusenius - (17:11): CalebJamesDeLisl: there should be some implementation of pkcs#5 in BC  \nCalebJamesDeLisl - (17:12): Yup, I copied it because it's fixed to sha1 :(  \nCalebJamesDeLisl - (17:12): scrypt defines sha256.  \nCalebJamesDeLisl - (17:13): Now I have to figure out what P, S, iBuff, out, outOffset mean (and know for sure.)  \nsburjan left at 17:13 (Quit: Ex-Chat  \nCalebJamesDeLisl - (17:15): r29946 the tests pass.  \nlpereira joined #xwiki at 17:16  \nEnygma` left at 17:32 (Quit: Leaving.  \nEnygma` joined #xwiki at 17:32  \njvdrean - (17:37): is there any reason apps are locked at their last released versions in XE pom.xml ?  \njvdrean - (17:37): I see that you've updated versions on an app basis sdumitriu  \nsdumitriu - (17:38): trunk or 2.4?  \njvdrean - (17:40): both  \nEnygma` left at 17:40 (Ping timeout: 240 seconds  \nsdumitriu - (17:41): On 2.4 it's kind of normal  \nsdumitriu - (17:41): After the RC, not many changes are supposed to be done on dependencies  \nsdumitriu - (17:41): Ah, and the trunk is like this because it was created from the 2.4 branch  \njvdrean - (17:42): true but we usually put back all the apps to their SNAPSHOT version expect the ones with explicit locks (ie. with comments)  \njvdrean - (17:42): ex: https://svn.xwiki.org/svnroot/xwiki/enterprise/branches/xwiki-enterprise-2.3/pom.xml  \njvdrean - (17:44): it looks like Thomas forgot a step during the last release, I'll fix trunk, sdumitriu since you're releasing 2.4 will you handle the branch ?  \nsilviar left at 17:45 (Quit: Leaving.  \nflorinciu joined #xwiki at 17:55  \nflorinciu left at 18:04 (Read error: Connection reset by peer  \njvelo left at 18:04 (Quit: Page closed  \nKermitTheFragger left at 18:32 (Remote host closed the connection  \njvdrean left #xwiki at 18:50  \nabusenius left at 19:01 (Ping timeout: 260 seconds  \nevalica left #xwiki at 19:04  \nabusenius joined #xwiki at 19:19  \nspaci joined #xwiki at 19:47  \nspaci - (19:58): good morning, I'm getting one of these  \nspaci - (19:58): ScriptServiceNotFoundException: Failed to locate Script Service [query]  \nspaci - (19:58): thrown by the simple groovy statement:  \nspaci - (19:58): services.get(\"query\")  \nspaci - (19:59): seems like I need to manage my script services, but i'm having trouble finding any documentation on that  \nspaci - (20:00): any pointers?  \nCalebJamesDeLisl - (20:08): documentation?  \nCalebJamesDeLisl - (20:09): I have been meaning to add services.listAll or services.keySet or something like that.  \nspaci - (20:12): that'd be nice  \nCalebJamesDeLisl - (20:12): try com.xpn.xwiki.web.Utils.getComponent(org.xwiki.component.manager.ComponentManager.class).lookupList(org.xwiki.script.ScriptService.class);  \nCalebJamesDeLisl - (20:12): I think I got that right..  \nCalebJamesDeLisl - (20:14): try com.xpn.xwiki.web.Utils.getComponent(org.xwiki.component.manager.ComponentManager.class).lookupList(org.xwiki.script.service.ScriptService.class);  \nCalebJamesDeLisl - (20:15): That should be it.  \nspaci - (20:20): it doesn't like org.xwiki.script.ScriptService  \nspaci - (20:21): throws an error looking for the script property org  \nCalebJamesDeLisl - (20:21): Yes, I had it wrong, it's org.xwiki.script.service.ScriptService.class  \nspaci - (20:23): nice!  \nspaci - (20:23): so apparently I only have a RenderingScriptService and a ModelScriptService  \nspaci - (20:24): how do I find / install a query script service?  \nsdumitriu - (20:24): spaci: What version are you using?  \nspaci - (20:24): hm unsure  \nspaci - (20:24): version=2.4-milestone-1.29254  \nsdumitriu - (20:28): The query manager became a scriptable service in 2.4-rc-1  \nsdumitriu - (20:28): So it's normal that it doesn't work  \nspaci - (20:29): so i need to upgrade huh  \nsdumitriu - (20:29): Yep  \nspaci - (20:30): ok then. thanks much  \nlucaa left at 20:32 (Ping timeout: 276 seconds  \nCalebJamesDeLisl - (20:32): abusenius: I'm thinking we shouldn't ship with more cryptographic strength than java has by default. Anyone else have a position on this?  \nabusenius - (20:34): +1  \nabusenius - (20:34): (default implementation/whatever)  \nCalebJamesDeLisl - (20:34): Are you using >128bit keys in your aes implementation?  \nabusenius - (20:34): so for example DefaultPAsswdCryptoService should use at most 128 bit key  \nabusenius - (20:35): yes, but thats not a default one  \nCalebJamesDeLisl - (20:35): I think we shouldn't ship anything with bigger keys. If you want to write a third party extension I think that should be fine.  \nabusenius - (20:36): imo if it is not used for encrypting the keys its ok  \nCalebJamesDeLisl - (20:37): My thinking is if you would get an exception trying to load it from Cypher then we shouldn't include it in the binary.  \nabusenius - (20:37): I'm not in US, I can export whatever I want :)  \nCalebJamesDeLisl - (20:37): No it's not about export, it's more about import.  \nabusenius - (20:37): I can switch to 128 bit to be on the safe side  \nCalebJamesDeLisl - (20:37): The question is will some people not be able to legally use XWiki in their country?  \nabusenius - (20:38): maybe  \nCalebJamesDeLisl - (20:38): Or more correctly will some people believe they cannot legally use it (in practice it is the same).  \nabusenius - (20:39): is it possible to enable some JCE-like checks for the non-JCE part of BC?  \nflorinciu joined #xwiki at 20:39  \nCalebJamesDeLisl - (20:39): If we conform then we can say \"we ship with the same strength encryption as java does by default check with your lawyer....\".  \nCalebJamesDeLisl - (20:40): Checks are pointless because as you well know they can be bypassed. Also it's not a matter of what other people write, it's a matter of what we ship with.  \nCalebJamesDeLisl - (20:41): If somebody extends/modifies the software so it violates the law in their area that is obviously not our business.  \nabusenius - (20:41): well, bypassing it is explicitely ignoring the law, so thats fine, they are there to prevent use of forbiddent stuff by mistake  \nCalebJamesDeLisl - (20:42): That is my thinking when I say we should just ship with 128.  \nabusenius - (20:42): I agree  \nCalebJamesDeLisl - (20:43): My chief concern is that people will be afraid to download the code because they aren't sure of the law. Shipping with 128 only satisfies that requirement.  \nCalebJamesDeLisl - (20:44): BTW: if you want to make your cipher rock solid, implement your own padding scheme and pad at the beginning instead of the end, and pad with random.  \nCalebJamesDeLisl - (20:45): \\* Caution: that is my own idea, it doesn't come from any scholarly paper, use at own risk :)  \njvelociter joined #xwiki at 20:46  \nabusenius - (20:47): it doesn't really matter where you pad  \nabusenius - (20:47): and for random data, there is for sure an RFC for that :)  \nCalebJamesDeLisl - (20:48): Well thinking about CBC, I would imagine you would want to attack the beginning of the ciphertext.  \nCalebJamesDeLisl - (20:48): If CBC can be reversed then I am clearly wrong.  \nCalebJamesDeLisl - (20:49): The padding we are using is nulls if I am not mistaken.  \nCalebJamesDeLisl - (20:54): org.bouncycastle.util.encoders.Hex; \u00a0\u00a0<-- There's your hex encoder for the fingerprint  \nabusenius - (20:54): it should not matter, because the output of an encryption is undistinguishable from a random data  \nabusenius - (20:54): + we are using pseudorandom IV  \nabusenius - (20:54): whatever, BigInteger works too :)  \nCalebJamesDeLisl - (20:55): Ok. \u00a0I think the CBC chain cannot be attacked in reverse so any attack on the ciphertext would be an attack on the first block.  \nCalebJamesDeLisl - (20:56): If you can convert the first block to something recognizable then you have likely broken the cipher.  \nCalebJamesDeLisl - (20:57): But if some portion of the first block won't be recognizable anyway then your job is harder.  \nCalebJamesDeLisl - (20:58): But ciphers aren't very interesting to me, I'm more interested in password hashes.  \nsdumitriu - (21:01): CalebJamesDeLisl: Looks like the invitation app really is broken  \nsdumitriu - (21:01): The actions are not taken into account anymore  \nsdumitriu - (21:01): I think I know the cause  \nsdumitriu - (21:02): You were relying on a bug I just fixed  \nCalebJamesDeLisl - (21:02): What bug was that?  \nsdumitriu - (21:02): Digging into it  \nsdumitriu - (21:02): XWIKI-1962  \nsdumitriu - (21:08): The idea is that before calling getObjects and modifying them would modify the document stored in the cache (side effect)  \nsdumitriu - (21:08): Now calling getObjects clones the protected document inside the Document API object  \nsdumitriu - (21:09): And changes are done only on the clone, accessible only from that API wrapper  \nsdumitriu - (21:09): Next time you request the document, a new API is created starting with the cached document, not the changed one  \nsdumitriu - (21:10): So whatever changes you did in the object are not taken into account  \nsdumitriu - (21:10): Can you fix it, or do you want me to do it?  \nCalebJamesDeLisl - (21:11): i can take a look.  \nCalebJamesDeLisl - (21:11): \"getObjects and modifying them would modify the document stored in the cache\" I don't think that is how it works.  \nCalebJamesDeLisl - (21:12): I checked the document's identity hashcode after calling getdocument many times and it was always different.  \nCalebJamesDeLisl - (21:13): I tried to change the admin password and then log in as admin using the new password, thankfully this failed.  \nCalebJamesDeLisl - (21:14): I don't think that is the problem with invitation because I was aware of that behavior when I wrote it, but I'll take a look.  \nflorinciu left at 21:14 (Quit: Leaving.  \nflorinciu joined #xwiki at 21:14  \nCalebJamesDeLisl - (21:35): Indeed I did make a mistake. Fixing it now.  \nspaci left #xwiki at 21:41  \nCalebJamesDeLisl - (21:51): sdumitriu: I have the fix for invitation, although it seems innocuous I'm concerned about committing it to 2.4.  \nsdumitriu - (21:52): Is it big?  \nCalebJamesDeLisl - (21:53): Not too big. I just have reservations about committing a change on release day.  \nCalebJamesDeLisl - (21:53): I'm testing now.  \nsdumitriu - (21:54): Go ahead and commit  \nsdumitriu - (21:54): Without it, invitations don't work anyway  \nCalebJamesDeLisl - (21:54): Testing first.  \nCalebJamesDeLisl - (21:55): Are you sure nothing else is broken? calling getDocument twice is a subtle bug.  \nsdumitriu - (21:55): Of course, after testing  \nsdumitriu - (21:55): That should be it  \nsdumitriu - (21:58): Ah, I misunderstood your question  \nsdumitriu - (21:58): Yes, other things might be broken  \nsdumitriu - (21:59): But the tests didn't trigger any error  \nCalebJamesDeLisl - (21:59): Document.getComments(boolean asc) \u00a0\u00a0What happens of a comment is modified?  \nCalebJamesDeLisl - (22:00): Document.getAttachment(String filename) \u00a0can an attachment be modified?  \nCalebJamesDeLisl - (22:03): Hmm. under some conditions Document.get(String classOrFieldName) will return a BaseObject.  \nCalebJamesDeLisl - (22:04): No never mind it looks like that condition is impossible and the code never runs.  \nCalebJamesDeLisl - (22:06): sdumitriu: I think it would be best to remove that change from 2.4. I am unable to assure myself that it is safe of it so I'm not sure it's a good change for the day before release day.  \nCalebJamesDeLisl - (22:07): Of course you have been in that code much longer than me so you make the decision.  \nCalebJamesDeLisl - (22:10): Committed on trunk.  \nsdumitriu - (22:18): Yes, I guess you're right  \nsdumitriu - (22:18): It's not a critical fix  \nsdumitriu - (22:19): I'll revert XWIKI-1962 from 2.4  \nCalebJamesDeLisl - (22:22): Thanks. That makes me feel better.  \nCalebJamesDeLisl - (22:22): Document.addAttachments(String fieldName) looks like it might be a problem. (It writes to this.doc)  \nCalebJamesDeLisl - (22:24): addAttachment(String fileName, byte[] data)  \nCalebJamesDeLisl - (22:24): Puts the attachment in this.doc. If the user calls getDocument, addAttachment, getObject, save. Attachment == null.  \nCalebJamesDeLisl - (22:32): If the user calls getComments(boolean asc) and modifies the returned comment XObjects then calls getObject. the modified comments are lost.  \nCalebJamesDeLisl - (22:37): Looks like that's all.  \nsdumitriu - (22:40): Thanks for the analysis  \nCalebJamesDeLisl - (22:47): http://www.bsdcan.org/2009/schedule/attachments/86\\_scrypt\\_slides.pdf  \nCalebJamesDeLisl - (22:54): Colin Percival, who happens to be the FreeBSD Security Officer, has created the \"scrypt\" key-derivation function.  \nCalebJamesDeLisl - (22:55): If it's good enough for BSD, it's good enough for me.  \nflorinciu left at 23:45 (Read error: Connection reset by peer  \n\n"}