{"id": "dev:IRC.xwikiArchive20160322", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20160322", "title": "IRC Archive for channel #xwiki on 22 March 2016 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<abusenius>\u00a0has quit  \n00:33\u00a0<lkrejci>\u00a0has quit  \n00:45\u00a0<sdumitriu>\u00a0has quit  \n00:52\u00a0<avisser>\u00a0has joined #xwiki  \n01:11\u00a0<avisser>\u00a0has quit  \n01:23\u00a0<avisser>\u00a0has joined #xwiki  \n01:33\u00a0<avisser>\u00a0has quit  \n01:38\u00a0<avisser>\u00a0has joined #xwiki  \n01:44\u00a0<avisser>\u00a0has quit  \n01:52\u00a0<sdumitriu>\u00a0has joined #xwiki  \n03:43\u00a0<avisser>\u00a0has joined #xwiki  \n03:48\u00a0<avisser>\u00a0has quit  \n06:29\u00a0<Denis1>\u00a0has joined #xwiki  \n06:30\u00a0<Denis>\u00a0has quit  \n07:26\u00a0<vmassol>\u00a0has joined #xwiki  \n08:16\u00a0<woshilapin>\u00a0has quit  \n08:48\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n08:50\u00a0<acotiuga>\u00a0has joined #xwiki  \n09:00\u00a0<mflorea>\u00a0has joined #xwiki  \n09:03\u00a0<woshilapin>\u00a0has joined #xwiki  \n09:32\u00a0<msmeria>\u00a0has quit  \n09:32\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n09:38\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:40\u00a0<msmeria>\u00a0has joined #xwiki  \n09:44\u00a0<acotiuga>\u00a0Hello  \n09:46\u00a0<mflorea>\u00a0has quit  \n09:47\u00a0<acotiuga>\u00a0I would like to add a column in a livetable which will display computed values (which are not properties of the class and are not stored in the db) and to sort or even filter by this column. Do I have any options to achieve this?  \n09:52\u00a0<tmortagne>\u00a0acotiuga: with a custom JSON source you can do whatever you want, see http://extensions.xwiki.org/xwiki/bin/view/Extension/Livetable+Macro#HCustomJSON  \n09:53\u00a0<tmortagne>\u00a0(I don't think you can cover this use case without custom JSON source if that's the question)  \n09:55\u00a0<acotiuga>\u00a0I already have a custom JSON and I tried to send parameters to XWiki.LiveTableResultsMacros to sort my data, but now I figured out that I might make the sort on the custom map and not on the DB :)  \n09:55\u00a0<acotiuga>\u00a0Is that the good approach?  \n09:59\u00a0<tmortagne>\u00a0you can't properly sort the result when you do pagination  \n10:02\u00a0<tmortagne>\u00a0basically you can do this sorting on the result only if your have all the elements from the DB in the Map (which is possible to, at worst you can do the offset/limit filtering on the Map too)  \n10:08\u00a0<mflorea>\u00a0has joined #xwiki  \n10:12\u00a0<vmassol>\u00a0acotiuga: the only thing to worry about when you have a custom json is performance. You need to be sure you don't get too much data from the DB and that you do about 1 request per json call  \n10:13\u00a0<vmassol>\u00a0good morning everyone  \n10:14\u00a0<vmassol>\u00a0I'm still working on fixing our code base to compile and run under java 8. Hopefully I should be be finished today and I'll be able to turn on java 8 as minimum version for master  \n10:16\u00a0<tmortagne>\u00a0great :)  \n10:16\u00a0<Slashman>\u00a0has joined #xwiki  \n10:25\u00a0<acotiuga>\u00a0vmassol: Thanks!  \n10:31\u00a0<flashdel>\u00a0has quit  \n10:47\u00a0<acotiuga>\u00a0I just created an issue on the Forum Application which demands an improvement in terms of performance. Could anyone take a look on it to validate the proposed solution or to express a different opinion? http://jira.xwiki.org/browse/XAFORUM-210. Thanks!  \n10:50\u00a0<tmortagne>\u00a0acotiuga: yep fields used as cached computed values is what I do in repository application too (field that indicate if the extension is valid, or the last version of the extension for example)  \n11:02\u00a0<tmortagne>\u00a0and I update it in a listener receiving DocumentUpdatingEvent and DocumentCreatingEvent events  \n11:03\u00a0<tmortagne>\u00a0(that way it's always up to date, don't generate special save and nobody can directly mess with it)  \n11:06\u00a0<vmassol>\u00a0fyi with java 8 and our version of jmock (2.6.0) the following doesn't match anymore if you pass \u00a0null:  \n11:06\u00a0<vmassol>\u00a0allowing(mockGadgetSource).getDashboardSourceMetadata(with(any(String.class)),  \n11:07\u00a0<vmassol>\u00a0the following works: allowing(mockGadgetSource).getDashboardSourceMetadata(with(aNull(String.class)),  \n11:08\u00a0<vmassol>\u00a0in the test i'm fixing, there are 2 calls, one with null and one without which forces me to have to 2 allowing()\u2026  \n11:08\u00a0<vmassol>\u00a0checking if we can upgrade hamcrest maybe  \n11:09\u00a0<vmassol>\u00a0we have the latest one  \n11:09\u00a0<vmassol>\u00a0(except the 2.0 but that's more complex)  \n11:11\u00a0<vmassol>\u00a0the following works too: with(AnyOf.anyOf(aNull(String.class), any(String.class))),  \n11:12\u00a0<vmassol>\u00a0so I've checked the source  \n11:15\u00a0<vmassol>\u00a0and it cannot work...  \n11:15\u00a0<vmassol>\u00a0but I don't get why it's passing with java 7...  \n11:15\u00a0<vmassol>\u00a0will debug  \n11:20\u00a0<tmortagne>\u00a0another possibility is move the test to mockito :)  \n11:22\u00a0<vmassol>\u00a0tmortagne: I did this for one test  \n11:23\u00a0<vmassol>\u00a0actually more than 1  \n11:23\u00a0<vmassol>\u00a0and I've spent 1.5 hours already trying to do it for this one without success  \n11:23\u00a0<vmassol>\u00a0so I thought I'd stop and just fix the jmock one...  \n11:37\u00a0<Enygma`>\u00a0has joined #xwiki  \n11:40\u00a0<tmortagne>\u00a0vmassol: be careful to not break the current build for Java 7 until we actually move to Java 8  \n11:41\u00a0<vmassol>\u00a0tmortagne: I haven't checked but I it should work, no?  \n11:41\u00a0<vmassol>\u00a0checking commit (just seen it)  \n11:41\u00a0<tmortagne>\u00a0it's not about your last comit  \n11:41\u00a0<tmortagne>\u00a0its about previous one  \n11:41\u00a0<tmortagne>\u00a0difference in the way to interpret generic between Java 7 and 8  \n11:41\u00a0<vmassol>\u00a0ah yes  \n11:42\u00a0<vmassol>\u00a0indeed  \n11:42\u00a0<vmassol>\u00a0too bad  \n11:42\u00a0<tmortagne>\u00a0(I made it explicit for now)  \n11:42\u00a0<vmassol>\u00a0it's nice to not have to cast  \n11:42\u00a0<tmortagne>\u00a0it's not a cast  \n11:42\u00a0<vmassol>\u00a0not cast, but force the type  \n11:42\u00a0<tmortagne>\u00a0just indicate what is the generic type explicitely  \n11:45\u00a0<vmassol>\u00a0I've tried to switch my ide bewteen 7 and 8 and it's a major pita on platform  \n11:45\u00a0<vmassol>\u00a0takes me one hour...  \n11:45\u00a0<vmassol>\u00a0:(  \n11:45\u00a0<vmassol>\u00a0(I have to reimport everything and then there are still problems that I need to solve manually)  \n11:46\u00a0<vmassol>\u00a0I wanted to understand why any(String.class) matches null on java7 but I stopped, was just too hard to switch back to 7  \n11:46\u00a0<vmassol>\u00a0(I know why it fails on 8 and I don't see why it doesn't fail on 7)  \n11:47\u00a0<vmassol>\u00a0in class IsInstanceOf.matches() the first line is:  \n11:47\u00a0<vmassol>\u00a0if (null == item) {  \n11:47\u00a0<vmassol>\u00a0and it return false in that case  \n12:40\u00a0<ClemensR>\u00a0has joined #xwiki  \n13:02\u00a0<avisser>\u00a0has joined #xwiki  \n13:03\u00a0<vmassol>\u00a0mflorea: don't know if we had it before but on master I get plenty of the following in the build: \"[INFO] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Rebinding com.google.gwt.user.client.ui.impl.PopupImpl  \n13:03\u00a0<vmassol>\u00a0[INFO] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Could not find an exact match rule. Using 'closest' rule <replace-with class='com.google.gwt.user.client.ui.impl.PopupImplMozilla'/> based on fall back values. You may need to implement a specific binding in case the fall back behavior does not replace the missing binding\"  \n13:08\u00a0<vmassol>\u00a0build success!  \n13:09\u00a0<vmassol>\u00a0going to commit the java8 switch now :)  \n13:14\u00a0<vmassol>\u00a0done\u2026  \n13:14\u00a0<acotiuga>\u00a0has quit  \n13:18\u00a0<vmassol>\u00a0I've just updated http://platform.xwiki.org/xwiki/bin/view/AdminGuide/Performances#HMemory let me know if you agree  \n13:19\u00a0<vmassol>\u00a0(or rather if you don't agree :))  \n13:20\u00a0<vmassol>\u00a0what!  \n13:20\u00a0<vmassol>\u00a0just been blocked by CF  \n13:20\u00a0<vmassol>\u00a0checking why  \n13:23\u00a0<vmassol>\u00a0ok turned off some rule  \n13:32\u00a0<acotiuga>\u00a0has joined #xwiki  \n13:39\u00a0<mflorea>\u00a0vmassol: I think we had those warnings before, it's not the first time I see them  \n13:43\u00a0<vmassol>\u00a0ok  \n14:49\u00a0<woshilapin>\u00a0Hi devs, is it possible to refresh only a panel (every 10s for example)  \n14:55\u00a0<ClemensR>\u00a0not out of the box - first you need to provide the contents of the panel to some ajax call.  \n14:55\u00a0<ujjwal>\u00a0has joined #xwiki  \n14:56\u00a0<ClemensR>\u00a0so you best have the source of the data, and then write the panel with code to populate itself with the data on page load via ajax call  \n14:56\u00a0<ClemensR>\u00a0from there it is relatively simple to add a \"refresh every X second\" feature  \n15:04\u00a0<msmeria>\u00a0has quit  \n15:18\u00a0<woshilapin>\u00a0Yes, that was what I thought  \n15:18\u00a0<woshilapin>\u00a0ClemensR: thanks  \n15:20\u00a0<woshilapin>\u00a0I was thinking also of an regular AJAX call on /xwiki/bin/get/MySpace/MyPanel?outputSyntax=html and inject the result  \n15:23\u00a0<alok\\_>\u00a0has joined #xwiki  \n15:26\u00a0<ClemensR>\u00a0ah, you need to scrap the contents from the div class=\"panel\" in the response in that case, but it should even work  \n16:03\u00a0<ujjwal>\u00a0has quit  \n16:04\u00a0<alok\\_>\u00a0has quit  \n16:25\u00a0<tmortagne>\u00a0has quit  \n16:25\u00a0<ujjwal>\u00a0has joined #xwiki  \n16:35\u00a0<acotiuga>\u00a0has quit  \n16:45\u00a0<lkrejci>\u00a0has joined #xwiki  \n16:50\u00a0<tmortagne>\u00a0has joined #xwiki  \n16:53\u00a0<xwikiorg\\_guest\\_9>\u00a0has joined #xwiki  \n16:54\u00a0<xwikiorg\\_guest\\_9>\u00a0has quit  \n17:12\u00a0<KermitTheFragger>\u00a0has quit  \n17:12\u00a0<vmassol>\u00a0mflorea: if you have \u00a0a few minutes, I'd like your opinion on http://jira.xwiki.org/browse/XWIKI-9229?focusedCommentId=90651&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-90651  \n17:13\u00a0<vmassol>\u00a0I('m looking into fixing the related issues)  \n17:23\u00a0<mflorea>\u00a0vmassol: should be (doc.fullName not in ...). Using \" and not exists (...)\" is probably a bit faster, but even with this the query is very slow because the inner select needs to be computed for each row  \n17:23\u00a0<vmassol>\u00a0mflorea: I tried it and it was working fine for me as is  \n17:24\u00a0<vmassol>\u00a0it's displaying all docs in french and all docs not having any French translations  \n17:24\u00a0<mflorea>\u00a0you didn't try to create a page with the same name in a different space  \n17:24\u00a0<vmassol>\u00a0ah yes  \n17:24\u00a0<vmassol>\u00a0need to use fullname instead of name  \n17:24\u00a0<vmassol>\u00a0got it  \n17:24\u00a0<mflorea>\u00a0yep  \n17:25\u00a0<vmassol>\u00a0you say it's slow, are you sure?  \n17:25\u00a0<mflorea>\u00a0it works, but it's expensive  \n17:25\u00a0<vmassol>\u00a0I'd need to do some perf tests  \n17:25\u00a0<vmassol>\u00a0we could also run it only when multilingual is on  \n17:26\u00a0<mflorea>\u00a0the problem is that the inner select needs to be re-computed for each row in the results  \n17:26\u00a0<vmassol>\u00a0but still we need sometihng fast when multilingual is on  \n17:26\u00a0<mflorea>\u00a0the DB cannot cache it  \n17:26\u00a0<vmassol>\u00a0no optimization possible by the DB?  \n17:26\u00a0<mflorea>\u00a0afaik no because if uses doc.fullName from the outer select, which is variable  \n17:28\u00a0<mflorea>\u00a0the DB could optimize if it were \"doc.fullName not in (select all docs with French locale)\", but then the problem is that the result if \"(select all docs with French locale)\" could be a huge list (although it's only doc names)  \n17:30\u00a0<mflorea>\u00a0would be interesting to see the difference in perf between  \n17:30\u00a0<mflorea>\u00a0\\* not exists (select the French locale of this doc)  \n17:30\u00a0<mflorea>\u00a0\\* doc.fullName not in (select all docs with French locale)  \n17:31\u00a0<vmassol>\u00a0I'll try  \n17:38\u00a0<vmassol>\u00a0problem is that I get 0ms ATM ;)  \n17:39\u00a0<vmassol>\u00a0(I have added 1000 docs in the wiki in addition to the default ones)  \n17:39\u00a0<vmassol>\u00a0ah no wait  \n17:39\u00a0<vmassol>\u00a0I was not computing the right thing...  \n17:40\u00a0<vmassol>\u00a0ok good 6ms with 1504 docs  \n17:42\u00a0<vmassol>\u00a0mflorea: what's the query for \"not exists\", I cannot make it work, googling now  \n17:42\u00a0<mflorea>\u00a0https://docs.jboss.org/hibernate/orm/3.3/reference/en/html/queryhql.html#queryhql-subqueries  \n17:43\u00a0<mflorea>\u00a0where not exists (from Cat as mate where mate.mate = cat)  \n17:43\u00a0<mflorea>\u00a0HQL  \n17:43\u00a0<vmassol>\u00a0sure but it doesn't work  \n17:43\u00a0<mflorea>\u00a0I haven't tested  \n17:43\u00a0<vmassol>\u00a0I have:  \n17:44\u00a0<vmassol>\u00a0where doc.language = 'fr' or (doc.language = '' and not exists (select doc2.fullName from XWikiDocument as doc2 where doc2.fullName = doc.fullName and doc2.language = 'fr'))  \n17:44\u00a0<vmassol>\u00a0must be stupid  \n17:48\u00a0<vmassol>\u00a0mflorea: maybe our XWQL parser is missing support for exists...  \n17:48\u00a0<mflorea>\u00a0it could be that  \n17:49\u00a0<mflorea>\u00a0have you tried with HQL?  \n17:49\u00a0<vmassol>\u00a0nope  \n17:49\u00a0<vmassol>\u00a0will try now  \n17:49\u00a0<vmassol>\u00a0works  \n17:49\u00a0<vmassol>\u00a0so results: :)  \n17:49\u00a0<mflorea>\u00a0ok, good to know re XWQL and exists  \n17:49\u00a0<vmassol>\u00a0- not in: 6ms  \n17:50\u00a0<vmassol>\u00a0- not exists: 15 ms  \n17:50\u00a0<vmassol>\u00a0actually waut  \n17:50\u00a0<vmassol>\u00a0\\*wait  \n17:50\u00a0<vmassol>\u00a0if I rerun several times I also get 6ms  \n17:50\u00a0<vmassol>\u00a0with not exists  \n17:50\u00a0<mflorea>\u00a0maybe the db does some caching  \n17:50\u00a0<mflorea>\u00a0because it's the same query  \n17:51\u00a0<vmassol>\u00a0not exists seems slightly faster  \n17:51\u00a0<vmassol>\u00a0I get values in the range 4-6  \n17:51\u00a0<mflorea>\u00a0after the initial caching?  \n17:51\u00a0<vmassol>\u00a0yes after the initial caching  \n17:51\u00a0<mflorea>\u00a0ok  \n17:51\u00a0<vmassol>\u00a0while for not in, it's in the range 5-9ms  \n17:52\u00a0<mflorea>\u00a0ok, you tested locally?  \n17:52\u00a0<vmassol>\u00a0with average being 6  \n17:52\u00a0<vmassol>\u00a0yes locally with 1504 docs  \n17:52\u00a0<mflorea>\u00a0ok  \n17:53\u00a0<vmassol>\u00a0now comparing to normal query  \n17:55\u00a0<vmassol>\u00a01ms (normal) vs 4-5 ms(not exists)  \n17:55\u00a0<vmassol>\u00a0so about 4-5 times slower  \n17:56\u00a0<vmassol>\u00a0commented at http://jira.xwiki.org/browse/XWIKI-9229?focusedCommentId=90654&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-90654  \n17:57\u00a0<vmassol>\u00a0on a HSQLDB DB  \n17:59\u00a0<vmassol>\u00a0interestingly if I use \"not in\" and only do a where on the FR locale, it's faster  \n17:59\u00a0<vmassol>\u00a0about 3ms  \n17:59\u00a0<vmassol>\u00a0but it may grow faster with the number of docs in the wiki\u2026  \n18:00\u00a0<vmassol>\u00a0I don't know what it would do with 1M docs ;)  \n18:01\u00a0<ClemensR>\u00a0has quit  \n18:02\u00a0<vmassol>\u00a0my last comment in the issue mflorea:  \n18:02\u00a0<vmassol>\u00a0Now, 4-5 times slower seems a lot but this is for a paginated LT results where we display between 15-100 results at a time... For 100 docs, the difference is completely negligible I believe  \n18:02\u00a0<vmassol>\u00a0hmmm not true  \n18:03\u00a0<vmassol>\u00a0actually I don't know  \n18:03\u00a0<mflorea>\u00a0the DB still needs to run the full query  \n18:03\u00a0<vmassol>\u00a0\u00a0I guess the nested query accesses the full table  \n18:04\u00a0<mflorea>\u00a0yes  \n18:04\u00a0<vmassol>\u00a0so even with a limit it'll scan it  \n18:04\u00a0<mflorea>\u00a0but even for the outer select, if you have order by then it still needs to compute all the results  \n18:05\u00a0<mflorea>\u00a0i.e. if you sort on a live table column  \n18:05\u00a0<vmassol>\u00a0hmm indeed  \n18:05\u00a0<vmassol>\u00a0didn't realize than when we click sort, it slows down :)  \n18:06\u00a0<vmassol>\u00a0I wonder what perf we get with a DB with 1M+ docs  \n18:06\u00a0<mflorea>\u00a0I wonder too :)  \n18:06\u00a0<mflorea>\u00a0unfortunately we don't do that many tests on large wikis  \n18:08\u00a0<gdelhumeau>\u00a0has quit  \n18:10\u00a0<vmassol>\u00a0I'll send a brainstorming mail with some dieas  \n18:10\u00a0<vmassol>\u00a0\\*ideas  \n18:13\u00a0<woshilapin>\u00a0has quit  \n18:14\u00a0<asam>\u00a0has joined #xwiki  \n18:24\u00a0<asam>\u00a0has quit  \n18:26\u00a0<asam>\u00a0has joined #xwiki  \n18:27\u00a0<Denis1>\u00a0has quit  \n18:27\u00a0<Denis>\u00a0has joined #xwiki  \n18:43\u00a0<vmassol>\u00a0mflorea: \u00a0mail sent  \n18:44\u00a0<mflorea>\u00a0ok  \n18:44\u00a0<mflorea>\u00a0I'll check it later  \n18:44\u00a0<vmassol>\u00a0thanks  \n18:56\u00a0<tmortagne>\u00a0has quit  \n19:06\u00a0<mflorea>\u00a0has quit  \n19:12\u00a0<woshilapin>\u00a0has joined #xwiki  \n19:26\u00a0<abusenius>\u00a0has joined #xwiki  \n19:36\u00a0<asam>\u00a0has quit  \n19:45\u00a0<lkrejci>\u00a0has quit  \n19:45\u00a0<lkrejci>\u00a0has joined #xwiki  \n19:59\u00a0<evalica>\u00a0has quit  \n20:01\u00a0<xwikiorg\\_guest\\_3>\u00a0has joined #xwiki  \n20:01\u00a0<xwikiorg\\_guest\\_3>\u00a0hello, i just installed xwiki and i have a question about the message stream  \n20:01\u00a0<xwikiorg\\_guest\\_3>\u00a0is it possible to remove the \"everyone\" option?  \n20:01\u00a0<Enygma`>\u00a0has quit  \n20:36\u00a0<xwikiorg\\_guest\\_3>\u00a0has quit  \n20:45\u00a0<lkrejci>\u00a0has quit  \n20:46\u00a0<lkrejci>\u00a0has joined #xwiki\n"}