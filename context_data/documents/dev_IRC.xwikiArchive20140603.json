{"id": "dev:IRC.xwikiArchive20140603", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20140603", "title": "IRC Archive for channel #xwiki on 03 June 2014 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<abusenius>\u00a0has quit  \n00:33\u00a0<DSpair>\u00a0has quit  \n00:51\u00a0<DSpair>\u00a0has joined #xwiki  \n02:11\u00a0<OSIMasson>\u00a0has quit  \n02:15\u00a0<OSIMasson>\u00a0has joined #xwiki  \n02:28\u00a0<DSpair>\u00a0has quit  \n02:31\u00a0<OSIMasson>\u00a0has quit  \n02:44\u00a0<OSIMasson>\u00a0has joined #xwiki  \n04:29\u00a0<OSIMasson>\u00a0has quit  \n04:30\u00a0<OSIMasson>\u00a0has joined #xwiki  \n05:19\u00a0<OSIMasson>\u00a0has left #xwiki  \n06:03\u00a0<Denis>\u00a0has quit  \n07:11\u00a0<evalica>\u00a0has joined #xwiki  \n08:10\u00a0<msmeria>\u00a0has joined #xwiki  \n08:16\u00a0<andreic>\u00a0has joined #xwiki  \n08:16\u00a0<sdumitriu1>\u00a0has quit  \n08:21\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n08:23\u00a0<vmassol>\u00a0has joined #xwiki  \n08:43\u00a0<DarkKnightCZ>\u00a0hi, what is the default code for displaying list of users (the one that is displayed when $document.get(\"usersfield\") is called)?  \n08:46\u00a0<cjd>\u00a0has joined #xwiki  \n08:53\u00a0<vmassol>\u00a0DarkKnightCZ: to find that you can check the display() methods of XWikiDocument  \n08:53\u00a0<vmassol>\u00a0it calls displayView for the view mode  \n08:53\u00a0<vmassol>\u00a0(which I assume is what you're after)  \n08:54\u00a0<vmassol>\u00a0and that will lead you to ListClass.displayView  \n08:55\u00a0<vmassol>\u00a0UsersClass just extends ListClass but doesn't override displayView  \n08:56\u00a0<vmassol>\u00a0note that document.get() just calls document.display()  \n09:07\u00a0<DarkKnightCZ>\u00a0yup, thats it... so it is just generic... is there any method that can return raw value?  \n09:14\u00a0<woshilapin>\u00a0has joined #xwiki  \n09:17\u00a0<Denis1>\u00a0has joined #xwiki  \n09:21\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n09:28\u00a0<mflorea>\u00a0has joined #xwiki  \n09:29\u00a0<evalica>\u00a0has quit  \n09:29\u00a0<evalica>\u00a0has joined #xwiki  \n09:30\u00a0<evalica1>\u00a0has joined #xwiki  \n09:31\u00a0<evalica>\u00a0has quit  \n09:33\u00a0<Denis1>\u00a0is now known as <Denis>  \n09:35\u00a0<evalica1>\u00a0is now known as <evalica>  \n09:41\u00a0<mflorea>\u00a0has quit  \n09:51\u00a0<mflorea>\u00a0has joined #xwiki  \n10:05\u00a0<kaisen>\u00a0has joined #xwiki  \n10:19\u00a0<Lyes>\u00a0has joined #xwiki  \n10:19\u00a0<vmassol>\u00a0@Lyes: good morning  \n10:19\u00a0<vmassol>\u00a0I'm starting to work on the implementation of MailSenderConfiguration this morning  \n10:19\u00a0<Lyes>\u00a0@Vincent: Good morning  \n10:19\u00a0<vmassol>\u00a0is that ok?  \n10:20\u00a0<vmassol>\u00a0what's your plan on your side?  \n10:23\u00a0<Lyes>\u00a0i planned to work on \u00a0\u00a0MimeMessageFactory and SessionFactory  \n10:23\u00a0<vmassol>\u00a0ok good choice they are simple :)  \n10:24\u00a0<vmassol>\u00a0the harder one is going to be MimeBodyPartFactory  \n10:24\u00a0<vmassol>\u00a0(but not that hard ;))  \n10:25\u00a0<Lyes>\u00a0yes ;)  \n10:35\u00a0<Lyes>\u00a0@Vincent: For MimeMessage message = messageFactory.create(to, subject, session); this is the \"from\" instead of \"to\" ?  \n10:35\u00a0<vmassol>\u00a0@Lyes nope  \n10:35\u00a0<vmassol>\u00a0it's \"to\"  \n10:36\u00a0<vmassol>\u00a0from is defined in the Session  \n10:36\u00a0<vmassol>\u00a0and taken from the configuration  \n10:36\u00a0<vmassol>\u00a0now  \n10:37\u00a0<vmassol>\u00a0we could also have a signature that takes a \"from\" when the user wants to override it, would need to decide where to place it  \n10:37\u00a0<vmassol>\u00a0but FTM we don't need it  \n10:37\u00a0<Lyes>\u00a0ok  \n10:37\u00a0<vmassol>\u00a0\"from\" is a wiki configuration  \n10:37\u00a0<vmassol>\u00a0it's the from from the wiki  \n10:49\u00a0<DarkKnightCZ>\u00a0has quit  \n10:50\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n10:57\u00a0<webczat>\u00a0has joined #xwiki  \n10:58\u00a0<webczat>\u00a0Hello, where can I find definitions of default object classes of xwiki and related code?  \n10:58\u00a0<vmassol>\u00a0webczat: you mean source code or doc?  \n10:58\u00a0<vmassol>\u00a0source code it's in platform oldcore  \n10:59\u00a0<vmassol>\u00a0com.xpn.xwiki.objects  \n10:59\u00a0<vmassol>\u00a0you can check that in the SRD actually  \n10:59\u00a0<vmassol>\u00a0hmm maybe not  \n10:59\u00a0<vmassol>\u00a0in javadoc  \n10:59\u00a0<vmassol>\u00a0or in source code  \n11:00\u00a0<vmassol>\u00a0in the dev guide there must be some info too  \n11:00\u00a0<vmassol>\u00a0http://platform.xwiki.org/xwiki/bin/view/DevGuide/DataModel  \n11:03\u00a0<webczat>\u00a0I meant the code of XWikiUsers class, that is not there.  \n11:04\u00a0<vmassol>\u00a0the XWikiUsers class is a page in your wiki  \n11:04\u00a0<vmassol>\u00a0\\*is defined in a page in your wiki  \n11:04\u00a0<vmassol>\u00a0XWiki.XWikiUsers  \n11:04\u00a0<webczat>\u00a0But this page comes from somewhere  \n11:04\u00a0<vmassol>\u00a0it's created automatically at startup if it doesn't exist  \n11:05\u00a0<webczat>\u00a0I do not currently have xwiki installed.  \n11:05\u00a0<vmassol>\u00a0what's your question? :)  \n11:05\u00a0<vmassol>\u00a0you want to see the code that generates this page at startup?  \n11:06\u00a0<vmassol>\u00a0it's in WikiUserClassDocumentInitializer  \n11:06\u00a0<vmassol>\u00a0err no  \n11:06\u00a0<vmassol>\u00a0wrong class  \n11:06\u00a0<webczat>\u00a0Hmm, the actual thing I am trying to do is different: I have been told that when document change events are generated, passwords are given in plaintext. I'd like to see when they are hashed.  \n11:06\u00a0<vmassol>\u00a0XWikiUsersDocumentInitializer  \n11:07\u00a0<vmassol>\u00a0webczat: if you want to debug xwiki  \n11:07\u00a0<vmassol>\u00a0there's some info on this  \n11:07\u00a0<vmassol>\u00a0http://dev.xwiki.org/xwiki/bin/view/Community/Debugging  \n11:07\u00a0<vmassol>\u00a0that will allow you to see step by step what happens  \n11:07\u00a0<webczat>\u00a0I just want to read this from the code :)  \n11:08\u00a0<webczat>\u00a0I have the sources from git.  \n11:10\u00a0<cjd>\u00a0try searching for com/xpn/xwiki/objects and it should be one of the files inside of that directory if I recall correctly  \n11:11\u00a0<Lyes>\u00a0@Vincent: \u00a0https://javamail.java.net/nonav/docs/api/javax/mail/Session.html#getDefaultInstance(java.util.Properties, javax.mail.Authenticator) \u00a0is solution to use MimeMessage message = messageFactory.create(to, subject); \u00a0instead of MimeMessage message = messageFactory.create(to, subject, session);  \n11:11\u00a0<webczat>\u00a0There is a password class. But I don't think it has something to do with events and order of execution.  \n11:13\u00a0<cjd>\u00a0well.. you wanted to read the code, I think that's where it's hashed, your project is then to walk backwards from there to find if what you're interested in happens before or after  \n11:13\u00a0<cjd>\u00a0personally I'd use either a debugger or a whole lot of println() functions :)  \n11:14\u00a0<vmassol>\u00a0@Lyes indeed we could offer a signature that doesn't take a Session too but I think we need one that accepts a Session so that the user can configure the session if he need to  \n11:26\u00a0<lucaa>\u00a0has joined #xwiki  \n11:33\u00a0<gdelhumeau>\u00a0I'm going to lunch, back in 2h  \n11:35\u00a0<vmassol>\u00a0long lunch! don't eat too much :)  \n11:46\u00a0<polx>\u00a0has joined #xwiki  \n11:48\u00a0<polx>\u00a0has quit  \n11:49\u00a0<lynxt>\u00a0has joined #xwiki  \n11:50\u00a0<tillo>\u00a0has joined #xwiki  \n12:02\u00a0<evalica>\u00a0has quit  \n12:03\u00a0<vmassol>\u00a0@Lyes: done for the mail config implementation  \n12:03\u00a0<vmassol>\u00a0(I had to implement XWIKI-10406 to not introduce some technical debt ;))  \n12:26\u00a0<evalica>\u00a0has joined #xwiki  \n12:30\u00a0<tmortagne>\u00a0has joined #xwiki  \n12:53\u00a0<DarkKnightCZ>\u00a0has quit  \n12:55\u00a0<vmassol>\u00a0Lyes: you should use the XWiki code style  \n12:55\u00a0<vmassol>\u00a0we have config for eclipse and intellij  \n12:55\u00a0<Lyes>\u00a0go  \n12:55\u00a0<Lyes>\u00a0ok  \n12:56\u00a0<vmassol>\u00a0here: http://dev.xwiki.org/xwiki/bin/view/Community/CodeStyle  \n12:56\u00a0<vmassol>\u00a0copy paste: \u00a0\u00a0\u00a0\u00a0public static final String MAIL\\_SMTP\\_PASSWORD = \"mail.smtp.user\";  \n12:56\u00a0<vmassol>\u00a0ah you didn't notice it because you're missing tests  \n12:57\u00a0<vmassol>\u00a0your next step is to write the unit tests now (usually it's good to write them at the same time)  \n12:58\u00a0<Lyes>\u00a0ok  \n12:58\u00a0<vmassol>\u00a0I don't really understand/agree with:  \n12:58\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0/\\*\\*  \n12:58\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\\* @return the default configured {@link javax.mail.Session} object  \n12:58\u00a0<vmassol>\u00a0I don't think this is good  \n12:58\u00a0<vmassol>\u00a0and it has no value IMO  \n12:58\u00a0<vmassol>\u00a0if all you want is a default session then the user hsould use Session.getDefaultSession()  \n12:59\u00a0<vmassol>\u00a0....  \n13:00\u00a0<Lyes>\u00a0I add getDefaultSession to use messageFactory.create(to, subject)  \n13:00\u00a0<vmassol>\u00a0errr  \n13:00\u00a0<vmassol>\u00a0there's no relationship  \n13:00\u00a0<vmassol>\u00a0:)  \n13:01\u00a0<vmassol>\u00a0messageFactory is not there to create a session  \n13:01\u00a0<Lyes>\u00a0yes but we need session to create the MimeMessage  \n13:01\u00a0<vmassol>\u00a0and?  \n13:02\u00a0<vmassol>\u00a0ah I see  \n13:02\u00a0<vmassol>\u00a0I don't think it's needed  \n13:02\u00a0<vmassol>\u00a0I don't think MimeMessageFactory should depend on SessionFactory  \n13:02\u00a0<vmassol>\u00a0that's bad design IMO  \n13:03\u00a0<Lyes>\u00a0il only to get possiblite to create mimeMessage without create session manually  \n13:03\u00a0<vmassol>\u00a0you always need a session  \n13:03\u00a0<vmassol>\u00a0it's a bad design to hide it  \n13:08\u00a0<DarkKnightCZ>\u00a0has joined #xwiki  \n13:11\u00a0<DarkKnightCZ>\u00a0tmortagne: hi, when listening for xobject change event, how can i obtain that xobject? (since source is XWikiDocument)  \n13:11\u00a0<tmortagne>\u00a0DarkKnightCZ: by the way forgot to tell you the other day but there is actually event dedicated to comments  \n13:12\u00a0<DarkKnightCZ>\u00a0hehe  \n13:12\u00a0<tmortagne>\u00a0CommentAddedEvent/CommentDeletedEvent/CommentUpdatedEvent  \n13:12\u00a0<tmortagne>\u00a0should make things a bit easier  \n13:12\u00a0<tmortagne>\u00a0as for getting your question the event gives you the object reference  \n13:12\u00a0<tmortagne>\u00a0you can ask the object to the document using this reference  \n13:13\u00a0<tmortagne>\u00a0XWikiDocument#getXObject(EntityReference reference)  \n13:13\u00a0<DarkKnightCZ>\u00a0ok, will try that, thanks  \n13:18\u00a0<DarkKnightCZ>\u00a0textarea is LargeString?  \n13:19\u00a0<tmortagne>\u00a0yep  \n13:34\u00a0<andreic>\u00a0has quit  \n13:53\u00a0<DarkKnightCZ>\u00a0how exactly should i obtain that comment (or how should i instantiate entityreference)? getXObject returns only first occurrence (first comment) when i use DocumentReference (and i guess using that regexentityreference will do the same thing)  \n13:59\u00a0<tmortagne>\u00a0DarkKnightCZ: I was talking about object event which was your question, for comments you have the object id in the event  \n13:59\u00a0<tmortagne>\u00a0getIdentifier()  \n14:00\u00a0<tmortagne>\u00a0it's gives you a String but that's actually the object number (don't ask me why...)  \n14:01\u00a0<tmortagne>\u00a0you can then use getXObject(DocumentReference classReference, int nb) or getComments() I guess  \n14:01\u00a0<tmortagne>\u00a0(once you converter that id to int)  \n14:03\u00a0<DarkKnightCZ>\u00a0in which class is that getIdentifier() method?  \n14:03\u00a0<webczat>\u00a0How much care does it require to write the simple ui? :D explanation: I am blind. second explanation: I'm probably going to write a ldap export plugin/extension and wondering if I should give it the ui.  \n14:04\u00a0<webczat>\u00a0It's for my direct use.  \n14:04\u00a0<tmortagne>\u00a0DarkKnightCZ: as I said it's in the event  \n14:04\u00a0<tmortagne>\u00a0any of CommentAddedEvent/CommentDeletedEvent/CommentUpdatedEvent  \n14:05\u00a0<tmortagne>\u00a0AbstractCommentEvent to be precise  \n14:06\u00a0<tmortagne>\u00a0webczat: is a UI really required ? could be some setup in xwiki.cfg (you already have a lot of LDAP configuration in there)  \n14:06\u00a0<webczat>\u00a0It is not.  \n14:06\u00a0<DarkKnightCZ>\u00a0tmortagne: great, thanks  \n14:07\u00a0<tmortagne>\u00a0webczat: if you have you own setup you might want to first check if there is nothing you could reuse in xwiki.cfg LDAP authenticator section, I doubt you will be missing much  \n14:08\u00a0<webczat>\u00a0Or I could hardcode it, it is my use and my code so no problem probably. but all things like that require at least a wiki restart that takes some time, especially if it is not the only webapp in a container.  \n14:08\u00a0<tmortagne>\u00a0the LDAP properties can also be in the wiki  \n14:08\u00a0<tmortagne>\u00a0in XWikiPreference page  \n14:09\u00a0<webczat>\u00a0eeeee... why not?  \n14:09\u00a0<tmortagne>\u00a0there is http://extensions.xwiki.org/xwiki/bin/view/Extension/LDAP+Application for make it a bit easier than editing that page in object mode  \n14:09\u00a0<tmortagne>\u00a0s/for/to/  \n14:09\u00a0<webczat>\u00a0I'll see when writing it, but for now I have to config a directory.  \n14:10\u00a0<webczat>\u00a0Like ldap directory.  \n14:10\u00a0<tmortagne>\u00a0you can reuse com.xpn.xwiki.plugin.ldap.XWikiLDAPConfig to access this configuration (it looks at XWikiPreference and the fallback on xwiki.cfg)  \n14:10\u00a0<tmortagne>\u00a0s/the/then/  \n14:11\u00a0<tmortagne>\u00a0webczat: apache ds is great for testing  \n14:11\u00a0<webczat>\u00a0I'm trying to make few webapps like nexus/gerrit/etc to work together to manage my projects and I do not want users to require registration of few accounts one for each.  \n14:11\u00a0<tmortagne>\u00a0especially Apache Directory Studio  \n14:12\u00a0<tmortagne>\u00a0webczat: what's is missing in the standard LDAP authenticator ?  \n14:12\u00a0<webczat>\u00a0So it's a very personal/small-scale ldap usage.  \n14:12\u00a0<tmortagne>\u00a0XWiki -> LDAP sync ?  \n14:13\u00a0<webczat>\u00a0I am going to write this part. I will probably use xwiki db for auth because each account will be exported anyway, other apps will use ldap.  \n14:14\u00a0<tmortagne>\u00a0would probably be safer to use LDAP authenticator in XWiki too  \n14:14\u00a0<webczat>\u00a0Why? each change in the user triggers a sync.  \n14:14\u00a0<webczat>\u00a0Unless you mean inconsistencies when doing the reverse.  \n14:14\u00a0<tmortagne>\u00a0sure but you have to do the modification using XWiki, if you use LDAP auth you can modify the LDAP server directly or through another application too  \n14:15\u00a0<webczat>\u00a0Agreed.  \n14:15\u00a0<webczat>\u00a0I could save time and make my projects on github instead of making my own site but... :D  \n14:16\u00a0<Denis>\u00a0has quit  \n14:16\u00a0<tmortagne>\u00a0since you will have to put LDAP configuration in XWiki for the export it's not really much more work to use the LDAP auth  \n14:16\u00a0<webczat>\u00a0Do you recommend to write a plugin or a set of groovy classes?  \n14:17\u00a0<tmortagne>\u00a0for something like that I would write a java extension  \n14:17\u00a0<webczat>\u00a0So, component...  \n14:17\u00a0<tmortagne>\u00a0yes but you can write component in groovy :)  \n14:17\u00a0<webczat>\u00a0Actually it is just a set of event listeners. and one additional library like unbound ldap thing.  \n14:18\u00a0<tmortagne>\u00a0I just find it easier to maintain and test in a java/Maven project  \n14:18\u00a0<tmortagne>\u00a0you can even use the great apache ds embedded server for automated tests  \n14:19\u00a0<webczat>\u00a0I can if I;d like to write tests.  \n14:20\u00a0<webczat>\u00a0Does component installation also require an app restart?  \n14:20\u00a0<tmortagne>\u00a0not if you install it through extension manager  \n14:21\u00a0<tmortagne>\u00a0jar are injected in extensions classload and component registered without a restart  \n14:21\u00a0<tmortagne>\u00a0s/classload/classloader/  \n14:22\u00a0<tmortagne>\u00a0the easiest would be to publish your extension on extensions.xwiki.org I guess  \n14:22\u00a0<webczat>\u00a0I'm surprised no one has made such one, many php and java apps have builtin od module support for it, but some just don't.  \n14:24\u00a0<tmortagne>\u00a0never really had the need or our side but yes I agree that it's not really an exotic use case  \n14:25\u00a0<tmortagne>\u00a0another possibility is to propose a pull request for inclusion in the standard LDAP authenticator  \n14:25\u00a0<webczat>\u00a0It's often implemented, like drupal, joomla, liferay, not sure about mediawiki. so it's pretty common. :) xwiki would benefit from such support I think.  \n14:26\u00a0<webczat>\u00a0I believe that if I'll do that for myself, I'd go the component way.  \n14:28\u00a0<webczat>\u00a0If I'll decide to go another route then I'll not write it. :)  \n14:28\u00a0<webczat>\u00a0Anyway, I have to finish a directory setup and \u00a0go to read a book. :)  \n14:28\u00a0<cjd>\u00a0what is od?  \n14:28\u00a0<cjd>\u00a0sorry, late to the conversation  \n14:29\u00a0<webczat>\u00a0Those are my fingers hitting wrong letters.  \n14:29\u00a0<webczat>\u00a0cjd: And the only interesting thing in the conversation is \"ot\"? :D  \n14:30\u00a0<cjd>\u00a0err no actually I was wondering what the standard you're talking about it  \n14:30\u00a0<cjd>\u00a0\\*is  \n14:31\u00a0<webczat>\u00a0open tiger. :D:D  \n14:32\u00a0<cjd>\u00a0heh  \n14:32\u00a0<cjd>\u00a0I was just curious and thought I could cheat and not read the backscroll ;)  \n14:33\u00a0<tmortagne>\u00a0cjd: XWiki -> LDAP sync  \n14:34\u00a0<cjd>\u00a0aha, interesting thought  \n14:39\u00a0<tmortagne>\u00a0has quit  \n14:46\u00a0<vmassol>\u00a0@Lyes you've used mail.from. shouldn't it be mail.smtp.from instead?  \n14:46\u00a0<vmassol>\u00a0both exist but since we're sending mail I'm wondering which one we should use  \n14:49\u00a0<Lyes>\u00a0i use mail.from, but we should use mail.smtp.from IMO  \n14:49\u00a0<vmassol>\u00a0@Lyes did you copy it from the mail sender plugin ?  \n14:50\u00a0<Lyes>\u00a0nope  \n14:50\u00a0<vmassol>\u00a0what is mail sender plugin using?  \n14:51\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0properties.put(\"mail.smtp.from\", mailConfiguration.getFrom());  \n14:51\u00a0<vmassol>\u00a0so indeed, changing  \n14:51\u00a0<Lyes>\u00a0yes mail.smtp.from  \n14:52\u00a0<Lyes>\u00a0ok  \n14:52\u00a0<vmassol>\u00a0@Lyes I've fixed 2-3 bugs from your code too when removing the SessionFactory :  \n14:52\u00a0<vmassol>\u00a0:)  \n14:53\u00a0<vmassol>\u00a0committed  \n14:53\u00a0<tmortagne>\u00a0has joined #xwiki  \n14:55\u00a0<vmassol>\u00a0@Lyes I've added a XWikiAuthenticator class too  \n14:55\u00a0<Lyes>\u00a0yes i see  \n14:55\u00a0<vmassol>\u00a0I'll add an integration test now  \n14:56\u00a0<vmassol>\u00a0using greenmail  \n14:56\u00a0<cjd>\u00a0you can probably steal tech from the Invitation App  \n14:56\u00a0<cjd>\u00a0that uses a lot of greenmailing  \n14:56\u00a0<vmassol>\u00a0which stole it from some other code I wrote ;)  \n14:57\u00a0<vmassol>\u00a0thanks though  \n14:57\u00a0<cjd>\u00a0yeah, you came up with the idea of greenmail, I probably wrote a bunch of tools for it (but my memory is bad so maybe I didn't)  \n14:57\u00a0<cjd>\u00a0s/idea/you had code using it/  \n15:04\u00a0<tmortagne1>\u00a0has joined #xwiki  \n15:06\u00a0<DarkKnightCZ>\u00a0has left #xwiki  \n15:07\u00a0<tmortagne>\u00a0has quit  \n15:12\u00a0<tmortagne1>\u00a0has quit  \n15:12\u00a0<tmortagne>\u00a0has joined #xwiki  \n15:13\u00a0<evalica>\u00a0has quit  \n15:14\u00a0<Slashman>\u00a0has joined #xwiki  \n15:17\u00a0<tmortagne>\u00a0has quit  \n15:20\u00a0<vmassol>\u00a0has quit  \n15:23\u00a0<vmassol>\u00a0has joined #xwiki  \n15:27\u00a0<cjd>\u00a0hmm we have some broken links when using xwiki/jetty behind an https->http reverse proxy  \n15:30\u00a0<sdumitriu1>\u00a0has joined #xwiki  \n15:32\u00a0<vmassol>\u00a0@Lyes committed an integration test to 1) show how the xwiki mail api is supposed to be used \u00a02) serve to verify all will work fine end to end  \n15:34\u00a0<Lyes>\u00a0ok  \n15:59\u00a0<lucaa>\u00a0has quit  \n16:01\u00a0<msmeria>\u00a0has quit  \n16:06\u00a0<lucaa>\u00a0has joined #xwiki  \n16:19\u00a0<vmassol>\u00a0@Lyes and others: just updated the Java API portion at http://design.xwiki.org/xwiki/bin/view/Proposal/MailModule#HJavaAPI  \n16:19\u00a0<vmassol>\u00a0does the API look simple enough?  \n16:21\u00a0<Lyes>\u00a0yes  \n16:26\u00a0<tmortagne>\u00a0has joined #xwiki  \n16:31\u00a0<tmortagne>\u00a0has quit  \n16:32\u00a0<tmortagne>\u00a0has joined #xwiki  \n16:40\u00a0<vmassol>\u00a0@Lyes starting first impl of MimeBodyPartFactory  \n16:42\u00a0<Lyes>\u00a0i add unit test for MimeMessageFactory  \n16:44\u00a0<vmassol>\u00a0Lyes: reviewing it  \n16:44\u00a0<gdelhumeau>\u00a0I'll bb in 1h max  \n16:45\u00a0<vmassol>\u00a0hmm  \n16:45\u00a0<vmassol>\u00a0not good :)  \n16:45\u00a0<vmassol>\u00a0Lyes: MockitoComponentMockingRule<DefaultMailSenderConfiguration> mocker is not correct  \n16:45\u00a0<vmassol>\u00a0you're testing DefaultMimeMessageFactory  \n16:45\u00a0<vmassol>\u00a0not DefaultMailSenderConfiguration  \n16:46\u00a0<vmassol>\u00a0and you're retesting what is already tested  \n16:46\u00a0<Lyes>\u00a0yes but a need create session with config tu create mimemessage  \n16:46\u00a0<vmassol>\u00a0you need to mock the Session  \n16:46\u00a0<vmassol>\u00a0it's a unit test  \n16:46\u00a0<vmassol>\u00a0not an integration test  \n16:46\u00a0<vmassol>\u00a0in your test 99% of the code is duplicate  \n16:47\u00a0<vmassol>\u00a0of what is already tested in MailConfigurationTest  \n16:47\u00a0<vmassol>\u00a0\\*MailSenderConfigurationTest  \n16:47\u00a0<Lyes>\u00a0ok, i rewrite it  \n16:47\u00a0<vmassol>\u00a0and exception handling is NOT tested  \n16:47\u00a0<vmassol>\u00a0and badly written  \n16:47\u00a0<vmassol>\u00a0you need to rewrite that part too  \n16:48\u00a0<vmassol>\u00a0this should NEVER EVER be done:  \n16:48\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} catch (MessagingException e) {  \n16:48\u00a0<vmassol>\u00a0BTW  \n16:48\u00a0<tmortagne>\u00a0has quit  \n16:48\u00a0<vmassol>\u00a0why do we have a MimeMessageFactory  \n16:48\u00a0<vmassol>\u00a0?  \n16:48\u00a0<vmassol>\u00a0from the implementztion I see it's not needed  \n16:48\u00a0<tmortagne>\u00a0has joined #xwiki  \n16:49\u00a0<Lyes1>\u00a0has joined #xwiki  \n16:49\u00a0<vmassol>\u00a0it looks like just a helper  \n16:49\u00a0<vmassol>\u00a0it's also missing some constructor I believe if we want to keep it  \n16:50\u00a0<cjd>\u00a0Lyes1: there's this really nice utility in apache-commons which allows you to printStackTrace() but it outputs a String which you can then log or somehow show to the user  \n16:50\u00a0<vmassol>\u00a0so we could keep it but only as a helper (i.e. optional)  \n16:50\u00a0<vmassol>\u00a0cjd: not needed  \n16:50\u00a0<vmassol>\u00a0and btw the create message should throw an exception  \n16:50\u00a0<tmortagne1>\u00a0has joined #xwiki  \n16:50\u00a0<vmassol>\u00a0s/message/method  \n16:51\u00a0<cjd>\u00a0/nod  \n16:51\u00a0<Lyes>\u00a0has quit  \n16:53\u00a0<tmortagne>\u00a0has quit  \n16:58\u00a0<lucaa>\u00a0has quit  \n16:59\u00a0<Denis>\u00a0has joined #xwiki  \n17:00\u00a0<kaisen>\u00a0has quit  \n17:03\u00a0<vmassol>\u00a0@Lyes1: I'dl ike to remove MimeMessageFactory  \n17:03\u00a0<vmassol>\u00a0ok?  \n17:04\u00a0<Lyes1>\u00a0ok  \n17:04\u00a0<vmassol>\u00a0ok removing  \n17:06\u00a0<vmassol>\u00a0that removes all the bugs ;)  \n17:07\u00a0<vmassol>\u00a0done  \n17:09\u00a0<vmassol>\u00a0we make the api a bit more technical but our goal ATM is to stick with teh javamail ap  \n17:09\u00a0<vmassol>\u00a0\\*api  \n17:09\u00a0<vmassol>\u00a0later on, after we use it for a while, we may add helpers  \n17:10\u00a0<vmassol>\u00a0in the end our real added value vs javamail is configuration + body part impls  \n17:22\u00a0<vmassol>\u00a0has quit  \n17:24\u00a0<gdelhumeau>\u00a0back  \n17:30\u00a0<tmortagne>\u00a0has joined #xwiki  \n17:32\u00a0<tmortagne1>\u00a0has quit  \n17:32\u00a0<tmortagne1>\u00a0has joined #xwiki  \n17:35\u00a0<tmortagne>\u00a0has quit  \n17:39\u00a0<tmortagne1>\u00a0has quit  \n17:45\u00a0<tmortagne>\u00a0has joined #xwiki  \n18:14\u00a0<cjd>\u00a0has quit  \n18:17\u00a0<woshilapin>\u00a0has quit  \n18:19\u00a0<vmassol>\u00a0has joined #xwiki  \n18:44\u00a0<Denis>\u00a0has quit  \n18:52\u00a0<mflorea>\u00a0has quit  \n19:16\u00a0<gdelhumeau>\u00a0has quit  \n19:18\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n19:24\u00a0<KermitTheFragger>\u00a0has quit  \n19:31\u00a0<Denis>\u00a0has joined #xwiki  \n19:34\u00a0<gdelhumeau>\u00a0has quit  \n19:46\u00a0<abusenius>\u00a0has joined #xwiki  \n20:04\u00a0<mflorea>\u00a0has joined #xwiki  \n20:31\u00a0<Lyes1>\u00a0has quit  \n20:35\u00a0<tmortagne>\u00a0has quit  \n21:55\u00a0<aboutGod>\u00a0has joined #xwiki  \n22:00\u00a0<aboutGod>\u00a0has left #xwiki  \n22:06\u00a0<mflorea>\u00a0has quit  \n23:11\u00a0<sdumitriu1>\u00a0has quit  \n23:11\u00a0<sdumitriu1>\u00a0has joined #xwiki  \n23:12\u00a0<DuFFo>\u00a0has quit  \n23:14\u00a0<DuFFo>\u00a0has joined #xwiki  \n23:15\u00a0<Lyes>\u00a0has joined #xwiki\n"}