{"id": "dev:IRC.xwikiArchive20130515", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20130515", "title": "IRC Archive for channel #xwiki on 15 May 2013 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<jvelo1>\u00a0has quit  \n00:42\u00a0<abusenius\\_>\u00a0has quit  \n01:58\u00a0<jvelo>\u00a0has joined #xwiki  \n03:45\u00a0<jvelo>\u00a0has quit  \n04:30\u00a0<Denis1>\u00a0has joined #xwiki  \n05:51\u00a0<Denis1>\u00a0has quit  \n07:00\u00a0<SvenDowideit\\_>\u00a0has quit  \n07:00\u00a0<Lamium1>\u00a0has quit  \n07:00\u00a0<kstuart>\u00a0has quit  \n07:00\u00a0<sburjan`>\u00a0has quit  \n07:00\u00a0<tekzilla>\u00a0has quit  \n07:00\u00a0<sdumitriu>\u00a0has quit  \n07:00\u00a0<tillo>\u00a0has quit  \n07:00\u00a0<ekarlso->\u00a0has quit  \n07:00\u00a0<bouquetf1>\u00a0has quit  \n07:00\u00a0<lynxt>\u00a0has quit  \n07:00\u00a0<npm\\_>\u00a0has quit  \n07:03\u00a0<npm\\_>\u00a0has joined #xwiki  \n07:03\u00a0<kstuart>\u00a0has joined #xwiki  \n07:03\u00a0<sdumitriu>\u00a0has joined #xwiki  \n07:03\u00a0<SvenDowideit\\_>\u00a0has joined #xwiki  \n07:03\u00a0<sburjan`>\u00a0has joined #xwiki  \n07:03\u00a0<tillo>\u00a0has joined #xwiki  \n07:03\u00a0<kstuart>\u00a0has quit  \n07:03\u00a0<kstuart>\u00a0has joined #xwiki  \n07:31\u00a0<dirk\\_schmitt>\u00a0has joined #xwiki  \n08:08\u00a0<mflorea>\u00a0has joined #xwiki  \n08:14\u00a0<kstuart>\u00a0has quit  \n08:14\u00a0<kstuart>\u00a0has joined #xwiki  \n08:15\u00a0<mflorea1>\u00a0has joined #xwiki  \n08:16\u00a0<msmeria>\u00a0has joined #xwiki  \n08:16\u00a0<qwebirc27617>\u00a0has joined #xwiki  \n08:16\u00a0<mflorea>\u00a0has quit  \n08:20\u00a0<vmassol>\u00a0has joined #xwiki  \n08:20\u00a0<mflorea1>\u00a0has quit  \n08:21\u00a0<vmassol>\u00a0has quit  \n08:35\u00a0<qwebirc27617>\u00a0has quit  \n08:36\u00a0<Denis>\u00a0has joined #xwiki  \n08:37\u00a0<qwebirc27617>\u00a0has joined #xwiki  \n08:44\u00a0<qwebirc27617>\u00a0Hello, I'd like to ask a question. How is it with support AD and bug when was create duplicate username for one ldap identity? I cannot find solution. Could you please get me link to solution?  \n08:45\u00a0<mflorea>\u00a0has joined #xwiki  \n08:45\u00a0<sdumitriu>\u00a0has quit  \n08:46\u00a0<sdumitriu>\u00a0has joined #xwiki  \n09:10\u00a0<tmortagne>\u00a0has joined #xwiki  \n09:26\u00a0<dirk\\_schmitt>\u00a0has quit  \n09:38\u00a0<vmassol>\u00a0has joined #xwiki  \n09:52\u00a0<sburjan>\u00a0has joined #xwiki  \n10:43\u00a0<tdelafosse>\u00a0has joined #xwiki  \n10:52\u00a0<gdelhumeau>\u00a0has joined #xwiki  \n11:05\u00a0<Slashman>\u00a0has joined #xwiki  \n11:26\u00a0<vmassol>\u00a0has quit  \n11:27\u00a0<vmassol>\u00a0has joined #xwiki  \n11:45\u00a0<vmassol>\u00a0has quit  \n12:07\u00a0<qwebirc27617>\u00a0has quit  \n12:07\u00a0<qwebirc27617>\u00a0has joined #xwiki  \n12:15\u00a0<npm\\_\\_>\u00a0has joined #xwiki  \n12:15\u00a0<npm\\_>\u00a0has quit  \n12:15\u00a0<vmassol>\u00a0has joined #xwiki  \n12:30\u00a0<vmassol>\u00a0has quit  \n13:09\u00a0<vmassol>\u00a0has joined #xwiki  \n13:10\u00a0<mflorea>\u00a0has quit  \n13:23\u00a0<vmassol>\u00a0has quit  \n13:28\u00a0<Denis>\u00a0has quit  \n13:36\u00a0<evalica>\u00a0has joined #xwiki  \n13:41\u00a0<bouquetf1>\u00a0is now known as <bouquetf>  \n13:56\u00a0<Denis>\u00a0has joined #xwiki  \n14:03\u00a0<vmassol>\u00a0has joined #xwiki  \n14:07\u00a0<mflorea>\u00a0has joined #xwiki  \n14:13\u00a0<GuillaumeF>\u00a0has joined #xwiki  \n14:26\u00a0<vmassol>\u00a0creating repo on conttrib for alex  \n14:51\u00a0<jvelo>\u00a0has joined #xwiki  \n14:51\u00a0<jvelo>\u00a0hi friends  \n14:52\u00a0<jvelo>\u00a0I have a question regarding component testing. I'm trying to figure out how to have the CM not being mocked in a mockito component test  \n14:53\u00a0<jvelo>\u00a0I've tried to add CM.class to ComponentList, but it does not work  \n14:53\u00a0<jvelo>\u00a0(ping vmassol )  \n14:53\u00a0<vmassol>\u00a0hi jvelo  \n14:53\u00a0<vmassol>\u00a0you're using \u00a0MockitoComponentMockingRule ?  \n14:53\u00a0<jvelo>\u00a0hi  \n14:54\u00a0<jvelo>\u00a0yes  \n14:54\u00a0<vmassol>\u00a0add it as an exclusion  \n14:54\u00a0<vmassol>\u00a0in the MockitoComponentMockingRule you have a signature for listing exclusions  \n14:55\u00a0<jvelo>\u00a0that's different from ComponentList ?  \n14:55\u00a0<vmassol>\u00a0you should check the javadoc for MockitoComponentMockingRule  \n14:55\u00a0<vmassol>\u00a0ComponentList will be used to decide what components are registered against the CM  \n14:55\u00a0<jvelo>\u00a0ok I see  \n14:55\u00a0<SvenDowideit\\_>\u00a0has quit  \n14:55\u00a0<SvenDowideit\\_>\u00a0has joined #xwiki  \n14:56\u00a0<SvenDowideit\\_>\u00a0is now known as <SvenDowideit>  \n14:56\u00a0<vmassol>\u00a0now if your code has an @Inject on any component  \n14:56\u00a0<vmassol>\u00a0that component will still be mocked  \n14:56\u00a0<vmassol>\u00a0unless you exclude it in the MockitoComponentMockingRule constructor  \n14:56\u00a0<jvelo>\u00a0ok  \n14:56\u00a0<jvelo>\u00a0it can only take implementations, right ?  \n14:57\u00a0<jvelo>\u00a0not roles  \n14:57\u00a0<vmassol>\u00a0yes impls  \n14:58\u00a0<jvelo>\u00a0that's strange no ?  \n14:58\u00a0<vmassol>\u00a0so  \n14:58\u00a0<vmassol>\u00a0you'll need to exclude it but you'll also need to make it available through @ComponentList ;)  \n14:58\u00a0<vmassol>\u00a0as otherwise no impl will be found for it  \n14:59\u00a0<jvelo>\u00a0because you get injected roles, and you have to exclude impl  \n14:59\u00a0<tmortagne>\u00a0the MockitoComponentMockingRule constructor takes roles, not implementation AFAIK  \n14:59\u00a0<tmortagne>\u00a0that's @ComponentList which takes implementations  \n14:59\u00a0<vmassol>\u00a0checking sources  \n14:59\u00a0<vmassol>\u00a0because in the source the variable is named excludedComponentImplementationDependencies  \n14:59\u00a0<jvelo>\u00a0tmortagne: does not seem so  \n14:59\u00a0<jvelo>\u00a0from the javadoc  \n14:59\u00a0<tmortagne>\u00a0I saw examples with roles when I had the same issue  \n15:00\u00a0<vmassol>\u00a0but indeed I see:  \n15:00\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (!this.excludedComponentImplementationDependencies.contains(roleTypeClass)  \n15:00\u00a0<vmassol>\u00a0which means I need to fix the variable name  \n15:00\u00a0<tmortagne>\u00a0\u00a0\u00a0\u00a0\u00a0@Rule  \n15:00\u00a0<tmortagne>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0new MockitoComponentMockingRule<DefaultLoggerManager>(DefaultLoggerManager.class,  \n15:00\u00a0<tmortagne>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Arrays.asList(ObservationManager.class));  \n15:00\u00a0<tmortagne>\u00a0for example  \n15:00\u00a0<jvelo>\u00a0hmm it actually works with roles  \n15:01\u00a0<jvelo>\u00a0so some naming is wrong I guess  \n15:01\u00a0<tmortagne>\u00a0vmassol: would we improve it a bit to make @ComponentList enough ? I don't really see the point in having both actually  \n15:01\u00a0<vmassol>\u00a0yep i'll fix it  \n15:01\u00a0<vmassol>\u00a0you could manually mock it  \n15:01\u00a0<tmortagne>\u00a0s/would/should/  \n15:01\u00a0<vmassol>\u00a0but yes not a lot of use cases probably  \n15:02\u00a0<jvelo>\u00a0thanks for the info, works great with CM.class in ComponentList + in excl.  \n15:02\u00a0<tmortagne>\u00a0even so you just need to mock it before lookupping the component  \n15:02\u00a0<vmassol>\u00a0would need to think more about it tmortagne to see which one should imply the other  \n15:02\u00a0<tmortagne>\u00a0also CM is a bit of a special case IMO since it supposed to put itself in there so we should not need to exclude it for it not not me mocked  \n15:03\u00a0<tmortagne>\u00a0s/not not me mocked/to not be mocked/  \n15:03\u00a0<jvelo>\u00a0yes CM could be not mocked by default  \n15:05\u00a0<jvelo>\u00a0it's a great testing environment BTW guys  \n15:05\u00a0<jvelo>\u00a0much easier to work with than the previous one  \n15:05\u00a0<tmortagne>\u00a0yep these minor issue put aside testing with this is great  \n15:14\u00a0<vmassol>\u00a0jvelo: I've updated the doc at http://dev.xwiki.org/xwiki/bin/view/Community/Testing#HJavaUnitTesting  \n15:42\u00a0<jvelo>\u00a0vmassol: thanks  \n16:14\u00a0<alexch>\u00a0has joined #xwiki  \n16:20\u00a0<msmeria>\u00a0has quit  \n16:36\u00a0<alexch>\u00a0has quit  \n16:36\u00a0<sburjan>\u00a0has quit  \n16:43\u00a0<mflorea>\u00a0has quit  \n16:52\u00a0<Denis>\u00a0has quit  \n17:10\u00a0<vmassol>\u00a0tmortagne: I've commented on XCOMMONS-399  \n17:11\u00a0<vmassol>\u00a0I'm surprised that your change works  \n17:11\u00a0<vmassol>\u00a0because I know several tests that tell the CM to return mocks  \n17:11\u00a0<tmortagne>\u00a0vmassol: I don't really see what your comment has to do with my change  \n17:12\u00a0<vmassol>\u00a0I don't know if it has to do about your change but it has to do about the issue description :)  \n17:12\u00a0<tmortagne>\u00a0XCOMMONS-399 is about injecting the CM itself instead of creating a mocked ComponentManager  \n17:12\u00a0<vmassol>\u00a0yep and I don't like it  \n17:12\u00a0<vmassol>\u00a0it's used at several places  \n17:13\u00a0<tmortagne>\u00a0a mocked ComponentManager ?  \n17:13\u00a0<vmassol>\u00a0yes  \n17:13\u00a0<tmortagne>\u00a0in your comment you are talking about mocked components  \n17:13\u00a0<tmortagne>\u00a0non mocked ComponentManager  \n17:13\u00a0<tmortagne>\u00a0s/non/not/  \n17:13\u00a0<vmassol>\u00a0the mocked CM will return mock instances of other components  \n17:13\u00a0<vmassol>\u00a0it should not use the real instances  \n17:13\u00a0<vmassol>\u00a0(since they're not there)  \n17:14\u00a0<vmassol>\u00a0basically there are 2 choices:  \n17:14\u00a0<vmassol>\u00a0- option 1: force the registration of mocked components so that the real CM can return mocked instances  \n17:14\u00a0<vmassol>\u00a0(this is what you've done basically)  \n17:14\u00a0<vmassol>\u00a0- option 2 (what was there before): control what the CM returns by mocking it  \n17:15\u00a0<vmassol>\u00a0what I'm saying is that option 1 is a change from what we've been doing and it needs to modify some unit tests  \n17:15\u00a0<vmassol>\u00a0(existing unit tests)  \n17:16\u00a0<tmortagne>\u00a0ok you did not understood what I did here  \n17:16\u00a0<tmortagne>\u00a0let me rephrase the title  \n17:16\u00a0<tmortagne>\u00a0look at the description  \n17:16\u00a0<tmortagne>\u00a0here  \n17:17\u00a0<tmortagne>\u00a0I did what we talked about with jvelo  \n17:17\u00a0<vmassol>\u00a0we mentioned 2 things with jvelo  \n17:17\u00a0<tmortagne>\u00a0yes  \n17:17\u00a0<tmortagne>\u00a0I did the second one  \n17:17\u00a0<vmassol>\u00a0one had to do with @ComponentList and exclusions  \n17:18\u00a0<vmassol>\u00a0and the other was about not mocking @Inject CM  \n17:18\u00a0<tmortagne>\u00a0(03:02:46 PM) tmortagne: also CM is a bit of a special case IMO since it supposed to put itself in there so we should not need to exclude it for it not not me mocked  \n17:18\u00a0<tmortagne>\u00a0(03:03:12 PM) tmortagne: s/not not me mocked/to not be mocked/  \n17:18\u00a0<tmortagne>\u00a0(03:03:27 PM) jvelo: yes CM could be not mocked by default  \n17:19\u00a0<vmassol>\u00a0for example here's what I see in one unit test:  \n17:19\u00a0<tmortagne>\u00a0and thats what I did, CM is properly injecting itself as it supposed to  \n17:19\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ComponentManager componentManager = mocker.getInstance(ComponentManager.class);  \n17:19\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when(componentManager.getInstance(BlockRenderer.class, \"xhtml/1.0\")).thenReturn(xhtmlRenderer);  \n17:19\u00a0<vmassol>\u00a0this will still work with your change?  \n17:19\u00a0<tmortagne>\u00a0why not ?  \n17:19\u00a0<tmortagne>\u00a0in this test componentManager == mocker  \n17:20\u00a0<tmortagne>\u00a0actualy no  \n17:20\u00a0<tmortagne>\u00a0I did not worked on that  \n17:20\u00a0<tmortagne>\u00a0I worked on injection  \n17:20\u00a0<tmortagne>\u00a0this is lookup  \n17:20\u00a0<tmortagne>\u00a0nothing to do here  \n17:21\u00a0<tmortagne>\u00a0again the point is to exclude ComponentManager from dependencies to mock  \n17:22\u00a0<vmassol>\u00a0yes I get this, you'll get the real CM instead of a mock one  \n17:22\u00a0<vmassol>\u00a0so if you use @ComponentList, you'll get to see the components added from there  \n17:22\u00a0<vmassol>\u00a0from that injected CM  \n17:23\u00a0<tmortagne>\u00a0yes since it's going to be the same CM  \n17:24\u00a0<vmassol>\u00a0so in:  \n17:24\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ComponentManager componentManager = mocker.getInstance(ComponentManager.class);  \n17:24\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when(componentManager.getInstance(BlockRenderer.class, \"xhtml/1.0\")).thenReturn(xhtmlRenderer);  \n17:24\u00a0<vmassol>\u00a0componentManager == mocker  \n17:25\u00a0<tmortagne>\u00a0I don't know, what I did does not have anything to do with that  \n17:25\u00a0<tmortagne>\u00a0this is not injection  \n17:25\u00a0<vmassol>\u00a0it's the same  \n17:25\u00a0<tmortagne>\u00a0of course not  \n17:25\u00a0<vmassol>\u00a0I don't see how it'll continue to work  \n17:25\u00a0<tmortagne>\u00a0what I did is preventing to create a mock when taking care of the tested component  \n17:25\u00a0<vmassol>\u00a0yep exactly  \n17:25\u00a0<tmortagne>\u00a0it's not the same  \n17:25\u00a0<vmassol>\u00a0so you no longer get a mock CM  \n17:26\u00a0<vmassol>\u00a0but the real one  \n17:26\u00a0<vmassol>\u00a0thus the when() should fail  \n17:26\u00a0<tmortagne>\u00a0in the component  \n17:26\u00a0<vmassol>\u00a0(since it can work only on a mock)  \n17:26\u00a0<tmortagne>\u00a0in the mocked component  \n17:26\u00a0<tmortagne>\u00a0not in the test  \n17:26\u00a0<tmortagne>\u00a0again it not not have anything to do with getInstance  \n17:26\u00a0<vmassol>\u00a0getinstance will jsut return what's registered in the CM  \n17:27\u00a0<vmassol>\u00a0and before a mock CM was registered in the CM (mocker)  \n17:27\u00a0<tmortagne>\u00a0if you registered one probably  \n17:27\u00a0<tmortagne>\u00a0I don't know you test  \n17:28\u00a0<GuillaumeF>\u00a0has quit  \n17:28\u00a0<vmassol>\u00a0woudl be nice to explain why you need this in the jira issue  \n17:29\u00a0<vmassol>\u00a0it's a good idea to not talk about the implementation but about the need in a jira desciption btw  \n17:29\u00a0<tmortagne>\u00a0vmassol: I already explain that I want to component to get its CM instead of some empty mock  \n17:29\u00a0<vmassol>\u00a0and?  \n17:29\u00a0<vmassol>\u00a0why?  \n17:29\u00a0<vmassol>\u00a0you already have access to the real CM  \n17:30\u00a0<vmassol>\u00a0that's mocker  \n17:30\u00a0<vmassol>\u00a0(if you need it)  \n17:30\u00a0<tmortagne>\u00a0it's not for the test, it's for the component  \n17:30\u00a0<vmassol>\u00a0now if you want to control what the code executes you need a mock  \n17:30\u00a0<tmortagne>\u00a0the component will expect to et it's CM  \n17:30\u00a0<vmassol>\u00a0yes but that's bad  \n17:30\u00a0<tmortagne>\u00a0no it's not bad  \n17:30\u00a0<vmassol>\u00a0because you don't control anyomre what gets executed  \n17:30\u00a0<tmortagne>\u00a0you pout component in ComponentList so that the component can use them  \n17:31\u00a0<tmortagne>\u00a0and the component will just crash because it been injected with en empty CM  \n17:31\u00a0<tmortagne>\u00a0that is what is bad  \n17:31\u00a0<vmassol>\u00a0ok now I undertsand the use case, this should be the descirption of the issue :)  \n17:31\u00a0<vmassol>\u00a0(and the title)  \n17:32\u00a0<vmassol>\u00a0but I still think  \n17:32\u00a0<vmassol>\u00a0that your change broke several tests IMO  \n17:32\u00a0<vmassol>\u00a0that need to be rewritten  \n17:32\u00a0<vmassol>\u00a0could you try running DefaultOfficeViewerScriptServiceTest  \n17:32\u00a0<vmassol>\u00a0(fails for me in my IDE)  \n17:33\u00a0<tmortagne>\u00a0vmassol: jenkins does not have any failing test so no there does not seems to be any test  \n17:34\u00a0<vmassol>\u00a0the thing is i t breaks exactly where I tihnk it shoudl break  \n17:35\u00a0<vmassol>\u00a0again  \n17:35\u00a0<vmassol>\u00a0here are the lines:  \n17:35\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0BlockRenderer xhtmlRenderer = mock(BlockRenderer.class);  \n17:35\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0when(componentManager.getInstance(BlockRenderer.class, \"xhtml/1.0\")).thenReturn(xhtmlRenderer);  \n17:35\u00a0<vmassol>\u00a0I still don't see how this can work...  \n17:36\u00a0<tmortagne>\u00a0and I don't see how this is related to my change only with these lines, let me look at the complete test  \n17:36\u00a0<vmassol>\u00a0for this to work, mocker.getInstance needs to return a mock  \n17:38\u00a0<tmortagne>\u00a0ook so what you forgot to say is that MockitoComponentMockingRule take a component that has an injected CM  \n17:38\u00a0<tmortagne>\u00a0this is the main part  \n17:38\u00a0<tmortagne>\u00a0if it did not had injected CM it would not change anything to the lines you listed  \n17:39\u00a0<vmassol>\u00a0ofc but we're talking only about that :)  \n17:39\u00a0<vmassol>\u00a0@Inject CM  \n17:39\u00a0<vmassol>\u00a0that's the purpose of your change  \n17:40\u00a0<vmassol>\u00a0so with your change the way to rewrite this test now is to register a mock component against the real CM  \n17:40\u00a0<vmassol>\u00a0(whereas before you did not need to register anything, you simply told mockito what to return)  \n17:40\u00a0<vmassol>\u00a0again I'm not against it but it's change on how we write unit tests  \n17:40\u00a0<vmassol>\u00a0and the tests needs to be modified  \n17:41\u00a0<tmortagne>\u00a0looks like there is an issue with Jenkins then  \n17:42\u00a0<tmortagne>\u00a0according to jenkins commons hasn't been built in 2 days it seems  \n17:43\u00a0<vmassol>\u00a0you also need to modify the documentation  \n17:44\u00a0<vmassol>\u00a0(to explain that CM is not mocked)  \n17:48\u00a0<GuillaumeF>\u00a0has joined #xwiki  \n17:48\u00a0<tmortagne>\u00a0jenkins does not seems to react to github anymore, platform has the same issue  \n17:49\u00a0<tmortagne>\u00a0looks like the issue started 7h ago  \n17:49\u00a0<tmortagne>\u00a0forcing commons, to rebuild everything  \n17:54\u00a0<vmassol>\u00a0tmortagne: I think there's a bug in XWiki#getRequestWikiName  \n17:54\u00a0<vmassol>\u00a0if you have: http://localhost/xwiki/wiki/someWiki/view/Main/WebHome  \n17:54\u00a0<vmassol>\u00a0shouldn't the wiki be \"somewiki\"?  \n17:55\u00a0<vmassol>\u00a0it's going to be \"someWiki\" right now (if there's no wiki descriptor)  \n17:55\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Use the name from the subdomain  \n17:55\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0wikiName = servername;  \n17:55\u00a0<vmassol>\u00a0should be  \n17:55\u00a0<vmassol>\u00a0wikiName = servername.lowercase();  \n17:56\u00a0<vmassol>\u00a0(toLowerCase())  \n17:56\u00a0<vmassol>\u00a0right?  \n17:57\u00a0<tmortagne>\u00a0checking something  \n18:00\u00a0<tmortagne>\u00a0in theory wiki id should always be lower case in practice  \n18:00\u00a0<tmortagne>\u00a0through the UI  \n18:01\u00a0<tmortagne>\u00a0in practice we have very few places forcing lower cases  \n18:02\u00a0<vmassol>\u00a0ok I'll ensure it's lowercased in the url module  \n18:02\u00a0<tmortagne>\u00a0from what I can see in the code it's possible to create a wiki database with upper case, depending if the database supports it  \n18:03\u00a0<vmassol>\u00a0my point is that some places force lowercase and some don't so we need consistency  \n18:03\u00a0<tmortagne>\u00a0well right now only the UI force lower case  \n18:03\u00a0<vmassol>\u00a0not just the ui  \n18:04\u00a0<vmassol>\u00a0for example  \n18:04\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Use the name from the located wiki descriptor  \n18:04\u00a0<vmassol>\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0wikiName = StringUtils.removeStart(wikiDefinition.getName(), \"XWikiServer\").toLowerCase();  \n18:04\u00a0<tmortagne>\u00a0I mean when dealing with the real database  \n18:05\u00a0<tmortagne>\u00a0XWiki#setDatabase or hibernatestore never touch the database name  \n18:05\u00a0<tmortagne>\u00a0not on lower/upper case at least  \n18:05\u00a0<tmortagne>\u00a0should probably be fixed too  \n18:06\u00a0<tmortagne>\u00a0at least in XWikiContext#setDatabase  \n18:09\u00a0<qwebirc27617>\u00a0has quit  \n18:12\u00a0<Slashman>\u00a0has quit  \n18:29\u00a0<Slashman>\u00a0has joined #xwiki  \n18:51\u00a0<vmassol>\u00a0has quit  \n18:52\u00a0<tmortagne>\u00a0has quit  \n18:55\u00a0<evalica>\u00a0has quit  \n18:56\u00a0<evalica>\u00a0has joined #xwiki  \n19:08\u00a0<evalica>\u00a0has quit  \n19:11\u00a0<ram\\_>\u00a0has joined #xwiki  \n19:12\u00a0<ram\\_>\u00a0hi  \n19:12\u00a0<Denis>\u00a0has joined #xwiki  \n19:13\u00a0<ram\\_>\u00a0somebody's there?  \n19:13\u00a0<ram\\_>\u00a0jlllklkkkl  \n19:19\u00a0<ram\\_>\u00a0has left #xwiki  \n19:24\u00a0<tdelafosse>\u00a0has quit  \n19:27\u00a0<gdelhumeau>\u00a0has quit  \n19:28\u00a0<abusenius\\_>\u00a0has joined #xwiki  \n19:45\u00a0<GuillaumeF>\u00a0has quit  \n20:06\u00a0<sdumitriu1>\u00a0has joined #xwiki  \n20:34\u00a0<sdumitriu1>\u00a0has quit  \n20:38\u00a0<sdumitriu1>\u00a0has joined #xwiki  \n20:48\u00a0<Denis>\u00a0has quit  \n21:00\u00a0<vmassol>\u00a0has joined #xwiki  \n23:29\u00a0<vmassol>\u00a0has quit  \n23:45\u00a0<sdumitriu1>\u00a0has quit\n"}