{"id": "dev:IRC.xwikiArchive20170223", "url": "https://dev.xwiki.org/xwiki/bin/view/IRC/xwikiArchive20170223", "title": "IRC Archive for channel #xwiki on 23 February 2017 - XWiki", "collection": "Eval-Large", "mimetype": "text/markdown", "language": "en", "content": "\n<flyingpot>\u00a0has joined #xwiki  \n02:48\u00a0<flyingpot\\_>\u00a0has joined #xwiki  \n02:51\u00a0<flyingpot>\u00a0has quit  \n03:04\u00a0<flyingpot\\_>\u00a0has quit  \n06:48\u00a0<flyingpot>\u00a0has joined #xwiki  \n07:56\u00a0<vmassol>\u00a0Silicium: the groovy macro is installed by default  \n07:56\u00a0<vmassol>\u00a0you don't need to conect to the db  \n07:56\u00a0<vmassol>\u00a0the script I pointed to just uses the xwiki api  \n08:49\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n09:13\u00a0<msmeria>\u00a0has joined #xwiki  \n09:22\u00a0<acotiuga>\u00a0has joined #xwiki  \n09:22\u00a0<vmassol>\u00a0Good morning everyone  \n09:22\u00a0<acotiuga>\u00a0Good morning  \n09:22\u00a0<vmassol>\u00a0today is a Test Fixing Day (one week out of 2 we do a BFD and the other week a TFD) :)  \n09:22\u00a0<vmassol>\u00a0hi acotiuga  \n09:23\u00a0<vmassol>\u00a0what would be nice would be to fix some flickers, we have 12 ATM I think  \n09:23\u00a0<vmassol>\u00a0another idea is to move tests from enterprise to platform  \n09:24\u00a0<vmassol>\u00a0on my side this morning I'm working on the xwiki docker image and will do some testing stuff just after  \n09:27\u00a0<vmassol>\u00a0acotiuga: if you wish to verify number of invocations with mockito: http://static.javadoc.io/org.mockito/mockito-core/2.7.10/org/mockito/Mockito.html#4  \n09:28\u00a0<vmassol>\u00a0acotiuga: and if you wish some custom Answer: http://static.javadoc.io/org.mockito/mockito-core/2.7.10/org/mockito/Mockito.html#answer\\_stubs  \n09:28\u00a0<vmassol>\u00a0for ex to return some answer that depends on passed args  \n09:30\u00a0<acotiuga>\u00a0vmassol: thanks for anwering here to my question: I want to do this change on LocalizationScriptServiceTest, but I have some dificulties in turning https://github.com/xwiki/xwiki-platform/blob/a0b109e66b6894376035fe27b725f7a5148d359a/xwiki-platform-core/xwiki-platform-localization/xwiki-platform-localization-script/src/test/java/org/xwiki/localization/script/LocalizationScriptServiceTest.java#L59 into a mockito instruction. \u00a0Could anyone help me with some refer  \n09:30\u00a0<vmassol>\u00a0yw  \n09:34\u00a0<flyingpot>\u00a0has quit  \n09:39\u00a0<flyingpot>\u00a0has joined #xwiki  \n10:12\u00a0<gdelhumeau>\u00a0vmassol: hi  \n10:12\u00a0<gdelhumeau>\u00a0still thinking about the notification system  \n10:12\u00a0<gdelhumeau>\u00a0The system we are designed is not very good for applicationw written in Velocity  \n10:12\u00a0<gdelhumeau>\u00a0example: if the Forum Application wants to send a TopicCreatedEvent for example  \n10:13\u00a0<gdelhumeau>\u00a0it has to defined this class  \n10:13\u00a0<gdelhumeau>\u00a0so it require some java or groovy code  \n10:13\u00a0<gdelhumeau>\u00a0so it requires some java or groovy code  \n10:19\u00a0<flyingpot>\u00a0has quit  \n10:22\u00a0<evalica>\u00a0has joined #xwiki  \n10:24\u00a0<gdelhumeau>\u00a0With my first iteration, any script was able to send a basic notification with a Script Services  \n10:24\u00a0<gdelhumeau>\u00a0so we need to refine our design  \n10:25\u00a0<gdelhumeau>\u00a0(currently Forum App is 100% velocity)  \n10:44\u00a0<floflobel>\u00a0has joined #xwiki  \n10:48\u00a0<pbondoer[m]>\u00a0has joined #xwiki  \n10:57\u00a0<Enygma`>\u00a0gdelhumeau: then maybe it needs to define a script service for its custom events. Also, if a velocity app wants to sent events from a different application, maybe it should use that application`s script service. This way we would be ensuring that events are consistent and that apps don`t mix them up or misuse them.  \n10:58\u00a0<Enygma`>\u00a0not sure if we should encourage a generic $services.notifications script service.  \n11:01\u00a0<gdelhumeau>\u00a0Enygma: so you are saying that if a Velocity-based application wants to send notifications, it has to create a java dependencies with its own Event and Script Services  \n11:13\u00a0<Enygma`>\u00a0Only if it wants to define its own, custom, event. Otherwise, use the existing script services to trigger existing events. That would be one approach.  \n11:14\u00a0<Enygma`>\u00a0also, wiki components could be used to achieve that.  \n11:15\u00a0<flyingpot>\u00a0has joined #xwiki  \n11:15\u00a0<Enygma`>\u00a0if we really want, I guess we could have some generic events as well, more easily triggered from velocity, but IMO we should not make the java API more complex just for this use case  \n11:35\u00a0<Silicium>\u00a0vmassol: ahoy. i have to come back to the restore thing. In (your?) groovy script, i have to define the documents i want to restore. but my problem is, i dont even know the name of those documents. i just want to restore \\_everything\\_ deleted in a given timeframe  \n11:38\u00a0<Silicium>\u00a0ah there is another restore script :)  \n11:47\u00a0<flyingpot>\u00a0has quit  \n11:52\u00a0<flyingpot>\u00a0has joined #xwiki  \n11:59\u00a0<flyingpot>\u00a0has quit  \n12:00\u00a0<flyingpot>\u00a0has joined #xwiki  \n12:04\u00a0<flyingpot>\u00a0has quit  \n12:04\u00a0<flyingpot>\u00a0has joined #xwiki  \n12:08\u00a0<gdelhumeau>\u00a0Enygma: I think sending custom events will become a \"must-have\" for every extensions  \n12:08\u00a0<vmassol>\u00a0gdelhumeau: there are several ways to solve this  \n12:09\u00a0<vmassol>\u00a0one way is to have a SS API that takes a JSON input for example and create an Event class out of it  \n12:09\u00a0<vmassol>\u00a0(gtg)  \n12:16\u00a0<Silicium>\u00a0hmm, how can i open the script macro extension when i deleted all pages?  \n12:16\u00a0<Silicium>\u00a0i just want to execute the groovy script, can't be so hard  \n12:17\u00a0<Slashman>\u00a0has joined #xwiki  \n12:18\u00a0<martinus\\_\\_>\u00a0has quit  \n12:43\u00a0<vmassol>\u00a0Silicium: srry, I'm very busy today, lots of unexpected things happening here  \n12:44\u00a0<vmassol>\u00a0I hope someone elese can help you, otehrwise pop in tomorrow and I should be abel to help you more  \n12:44\u00a0<vmassol>\u00a0gtg  \n13:14\u00a0<martinus\\_\\_>\u00a0has joined #xwiki  \n13:30\u00a0<acotiuga>\u00a0The when() statement from Mockito throws an \u00a0\"The method when(T) in the type Mockito is not applicable for the arguments (void\" error when I'm trying to use some custom Answer. I didn't find on Google a helpful reference to fix it. Could anyone take a look on http://pastebin.com/8vf4ZLK5? Maybe there is something wrong that I'm doing?  \n13:31\u00a0<acotiuga>\u00a0This is the pastebin: http://pastebin.com/8vf4ZLK5 (without ? at the end). Thanks!  \n13:31\u00a0<vmassol>\u00a0yes  \n13:32\u00a0<vmassol>\u00a0you shouldn't use when() for void  \n13:32\u00a0<vmassol>\u00a0check the mockito doc  \n13:32\u00a0<vmassol>\u00a0the one I pointed to this morning  \n13:32\u00a0<vmassol>\u00a0there are plenty of nice an easy to read examples  \n13:32\u00a0<vmassol>\u00a0here: http://static.javadoc.io/org.mockito/mockito-core/2.7.11/org/mockito/Mockito.html  \n13:33\u00a0<vmassol>\u00a0ok I've checked it for you acotiuga  \n13:33\u00a0<vmassol>\u00a0see http://static.javadoc.io/org.mockito/mockito-core/2.7.11/org/mockito/Mockito.html#do\\_family\\_methods\\_stubs  \n13:34\u00a0<vmassol>\u00a0but generally you should read this do it has answers to all questions :)  \n13:34\u00a0<vmassol>\u00a0(so doAnswer() is what you need to be clear)  \n13:35\u00a0<acotiuga>\u00a0ok, thanks  \n14:02\u00a0<flyingpot>\u00a0has quit  \n14:58\u00a0<flyingpot>\u00a0has joined #xwiki  \n15:03\u00a0<flyingpot>\u00a0has quit  \n15:10\u00a0<evalica>\u00a0has quit  \n15:11\u00a0<gdelhumeau>\u00a0question: in our observation API  \n15:12\u00a0<gdelhumeau>\u00a0why do we pass optional data like this: https://github.com/xwiki/xwiki-commons/blob/be1ca2329b0c73b3fdfad45d8bd305f6da37ddd4/xwiki-commons-core/xwiki-commons-observation/xwiki-commons-observation-api/src/main/java/org/xwiki/observation/ObservationManager.java#L81-L81  \n15:12\u00a0<gdelhumeau>\u00a0instead of filling the Event with data ?  \n15:12\u00a0<gdelhumeau>\u00a0for example, I am wordering where I should put the audience of a notifcation  \n15:12\u00a0<evalica>\u00a0has joined #xwiki  \n15:12\u00a0<gdelhumeau>\u00a0inside the event itself? or as a parameter given to observationManager.notify()  \n15:13\u00a0<gdelhumeau>\u00a0there must be a reason behing this choice  \n15:14\u00a0<Enygma`>\u00a0I`m guessing the intention was to make the events module as generic as possible and not introduce any direct or indirect dependencies to concepts such as context or documents  \n15:14\u00a0<gdelhumeau>\u00a0it make sense for very generic event (if we have them)  \n15:15\u00a0<gdelhumeau>\u00a0but not for DocumentCreationEvent for example  \n15:15\u00a0<Enygma`>\u00a0also, the data, which in practice means XWikiContext is something you could pass inside the event when it was generated, but you can`t really serialize so that you deserialize back together with the event.  \n15:15\u00a0<gdelhumeau>\u00a0here the fields are used to do the filtering on events: https://github.com/xwiki/xwiki-platform/blob/feaa10136b4ac6c2557e68bba4e458f0f0f67b58/xwiki-platform-core/xwiki-platform-bridge/src/main/java/org/xwiki/bridge/event/AbstractDocumentEvent.java#L34-L34  \n15:16\u00a0<gdelhumeau>\u00a0ok so events are serialized (it make sense if we have to send them to several clusters)  \n15:16\u00a0<gdelhumeau>\u00a0I mean several nodes inside a cluster  \n15:17\u00a0<gdelhumeau>\u00a0well no  \n15:17\u00a0<gdelhumeau>\u00a0because the parameters have to be sent too  \n15:18\u00a0<Enygma`>\u00a0also, the \"source\" parameter is a bit misleading, since you could consider the user as a source as well, together with the document  \n15:19\u00a0<Enygma`>\u00a0since not all events occur on a document (e.g. scheduled events that are triggered by some applications)  \n15:20\u00a0<Enygma`>\u00a0though, the source being an Object, it does support for other values instead of a document, as long as you always check the event type and handle the source accordingly  \n15:23\u00a0<gdelhumeau>\u00a0yeas it's a bit like parameter1, parameter2  \n15:24\u00a0<floflobel>\u00a0Hi, I try to make a connection with LDAP. It's doesn\"t work and I would like to have a log. I follow the link (http://extensions.xwiki.org/xwiki/bin/view/Extension/LDAP/Authenticator/#HWiththeLogbackconfigurationfile) and add the lines in my logback.xml but I don't have a log LDAP in my folder tomcat.  \n15:26\u00a0<vmassol>\u00a0basically Source and Data are generic params and it's up to the sender to define what they should contain  \n15:27\u00a0<vmassol>\u00a0indeed it's a bit redundante with the Event itself which could have contained that info too  \n15:27\u00a0<vmassol>\u00a0indeed it's a bit redundant with the Event itself which could have contained that info too  \n15:28\u00a0<vmassol>\u00a0so for the audience, I'd put it inside the Event  \n15:28\u00a0<vmassol>\u00a0(bbl)  \n16:11\u00a0<gdelhumeau>\u00a0vmassol: look my last commit (I have commented it on github)  \n16:11\u00a0<gdelhumeau>\u00a0maybe this comment should be in the javadoc also  \n16:22\u00a0<gdelhumeau>\u00a0the storage used, behind the scene, is AS, as we said  \n16:22\u00a0<gdelhumeau>\u00a0but I have put the \u00a0listener in the notification module for the reasons explained in github  \n16:23\u00a0<gdelhumeau>\u00a0btw the 5 parmaeters of activity event are actually disabled according to https://github.com/xwiki/xwiki-platform/blob/4303f79df9c0ef657a8f8f823fb76aff3f9a1f99/xwiki-platform-core/xwiki-platform-activitystream/xwiki-platform-activitystream-api/src/main/resources/activitystream.hbm.xml#L52-L52  \n16:23\u00a0<gdelhumeau>\u00a0oh no forget that  \n16:29\u00a0<gdelhumeau>\u00a0well http://jira.xwiki.org/browse/XWIKI-7554 is a serious issue  \n16:31\u00a0<gdelhumeau>\u00a0it basically that I cannot add additional parameters to an event  \n16:31\u00a0<gdelhumeau>\u00a0except by using activity stream module directly  \n16:31\u00a0<gdelhumeau>\u00a0which is legacy  \n16:52\u00a0<gdelhumeau>\u00a0it means basically that the event stream module is not usable in practice...  \n16:52\u00a0<gdelhumeau>\u00a0since we cannot even use setParam1(), setParam2(), etc...  \n16:52\u00a0<gdelhumeau>\u00a0+ the map has been removed for performance reason  \n16:53\u00a0<gdelhumeau>\u00a0I hope it won't have the same effect with the audience table  \n16:55\u00a0<vmassol>\u00a0gdelhumeau:  \n16:55\u00a0<gdelhumeau>\u00a0seens your answer  \n16:56\u00a0<vmassol>\u00a0A) I've commented on github as I don't think that's the good way  \n16:56\u00a0<vmassol>\u00a0B) the named param are used AFAICS  \n16:56\u00a0<vmassol>\u00a0(not the generic ones but the named ones)  \n16:56\u00a0<vmassol>\u00a0ah ok I don't know about the evenstream vs AS  \n16:57\u00a0<vmassol>\u00a0so you're saying that AS params are used but not when going through the ES API?  \n16:57\u00a0<gdelhumeau>\u00a0see http://jira.xwiki.org/browse/XWIKI-6839 for more infos  \n16:57\u00a0<gdelhumeau>\u00a0(but XWIKI-6839 has been reverted)  \n16:58\u00a0<gdelhumeau>\u00a0vmassol: yes  \n16:58\u00a0<vmassol>\u00a0it doesn't explain it for me  \n16:58\u00a0<vmassol>\u00a0I'm not talking about some generic params  \n16:58\u00a0<vmassol>\u00a0but about param1, ... param5  \n16:59\u00a0<gdelhumeau>\u00a0with event stream, you cannot use param1, param2,...  \n16:59\u00a0<vmassol>\u00a0ok just checked Event from ES and it doesn't seem to have support for the fixed pzram1, param5  \n17:00\u00a0<gdelhumeau>\u00a0exactly  \n17:00\u00a0<Enygma`>\u00a0AFAIK, EventStream is not really used  \n17:00\u00a0<vmassol>\u00a0but it doesn't matter anyway guillaume  \n17:00\u00a0<Enygma`>\u00a0it was an effort started by sdumitriu AFAIR, that did not really make it far  \n17:00\u00a0<vmassol>\u00a0since this is all internal stuff  \n17:00\u00a0<gdelhumeau>\u00a0currently it looks like a wrapper to have proper components instead of using xwiki plugins  \n17:01\u00a0<vmassol>\u00a0what's important though  \n17:01\u00a0<Enygma`>\u00a0yes, but in practice, AS is used everywhere, AFAIR  \n17:01\u00a0<gdelhumeau>\u00a0vmassol: no. I want applications developers to be able to implement their own NotificationConverter  \n17:01\u00a0<vmassol>\u00a0is to decide about what we expose  \n17:01\u00a0<vmassol>\u00a0ie how to convert from OM Event to AS Event  \n17:01\u00a0<vmassol>\u00a0and for this, we should do what I suggsted earlier  \n17:01\u00a0<vmassol>\u00a0ie do automatic conversion  \n17:01\u00a0<gdelhumeau>\u00a0and the NotificationConverter should return either an ActivityEvent or a StreamEvent  \n17:01\u00a0<vmassol>\u00a0and not force user to provide an impl FTM  \n17:02\u00a0<gdelhumeau>\u00a0yes we can have a generic converter  \n17:02\u00a0<vmassol>\u00a0so keep it all in the internal package  \n17:02\u00a0<vmassol>\u00a0(keep EventConvert in the internal package)  \n17:02\u00a0<gdelhumeau>\u00a0but if, for some reason, we want something more specific, we are out  \n17:02\u00a0<vmassol>\u00a0but in the AS module  \n17:02\u00a0<vmassol>\u00a0it doesn't make sens to have this in the notification mpduile  \n17:02\u00a0<vmassol>\u00a0\\*module  \n17:02\u00a0<msmeria>\u00a0has quit  \n17:03\u00a0<vmassol>\u00a0the only place where it would make sense is the EventStream module but you say it's not usable  \n17:03\u00a0<vmassol>\u00a0so we should probably have it in the AS module FTM  \n17:03\u00a0<vmassol>\u00a0(ie not use ES)  \n17:03\u00a0<gdelhumeau>\u00a0ok...  \n17:04\u00a0<gdelhumeau>\u00a0but I am quite sure we would need to expose the EventConverter at some point (ie not keeping it internal)  \n17:04\u00a0<gdelhumeau>\u00a0for example, a TopicAnswerEvent could have a specific parameter to the XObject that contains the answer  \n17:08\u00a0<vmassol>\u00a0yes  \n17:09\u00a0<vmassol>\u00a0we'll need to decide if we finish the ES module at that point  \n17:09\u00a0<vmassol>\u00a0or do something else  \n17:10\u00a0<gdelhumeau>\u00a0the easy fix is to implement Param1, Param2, etc in the Event Strem module too  \n17:10\u00a0<vmassol>\u00a0we should probably finish the event stream  \n17:10\u00a0<vmassol>\u00a0right now this means the Notification module will need to use the AS API to query for the events  \n17:10\u00a0<vmassol>\u00a0(a pity that we're just lacking the params)  \n17:10\u00a0<vmassol>\u00a0another opti\u00e0on  \n17:10\u00a0<vmassol>\u00a0\\*option  \n17:10\u00a0<vmassol>\u00a0would be to add the \"target\" (what you call audience) as a new fixed param in the AS table  \n17:10\u00a0<vmassol>\u00a0I mean as \"target\" and not using param1-5  \n17:10\u00a0<vmassol>\u00a0ie consider that this is something that should be avail to all events  \n17:10\u00a0<gdelhumeau>\u00a0we wanted to create a new table for the target  \n17:11\u00a0<gdelhumeau>\u00a0(but maybe you're saying that because of the performance issue)  \n17:56\u00a0<acotiuga>\u00a0has quit  \n17:56\u00a0<gdelhumeau>\u00a0vmassol: so i think you will prefer this  \n17:59\u00a0<vmassol>\u00a0I was referring to the what you want to store in the param  \n18:00\u00a0<gdelhumeau>\u00a0in the param, it depends on the notification type  \n18:00\u00a0<gdelhumeau>\u00a0as I said, for a response into a forum, it could be the number of a specific XObject  \n18:00\u00a0<flyingpot>\u00a0has joined #xwiki  \n18:00\u00a0<gdelhumeau>\u00a0if the notification is an invitation to a wiki, it could be a wiki id  \n18:00\u00a0<gdelhumeau>\u00a0whatever  \n18:04\u00a0<flyingpot>\u00a0has quit  \n18:14\u00a0<KermitTheFragger>\u00a0has quit  \n18:50\u00a0<evalica>\u00a0has quit  \n18:53\u00a0<evalica>\u00a0has joined #xwiki  \n19:10\u00a0<evalica>\u00a0has quit  \n20:02\u00a0<flyingpot>\u00a0has joined #xwiki  \n20:06\u00a0<flyingpot>\u00a0has quit  \n20:18\u00a0<floflobel>\u00a0has quit  \n20:19\u00a0<Slashman>\u00a0has quit  \n20:38\u00a0<vmassol>\u00a0we're not talking about the same thing I think  \n20:39\u00a0<vmassol>\u00a0I'm talking about the users/groups to whom the event is addressed (all, one or more users, one or more groups)  \n20:39\u00a0<KermitTheFragger>\u00a0has joined #xwiki  \n21:09\u00a0<sorinello>\u00a0has quit  \n21:18\u00a0<sorinello>\u00a0has joined #xwiki  \n21:38\u00a0<sorinello\\_\\_>\u00a0has joined #xwiki  \n21:40\u00a0<sorinello>\u00a0has quit  \n21:51\u00a0<sorinello>\u00a0has joined #xwiki  \n21:51\u00a0<sorinello>\u00a0has joined #xwiki  \n21:53\u00a0<sorinello\\_\\_>\u00a0has quit  \n22:07\u00a0<sorinello\\_\\_>\u00a0has joined #xwiki  \n22:11\u00a0<sorinello>\u00a0has quit  \n22:20\u00a0<sorinello\\_\\_>\u00a0has quit  \n22:28\u00a0<sorinello>\u00a0has joined #xwiki  \n22:28\u00a0<sorinello>\u00a0has quit  \n22:28\u00a0<sorinello>\u00a0has joined #xwiki  \n23:04\u00a0<flyingpot>\u00a0has joined #xwiki  \n23:08\u00a0<flyingpot>\u00a0has quit  \n23:19\u00a0<sorinello>\u00a0has quit  \n23:19\u00a0<sorinello\\_\\_>\u00a0has joined #xwiki  \n23:26\u00a0<sorinello\\_\\_>\u00a0has quit  \n23:31\u00a0<sorinello>\u00a0has joined #xwiki  \n23:49\u00a0<sorinello>\u00a0has quit  \n23:53\u00a0<gdelhumeau>\u00a0Yes, and let's call this an \"audience\"  \n23:53\u00a0<gdelhumeau>\u00a0As you said, this audience could be \"all\" or a list of entities (users / groups)  \n23:54\u00a0<gdelhumeau>\u00a0in SQL, you store such a list with an other table (exactly like the \"relational storage\" that we have for our Database list property in an XClass)  \n23:54\u00a0<sorinello>\u00a0has joined #xwiki  \n23:55\u00a0<gdelhumeau>\u00a0Because if you store the list directly in the activity\\_event table itself, you won't have a field big enough to store a list of 200 users for example  \n23:55\u00a0<gdelhumeau>\u00a0unless you use an unlimited blob  \n23:56\u00a0<gdelhumeau>\u00a0but even by using such a blob (with a list of entities separated by a comma or whatever separator), it's still a pain to query (you need to use contain())  \n23:57\u00a0<gdelhumeau>\u00a0in SQL, we usually use an other table with one or two foreign keys to represent the relationship between 2 objects  \n23:57\u00a0<gdelhumeau>\u00a0it's the standard way to store N\\*N relationship  \n23:57\u00a0<gdelhumeau>\u00a0so we should not use param1, param2 or even a new field in the activity\\_event table to store the audience  \n23:58\u00a0<gdelhumeau>\u00a0but I still beleive we need to be able to adress param1...param5 in the new eventstream api  \n23:59\u00a0<gdelhumeau>\u00a0to store some custom properties depending of the event\n"}